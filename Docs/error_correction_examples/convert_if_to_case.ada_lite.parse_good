 21 tokens lexed
 0: 0:  1:(CASE, (1 . 4)) : shift and goto state 1
 0: 1:  2:(IDENTIFIER, (6 . 18)) : shift and goto state 43
 0: 43:  3:(IS, (20 . 21)) : reduce 1 tokens to name
name_2: (name, (6 . 18)) <= ( 2:(IDENTIFIER, (6 . 18)))
semantic check OK
 ... goto state 47
 0: 47:  3:(IS, (20 . 21)) : reduce 1 tokens to primary
primary_2: (primary, (6 . 18)) <= ((name, (6 . 18)))
 ... goto state 49
 0: 49:  3:(IS, (20 . 21)) : reduce 1 tokens to factor
factor_0: (factor, (6 . 18)) <= ((primary, (6 . 18)))
 ... goto state 46
 0: 46:  3:(IS, (20 . 21)) : reduce 1 tokens to term
term_1: (term, (6 . 18)) <= ((factor, (6 . 18)))
 ... goto state 56
 0: 56:  3:(IS, (20 . 21)) : reduce 1 tokens to term_list
term_list_1: (term_list, (6 . 18)) <= ((term, (6 . 18)))
 ... goto state 57
 0: 57:  3:(IS, (20 . 21)) : reduce 1 tokens to simple_expression
simple_expression_1: (simple_expression, (6 . 18)) <= ((term_list, (6 . 18)))
 ... goto state 55
 0: 55:  3:(IS, (20 . 21)) : reduce 1 tokens to relation
relation_1: (relation, (6 . 18)) <= ((simple_expression, (6 . 18)))
 ... goto state 53
 0: 53:  3:(IS, (20 . 21)) : reduce 1 tokens to expression
expression_0: (expression, (6 . 18)) <= ((relation, (6 . 18)))
 ... goto state 44
 0: 44:  3:(IS, (20 . 21)) : reduce 1 tokens to expression_opt
expression_opt_0: (expression_opt, (6 . 18)) <= ((expression, (6 . 18)))
 ... goto state 45
 0: 45:  3:(IS, (20 . 21)) : shift and goto state 169
 0: 169:  4:(EQUAL, (23 . 23)) : ERROR
 0: 169: expecting: WHEN
 0: zombie

 McKenzie error recovery

parser 0: State 169 Current_Token 4:(EQUAL, (23 . 23)) Resume_Token_Goal 7
Action
task 0 0: (169 : 3:(IS, (20 . 21)), 45 :(expression_opt, (6 . 18)), 1 : 1:(CASE, (1 . 4)), 0 :)
 0: enqueue: 0, ( 0 0 0 0 0 0 0 0), Error (EQUAL, (23 . 23)) (169 : (IS, (20 . 21)))| 4:(EQUAL, (23 . 23))|()

 1 parallel tasks
task 1 0: dequeue: 0, ( 0 0 0 0 0 0 0 0), Error (EQUAL, (23 . 23)) (169 : (IS, (20 . 21)))| 4:(EQUAL, (23 . 23))|()
task 1 0: stack: (169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Language_Fixes: 0, ( 0 0 0 0 0 0 0 0), Error (EQUAL, (23 . 23)) (169 : (IS, (20 . 21)))| 4:(EQUAL, (23 . 23))|()
task 1 0: check: (EQUAL, (23 . 23)): 0, ( 0 0 0 0 0 0 0 0), (169 : (IS, (20 . 21)))| 4:(EQUAL, (23 . 23))|()
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 169 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 0, ( 0 0 0 0 0 0 0 0), Error (EQUAL, (23 . 23)) (169 : (IS, (20 . 21)))| 4:(EQUAL, (23 . 23))|()
task 1 0: stack: (169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift WHEN)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift WHEN
task 1 0: Minimal_Complete_Actions: insert WHEN: 1, ( 0 1 0 0 0 0 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4)) minimal_complete ACTIVE
task 1 0: push_back IS: 4, ( 0 0 0 1 0 0 0 0), (45 : (expression_opt, (6 . 18)))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3))
task 1 0: delete EQUAL: 4, ( 0 0 0 0 0 0 1 0), (169 : (IS, (20 . 21)))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4))
task 1 0: enqueue: 3/ 3/3/1, min cost: 1, active workers: 0
task 1 0: dequeue: 1, ( 0 1 0 0 0 0 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 1, ( 0 1 0 0 0 0 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 368 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 1, ( 0 1 0 0 0 0 0 0), Error (EQUAL, (23 . 23)) (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift NUMERIC_LITERAL)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift NUMERIC_LITERAL
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 2, ( 0 2 0 0 0 0 0 0), (783 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 3/4/2, min cost: 2, active workers: 0
task 1 0: dequeue: 2, ( 0 2 0 0 0 0 0 0), (783 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5)) minimal_complete ACTIVE
task 1 0: stack: (783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 2, ( 0 2 0 0 0 0 0 0), (783 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 783 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 2, ( 0 2 0 0 0 0 0 0), Error (EQUAL, (23 . 23)) (783 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5)) minimal_complete ACTIVE
task 1 0: stack: (783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift EQUAL_GREATER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift EQUAL_GREATER
task 1 0: Minimal_Complete_Actions: insert EQUAL_GREATER: 3, ( 0 3 0 0 0 0 0 0), (1216 : (EQUAL_GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 3/5/3, min cost: 3, active workers: 0
task 1 0: dequeue: 3, ( 0 3 0 0 0 0 0 0), (1216 : (EQUAL_GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6)) minimal_complete ACTIVE
task 1 0: stack: (1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 3, ( 0 3 0 0 0 0 0 0), (1216 : (EQUAL_GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1216 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 3, ( 0 3 0 0 0 0 0 0), Error (EQUAL, (23 . 23)) (1216 : (EQUAL_GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6)) minimal_complete ACTIVE
task 1 0: stack: (1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to sequence_of_statements)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to sequence_of_statements
task 1 0: Minimal_Complete_Actions: state 1216 reduce 0 to sequence_of_statements, goto 1717 via 1216
task 1 0: Minimal_Complete_Actions: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Minimal_Complete_Actions: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Minimal_Complete_Actions: insert END: 4, ( 0 4 0 0 0 0 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: Insert: state 1216 reduce 0 to block_label_opt, goto 1705 via 1216
task 1 0: Insert: insert BEGIN: 7, ( 0 3 0 0 0 1 0 0), (2094 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8)) minimal_complete ACTIVE
task 1 0: Insert: insert CASE: 7, ( 0 3 0 0 0 1 0 0), (1699 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7)) minimal_complete ACTIVE
task 1 0: Insert: insert DECLARE: 7, ( 0 3 0 0 0 1 0 0), (2095 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8)) minimal_complete ACTIVE
task 1 0: Insert: insert EXIT: 7, ( 0 3 0 0 0 1 0 0), (1700 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7)) minimal_complete ACTIVE
task 1 0: Insert: insert FOR: 7, ( 0 3 0 0 0 1 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7)) minimal_complete ACTIVE
task 1 0: Insert: insert IF: 7, ( 0 3 0 0 0 1 0 0), (1701 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7)) minimal_complete ACTIVE
task 1 0: Insert: insert LOOP: 7, ( 0 3 0 0 0 1 0 0), (1702 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7)) minimal_complete ACTIVE
task 1 0: Insert: insert RETURN: 7, ( 0 3 0 0 0 1 0 0), (1703 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7)) minimal_complete ACTIVE
task 1 0: Insert: state 1216 reduce 0 to sequence_of_statements, goto 1717 via 1216
task 1 0: Insert: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Insert: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Insert: insert WHEN: 7, ( 0 3 0 0 0 1 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 7, ( 0 3 0 0 0 1 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7)) minimal_complete ACTIVE
task 1 0: enqueue: 11/ 13/16/4, min cost: 4, active workers: 0
task 1 0: dequeue: 4, ( 0 0 0 1 0 0 0 0), (45 : (expression_opt, (6 . 18)))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3))
task 1 0: stack: (45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (IS, (20 . 21)): 4, ( 0 0 0 1 0 0 0 0), (45 : (expression_opt, (6 . 18)))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3))
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 45 : 3:(IS, (20 . 21)) : (Shift, 169)
task 1 0: check: 169 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 4, ( 0 0 0 1 0 0 0 0), (45 : (expression_opt, (6 . 18)))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3))
task 1 0: stack: (45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift IS)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift IS
task 1 0: Minimal_Complete_Actions: abandon IS: undo push back
task 1 0: parse Matching_Begin: Insert_Delete: ((INSERT, PROCEDURE, 3))
task 1 0: parse Matching_Begin: (PROCEDURE): 4, ( 0 0 0 1 0 0 0 0), (45 : (expression_opt, (6 . 18)))/1:(INSERT, PROCEDURE, 3)/((PUSH_BACK, IS, 3), (INSERT, PROCEDURE, 3))
task 1 0: parse Matching_Begin: 45 : 2:(PROCEDURE) : (Error)
task 1 0: Matching_Begin: abandon (PROCEDURE): parse fail: 4, ( 0 0 0 1 0 0 0 0), Error (PROCEDURE) (45 : (expression_opt, (6 . 18)))/1:(INSERT, PROCEDURE, 3)/((PUSH_BACK, IS, 3), (INSERT, PROCEDURE, 3))
task 1 0: Insert: abandon IS: undo push_back
task 1 0: push_back expression_opt: 8, ( 0 0 0 2 0 0 0 0), (1 : (CASE, (1 . 4)))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2))
task 1 0: undo_reduce expression_opt: 8, ( 0 0 0 1 1 0 0 0), (44 : (expression, (6 . 18)))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1))
task 1 0: delete IS: 4, ( 0 0 0 1 0 0 1 0), (45 : (expression_opt, (6 . 18)))| 4:(EQUAL, (23 . 23))|((PUSH_BACK, IS, 3), (DELETE, IS, 3))
task 1 0: enqueue: 3/ 15/19/5, min cost: 4, active workers: 0
task 1 0: dequeue: 4, ( 0 0 0 0 0 0 1 0), (169 : (IS, (20 . 21)))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4))
task 1 0: stack: (169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 4, ( 0 0 0 0 0 0 1 0), (169 : (IS, (20 . 21)))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4))
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 169 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 4, ( 0 0 0 0 0 0 1 0), Error (PLUS, (25 . 25)) (169 : (IS, (20 . 21)))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4))
task 1 0: stack: (169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift WHEN)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift WHEN
task 1 0: Minimal_Complete_Actions: insert WHEN: 5, ( 0 1 0 0 0 0 1 0), (368 : (WHEN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4)) minimal_complete ACTIVE
task 1 0: delete PLUS: 8, ( 0 0 0 0 0 0 2 0), (169 : (IS, (20 . 21)))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5))
task 1 0: enqueue: 2/ 16/21/6, min cost: 4, active workers: 0
task 1 0: dequeue: 4, ( 0 0 0 1 0 0 1 0), (45 : (expression_opt, (6 . 18)))| 4:(EQUAL, (23 . 23))|((PUSH_BACK, IS, 3), (DELETE, IS, 3))
task 1 0: stack: (45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 4, ( 0 0 0 1 0 0 1 0), (45 : (expression_opt, (6 . 18)))| 4:(EQUAL, (23 . 23))|((PUSH_BACK, IS, 3), (DELETE, IS, 3))
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 45 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 4, ( 0 0 0 1 0 0 1 0), Error (EQUAL, (23 . 23)) (45 : (expression_opt, (6 . 18)))| 4:(EQUAL, (23 . 23))|((PUSH_BACK, IS, 3), (DELETE, IS, 3))
task 1 0: stack: (45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift IS)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift IS
task 1 0: Minimal_Complete_Actions: abandon IS: undo push back
task 1 0: Insert: abandon IS: undo push_back
task 1 0: delete EQUAL: 8, ( 0 0 0 1 0 0 2 0), (45 : (expression_opt, (6 . 18)))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4))
task 1 0: enqueue: 1/ 16/22/7, min cost: 4, active workers: 0
task 1 0: dequeue: 4, ( 0 4 0 0 0 0 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 4, ( 0 4 0 0 0 0 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 784 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 4, ( 0 4 0 0 0 0 0 0), Error (EQUAL, (23 . 23)) (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift CASE)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift CASE
task 1 0: Minimal_Complete_Actions: insert CASE: 5, ( 0 5 0 0 0 0 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 16/23/8, min cost: 5, active workers: 0
task 1 0: dequeue: 5, ( 0 1 0 0 0 0 1 0), (368 : (WHEN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 5, ( 0 1 0 0 0 0 1 0), (368 : (WHEN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 368 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 5, ( 0 1 0 0 0 0 1 0), Error (PLUS, (25 . 25)) (368 : (WHEN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift NUMERIC_LITERAL)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift NUMERIC_LITERAL
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 6, ( 0 2 0 0 0 0 1 0), (783 : (NUMERIC_LITERAL))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 16/24/9, min cost: 5, active workers: 0
task 1 0: dequeue: 5, ( 0 5 0 0 0 0 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 5, ( 0 5 0 0 0 0 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1217 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 5, ( 0 5 0 0 0 0 0 0), Error (EQUAL, (23 . 23)) (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift SEMICOLON)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift SEMICOLON
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 6, ( 0 6 0 0 0 0 0 0), (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 16/25/10, min cost: 6, active workers: 0
task 1 0: dequeue: 6, ( 0 2 0 0 0 0 1 0), (783 : (NUMERIC_LITERAL))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5)) minimal_complete ACTIVE
task 1 0: stack: (783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 6, ( 0 2 0 0 0 0 1 0), (783 : (NUMERIC_LITERAL))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 783 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 6, ( 0 2 0 0 0 0 1 0), Error (PLUS, (25 . 25)) (783 : (NUMERIC_LITERAL))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5)) minimal_complete ACTIVE
task 1 0: stack: (783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift EQUAL_GREATER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift EQUAL_GREATER
task 1 0: Minimal_Complete_Actions: insert EQUAL_GREATER: 7, ( 0 3 0 0 0 0 1 0), (1216 : (EQUAL_GREATER))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 16/26/11, min cost: 6, active workers: 0
task 1 0: dequeue: 6, ( 0 6 0 0 0 0 0 0), (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: stack: (1721 : (SEMICOLON), 1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 6, ( 0 6 0 0 0 0 0 0), (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1721 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 6, ( 0 6 0 0 0 0 0 0), Error (EQUAL, (23 . 23)) (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: stack: (1721 : (SEMICOLON), 1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to case_statement)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to case_statement
task 1 0: Minimal_Complete_Actions: state 1721 reduce 7 to case_statement, goto 14 via 0
task 1 0: Minimal_Complete_Actions: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Minimal_Complete_Actions: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Minimal_Complete_Actions: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Minimal_Complete_Actions: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Minimal_Complete_Actions abandoned: no actions
task 1 0: Insert: state 1721 reduce 7 to case_statement, goto 14 via 0
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: state 16 reduce 0 to block_label_opt, goto 12 via 16
task 1 0: Insert: insert BEGIN: 10, ( 0 6 0 0 0 1 0 0), (136 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert CASE: 10, ( 0 6 0 0 0 1 0 0), (1 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, CASE, 4, 1 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: state 16 reduce 0 to block_label_opt, goto 12 via 16
task 1 0: Insert: insert DECLARE: 10, ( 0 6 0 0 0 1 0 0), (137 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, DECLARE, 4, 137 3)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert EXIT: 10, ( 0 6 0 0 0 1 0 0), (2 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, EXIT, 4, 2 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert FOR: 10, ( 0 6 0 0 0 1 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, FOR, 4, 3 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert FUNCTION: 10, ( 0 6 0 0 0 1 0 0), (4 : (FUNCTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, FUNCTION, 4, 4 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert IF: 10, ( 0 6 0 0 0 1 0 0), (5 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IF, 4, 5 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert LOOP: 10, ( 0 6 0 0 0 1 0 0), (6 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert PACKAGE: 10, ( 0 6 0 0 0 1 0 0), (7 : (PACKAGE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PACKAGE, 4, 7 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert PROCEDURE: 10, ( 0 6 0 0 0 1 0 0), (8 : (PROCEDURE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PROCEDURE, 4, 8 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert RETURN: 10, ( 0 6 0 0 0 1 0 0), (9 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, RETURN, 4, 9 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert IDENTIFIER: 10, ( 0 6 0 0 0 1 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IDENTIFIER, 4, 10 2)) minimal_complete DONE
task 1 0: enqueue: 12/ 27/38/12, min cost: 7, active workers: 0
task 1 0: dequeue: 7, ( 0 3 0 0 0 1 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7)) minimal_complete ACTIVE
task 1 0: stack: (10 : (IDENTIFIER), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 7, ( 0 3 0 0 0 1 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 10 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 7, ( 0 3 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7)) minimal_complete ACTIVE
task 1 0: stack: (10 : (IDENTIFIER), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to name)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to name
task 1 0: Minimal_Complete_Actions: state 10 reduce 1 to name, goto 1714 via 1216
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 8, ( 0 4 0 0 0 1 0 0), (2098 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8)) minimal_complete ACTIVE
task 1 0: Insert: state 10 reduce 1 to name, goto 1714 via 1216
task 1 0: Insert: insert LEFT_PAREN: 11, ( 0 3 0 0 0 2 0 0), (140 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, LEFT_PAREN, 4, 140 8)) minimal_complete ACTIVE
task 1 0: Insert: insert COLON: 11, ( 0 3 0 0 0 2 0 0), (135 : (COLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON, 4, 135 8)) minimal_complete ACTIVE
task 1 0: Insert: insert COLON_EQUAL: 11, ( 0 3 0 0 0 2 0 0), (2097 : (COLON_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON_EQUAL, 4, 2097 8)) minimal_complete ACTIVE
task 1 0: Insert: insert DOT: 11, ( 0 3 0 0 0 2 0 0), (142 : (DOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, DOT, 4, 142 8)) minimal_complete ACTIVE
task 1 0: enqueue: 5/ 31/43/13, min cost: 7, active workers: 0
task 1 0: dequeue: 7, ( 0 3 0 0 0 1 0 0), (1703 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7)) minimal_complete ACTIVE
task 1 0: stack: (1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 7, ( 0 3 0 0 0 1 0 0), (1703 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1703 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 7, ( 0 3 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (1703 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7)) minimal_complete ACTIVE
task 1 0: stack: (1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 1703 reduce 0 to expression_opt, goto 2092 via 1703
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 8, ( 0 4 0 0 0 1 0 0), (2353 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 11, ( 0 3 0 0 0 2 0 0), (114 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, LEFT_PAREN, 4, 114 8)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 11, ( 0 3 0 0 0 2 0 0), (115 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NOT, 4, 115 8)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 11, ( 0 3 0 0 0 2 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, MINUS, 4, 39 8)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 11, ( 0 3 0 0 0 2 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, PLUS, 4, 40 8)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 11, ( 0 3 0 0 0 2 0 0), (116 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 11, ( 0 3 0 0 0 2 0 0), (117 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 11, ( 0 3 0 0 0 2 0 0), (118 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8)) minimal_complete ACTIVE
task 1 0: enqueue: 8/ 38/51/14, min cost: 7, active workers: 0
task 1 0: dequeue: 7, ( 0 3 0 0 0 1 0 0), (1700 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7)) minimal_complete ACTIVE
task 1 0: stack: (1700 : (EXIT), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 7, ( 0 3 0 0 0 1 0 0), (1700 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1700 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 7, ( 0 3 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (1700 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7)) minimal_complete ACTIVE
task 1 0: stack: (1700 : (EXIT), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to identifier_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to identifier_opt
task 1 0: Minimal_Complete_Actions: state 1700 reduce 0 to identifier_opt, goto 2089 via 1700
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 8, ( 0 4 0 0 0 1 0 0), (2350 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1700 reduce 0 to identifier_opt, goto 2089 via 1700
task 1 0: Insert: insert WHEN: 11, ( 0 3 0 0 0 2 0 0), (2349 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, WHEN, 4, 2349 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 11, ( 0 3 0 0 0 2 0 0), (59 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, IDENTIFIER, 4, 59 8)) minimal_complete ACTIVE
task 1 0: enqueue: 3/ 40/54/15, min cost: 7, active workers: 0
task 1 0: dequeue: 7, ( 0 3 0 0 0 1 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7)) minimal_complete ACTIVE
task 1 0: stack: (3 : (FOR), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 7, ( 0 3 0 0 0 1 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 3 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 7, ( 0 3 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7)) minimal_complete ACTIVE
task 1 0: stack: (3 : (FOR), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift IDENTIFIER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift IDENTIFIER
task 1 0: Minimal_Complete_Actions: insert IDENTIFIER: 8, ( 0 4 0 0 0 1 0 0), (61 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 40/55/16, min cost: 7, active workers: 0
task 1 0: dequeue: 7, ( 0 3 0 0 0 1 0 0), (1701 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7)) minimal_complete ACTIVE
task 1 0: stack: (1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 7, ( 0 3 0 0 0 1 0 0), (1701 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1701 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 7, ( 0 3 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (1701 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7)) minimal_complete ACTIVE
task 1 0: stack: (1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 1701 reduce 0 to expression_opt, goto 2090 via 1701
task 1 0: Minimal_Complete_Actions: insert THEN: 8, ( 0 4 0 0 0 1 0 0), (2351 : (THEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 11, ( 0 3 0 0 0 2 0 0), (65 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, LEFT_PAREN, 4, 65 8)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 11, ( 0 3 0 0 0 2 0 0), (66 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, NOT, 4, 66 8)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 11, ( 0 3 0 0 0 2 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, MINUS, 4, 39 8)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 11, ( 0 3 0 0 0 2 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, PLUS, 4, 40 8)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 11, ( 0 3 0 0 0 2 0 0), (67 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, STRING_LITERAL, 4, 67 8)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 11, ( 0 3 0 0 0 2 0 0), (68 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, NUMERIC_LITERAL, 4, 68 8)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 11, ( 0 3 0 0 0 2 0 0), (69 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, IDENTIFIER, 4, 69 8)) minimal_complete ACTIVE
task 1 0: enqueue: 8/ 47/63/17, min cost: 7, active workers: 0
task 1 0: dequeue: 7, ( 0 3 0 0 0 1 0 0), (1702 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7)) minimal_complete ACTIVE
task 1 0: stack: (1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 7, ( 0 3 0 0 0 1 0 0), (1702 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1702 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 7, ( 0 3 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (1702 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7)) minimal_complete ACTIVE
task 1 0: stack: (1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to sequence_of_statements)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to sequence_of_statements
task 1 0: Minimal_Complete_Actions: state 1702 reduce 0 to sequence_of_statements, goto 2091 via 1702
task 1 0: Minimal_Complete_Actions: insert END: 8, ( 0 4 0 0 0 1 0 0), (2352 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1702 reduce 0 to block_label_opt, goto 91 via 1702
task 1 0: Insert: insert BEGIN: 11, ( 0 3 0 0 0 2 0 0), (225 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, BEGIN, 4, 225 9)) minimal_complete ACTIVE
task 1 0: Insert: insert CASE: 11, ( 0 3 0 0 0 2 0 0), (85 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, CASE, 4, 85 8)) minimal_complete ACTIVE
task 1 0: Insert: insert DECLARE: 11, ( 0 3 0 0 0 2 0 0), (226 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, DECLARE, 4, 226 9)) minimal_complete ACTIVE
task 1 0: Insert: insert EXIT: 11, ( 0 3 0 0 0 2 0 0), (86 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, EXIT, 4, 86 8)) minimal_complete ACTIVE
task 1 0: Insert: insert FOR: 11, ( 0 3 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, FOR, 4, 3 8)) minimal_complete ACTIVE
task 1 0: Insert: insert IF: 11, ( 0 3 0 0 0 2 0 0), (87 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IF, 4, 87 8)) minimal_complete ACTIVE
task 1 0: Insert: insert LOOP: 11, ( 0 3 0 0 0 2 0 0), (88 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, LOOP, 4, 88 8)) minimal_complete ACTIVE
task 1 0: Insert: insert RETURN: 11, ( 0 3 0 0 0 2 0 0), (89 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, RETURN, 4, 89 8)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 11, ( 0 3 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IDENTIFIER, 4, 10 8)) minimal_complete ACTIVE
task 1 0: enqueue: 10/ 56/73/18, min cost: 7, active workers: 0
task 1 0: dequeue: 7, ( 0 3 0 0 0 0 1 0), (1216 : (EQUAL_GREATER))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6)) minimal_complete ACTIVE
task 1 0: stack: (1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 7, ( 0 3 0 0 0 0 1 0), (1216 : (EQUAL_GREATER))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 1216 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 7, ( 0 3 0 0 0 0 1 0), Error (PLUS, (25 . 25)) (1216 : (EQUAL_GREATER))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6)) minimal_complete ACTIVE
task 1 0: stack: (1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to sequence_of_statements)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to sequence_of_statements
task 1 0: Minimal_Complete_Actions: state 1216 reduce 0 to sequence_of_statements, goto 1717 via 1216
task 1 0: Minimal_Complete_Actions: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Minimal_Complete_Actions: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Minimal_Complete_Actions: insert END: 8, ( 0 4 0 0 0 0 1 0), (784 : (END))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5)) minimal_complete ACTIVE
task 1 0: Insert: state 1216 reduce 0 to block_label_opt, goto 1705 via 1216
task 1 0: Insert: insert BEGIN: 11, ( 0 3 0 0 0 1 1 0), (2094 : (BEGIN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, BEGIN, 5, 2094 8)) minimal_complete ACTIVE
task 1 0: Insert: insert CASE: 11, ( 0 3 0 0 0 1 1 0), (1699 : (CASE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7)) minimal_complete ACTIVE
task 1 0: Insert: insert DECLARE: 11, ( 0 3 0 0 0 1 1 0), (2095 : (DECLARE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, DECLARE, 5, 2095 8)) minimal_complete ACTIVE
task 1 0: Insert: insert EXIT: 11, ( 0 3 0 0 0 1 1 0), (1700 : (EXIT))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, EXIT, 5, 1700 7)) minimal_complete ACTIVE
task 1 0: Insert: insert FOR: 11, ( 0 3 0 0 0 1 1 0), (3 : (FOR))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, FOR, 5, 3 7)) minimal_complete ACTIVE
task 1 0: Insert: insert IF: 11, ( 0 3 0 0 0 1 1 0), (1701 : (IF))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, IF, 5, 1701 7)) minimal_complete ACTIVE
task 1 0: Insert: insert LOOP: 11, ( 0 3 0 0 0 1 1 0), (1702 : (LOOP))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, LOOP, 5, 1702 7)) minimal_complete ACTIVE
task 1 0: Insert: insert RETURN: 11, ( 0 3 0 0 0 1 1 0), (1703 : (RETURN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7)) minimal_complete ACTIVE
task 1 0: Insert: state 1216 reduce 0 to sequence_of_statements, goto 1717 via 1216
task 1 0: Insert: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Insert: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Insert: insert WHEN: 11, ( 0 3 0 0 0 1 1 0), (368 : (WHEN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, WHEN, 5, 368 5)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 11, ( 0 3 0 0 0 1 1 0), (10 : (IDENTIFIER))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, IDENTIFIER, 5, 10 7)) minimal_complete ACTIVE
task 1 0: enqueue: 11/ 66/84/19, min cost: 7, active workers: 0
task 1 0: dequeue: 7, ( 0 3 0 0 0 1 0 0), (1699 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7)) minimal_complete ACTIVE
task 1 0: stack: (1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 7, ( 0 3 0 0 0 1 0 0), (1699 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1699 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 7, ( 0 3 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (1699 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7)) minimal_complete ACTIVE
task 1 0: stack: (1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 1699 reduce 0 to expression_opt, goto 2088 via 1699
task 1 0: Minimal_Complete_Actions: insert IS: 8, ( 0 4 0 0 0 1 0 0), (2348 : (IS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 11, ( 0 3 0 0 0 2 0 0), (37 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, LEFT_PAREN, 4, 37 8)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 11, ( 0 3 0 0 0 2 0 0), (38 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NOT, 4, 38 8)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 11, ( 0 3 0 0 0 2 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, MINUS, 4, 39 8)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 11, ( 0 3 0 0 0 2 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, PLUS, 4, 40 8)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 11, ( 0 3 0 0 0 2 0 0), (41 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 11, ( 0 3 0 0 0 2 0 0), (42 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 11, ( 0 3 0 0 0 2 0 0), (43 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8)) minimal_complete ACTIVE
task 1 0: enqueue: 8/ 73/92/20, min cost: 7, active workers: 0
task 1 0: dequeue: 7, ( 0 3 0 0 0 1 0 0), (2095 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8)) minimal_complete ACTIVE
task 1 0: stack: (2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 7, ( 0 3 0 0 0 1 0 0), (2095 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2095 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 7, ( 0 3 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2095 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8)) minimal_complete ACTIVE
task 1 0: stack: (2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to declarative_part)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to declarative_part
task 1 0: Minimal_Complete_Actions: state 2095 reduce 0 to declarative_part, goto 2356 via 2095
task 1 0: Minimal_Complete_Actions: insert BEGIN: 8, ( 0 4 0 0 0 1 0 0), (2508 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10)) minimal_complete ACTIVE
task 1 0: Insert: insert FUNCTION: 11, ( 0 3 0 0 0 2 0 0), (4 : (FUNCTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, FUNCTION, 4, 4 9)) minimal_complete ACTIVE
task 1 0: Insert: insert PACKAGE: 11, ( 0 3 0 0 0 2 0 0), (286 : (PACKAGE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, PACKAGE, 4, 286 9)) minimal_complete ACTIVE
task 1 0: Insert: insert PROCEDURE: 11, ( 0 3 0 0 0 2 0 0), (287 : (PROCEDURE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, PROCEDURE, 4, 287 9)) minimal_complete ACTIVE
task 1 0: Insert: insert TYPE: 11, ( 0 3 0 0 0 2 0 0), (288 : (TYPE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, TYPE, 4, 288 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 11, ( 0 3 0 0 0 2 0 0), (289 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, IDENTIFIER, 4, 289 9)) minimal_complete ACTIVE
task 1 0: enqueue: 6/ 78/98/21, min cost: 7, active workers: 0
task 1 0: dequeue: 7, ( 0 3 0 0 0 1 0 0), (2094 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8)) minimal_complete ACTIVE
task 1 0: stack: (2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 7, ( 0 3 0 0 0 1 0 0), (2094 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2094 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 7, ( 0 3 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2094 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8)) minimal_complete ACTIVE
task 1 0: stack: (2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to handled_sequence_of_statements)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to handled_sequence_of_statements
task 1 0: Minimal_Complete_Actions: state 2094 reduce 0 to handled_sequence_of_statements, goto 2355 via 2094
task 1 0: Minimal_Complete_Actions: insert END: 8, ( 0 4 0 0 0 1 0 0), (2507 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10)) minimal_complete ACTIVE
task 1 0: Insert: state 2094 reduce 0 to block_label_opt, goto 269 via 2094
task 1 0: Insert: insert BEGIN: 11, ( 0 3 0 0 0 2 0 0), (655 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, BEGIN, 4, 655 10)) minimal_complete ACTIVE
task 1 0: Insert: insert CASE: 11, ( 0 3 0 0 0 2 0 0), (263 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, CASE, 4, 263 9)) minimal_complete ACTIVE
task 1 0: Insert: insert DECLARE: 11, ( 0 3 0 0 0 2 0 0), (656 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, DECLARE, 4, 656 10)) minimal_complete ACTIVE
task 1 0: Insert: insert EXIT: 11, ( 0 3 0 0 0 2 0 0), (264 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, EXIT, 4, 264 9)) minimal_complete ACTIVE
task 1 0: Insert: state 2094 reduce 0 to sequence_of_statements, goto 282 via 2094
task 1 0: Insert: insert EXCEPTION: 11, ( 0 3 0 0 0 2 0 0), (662 : (EXCEPTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, EXCEPTION, 4, 662 10)) minimal_complete ACTIVE
task 1 0: Insert: insert FOR: 11, ( 0 3 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, FOR, 4, 3 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IF: 11, ( 0 3 0 0 0 2 0 0), (265 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IF, 4, 265 9)) minimal_complete ACTIVE
task 1 0: Insert: insert LOOP: 11, ( 0 3 0 0 0 2 0 0), (266 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, LOOP, 4, 266 9)) minimal_complete ACTIVE
task 1 0: Insert: insert RETURN: 11, ( 0 3 0 0 0 2 0 0), (267 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, RETURN, 4, 267 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 11, ( 0 3 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IDENTIFIER, 4, 10 9)) minimal_complete ACTIVE
task 1 0: enqueue: 11/ 88/109/22, min cost: 7, active workers: 0
task 1 0: dequeue: 7, ( 0 3 0 0 0 1 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 7, ( 0 3 0 0 0 1 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 368 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 7, ( 0 3 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift NUMERIC_LITERAL)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift NUMERIC_LITERAL
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 8, ( 0 4 0 0 0 1 0 0), (783 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 88/110/23, min cost: 8, active workers: 0
task 1 0: dequeue: 8, ( 0 4 0 0 0 1 0 0), (2098 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8)) minimal_complete ACTIVE
task 1 0: stack: (2098 : (SEMICOLON), 1714 : (name), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 8, ( 0 4 0 0 0 1 0 0), (2098 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2098 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 8, ( 0 4 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2098 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8)) minimal_complete ACTIVE
task 1 0: stack: (2098 : (SEMICOLON), 1714 : (name), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to procedure_call_statement)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to procedure_call_statement
task 1 0: Minimal_Complete_Actions: state 2098 reduce 2 to procedure_call_statement, goto 1715 via 1216
task 1 0: Minimal_Complete_Actions: state 1715 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Minimal_Complete_Actions: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Minimal_Complete_Actions: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Minimal_Complete_Actions: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 0: Minimal_Complete_Actions: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Minimal_Complete_Actions: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Minimal_Complete_Actions: insert END: 9, ( 0 5 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: Insert: state 2098 reduce 2 to procedure_call_statement, goto 1715 via 1216
task 1 0: Insert: state 1715 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 0: Insert: insert BEGIN: 12, ( 0 4 0 0 0 2 0 0), (2094 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, BEGIN, 4, 2094 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1715 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert CASE: 12, ( 0 4 0 0 0 2 0 0), (1699 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, CASE, 4, 1699 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1715 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 0: Insert: insert DECLARE: 12, ( 0 4 0 0 0 2 0 0), (2095 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, DECLARE, 4, 2095 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1715 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert EXIT: 12, ( 0 4 0 0 0 2 0 0), (1700 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, EXIT, 4, 1700 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1715 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert FOR: 12, ( 0 4 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, FOR, 4, 3 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1715 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert IF: 12, ( 0 4 0 0 0 2 0 0), (1701 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, IF, 4, 1701 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1715 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert LOOP: 12, ( 0 4 0 0 0 2 0 0), (1702 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, LOOP, 4, 1702 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1715 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert RETURN: 12, ( 0 4 0 0 0 2 0 0), (1703 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, RETURN, 4, 1703 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1715 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 0: Insert: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Insert: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Insert: insert WHEN: 12, ( 0 4 0 0 0 2 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, WHEN, 4, 368 5)) minimal_complete ACTIVE
task 1 0: Insert: state 1715 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert IDENTIFIER: 12, ( 0 4 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, IDENTIFIER, 4, 10 8)) minimal_complete ACTIVE
task 1 0: enqueue: 11/ 98/121/24, min cost: 8, active workers: 0
task 1 0: dequeue: 8, ( 0 4 0 0 0 1 0 0), (783 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6)) minimal_complete ACTIVE
task 1 0: stack: (783 : (NUMERIC_LITERAL), 368 : (WHEN), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 8, ( 0 4 0 0 0 1 0 0), (783 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 783 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 8, ( 0 4 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (783 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6)) minimal_complete ACTIVE
task 1 0: stack: (783 : (NUMERIC_LITERAL), 368 : (WHEN), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift EQUAL_GREATER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift EQUAL_GREATER
task 1 0: Minimal_Complete_Actions: insert EQUAL_GREATER: 9, ( 0 5 0 0 0 1 0 0), (1216 : (EQUAL_GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 98/122/25, min cost: 8, active workers: 0
task 1 0: dequeue: 8, ( 0 0 0 1 0 0 2 0), (45 : (expression_opt, (6 . 18)))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4))
task 1 0: stack: (45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 8, ( 0 0 0 1 0 0 2 0), (45 : (expression_opt, (6 . 18)))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4))
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 45 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 8, ( 0 0 0 1 0 0 2 0), Error (PLUS, (25 . 25)) (45 : (expression_opt, (6 . 18)))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4))
task 1 0: stack: (45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift IS)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift IS
task 1 0: Minimal_Complete_Actions: insert IS: 9, ( 0 1 0 1 0 0 2 0), (169 : (IS))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4), (INSERT, IS, 5, 169 3)) minimal_complete ACTIVE
task 1 0: delete PLUS: 12, ( 0 0 0 1 0 0 3 0), (45 : (expression_opt, (6 . 18)))| 6:(IDENTIFIER, (26 . 39))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4), (DELETE, PLUS, 5))
task 1 0: enqueue: 2/ 99/124/26, min cost: 8, active workers: 0
task 1 0: dequeue: 8, ( 0 0 0 1 1 0 0 0), (44 : (expression, (6 . 18)))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1))
task 1 0: stack: (44 : (expression, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (IS, (20 . 21)): 8, ( 0 0 0 1 1 0 0 0), (44 : (expression, (6 . 18)))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1))
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 44 : 3:(IS, (20 . 21)) : (Reduce, 1, expression_opt,0) via 1
task 1 0: check: 45 : 3:(IS, (20 . 21)) : (Shift, 169)
task 1 0: check: 169 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 8, ( 0 0 0 1 1 0 0 0), (44 : (expression, (6 . 18)))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1))
task 1 0: stack: (44 : (expression, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 44 reduce 1 to expression_opt, goto 45 via 1
task 1 0: Minimal_Complete_Actions: insert IS: 9, ( 0 1 0 1 1 0 0 0), (169 : (IS))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3)) minimal_complete ACTIVE
task 1 0: parse Matching_Begin: Insert_Delete: ((INSERT, PROCEDURE, 3))
task 1 0: parse Matching_Begin: (PROCEDURE): 8, ( 0 0 0 1 1 0 0 0), (44 : (expression, (6 . 18)))/1:(INSERT, PROCEDURE, 3)/((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, PROCEDURE, 3))
task 1 0: parse Matching_Begin: 44 : 2:(PROCEDURE) : (Error)
task 1 0: Matching_Begin: abandon (PROCEDURE): parse fail: 8, ( 0 0 0 1 1 0 0 0), Error (PROCEDURE) (44 : (expression, (6 . 18)))/1:(INSERT, PROCEDURE, 3)/((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, PROCEDURE, 3))
task 1 0: Insert: abandon IS: current token
task 1 0: push_back expression: 12, ( 0 0 0 2 1 0 0 0), (1 : (CASE, (1 . 4)))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (PUSH_BACK, expression, 2))
task 1 0: undo_reduce expression: 12, ( 0 0 0 1 2 0 0 0), (53 : (relation, (6 . 18)))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (UNDO_REDUCE, expression, 1))
task 1 0: delete IS: 8, ( 0 0 0 1 1 0 1 0), (44 : (expression, (6 . 18)))| 4:(EQUAL, (23 . 23))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (DELETE, IS, 3))
task 1 0: enqueue: 4/ 102/128/27, min cost: 8, active workers: 0
task 1 0: dequeue: 8, ( 0 4 0 0 0 1 0 0), (2348 : (IS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9)) minimal_complete ACTIVE
task 1 0: stack: (2348 : (IS), 2088 : (expression_opt), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 8, ( 0 4 0 0 0 1 0 0), (2348 : (IS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2348 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 8, ( 0 4 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2348 : (IS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9)) minimal_complete ACTIVE
task 1 0: stack: (2348 : (IS), 2088 : (expression_opt), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift WHEN)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift WHEN
task 1 0: Minimal_Complete_Actions: insert WHEN: 9, ( 0 5 0 0 0 1 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 102/129/28, min cost: 8, active workers: 0
task 1 0: dequeue: 8, ( 0 4 0 0 0 1 0 0), (2508 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10)) minimal_complete ACTIVE
task 1 0: stack: (2508 : (BEGIN), 2356 : (declarative_part), 2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 8, ( 0 4 0 0 0 1 0 0), (2508 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2508 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 8, ( 0 4 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2508 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10)) minimal_complete ACTIVE
task 1 0: stack: (2508 : (BEGIN), 2356 : (declarative_part), 2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to handled_sequence_of_statements)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to handled_sequence_of_statements
task 1 0: Minimal_Complete_Actions: state 2508 reduce 0 to handled_sequence_of_statements, goto 2651 via 2508
task 1 0: Minimal_Complete_Actions: insert END: 9, ( 0 5 0 0 0 1 0 0), (2730 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12)) minimal_complete ACTIVE
task 1 0: Insert: state 2508 reduce 0 to block_label_opt, goto 269 via 2508
task 1 0: Insert: insert BEGIN: 12, ( 0 4 0 0 0 2 0 0), (655 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, BEGIN, 4, 655 12)) minimal_complete ACTIVE
task 1 0: Insert: insert CASE: 12, ( 0 4 0 0 0 2 0 0), (263 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, CASE, 4, 263 11)) minimal_complete ACTIVE
task 1 0: Insert: insert DECLARE: 12, ( 0 4 0 0 0 2 0 0), (656 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, DECLARE, 4, 656 12)) minimal_complete ACTIVE
task 1 0: Insert: insert EXIT: 12, ( 0 4 0 0 0 2 0 0), (264 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, EXIT, 4, 264 11)) minimal_complete ACTIVE
task 1 0: Insert: state 2508 reduce 0 to sequence_of_statements, goto 282 via 2508
task 1 0: Insert: insert EXCEPTION: 12, ( 0 4 0 0 0 2 0 0), (662 : (EXCEPTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, EXCEPTION, 4, 662 12)) minimal_complete ACTIVE
task 1 0: Insert: insert FOR: 12, ( 0 4 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, FOR, 4, 3 11)) minimal_complete ACTIVE
task 1 0: Insert: insert IF: 12, ( 0 4 0 0 0 2 0 0), (265 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, IF, 4, 265 11)) minimal_complete ACTIVE
task 1 0: Insert: insert LOOP: 12, ( 0 4 0 0 0 2 0 0), (266 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, LOOP, 4, 266 11)) minimal_complete ACTIVE
task 1 0: Insert: insert RETURN: 12, ( 0 4 0 0 0 2 0 0), (267 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, RETURN, 4, 267 11)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 12, ( 0 4 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, IDENTIFIER, 4, 10 11)) minimal_complete ACTIVE
task 1 0: enqueue: 11/ 112/140/29, min cost: 8, active workers: 0
task 1 0: dequeue: 8, ( 0 0 0 1 1 0 1 0), (44 : (expression, (6 . 18)))| 4:(EQUAL, (23 . 23))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (DELETE, IS, 3))
task 1 0: stack: (44 : (expression, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 8, ( 0 0 0 1 1 0 1 0), (44 : (expression, (6 . 18)))| 4:(EQUAL, (23 . 23))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (DELETE, IS, 3))
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 44 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 8, ( 0 0 0 1 1 0 1 0), Error (EQUAL, (23 . 23)) (44 : (expression, (6 . 18)))| 4:(EQUAL, (23 . 23))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (DELETE, IS, 3))
task 1 0: stack: (44 : (expression, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 44 reduce 1 to expression_opt, goto 45 via 1
task 1 0: Minimal_Complete_Actions: abandon IS: undo push back
task 1 0: Insert: abandon IS: undo push_back
task 1 0: delete EQUAL: 12, ( 0 0 0 1 1 0 2 0), (44 : (expression, (6 . 18)))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (DELETE, IS, 3), (DELETE, EQUAL, 4))
task 1 0: enqueue: 1/ 112/141/30, min cost: 8, active workers: 0
task 1 0: dequeue: 8, ( 0 4 0 0 0 1 0 0), (2353 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9)) minimal_complete ACTIVE
task 1 0: stack: (2353 : (SEMICOLON), 2092 : (expression_opt), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 8, ( 0 4 0 0 0 1 0 0), (2353 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2353 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 8, ( 0 4 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2353 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9)) minimal_complete ACTIVE
task 1 0: stack: (2353 : (SEMICOLON), 2092 : (expression_opt), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to simple_return_statement)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to simple_return_statement
task 1 0: Minimal_Complete_Actions: state 2353 reduce 3 to simple_return_statement, goto 1718 via 1216
task 1 0: Minimal_Complete_Actions: state 1718 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Minimal_Complete_Actions: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Minimal_Complete_Actions: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Minimal_Complete_Actions: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 0: Minimal_Complete_Actions: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Minimal_Complete_Actions: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Minimal_Complete_Actions: insert END: 9, ( 0 5 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: Insert: state 2353 reduce 3 to simple_return_statement, goto 1718 via 1216
task 1 0: Insert: state 1718 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 0: Insert: insert BEGIN: 12, ( 0 4 0 0 0 2 0 0), (2094 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, BEGIN, 4, 2094 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1718 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert CASE: 12, ( 0 4 0 0 0 2 0 0), (1699 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, CASE, 4, 1699 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1718 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 0: Insert: insert DECLARE: 12, ( 0 4 0 0 0 2 0 0), (2095 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, DECLARE, 4, 2095 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1718 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert EXIT: 12, ( 0 4 0 0 0 2 0 0), (1700 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, EXIT, 4, 1700 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1718 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert FOR: 12, ( 0 4 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, FOR, 4, 3 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1718 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert IF: 12, ( 0 4 0 0 0 2 0 0), (1701 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, IF, 4, 1701 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1718 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert LOOP: 12, ( 0 4 0 0 0 2 0 0), (1702 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, LOOP, 4, 1702 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1718 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert RETURN: 12, ( 0 4 0 0 0 2 0 0), (1703 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, RETURN, 4, 1703 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1718 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 0: Insert: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Insert: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Insert: insert WHEN: 12, ( 0 4 0 0 0 2 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, WHEN, 4, 368 5)) minimal_complete ACTIVE
task 1 0: Insert: state 1718 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert IDENTIFIER: 12, ( 0 4 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, IDENTIFIER, 4, 10 8)) minimal_complete ACTIVE
task 1 0: enqueue: 11/ 122/152/31, min cost: 8, active workers: 0
task 1 0: dequeue: 8, ( 0 4 0 0 0 1 0 0), (2507 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10)) minimal_complete ACTIVE
task 1 0: stack: (2507 : (END), 2355 : (handled_sequence_of_statements), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 8, ( 0 4 0 0 0 1 0 0), (2507 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2507 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 8, ( 0 4 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2507 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10)) minimal_complete ACTIVE
task 1 0: stack: (2507 : (END), 2355 : (handled_sequence_of_statements), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to identifier_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to identifier_opt
task 1 0: Minimal_Complete_Actions: state 2507 reduce 0 to identifier_opt, goto 2650 via 2507
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 9, ( 0 5 0 0 0 1 0 0), (2729 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 12, ( 0 4 0 0 0 2 0 0), (907 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, IDENTIFIER, 4, 907 11)) minimal_complete ACTIVE
task 1 0: enqueue: 2/ 123/154/32, min cost: 8, active workers: 0
task 1 0: dequeue: 8, ( 0 0 0 2 0 0 0 0), (1 : (CASE, (1 . 4)))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2))
task 1 0: stack: (1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (IDENTIFIER, (6 . 18)): 8, ( 0 0 0 2 0 0 0 0), (1 : (CASE, (1 . 4)))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2))
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1 : 2:(IDENTIFIER, (6 . 18)) : (Shift, 43)
task 1 0: check: 43 : 3:(IS, (20 . 21)) : (Reduce, 1, name,2) via 1
task 1 0: check: 47 : 3:(IS, (20 . 21)) : (Reduce, 1, primary,2) via 1
task 1 0: check: 49 : 3:(IS, (20 . 21)) : (Reduce, 1, factor,0) via 1
task 1 0: check: 46 : 3:(IS, (20 . 21)) : (Reduce, 1, term,1) via 1
task 1 0: check: 56 : 3:(IS, (20 . 21)) : (Reduce, 1, term_list,1) via 1
task 1 0: check: 57 : 3:(IS, (20 . 21)) : (Reduce, 1, simple_expression,1) via 1
task 1 0: check: 55 : 3:(IS, (20 . 21)) : (Reduce, 1, relation,1) via 1
task 1 0: check: 53 : 3:(IS, (20 . 21)) : (Reduce, 1, expression,0) via 1
task 1 0: check: 44 : 3:(IS, (20 . 21)) : (Reduce, 1, expression_opt,0) via 1
task 1 0: check: 45 : 3:(IS, (20 . 21)) : (Shift, 169)
task 1 0: check: 169 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 8, ( 0 0 0 2 0 0 0 0), (1 : (CASE, (1 . 4)))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2))
task 1 0: stack: (1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 1 reduce 0 to expression_opt, goto 45 via 1
task 1 0: Minimal_Complete_Actions: insert IS: 9, ( 0 1 0 2 0 0 0 0), (169 : (IS))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, IS, 2, 169 3)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 12, ( 0 0 0 2 0 1 0 0), (37 : (LEFT_PAREN))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, LEFT_PAREN, 2, 37 2))
task 1 0: Insert: insert NOT: 12, ( 0 0 0 2 0 1 0 0), (38 : (NOT))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, NOT, 2, 38 2))
task 1 0: Insert: insert MINUS: 12, ( 0 0 0 2 0 1 0 0), (39 : (MINUS))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, MINUS, 2, 39 2))
task 1 0: Insert: insert PLUS: 12, ( 0 0 0 2 0 1 0 0), (40 : (PLUS))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, PLUS, 2, 40 2))
task 1 0: Insert: insert STRING_LITERAL: 12, ( 0 0 0 2 0 1 0 0), (41 : (STRING_LITERAL))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, STRING_LITERAL, 2, 41 2))
task 1 0: Insert: insert NUMERIC_LITERAL: 12, ( 0 0 0 2 0 1 0 0), (42 : (NUMERIC_LITERAL))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, NUMERIC_LITERAL, 2, 42 2))
task 1 0: Insert: abandon IDENTIFIER: current token
task 1 0: push_back CASE: 12, ( 0 0 0 3 0 0 0 0), (0 : (-))| 1:(CASE, (1 . 4))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (PUSH_BACK, CASE, 1))
task 1 0: delete IDENTIFIER: 12, ( 0 0 0 2 0 0 1 0), (1 : (CASE, (1 . 4)))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (DELETE, IDENTIFIER, 2))
task 1 0: enqueue: 9/ 131/163/33, min cost: 8, active workers: 0
task 1 0: dequeue: 8, ( 0 4 0 0 0 0 1 0), (784 : (END))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 8, ( 0 4 0 0 0 0 1 0), (784 : (END))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 784 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 8, ( 0 4 0 0 0 0 1 0), Error (PLUS, (25 . 25)) (784 : (END))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift CASE)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift CASE
task 1 0: Minimal_Complete_Actions: insert CASE: 9, ( 0 5 0 0 0 0 1 0), (1217 : (CASE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 131/164/34, min cost: 8, active workers: 0
task 1 0: dequeue: 8, ( 0 0 0 0 0 0 2 0), (169 : (IS, (20 . 21)))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5))
task 1 0: stack: (169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (IDENTIFIER, (26 . 39)): 8, ( 0 0 0 0 0 0 2 0), (169 : (IS, (20 . 21)))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5))
task 1 0: check: Shared_Token_Goal : 9
task 1 0: check: 169 : 6:(IDENTIFIER, (26 . 39)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 8, ( 0 0 0 0 0 0 2 0), Error (IDENTIFIER, (26 . 39)) (169 : (IS, (20 . 21)))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5))
task 1 0: stack: (169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift WHEN)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift WHEN
task 1 0: Minimal_Complete_Actions: insert WHEN: 9, ( 0 1 0 0 0 0 2 0), (368 : (WHEN))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4)) minimal_complete ACTIVE
task 1 0: delete IDENTIFIER: 12, ( 0 0 0 0 0 0 3 0), (169 : (IS, (20 . 21)))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (DELETE, IDENTIFIER, 6))
task 1 0: enqueue: 2/ 132/166/35, min cost: 8, active workers: 0
task 1 0: dequeue: 8, ( 0 4 0 0 0 1 0 0), (2352 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9)) minimal_complete ACTIVE
task 1 0: stack: (2352 : (END), 2091 : (sequence_of_statements), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 8, ( 0 4 0 0 0 1 0 0), (2352 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2352 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 8, ( 0 4 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2352 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9)) minimal_complete ACTIVE
task 1 0: stack: (2352 : (END), 2091 : (sequence_of_statements), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift LOOP)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift LOOP
task 1 0: Minimal_Complete_Actions: insert LOOP: 9, ( 0 5 0 0 0 1 0 0), (2506 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 132/167/36, min cost: 8, active workers: 0
task 1 0: dequeue: 8, ( 0 4 0 0 0 1 0 0), (2351 : (THEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9)) minimal_complete ACTIVE
task 1 0: stack: (2351 : (THEN), 2090 : (expression_opt), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 8, ( 0 4 0 0 0 1 0 0), (2351 : (THEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2351 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 8, ( 0 4 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2351 : (THEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9)) minimal_complete ACTIVE
task 1 0: stack: (2351 : (THEN), 2090 : (expression_opt), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to sequence_of_statements)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to sequence_of_statements
task 1 0: Minimal_Complete_Actions: state 2351 reduce 0 to sequence_of_statements, goto 2505 via 2351
task 1 0: Minimal_Complete_Actions: insert END: 9, ( 0 5 0 0 0 1 0 0), (2647 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11)) minimal_complete ACTIVE
task 1 0: Insert: state 2351 reduce 0 to block_label_opt, goto 471 via 2351
task 1 0: Insert: insert BEGIN: 12, ( 0 4 0 0 0 2 0 0), (851 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, BEGIN, 4, 851 11)) minimal_complete ACTIVE
task 1 0: Insert: insert CASE: 12, ( 0 4 0 0 0 2 0 0), (465 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, CASE, 4, 465 10)) minimal_complete ACTIVE
task 1 0: Insert: insert DECLARE: 12, ( 0 4 0 0 0 2 0 0), (852 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, DECLARE, 4, 852 11)) minimal_complete ACTIVE
task 1 0: Insert: state 2351 reduce 0 to sequence_of_statements, goto 2505 via 2351
task 1 0: Insert: insert ELSE: 12, ( 0 4 0 0 0 2 0 0), (2646 : (ELSE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, ELSE, 4, 2646 11)) minimal_complete ACTIVE
task 1 0: Insert: insert ELSIF: 12, ( 0 4 0 0 0 2 0 0), (858 : (ELSIF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, ELSIF, 4, 858 11)) minimal_complete ACTIVE
task 1 0: Insert: insert EXIT: 12, ( 0 4 0 0 0 2 0 0), (466 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, EXIT, 4, 466 10)) minimal_complete ACTIVE
task 1 0: Insert: insert FOR: 12, ( 0 4 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, FOR, 4, 3 10)) minimal_complete ACTIVE
task 1 0: Insert: insert IF: 12, ( 0 4 0 0 0 2 0 0), (467 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, IF, 4, 467 10)) minimal_complete ACTIVE
task 1 0: Insert: insert LOOP: 12, ( 0 4 0 0 0 2 0 0), (468 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, LOOP, 4, 468 10)) minimal_complete ACTIVE
task 1 0: Insert: insert RETURN: 12, ( 0 4 0 0 0 2 0 0), (469 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, RETURN, 4, 469 10)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 12, ( 0 4 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, IDENTIFIER, 4, 10 10)) minimal_complete ACTIVE
task 1 0: enqueue: 12/ 143/179/37, min cost: 8, active workers: 0
task 1 0: dequeue: 8, ( 0 4 0 0 0 1 0 0), (61 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8)) minimal_complete ACTIVE
task 1 0: stack: (61 : (IDENTIFIER), 3 : (FOR), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 8, ( 0 4 0 0 0 1 0 0), (61 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 61 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 8, ( 0 4 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (61 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8)) minimal_complete ACTIVE
task 1 0: stack: (61 : (IDENTIFIER), 3 : (FOR), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift IN)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift IN
task 1 0: Minimal_Complete_Actions: insert IN: 9, ( 0 5 0 0 0 1 0 0), (196 : (IN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 143/180/38, min cost: 8, active workers: 0
task 1 0: dequeue: 8, ( 0 4 0 0 0 1 0 0), (2350 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9)) minimal_complete ACTIVE
task 1 0: stack: (2350 : (SEMICOLON), 2089 : (identifier_opt), 1700 : (EXIT), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 8, ( 0 4 0 0 0 1 0 0), (2350 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2350 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 8, ( 0 4 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2350 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9)) minimal_complete ACTIVE
task 1 0: stack: (2350 : (SEMICOLON), 2089 : (identifier_opt), 1700 : (EXIT), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to exit_statement)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to exit_statement
task 1 0: Minimal_Complete_Actions: state 2350 reduce 3 to exit_statement, goto 1709 via 1216
task 1 0: Minimal_Complete_Actions: state 1709 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Minimal_Complete_Actions: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Minimal_Complete_Actions: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Minimal_Complete_Actions: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 0: Minimal_Complete_Actions: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Minimal_Complete_Actions: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Minimal_Complete_Actions: insert END: 9, ( 0 5 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: Insert: state 2350 reduce 3 to exit_statement, goto 1709 via 1216
task 1 0: Insert: state 1709 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 0: Insert: insert BEGIN: 12, ( 0 4 0 0 0 2 0 0), (2094 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, BEGIN, 4, 2094 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1709 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert CASE: 12, ( 0 4 0 0 0 2 0 0), (1699 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, CASE, 4, 1699 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1709 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 0: Insert: insert DECLARE: 12, ( 0 4 0 0 0 2 0 0), (2095 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, DECLARE, 4, 2095 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1709 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert EXIT: 12, ( 0 4 0 0 0 2 0 0), (1700 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, EXIT, 4, 1700 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1709 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert FOR: 12, ( 0 4 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, FOR, 4, 3 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1709 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert IF: 12, ( 0 4 0 0 0 2 0 0), (1701 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, IF, 4, 1701 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1709 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert LOOP: 12, ( 0 4 0 0 0 2 0 0), (1702 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, LOOP, 4, 1702 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1709 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert RETURN: 12, ( 0 4 0 0 0 2 0 0), (1703 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, RETURN, 4, 1703 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1709 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 0: Insert: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Insert: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Insert: insert WHEN: 12, ( 0 4 0 0 0 2 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, WHEN, 4, 368 5)) minimal_complete ACTIVE
task 1 0: Insert: state 1709 reduce 1 to simple_statement, goto 1719 via 1216
task 1 0: Insert: state 1719 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert IDENTIFIER: 12, ( 0 4 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, IDENTIFIER, 4, 10 8)) minimal_complete ACTIVE
task 1 0: enqueue: 11/ 153/191/39, min cost: 9, active workers: 0
task 1 0: dequeue: 9, ( 0 5 0 0 0 1 0 0), (196 : (IN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9)) minimal_complete ACTIVE
task 1 0: stack: (196 : (IN), 61 : (IDENTIFIER), 3 : (FOR), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 9, ( 0 5 0 0 0 1 0 0), (196 : (IN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 196 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 9, ( 0 5 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (196 : (IN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9)) minimal_complete ACTIVE
task 1 0: stack: (196 : (IN), 61 : (IDENTIFIER), 3 : (FOR), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift IDENTIFIER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift IDENTIFIER
task 1 0: Minimal_Complete_Actions: insert IDENTIFIER: 10, ( 0 6 0 0 0 1 0 0), (443 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 13, ( 0 5 0 0 0 2 0 0), (439 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, LEFT_PAREN, 4, 439 10)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 13, ( 0 5 0 0 0 2 0 0), (440 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, NOT, 4, 440 10)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 13, ( 0 5 0 0 0 2 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, MINUS, 4, 39 10)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 13, ( 0 5 0 0 0 2 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, PLUS, 4, 40 10)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 13, ( 0 5 0 0 0 2 0 0), (441 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, STRING_LITERAL, 4, 441 10)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 13, ( 0 5 0 0 0 2 0 0), (442 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, NUMERIC_LITERAL, 4, 442 10)) minimal_complete ACTIVE
task 1 0: enqueue: 7/ 159/198/40, min cost: 9, active workers: 0
task 1 0: dequeue: 9, ( 0 5 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 9, ( 0 5 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 784 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 9, ( 0 5 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift CASE)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift CASE
task 1 0: Minimal_Complete_Actions: insert CASE: 10, ( 0 6 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 159/199/41, min cost: 9, active workers: 0
task 1 0: dequeue: 9, ( 0 5 0 0 0 1 0 0), (2506 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10)) minimal_complete ACTIVE
task 1 0: stack: (2506 : (LOOP), 2352 : (END), 2091 : (sequence_of_statements), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 9, ( 0 5 0 0 0 1 0 0), (2506 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2506 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 9, ( 0 5 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2506 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10)) minimal_complete ACTIVE
task 1 0: stack: (2506 : (LOOP), 2352 : (END), 2091 : (sequence_of_statements), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to identifier_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to identifier_opt
task 1 0: Minimal_Complete_Actions: state 2506 reduce 0 to identifier_opt, goto 2649 via 2506
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 10, ( 0 6 0 0 0 1 0 0), (2728 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 13, ( 0 5 0 0 0 2 0 0), (907 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, IDENTIFIER, 4, 907 11)) minimal_complete ACTIVE
task 1 0: enqueue: 2/ 160/201/42, min cost: 9, active workers: 0
task 1 0: dequeue: 9, ( 0 1 0 0 0 0 2 0), (368 : (WHEN))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (IDENTIFIER, (26 . 39)): 9, ( 0 1 0 0 0 0 2 0), (368 : (WHEN))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 9
task 1 0: check: 368 : 6:(IDENTIFIER, (26 . 39)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 9, ( 0 1 0 0 0 0 2 0), Error (IDENTIFIER, (26 . 39)) (368 : (WHEN))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift NUMERIC_LITERAL)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift NUMERIC_LITERAL
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 10, ( 0 2 0 0 0 0 2 0), (783 : (NUMERIC_LITERAL))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 160/202/43, min cost: 9, active workers: 0
task 1 0: dequeue: 9, ( 0 1 0 2 0 0 0 0), (169 : (IS))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, IS, 2, 169 3)) minimal_complete ACTIVE
task 1 0: stack: (169 : (IS), 45 : (expression_opt), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (IDENTIFIER, (6 . 18)): 9, ( 0 1 0 2 0 0 0 0), (169 : (IS))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, IS, 2, 169 3)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 169 : 2:(IDENTIFIER, (6 . 18)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 9, ( 0 1 0 2 0 0 0 0), Error (IDENTIFIER, (6 . 18)) (169 : (IS))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, IS, 2, 169 3)) minimal_complete ACTIVE
task 1 0: stack: (169 : (IS), 45 : (expression_opt), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift WHEN)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift WHEN
task 1 0: Minimal_Complete_Actions: insert WHEN: 10, ( 0 2 0 2 0 0 0 0), (368 : (WHEN))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, IS, 2, 169 3), (INSERT, WHEN, 2, 368 4)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 160/203/44, min cost: 9, active workers: 0
task 1 0: dequeue: 9, ( 0 5 0 0 0 1 0 0), (2729 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12)) minimal_complete ACTIVE
task 1 0: stack: (2729 : (SEMICOLON), 2650 : (identifier_opt), 2507 : (END), 2355 : (handled_sequence_of_statements), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 9, ( 0 5 0 0 0 1 0 0), (2729 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2729 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 9, ( 0 5 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2729 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12)) minimal_complete ACTIVE
task 1 0: stack: (2729 : (SEMICOLON), 2650 : (identifier_opt), 2507 : (END), 2355 : (handled_sequence_of_statements), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to block_statement)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to block_statement
task 1 0: Minimal_Complete_Actions: state 2729 reduce 6 to block_statement, goto 1706 via 1216
task 1 0: Minimal_Complete_Actions: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Minimal_Complete_Actions: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Minimal_Complete_Actions: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Minimal_Complete_Actions: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 0: Minimal_Complete_Actions: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Minimal_Complete_Actions: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Minimal_Complete_Actions: insert END: 10, ( 0 6 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: Insert: state 2729 reduce 6 to block_statement, goto 1706 via 1216
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 0: Insert: insert BEGIN: 13, ( 0 5 0 0 0 2 0 0), (2094 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, BEGIN, 4, 2094 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert CASE: 13, ( 0 5 0 0 0 2 0 0), (1699 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, CASE, 4, 1699 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 0: Insert: insert DECLARE: 13, ( 0 5 0 0 0 2 0 0), (2095 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, DECLARE, 4, 2095 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert EXIT: 13, ( 0 5 0 0 0 2 0 0), (1700 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, EXIT, 4, 1700 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert FOR: 13, ( 0 5 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, FOR, 4, 3 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert IF: 13, ( 0 5 0 0 0 2 0 0), (1701 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, IF, 4, 1701 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert LOOP: 13, ( 0 5 0 0 0 2 0 0), (1702 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, LOOP, 4, 1702 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert RETURN: 13, ( 0 5 0 0 0 2 0 0), (1703 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, RETURN, 4, 1703 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 0: Insert: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Insert: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Insert: insert WHEN: 13, ( 0 5 0 0 0 2 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, WHEN, 4, 368 5)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert IDENTIFIER: 13, ( 0 5 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, IDENTIFIER, 4, 10 8)) minimal_complete ACTIVE
task 1 0: enqueue: 11/ 170/214/45, min cost: 9, active workers: 0
task 1 0: dequeue: 9, ( 0 5 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 9, ( 0 5 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 784 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 9, ( 0 5 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift CASE)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift CASE
task 1 0: Minimal_Complete_Actions: insert CASE: 10, ( 0 6 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 170/215/46, min cost: 9, active workers: 0
task 1 0: dequeue: 9, ( 0 1 0 1 1 0 0 0), (169 : (IS))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3)) minimal_complete ACTIVE
task 1 0: stack: (169 : (IS), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (IS, (20 . 21)): 9, ( 0 1 0 1 1 0 0 0), (169 : (IS))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 169 : 3:(IS, (20 . 21)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 9, ( 0 1 0 1 1 0 0 0), Error (IS, (20 . 21)) (169 : (IS))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3)) minimal_complete ACTIVE
task 1 0: stack: (169 : (IS), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift WHEN)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift WHEN
task 1 0: Minimal_Complete_Actions: insert WHEN: 10, ( 0 2 0 1 1 0 0 0), (368 : (WHEN))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3), (INSERT, WHEN, 3, 368 4)) minimal_complete ACTIVE
task 1 0: parse Matching_Begin: Insert_Delete: ((INSERT, PROCEDURE, 3))
task 1 0: parse Matching_Begin: (PROCEDURE): 9, ( 0 1 0 1 1 0 0 0), (169 : (IS))/1:(INSERT, PROCEDURE, 3)/((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3), (INSERT, PROCEDURE, 3)) minimal_complete ACTIVE
task 1 0: parse Matching_Begin: 169 : 2:(PROCEDURE) : (Error)
task 1 0: Matching_Begin: abandon (PROCEDURE): parse fail: 9, ( 0 1 0 1 1 0 0 0), Error (PROCEDURE) (169 : (IS))/1:(INSERT, PROCEDURE, 3)/((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3), (INSERT, PROCEDURE, 3)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 170/216/47, min cost: 9, active workers: 0
task 1 0: dequeue: 9, ( 0 5 0 0 0 1 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 2348 : (IS), 2088 : (expression_opt), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 9, ( 0 5 0 0 0 1 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 368 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 9, ( 0 5 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 2348 : (IS), 2088 : (expression_opt), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift NUMERIC_LITERAL)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift NUMERIC_LITERAL
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 10, ( 0 6 0 0 0 1 0 0), (783 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 170/217/48, min cost: 9, active workers: 0
task 1 0: dequeue: 9, ( 0 5 0 0 0 1 0 0), (2647 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11)) minimal_complete ACTIVE
task 1 0: stack: (2647 : (END), 2505 : (sequence_of_statements), 2351 : (THEN), 2090 : (expression_opt), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 9, ( 0 5 0 0 0 1 0 0), (2647 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2647 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 9, ( 0 5 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2647 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11)) minimal_complete ACTIVE
task 1 0: stack: (2647 : (END), 2505 : (sequence_of_statements), 2351 : (THEN), 2090 : (expression_opt), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift IF)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift IF
task 1 0: Minimal_Complete_Actions: insert IF: 10, ( 0 6 0 0 0 1 0 0), (2725 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 170/218/49, min cost: 9, active workers: 0
task 1 0: dequeue: 9, ( 0 1 0 1 0 0 2 0), (169 : (IS))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4), (INSERT, IS, 5, 169 3)) minimal_complete ACTIVE
task 1 0: stack: (169 : (IS), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 9, ( 0 1 0 1 0 0 2 0), (169 : (IS))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4), (INSERT, IS, 5, 169 3)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 169 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 9, ( 0 1 0 1 0 0 2 0), Error (PLUS, (25 . 25)) (169 : (IS))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4), (INSERT, IS, 5, 169 3)) minimal_complete ACTIVE
task 1 0: stack: (169 : (IS), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift WHEN)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift WHEN
task 1 0: Minimal_Complete_Actions: insert WHEN: 10, ( 0 2 0 1 0 0 2 0), (368 : (WHEN))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4), (INSERT, IS, 5, 169 3), (INSERT, WHEN, 5, 368 4)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 170/219/50, min cost: 9, active workers: 0
task 1 0: dequeue: 9, ( 0 5 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 9, ( 0 5 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 784 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 9, ( 0 5 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift CASE)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift CASE
task 1 0: Minimal_Complete_Actions: insert CASE: 10, ( 0 6 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 170/220/51, min cost: 9, active workers: 0
task 1 0: dequeue: 9, ( 0 5 0 0 0 1 0 0), (2730 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12)) minimal_complete ACTIVE
task 1 0: stack: (2730 : (END), 2651 : (handled_sequence_of_statements), 2508 : (BEGIN), 2356 : (declarative_part), 2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 9, ( 0 5 0 0 0 1 0 0), (2730 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2730 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 9, ( 0 5 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2730 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12)) minimal_complete ACTIVE
task 1 0: stack: (2730 : (END), 2651 : (handled_sequence_of_statements), 2508 : (BEGIN), 2356 : (declarative_part), 2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to identifier_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to identifier_opt
task 1 0: Minimal_Complete_Actions: state 2730 reduce 0 to identifier_opt, goto 2821 via 2730
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 10, ( 0 6 0 0 0 1 0 0), (2868 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 13, ( 0 5 0 0 0 2 0 0), (907 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, IDENTIFIER, 4, 907 13)) minimal_complete ACTIVE
task 1 0: enqueue: 2/ 171/222/52, min cost: 9, active workers: 0
task 1 0: dequeue: 9, ( 0 5 0 0 0 0 1 0), (1217 : (CASE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6)) minimal_complete ACTIVE
task 1 0: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 9, ( 0 5 0 0 0 0 1 0), (1217 : (CASE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 1217 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 9, ( 0 5 0 0 0 0 1 0), Error (PLUS, (25 . 25)) (1217 : (CASE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6)) minimal_complete ACTIVE
task 1 0: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift SEMICOLON)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift SEMICOLON
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 10, ( 0 6 0 0 0 0 1 0), (1721 : (SEMICOLON))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6), (INSERT, SEMICOLON, 5, 1721 7)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 171/223/53, min cost: 9, active workers: 0
task 1 0: dequeue: 9, ( 0 5 0 0 0 1 0 0), (1216 : (EQUAL_GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7)) minimal_complete ACTIVE
task 1 0: stack: (1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 9, ( 0 5 0 0 0 1 0 0), (1216 : (EQUAL_GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1216 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 9, ( 0 5 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (1216 : (EQUAL_GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7)) minimal_complete ACTIVE
task 1 0: stack: (1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to sequence_of_statements)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to sequence_of_statements
task 1 0: Minimal_Complete_Actions: state 1216 reduce 0 to sequence_of_statements, goto 1717 via 1216
task 1 0: Minimal_Complete_Actions: state 1717 reduce 4 to case_statement_alternative, goto 785 via 370
task 1 0: Minimal_Complete_Actions: state 785 reduce 2 to case_statement_alternative_list, goto 370 via 169
task 1 0: Minimal_Complete_Actions: insert END: 10, ( 0 6 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: Insert: state 1216 reduce 0 to block_label_opt, goto 1705 via 1216
task 1 0: Insert: insert BEGIN: 13, ( 0 5 0 0 0 2 0 0), (2094 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, BEGIN, 4, 2094 9)) minimal_complete ACTIVE
task 1 0: Insert: insert CASE: 13, ( 0 5 0 0 0 2 0 0), (1699 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, CASE, 4, 1699 8)) minimal_complete ACTIVE
task 1 0: Insert: insert DECLARE: 13, ( 0 5 0 0 0 2 0 0), (2095 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, DECLARE, 4, 2095 9)) minimal_complete ACTIVE
task 1 0: Insert: insert EXIT: 13, ( 0 5 0 0 0 2 0 0), (1700 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, EXIT, 4, 1700 8)) minimal_complete ACTIVE
task 1 0: Insert: insert FOR: 13, ( 0 5 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, FOR, 4, 3 8)) minimal_complete ACTIVE
task 1 0: Insert: insert IF: 13, ( 0 5 0 0 0 2 0 0), (1701 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, IF, 4, 1701 8)) minimal_complete ACTIVE
task 1 0: Insert: insert LOOP: 13, ( 0 5 0 0 0 2 0 0), (1702 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, LOOP, 4, 1702 8)) minimal_complete ACTIVE
task 1 0: Insert: insert RETURN: 13, ( 0 5 0 0 0 2 0 0), (1703 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, RETURN, 4, 1703 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1216 reduce 0 to sequence_of_statements, goto 1717 via 1216
task 1 0: Insert: state 1717 reduce 4 to case_statement_alternative, goto 785 via 370
task 1 0: Insert: state 785 reduce 2 to case_statement_alternative_list, goto 370 via 169
task 1 0: Insert: insert WHEN: 13, ( 0 5 0 0 0 2 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, WHEN, 4, 368 5)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 13, ( 0 5 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, IDENTIFIER, 4, 10 8)) minimal_complete ACTIVE
task 1 0: enqueue: 11/ 181/234/54, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 2 0 0 0 0 2 0), (783 : (NUMERIC_LITERAL))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5)) minimal_complete ACTIVE
task 1 0: stack: (783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (IDENTIFIER, (26 . 39)): 10, ( 0 2 0 0 0 0 2 0), (783 : (NUMERIC_LITERAL))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 9
task 1 0: check: 783 : 6:(IDENTIFIER, (26 . 39)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 2 0 0 0 0 2 0), Error (IDENTIFIER, (26 . 39)) (783 : (NUMERIC_LITERAL))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5)) minimal_complete ACTIVE
task 1 0: stack: (783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift EQUAL_GREATER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift EQUAL_GREATER
task 1 0: Minimal_Complete_Actions: insert EQUAL_GREATER: 11, ( 0 3 0 0 0 0 2 0), (1216 : (EQUAL_GREATER))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 181/235/55, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (443 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10)) minimal_complete ACTIVE
task 1 0: stack: (443 : (IDENTIFIER), 196 : (IN), 61 : (IDENTIFIER), 3 : (FOR), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (443 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 443 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (443 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10)) minimal_complete ACTIVE
task 1 0: stack: (443 : (IDENTIFIER), 196 : (IN), 61 : (IDENTIFIER), 3 : (FOR), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to name)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to name
task 1 0: Minimal_Complete_Actions: state 443 reduce 1 to name, goto 446 via 196
task 1 0: Minimal_Complete_Actions: multiple actions (Reduce to primary, Reduce to subtype_indication)
task 1 0: Minimal_Complete_Actions: Reduce to primary next_state 448 length 2147483647
task 1 0: Minimal_Complete_Actions: Reduce to subtype_indication next_state 452 length 2147483647
task 1 0: Minimal_Complete_Actions: all recursive
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to primary
task 1 0: Minimal_Complete_Actions: state 446 reduce 1 to primary, goto 448 via 196
task 1 0: Minimal_Complete_Actions: state 448 reduce 1 to factor, goto 445 via 196
task 1 0: Minimal_Complete_Actions: state 445 reduce 1 to term, goto 453 via 196
task 1 0: Minimal_Complete_Actions: state 453 reduce 1 to term_list, goto 454 via 196
task 1 0: Minimal_Complete_Actions: state 454 reduce 1 to simple_expression, goto 451 via 196
task 1 0: Minimal_Complete_Actions: insert DOT_DOT: 11, ( 0 7 0 0 0 1 0 0), (835 : (DOT_DOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, DOT_DOT, 4, 835 11)) minimal_complete ACTIVE
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to subtype_indication
task 1 0: Minimal_Complete_Actions: state 446 reduce 1 to subtype_indication, goto 452 via 196
task 1 0: Minimal_Complete_Actions: state 452 reduce 1 to discrete_subtype_definition, goto 444 via 196
task 1 0: Minimal_Complete_Actions: state 444 reduce 4 to iteration_scheme, goto 1712 via 1216
task 1 0: Minimal_Complete_Actions: insert LOOP: 11, ( 0 7 0 0 0 1 0 0), (2096 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, LOOP, 4, 2096 8)) minimal_complete ACTIVE
task 1 0: Insert: state 443 reduce 1 to name, goto 446 via 196
task 1 0: Insert: insert LEFT_PAREN: 14, ( 0 6 0 0 0 2 0 0), (829 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, LEFT_PAREN, 4, 829 11)) minimal_complete ACTIVE
task 1 0: Insert: insert RANGE: 14, ( 0 6 0 0 0 2 0 0), (830 : (RANGE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, RANGE, 4, 830 11)) minimal_complete ACTIVE
task 1 0: Insert: state 446 reduce 1 to primary, goto 448 via 196
task 1 0: Insert: state 448 reduce 1 to factor, goto 445 via 196
task 1 0: Insert: state 445 reduce 1 to term, goto 453 via 196
task 1 0: Insert: state 453 reduce 1 to term_list, goto 454 via 196
task 1 0: Insert: insert AMPERSAND: 14, ( 0 6 0 0 0 2 0 0), (189 : (AMPERSAND))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, AMPERSAND, 4, 189 11)) minimal_complete ACTIVE
task 1 0: Insert: insert DOT: 14, ( 0 6 0 0 0 2 0 0), (831 : (DOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, DOT, 4, 831 11)) minimal_complete ACTIVE
task 1 0: Insert: state 446 reduce 1 to primary, goto 448 via 196
task 1 0: Insert: state 448 reduce 1 to factor, goto 445 via 196
task 1 0: Insert: state 445 reduce 1 to term, goto 453 via 196
task 1 0: Insert: state 453 reduce 1 to term_list, goto 454 via 196
task 1 0: Insert: insert MINUS: 14, ( 0 6 0 0 0 2 0 0), (190 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, MINUS, 4, 190 11)) minimal_complete ACTIVE
task 1 0: Insert: state 446 reduce 1 to primary, goto 448 via 196
task 1 0: Insert: state 448 reduce 1 to factor, goto 445 via 196
task 1 0: Insert: state 445 reduce 1 to term, goto 453 via 196
task 1 0: Insert: state 453 reduce 1 to term_list, goto 454 via 196
task 1 0: Insert: insert PLUS: 14, ( 0 6 0 0 0 2 0 0), (191 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, PLUS, 4, 191 11)) minimal_complete ACTIVE
task 1 0: Insert: state 446 reduce 1 to primary, goto 448 via 196
task 1 0: Insert: state 448 reduce 1 to factor, goto 445 via 196
task 1 0: Insert: state 445 reduce 1 to term, goto 453 via 196
task 1 0: Insert: insert SLASH: 14, ( 0 6 0 0 0 2 0 0), (186 : (SLASH))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, SLASH, 4, 186 11)) minimal_complete ACTIVE
task 1 0: Insert: state 446 reduce 1 to primary, goto 448 via 196
task 1 0: Insert: state 448 reduce 1 to factor, goto 445 via 196
task 1 0: Insert: state 445 reduce 1 to term, goto 453 via 196
task 1 0: Insert: insert STAR: 14, ( 0 6 0 0 0 2 0 0), (187 : (STAR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, STAR, 4, 187 11)) minimal_complete ACTIVE
task 1 0: enqueue: 10/ 190/245/56, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (2728 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12)) minimal_complete ACTIVE
task 1 0: stack: (2728 : (SEMICOLON), 2649 : (identifier_opt), 2506 : (LOOP), 2352 : (END), 2091 : (sequence_of_statements), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (2728 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2728 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2728 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12)) minimal_complete ACTIVE
task 1 0: stack: (2728 : (SEMICOLON), 2649 : (identifier_opt), 2506 : (LOOP), 2352 : (END), 2091 : (sequence_of_statements), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to loop_statement)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to loop_statement
task 1 0: Minimal_Complete_Actions: state 2728 reduce 6 to loop_statement, goto 1713 via 1216
task 1 0: Minimal_Complete_Actions: state 1713 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Minimal_Complete_Actions: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Minimal_Complete_Actions: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Minimal_Complete_Actions: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 0: Minimal_Complete_Actions: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Minimal_Complete_Actions: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Minimal_Complete_Actions: insert END: 11, ( 0 7 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: Insert: state 2728 reduce 6 to loop_statement, goto 1713 via 1216
task 1 0: Insert: state 1713 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 0: Insert: insert BEGIN: 14, ( 0 6 0 0 0 2 0 0), (2094 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12), (INSERT, BEGIN, 4, 2094 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1713 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert CASE: 14, ( 0 6 0 0 0 2 0 0), (1699 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12), (INSERT, CASE, 4, 1699 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1713 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 0: Insert: insert DECLARE: 14, ( 0 6 0 0 0 2 0 0), (2095 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12), (INSERT, DECLARE, 4, 2095 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1713 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert EXIT: 14, ( 0 6 0 0 0 2 0 0), (1700 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12), (INSERT, EXIT, 4, 1700 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1713 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert FOR: 14, ( 0 6 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12), (INSERT, FOR, 4, 3 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1713 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert IF: 14, ( 0 6 0 0 0 2 0 0), (1701 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12), (INSERT, IF, 4, 1701 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1713 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert LOOP: 14, ( 0 6 0 0 0 2 0 0), (1702 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12), (INSERT, LOOP, 4, 1702 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1713 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert RETURN: 14, ( 0 6 0 0 0 2 0 0), (1703 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12), (INSERT, RETURN, 4, 1703 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1713 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 0: Insert: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Insert: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Insert: insert WHEN: 14, ( 0 6 0 0 0 2 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12), (INSERT, WHEN, 4, 368 5)) minimal_complete ACTIVE
task 1 0: Insert: state 1713 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert IDENTIFIER: 14, ( 0 6 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12), (INSERT, IDENTIFIER, 4, 10 8)) minimal_complete ACTIVE
task 1 0: enqueue: 11/ 200/256/57, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1217 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift SEMICOLON)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift SEMICOLON
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 11, ( 0 7 0 0 0 1 0 0), (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 200/257/58, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 784 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift CASE)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift CASE
task 1 0: Minimal_Complete_Actions: insert CASE: 11, ( 0 7 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 200/258/59, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IDENTIFIER, 4, 10 2)) minimal_complete DONE
task 1 0: stack: (10 : (IDENTIFIER), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IDENTIFIER, 4, 10 2)) minimal_complete DONE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 10 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IDENTIFIER, 4, 10 2)) minimal_complete DONE
task 1 0: stack: (10 : (IDENTIFIER), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: Minimal_Complete_Actions: done
task 1 0: Insert: state 10 reduce 1 to name, goto 25 via 16
task 1 0: Insert: insert LEFT_PAREN: 14, ( 0 6 0 0 0 2 0 0), (140 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IDENTIFIER, 4, 10 2), (INSERT, LEFT_PAREN, 4, 140 3)) minimal_complete DONE
task 1 0: Insert: insert COLON: 14, ( 0 6 0 0 0 2 0 0), (135 : (COLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IDENTIFIER, 4, 10 2), (INSERT, COLON, 4, 135 3)) minimal_complete DONE
task 1 0: Insert: insert COLON_EQUAL: 14, ( 0 6 0 0 0 2 0 0), (141 : (COLON_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IDENTIFIER, 4, 10 2), (INSERT, COLON_EQUAL, 4, 141 3)) minimal_complete DONE
task 1 0: Insert: insert DOT: 14, ( 0 6 0 0 0 2 0 0), (142 : (DOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IDENTIFIER, 4, 10 2), (INSERT, DOT, 4, 142 3)) minimal_complete DONE
task 1 0: Insert: insert SEMICOLON: 14, ( 0 6 0 0 0 2 0 0), (143 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IDENTIFIER, 4, 10 2), (INSERT, SEMICOLON, 4, 143 3)) minimal_complete DONE
task 1 0: enqueue: 5/ 204/263/60, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (136 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3)) minimal_complete DONE
task 1 0: stack: (136 : (BEGIN), 12 : (block_label_opt), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (136 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3)) minimal_complete DONE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 136 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (136 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3)) minimal_complete DONE
task 1 0: stack: (136 : (BEGIN), 12 : (block_label_opt), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: Minimal_Complete_Actions: done
task 1 0: Insert: state 136 reduce 0 to block_label_opt, goto 269 via 136
task 1 0: Insert: insert BEGIN: 14, ( 0 6 0 0 0 2 0 0), (655 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3), (INSERT, BEGIN, 4, 655 5)) minimal_complete DONE
task 1 0: Insert: insert CASE: 14, ( 0 6 0 0 0 2 0 0), (263 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3), (INSERT, CASE, 4, 263 4)) minimal_complete DONE
task 1 0: Insert: insert DECLARE: 14, ( 0 6 0 0 0 2 0 0), (656 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3), (INSERT, DECLARE, 4, 656 5)) minimal_complete DONE
task 1 0: Insert: state 136 reduce 0 to sequence_of_statements, goto 282 via 136
task 1 0: Insert: state 282 reduce 1 to handled_sequence_of_statements, goto 275 via 136
task 1 0: Insert: insert END: 14, ( 0 6 0 0 0 2 0 0), (657 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3), (INSERT, END, 4, 657 5)) minimal_complete DONE
task 1 0: Insert: insert EXIT: 14, ( 0 6 0 0 0 2 0 0), (264 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3), (INSERT, EXIT, 4, 264 4)) minimal_complete DONE
task 1 0: Insert: insert EXCEPTION: 14, ( 0 6 0 0 0 2 0 0), (662 : (EXCEPTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3), (INSERT, EXCEPTION, 4, 662 5)) minimal_complete DONE
task 1 0: Insert: insert FOR: 14, ( 0 6 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3), (INSERT, FOR, 4, 3 4)) minimal_complete DONE
task 1 0: Insert: insert IF: 14, ( 0 6 0 0 0 2 0 0), (265 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3), (INSERT, IF, 4, 265 4)) minimal_complete DONE
task 1 0: Insert: insert LOOP: 14, ( 0 6 0 0 0 2 0 0), (266 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3), (INSERT, LOOP, 4, 266 4)) minimal_complete DONE
task 1 0: Insert: insert RETURN: 14, ( 0 6 0 0 0 2 0 0), (267 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3), (INSERT, RETURN, 4, 267 4)) minimal_complete DONE
task 1 0: Insert: insert IDENTIFIER: 14, ( 0 6 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3), (INSERT, IDENTIFIER, 4, 10 4)) minimal_complete DONE
task 1 0: enqueue: 11/ 214/274/61, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 2 0 1 0 0 2 0), (368 : (WHEN))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4), (INSERT, IS, 5, 169 3), (INSERT, WHEN, 5, 368 4)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 169 : (IS), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 10, ( 0 2 0 1 0 0 2 0), (368 : (WHEN))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4), (INSERT, IS, 5, 169 3), (INSERT, WHEN, 5, 368 4)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 368 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 2 0 1 0 0 2 0), Error (PLUS, (25 . 25)) (368 : (WHEN))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4), (INSERT, IS, 5, 169 3), (INSERT, WHEN, 5, 368 4)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 169 : (IS), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift NUMERIC_LITERAL)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift NUMERIC_LITERAL
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 11, ( 0 3 0 1 0 0 2 0), (783 : (NUMERIC_LITERAL))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4), (INSERT, IS, 5, 169 3), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 214/275/62, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (1 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, CASE, 4, 1 2)) minimal_complete DONE
task 1 0: stack: (1 : (CASE), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (1 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, CASE, 4, 1 2)) minimal_complete DONE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (1 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, CASE, 4, 1 2)) minimal_complete DONE
task 1 0: stack: (1 : (CASE), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: Minimal_Complete_Actions: done
task 1 0: Insert: state 1 reduce 0 to expression_opt, goto 45 via 1
task 1 0: Insert: insert IS: 14, ( 0 6 0 0 0 2 0 0), (169 : (IS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, CASE, 4, 1 2), (INSERT, IS, 4, 169 4)) minimal_complete DONE
task 1 0: Insert: insert LEFT_PAREN: 14, ( 0 6 0 0 0 2 0 0), (37 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, CASE, 4, 1 2), (INSERT, LEFT_PAREN, 4, 37 3)) minimal_complete DONE
task 1 0: Insert: insert NOT: 14, ( 0 6 0 0 0 2 0 0), (38 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, CASE, 4, 1 2), (INSERT, NOT, 4, 38 3)) minimal_complete DONE
task 1 0: Insert: insert MINUS: 14, ( 0 6 0 0 0 2 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, CASE, 4, 1 2), (INSERT, MINUS, 4, 39 3)) minimal_complete DONE
task 1 0: Insert: insert PLUS: 14, ( 0 6 0 0 0 2 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, CASE, 4, 1 2), (INSERT, PLUS, 4, 40 3)) minimal_complete DONE
task 1 0: Insert: insert STRING_LITERAL: 14, ( 0 6 0 0 0 2 0 0), (41 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, CASE, 4, 1 2), (INSERT, STRING_LITERAL, 4, 41 3)) minimal_complete DONE
task 1 0: Insert: insert NUMERIC_LITERAL: 14, ( 0 6 0 0 0 2 0 0), (42 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, CASE, 4, 1 2), (INSERT, NUMERIC_LITERAL, 4, 42 3)) minimal_complete DONE
task 1 0: Insert: insert IDENTIFIER: 14, ( 0 6 0 0 0 2 0 0), (43 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, CASE, 4, 1 2), (INSERT, IDENTIFIER, 4, 43 3)) minimal_complete DONE
task 1 0: enqueue: 8/ 221/283/63, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (137 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, DECLARE, 4, 137 3)) minimal_complete DONE
task 1 0: stack: (137 : (DECLARE), 12 : (block_label_opt), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (137 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, DECLARE, 4, 137 3)) minimal_complete DONE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 137 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (137 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, DECLARE, 4, 137 3)) minimal_complete DONE
task 1 0: stack: (137 : (DECLARE), 12 : (block_label_opt), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: Minimal_Complete_Actions: done
task 1 0: Insert: state 137 reduce 0 to declarative_part, goto 294 via 137
task 1 0: Insert: insert BEGIN: 14, ( 0 6 0 0 0 2 0 0), (668 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, DECLARE, 4, 137 3), (INSERT, BEGIN, 4, 668 5)) minimal_complete DONE
task 1 0: Insert: insert FUNCTION: 14, ( 0 6 0 0 0 2 0 0), (4 : (FUNCTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, DECLARE, 4, 137 3), (INSERT, FUNCTION, 4, 4 4)) minimal_complete DONE
task 1 0: Insert: insert PACKAGE: 14, ( 0 6 0 0 0 2 0 0), (286 : (PACKAGE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, DECLARE, 4, 137 3), (INSERT, PACKAGE, 4, 286 4)) minimal_complete DONE
task 1 0: Insert: insert PROCEDURE: 14, ( 0 6 0 0 0 2 0 0), (287 : (PROCEDURE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, DECLARE, 4, 137 3), (INSERT, PROCEDURE, 4, 287 4)) minimal_complete DONE
task 1 0: Insert: insert TYPE: 14, ( 0 6 0 0 0 2 0 0), (288 : (TYPE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, DECLARE, 4, 137 3), (INSERT, TYPE, 4, 288 4)) minimal_complete DONE
task 1 0: Insert: insert IDENTIFIER: 14, ( 0 6 0 0 0 2 0 0), (289 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, DECLARE, 4, 137 3), (INSERT, IDENTIFIER, 4, 289 4)) minimal_complete DONE
task 1 0: enqueue: 6/ 226/289/64, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1217 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift SEMICOLON)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift SEMICOLON
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 11, ( 0 7 0 0 0 1 0 0), (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 226/290/65, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 0 1 0), (1721 : (SEMICOLON))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6), (INSERT, SEMICOLON, 5, 1721 7)) minimal_complete ACTIVE
task 1 0: stack: (1721 : (SEMICOLON), 1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 10, ( 0 6 0 0 0 0 1 0), (1721 : (SEMICOLON))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6), (INSERT, SEMICOLON, 5, 1721 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 1721 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 0 1 0), Error (PLUS, (25 . 25)) (1721 : (SEMICOLON))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6), (INSERT, SEMICOLON, 5, 1721 7)) minimal_complete ACTIVE
task 1 0: stack: (1721 : (SEMICOLON), 1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to case_statement)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to case_statement
task 1 0: Minimal_Complete_Actions: state 1721 reduce 7 to case_statement, goto 14 via 0
task 1 0: Minimal_Complete_Actions: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Minimal_Complete_Actions: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Minimal_Complete_Actions: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Minimal_Complete_Actions: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Minimal_Complete_Actions abandoned: no actions
task 1 0: Insert: state 1721 reduce 7 to case_statement, goto 14 via 0
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: state 16 reduce 0 to block_label_opt, goto 12 via 16
task 1 0: Insert: insert BEGIN: 14, ( 0 6 0 0 0 1 1 0), (136 : (BEGIN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6), (INSERT, SEMICOLON, 5, 1721 7), (INSERT, BEGIN, 5, 136 3)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert CASE: 14, ( 0 6 0 0 0 1 1 0), (1 : (CASE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6), (INSERT, SEMICOLON, 5, 1721 7), (INSERT, CASE, 5, 1 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: state 16 reduce 0 to block_label_opt, goto 12 via 16
task 1 0: Insert: insert DECLARE: 14, ( 0 6 0 0 0 1 1 0), (137 : (DECLARE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6), (INSERT, SEMICOLON, 5, 1721 7), (INSERT, DECLARE, 5, 137 3)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert EXIT: 14, ( 0 6 0 0 0 1 1 0), (2 : (EXIT))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6), (INSERT, SEMICOLON, 5, 1721 7), (INSERT, EXIT, 5, 2 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert FOR: 14, ( 0 6 0 0 0 1 1 0), (3 : (FOR))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6), (INSERT, SEMICOLON, 5, 1721 7), (INSERT, FOR, 5, 3 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert FUNCTION: 14, ( 0 6 0 0 0 1 1 0), (4 : (FUNCTION))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6), (INSERT, SEMICOLON, 5, 1721 7), (INSERT, FUNCTION, 5, 4 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert IF: 14, ( 0 6 0 0 0 1 1 0), (5 : (IF))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6), (INSERT, SEMICOLON, 5, 1721 7), (INSERT, IF, 5, 5 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert LOOP: 14, ( 0 6 0 0 0 1 1 0), (6 : (LOOP))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6), (INSERT, SEMICOLON, 5, 1721 7), (INSERT, LOOP, 5, 6 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert PACKAGE: 14, ( 0 6 0 0 0 1 1 0), (7 : (PACKAGE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6), (INSERT, SEMICOLON, 5, 1721 7), (INSERT, PACKAGE, 5, 7 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert PROCEDURE: 14, ( 0 6 0 0 0 1 1 0), (8 : (PROCEDURE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6), (INSERT, SEMICOLON, 5, 1721 7), (INSERT, PROCEDURE, 5, 8 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert RETURN: 14, ( 0 6 0 0 0 1 1 0), (9 : (RETURN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6), (INSERT, SEMICOLON, 5, 1721 7), (INSERT, RETURN, 5, 9 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert IDENTIFIER: 14, ( 0 6 0 0 0 1 1 0), (10 : (IDENTIFIER))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, END, 5, 784 5), (INSERT, CASE, 5, 1217 6), (INSERT, SEMICOLON, 5, 1721 7), (INSERT, IDENTIFIER, 5, 10 2)) minimal_complete DONE
task 1 0: enqueue: 12/ 237/302/66, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (783 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11)) minimal_complete ACTIVE
task 1 0: stack: (783 : (NUMERIC_LITERAL), 368 : (WHEN), 2348 : (IS), 2088 : (expression_opt), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (783 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 783 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (783 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11)) minimal_complete ACTIVE
task 1 0: stack: (783 : (NUMERIC_LITERAL), 368 : (WHEN), 2348 : (IS), 2088 : (expression_opt), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift EQUAL_GREATER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift EQUAL_GREATER
task 1 0: Minimal_Complete_Actions: insert EQUAL_GREATER: 11, ( 0 7 0 0 0 1 0 0), (1216 : (EQUAL_GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11), (INSERT, EQUAL_GREATER, 4, 1216 12)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 237/303/67, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 2 0 1 1 0 0 0), (368 : (WHEN))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3), (INSERT, WHEN, 3, 368 4)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 169 : (IS), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (IS, (20 . 21)): 10, ( 0 2 0 1 1 0 0 0), (368 : (WHEN))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3), (INSERT, WHEN, 3, 368 4)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 368 : 3:(IS, (20 . 21)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 2 0 1 1 0 0 0), Error (IS, (20 . 21)) (368 : (WHEN))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3), (INSERT, WHEN, 3, 368 4)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 169 : (IS), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift NUMERIC_LITERAL)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift NUMERIC_LITERAL
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 11, ( 0 3 0 1 1 0 0 0), (783 : (NUMERIC_LITERAL))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3), (INSERT, WHEN, 3, 368 4), (INSERT, NUMERIC_LITERAL, 3, 783 5)) minimal_complete ACTIVE
task 1 0: parse Matching_Begin: Insert_Delete: ((INSERT, PROCEDURE, 3))
task 1 0: parse Matching_Begin: (PROCEDURE): 10, ( 0 2 0 1 1 0 0 0), (368 : (WHEN))/1:(INSERT, PROCEDURE, 3)/((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3), (INSERT, WHEN, 3, 368 4), (INSERT, PROCEDURE, 3)) minimal_complete ACTIVE
task 1 0: parse Matching_Begin: 368 : 2:(PROCEDURE) : (Error)
task 1 0: Matching_Begin: abandon (PROCEDURE): parse fail: 10, ( 0 2 0 1 1 0 0 0), Error (PROCEDURE) (368 : (WHEN))/1:(INSERT, PROCEDURE, 3)/((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3), (INSERT, WHEN, 3, 368 4), (INSERT, PROCEDURE, 3)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 237/304/68, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1217 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift SEMICOLON)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift SEMICOLON
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 11, ( 0 7 0 0 0 1 0 0), (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 237/305/69, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (2725 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12)) minimal_complete ACTIVE
task 1 0: stack: (2725 : (IF), 2647 : (END), 2505 : (sequence_of_statements), 2351 : (THEN), 2090 : (expression_opt), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (2725 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2725 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2725 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12)) minimal_complete ACTIVE
task 1 0: stack: (2725 : (IF), 2647 : (END), 2505 : (sequence_of_statements), 2351 : (THEN), 2090 : (expression_opt), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift SEMICOLON)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift SEMICOLON
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 11, ( 0 7 0 0 0 1 0 0), (2818 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12), (INSERT, SEMICOLON, 4, 2818 13)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 237/306/70, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 784 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift CASE)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift CASE
task 1 0: Minimal_Complete_Actions: insert CASE: 11, ( 0 7 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 237/307/71, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (2868 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14)) minimal_complete ACTIVE
task 1 0: stack: (2868 : (SEMICOLON), 2821 : (identifier_opt), 2730 : (END), 2651 : (handled_sequence_of_statements), 2508 : (BEGIN), 2356 : (declarative_part), 2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (2868 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2868 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2868 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14)) minimal_complete ACTIVE
task 1 0: stack: (2868 : (SEMICOLON), 2821 : (identifier_opt), 2730 : (END), 2651 : (handled_sequence_of_statements), 2508 : (BEGIN), 2356 : (declarative_part), 2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to block_statement)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to block_statement
task 1 0: Minimal_Complete_Actions: state 2868 reduce 8 to block_statement, goto 1706 via 1216
task 1 0: Minimal_Complete_Actions: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Minimal_Complete_Actions: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Minimal_Complete_Actions: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Minimal_Complete_Actions: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 0: Minimal_Complete_Actions: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Minimal_Complete_Actions: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Minimal_Complete_Actions: insert END: 11, ( 0 7 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: Insert: state 2868 reduce 8 to block_statement, goto 1706 via 1216
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 0: Insert: insert BEGIN: 14, ( 0 6 0 0 0 2 0 0), (2094 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14), (INSERT, BEGIN, 4, 2094 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert CASE: 14, ( 0 6 0 0 0 2 0 0), (1699 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14), (INSERT, CASE, 4, 1699 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 0: Insert: insert DECLARE: 14, ( 0 6 0 0 0 2 0 0), (2095 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14), (INSERT, DECLARE, 4, 2095 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert EXIT: 14, ( 0 6 0 0 0 2 0 0), (1700 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14), (INSERT, EXIT, 4, 1700 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert FOR: 14, ( 0 6 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14), (INSERT, FOR, 4, 3 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert IF: 14, ( 0 6 0 0 0 2 0 0), (1701 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14), (INSERT, IF, 4, 1701 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert LOOP: 14, ( 0 6 0 0 0 2 0 0), (1702 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14), (INSERT, LOOP, 4, 1702 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert RETURN: 14, ( 0 6 0 0 0 2 0 0), (1703 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14), (INSERT, RETURN, 4, 1703 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 0: Insert: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Insert: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Insert: insert WHEN: 14, ( 0 6 0 0 0 2 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14), (INSERT, WHEN, 4, 368 5)) minimal_complete ACTIVE
task 1 0: Insert: state 1706 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert IDENTIFIER: 14, ( 0 6 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14), (INSERT, IDENTIFIER, 4, 10 8)) minimal_complete ACTIVE
task 1 0: enqueue: 11/ 247/318/72, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (2 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, EXIT, 4, 2 2)) minimal_complete DONE
task 1 0: stack: (2 : (EXIT), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (2 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, EXIT, 4, 2 2)) minimal_complete DONE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, EXIT, 4, 2 2)) minimal_complete DONE
task 1 0: stack: (2 : (EXIT), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: Minimal_Complete_Actions: done
task 1 0: Insert: state 2 reduce 0 to identifier_opt, goto 60 via 2
task 1 0: Insert: insert WHEN: 14, ( 0 6 0 0 0 2 0 0), (194 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, EXIT, 4, 2 2), (INSERT, WHEN, 4, 194 4)) minimal_complete DONE
task 1 0: Insert: insert SEMICOLON: 14, ( 0 6 0 0 0 2 0 0), (195 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, EXIT, 4, 2 2), (INSERT, SEMICOLON, 4, 195 4)) minimal_complete DONE
task 1 0: Insert: insert IDENTIFIER: 14, ( 0 6 0 0 0 2 0 0), (59 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, EXIT, 4, 2 2), (INSERT, IDENTIFIER, 4, 59 3)) minimal_complete DONE
task 1 0: enqueue: 3/ 249/321/73, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (4 : (FUNCTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, FUNCTION, 4, 4 2)) minimal_complete DONE
task 1 0: stack: (4 : (FUNCTION), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (4 : (FUNCTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, FUNCTION, 4, 4 2)) minimal_complete DONE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 4 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (4 : (FUNCTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, FUNCTION, 4, 4 2)) minimal_complete DONE
task 1 0: stack: (4 : (FUNCTION), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: Minimal_Complete_Actions: done
task 1 0: Insert: insert IDENTIFIER: 14, ( 0 6 0 0 0 2 0 0), (62 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, FUNCTION, 4, 4 2), (INSERT, IDENTIFIER, 4, 62 3)) minimal_complete DONE
task 1 0: enqueue: 1/ 249/322/74, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (5 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IF, 4, 5 2)) minimal_complete DONE
task 1 0: stack: (5 : (IF), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (5 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IF, 4, 5 2)) minimal_complete DONE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 5 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (5 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IF, 4, 5 2)) minimal_complete DONE
task 1 0: stack: (5 : (IF), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: Minimal_Complete_Actions: done
task 1 0: Insert: insert LEFT_PAREN: 14, ( 0 6 0 0 0 2 0 0), (65 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IF, 4, 5 2), (INSERT, LEFT_PAREN, 4, 65 3)) minimal_complete DONE
task 1 0: Insert: insert NOT: 14, ( 0 6 0 0 0 2 0 0), (66 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IF, 4, 5 2), (INSERT, NOT, 4, 66 3)) minimal_complete DONE
task 1 0: Insert: state 5 reduce 0 to expression_opt, goto 71 via 5
task 1 0: Insert: insert THEN: 14, ( 0 6 0 0 0 2 0 0), (205 : (THEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IF, 4, 5 2), (INSERT, THEN, 4, 205 4)) minimal_complete DONE
task 1 0: Insert: insert MINUS: 14, ( 0 6 0 0 0 2 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IF, 4, 5 2), (INSERT, MINUS, 4, 39 3)) minimal_complete DONE
task 1 0: Insert: insert PLUS: 14, ( 0 6 0 0 0 2 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IF, 4, 5 2), (INSERT, PLUS, 4, 40 3)) minimal_complete DONE
task 1 0: Insert: insert STRING_LITERAL: 14, ( 0 6 0 0 0 2 0 0), (67 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IF, 4, 5 2), (INSERT, STRING_LITERAL, 4, 67 3)) minimal_complete DONE
task 1 0: Insert: insert NUMERIC_LITERAL: 14, ( 0 6 0 0 0 2 0 0), (68 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IF, 4, 5 2), (INSERT, NUMERIC_LITERAL, 4, 68 3)) minimal_complete DONE
task 1 0: Insert: insert IDENTIFIER: 14, ( 0 6 0 0 0 2 0 0), (69 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IF, 4, 5 2), (INSERT, IDENTIFIER, 4, 69 3)) minimal_complete DONE
task 1 0: enqueue: 8/ 256/330/75, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (6 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2)) minimal_complete DONE
task 1 0: stack: (6 : (LOOP), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (6 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2)) minimal_complete DONE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 6 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (6 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2)) minimal_complete DONE
task 1 0: stack: (6 : (LOOP), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: Minimal_Complete_Actions: done
task 1 0: Insert: state 6 reduce 0 to block_label_opt, goto 91 via 6
task 1 0: Insert: insert BEGIN: 14, ( 0 6 0 0 0 2 0 0), (225 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2), (INSERT, BEGIN, 4, 225 4)) minimal_complete DONE
task 1 0: Insert: insert CASE: 14, ( 0 6 0 0 0 2 0 0), (85 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2), (INSERT, CASE, 4, 85 3)) minimal_complete DONE
task 1 0: Insert: insert DECLARE: 14, ( 0 6 0 0 0 2 0 0), (226 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2), (INSERT, DECLARE, 4, 226 4)) minimal_complete DONE
task 1 0: Insert: state 6 reduce 0 to sequence_of_statements, goto 103 via 6
task 1 0: Insert: insert END: 14, ( 0 6 0 0 0 2 0 0), (231 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2), (INSERT, END, 4, 231 4)) minimal_complete DONE
task 1 0: Insert: insert EXIT: 14, ( 0 6 0 0 0 2 0 0), (86 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2), (INSERT, EXIT, 4, 86 3)) minimal_complete DONE
task 1 0: Insert: insert FOR: 14, ( 0 6 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2), (INSERT, FOR, 4, 3 3)) minimal_complete DONE
task 1 0: Insert: insert IF: 14, ( 0 6 0 0 0 2 0 0), (87 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2), (INSERT, IF, 4, 87 3)) minimal_complete DONE
task 1 0: Insert: insert LOOP: 14, ( 0 6 0 0 0 2 0 0), (88 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2), (INSERT, LOOP, 4, 88 3)) minimal_complete DONE
task 1 0: Insert: insert RETURN: 14, ( 0 6 0 0 0 2 0 0), (89 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2), (INSERT, RETURN, 4, 89 3)) minimal_complete DONE
task 1 0: Insert: insert IDENTIFIER: 14, ( 0 6 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2), (INSERT, IDENTIFIER, 4, 10 3)) minimal_complete DONE
task 1 0: enqueue: 10/ 265/340/76, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (7 : (PACKAGE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PACKAGE, 4, 7 2)) minimal_complete DONE
task 1 0: stack: (7 : (PACKAGE), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (7 : (PACKAGE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PACKAGE, 4, 7 2)) minimal_complete DONE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 7 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (7 : (PACKAGE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PACKAGE, 4, 7 2)) minimal_complete DONE
task 1 0: stack: (7 : (PACKAGE), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: Minimal_Complete_Actions: done
task 1 0: Insert: insert BODY: 14, ( 0 6 0 0 0 2 0 0), (107 : (BODY))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PACKAGE, 4, 7 2), (INSERT, BODY, 4, 107 3)) minimal_complete DONE
task 1 0: Insert: insert IDENTIFIER: 14, ( 0 6 0 0 0 2 0 0), (108 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PACKAGE, 4, 7 2), (INSERT, IDENTIFIER, 4, 108 3)) minimal_complete DONE
task 1 0: enqueue: 2/ 266/342/77, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (8 : (PROCEDURE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PROCEDURE, 4, 8 2)) minimal_complete DONE
task 1 0: stack: (8 : (PROCEDURE), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (8 : (PROCEDURE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PROCEDURE, 4, 8 2)) minimal_complete DONE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 8 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (8 : (PROCEDURE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PROCEDURE, 4, 8 2)) minimal_complete DONE
task 1 0: stack: (8 : (PROCEDURE), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: Minimal_Complete_Actions: done
task 1 0: Insert: insert IDENTIFIER: 14, ( 0 6 0 0 0 2 0 0), (111 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PROCEDURE, 4, 8 2), (INSERT, IDENTIFIER, 4, 111 3)) minimal_complete DONE
task 1 0: enqueue: 1/ 266/343/78, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (9 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, RETURN, 4, 9 2)) minimal_complete DONE
task 1 0: stack: (9 : (RETURN), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (9 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, RETURN, 4, 9 2)) minimal_complete DONE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 9 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (9 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, RETURN, 4, 9 2)) minimal_complete DONE
task 1 0: stack: (9 : (RETURN), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: Minimal_Complete_Actions: done
task 1 0: Insert: insert LEFT_PAREN: 14, ( 0 6 0 0 0 2 0 0), (114 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, RETURN, 4, 9 2), (INSERT, LEFT_PAREN, 4, 114 3)) minimal_complete DONE
task 1 0: Insert: insert NOT: 14, ( 0 6 0 0 0 2 0 0), (115 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, RETURN, 4, 9 2), (INSERT, NOT, 4, 115 3)) minimal_complete DONE
task 1 0: Insert: insert MINUS: 14, ( 0 6 0 0 0 2 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, RETURN, 4, 9 2), (INSERT, MINUS, 4, 39 3)) minimal_complete DONE
task 1 0: Insert: insert PLUS: 14, ( 0 6 0 0 0 2 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, RETURN, 4, 9 2), (INSERT, PLUS, 4, 40 3)) minimal_complete DONE
task 1 0: Insert: state 9 reduce 0 to expression_opt, goto 120 via 9
task 1 0: Insert: insert SEMICOLON: 14, ( 0 6 0 0 0 2 0 0), (248 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, RETURN, 4, 9 2), (INSERT, SEMICOLON, 4, 248 4)) minimal_complete DONE
task 1 0: Insert: insert STRING_LITERAL: 14, ( 0 6 0 0 0 2 0 0), (116 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, RETURN, 4, 9 2), (INSERT, STRING_LITERAL, 4, 116 3)) minimal_complete DONE
task 1 0: Insert: insert NUMERIC_LITERAL: 14, ( 0 6 0 0 0 2 0 0), (117 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, RETURN, 4, 9 2), (INSERT, NUMERIC_LITERAL, 4, 117 3)) minimal_complete DONE
task 1 0: Insert: insert IDENTIFIER: 14, ( 0 6 0 0 0 2 0 0), (118 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, RETURN, 4, 9 2), (INSERT, IDENTIFIER, 4, 118 3)) minimal_complete DONE
task 1 0: enqueue: 8/ 273/351/79, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 6 0 0 0 1 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, FOR, 4, 3 2)) minimal_complete DONE
task 1 0: stack: (3 : (FOR), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 10, ( 0 6 0 0 0 1 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, FOR, 4, 3 2)) minimal_complete DONE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 3 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 6 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, FOR, 4, 3 2)) minimal_complete DONE
task 1 0: stack: (3 : (FOR), 16 : (compilation_unit_list, (1 . 21)), 0 : (-))
task 1 0: Minimal_Complete_Actions: done
task 1 0: Insert: insert IDENTIFIER: 14, ( 0 6 0 0 0 2 0 0), (61 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, FOR, 4, 3 2), (INSERT, IDENTIFIER, 4, 61 3)) minimal_complete DONE
task 1 0: enqueue: 1/ 273/352/80, min cost: 10, active workers: 0
task 1 0: dequeue: 10, ( 0 2 0 2 0 0 0 0), (368 : (WHEN))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, IS, 2, 169 3), (INSERT, WHEN, 2, 368 4)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 169 : (IS), 45 : (expression_opt), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (IDENTIFIER, (6 . 18)): 10, ( 0 2 0 2 0 0 0 0), (368 : (WHEN))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, IS, 2, 169 3), (INSERT, WHEN, 2, 368 4)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 368 : 2:(IDENTIFIER, (6 . 18)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 10, ( 0 2 0 2 0 0 0 0), Error (IDENTIFIER, (6 . 18)) (368 : (WHEN))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, IS, 2, 169 3), (INSERT, WHEN, 2, 368 4)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 169 : (IS), 45 : (expression_opt), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift NUMERIC_LITERAL)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift NUMERIC_LITERAL
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 11, ( 0 3 0 2 0 0 0 0), (783 : (NUMERIC_LITERAL))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, IS, 2, 169 3), (INSERT, WHEN, 2, 368 4), (INSERT, NUMERIC_LITERAL, 2, 783 5)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 273/353/81, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (65 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, LEFT_PAREN, 4, 65 8)) minimal_complete ACTIVE
task 1 0: stack: (65 : (LEFT_PAREN), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (65 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, LEFT_PAREN, 4, 65 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 65 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (65 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, LEFT_PAREN, 4, 65 8)) minimal_complete ACTIVE
task 1 0: stack: (65 : (LEFT_PAREN), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 65 reduce 0 to expression_opt, goto 203 via 65
task 1 0: Minimal_Complete_Actions: insert RIGHT_PAREN: 12, ( 0 4 0 0 0 2 0 0), (464 : (RIGHT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, LEFT_PAREN, 4, 65 8), (INSERT, RIGHT_PAREN, 4, 464 10)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (148 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, LEFT_PAREN, 4, 65 8), (INSERT, LEFT_PAREN, 4, 148 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (149 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, LEFT_PAREN, 4, 65 8), (INSERT, NOT, 4, 149 9)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, LEFT_PAREN, 4, 65 8), (INSERT, MINUS, 4, 39 9)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, LEFT_PAREN, 4, 65 8), (INSERT, PLUS, 4, 40 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (150 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, LEFT_PAREN, 4, 65 8), (INSERT, STRING_LITERAL, 4, 150 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (151 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, LEFT_PAREN, 4, 65 8), (INSERT, NUMERIC_LITERAL, 4, 151 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (152 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, LEFT_PAREN, 4, 65 8), (INSERT, IDENTIFIER, 4, 152 9)) minimal_complete ACTIVE
task 1 0: enqueue: 8/ 280/361/82, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (59 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, IDENTIFIER, 4, 59 8)) minimal_complete ACTIVE
task 1 0: stack: (59 : (IDENTIFIER), 1700 : (EXIT), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (59 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, IDENTIFIER, 4, 59 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 59 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (59 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, IDENTIFIER, 4, 59 8)) minimal_complete ACTIVE
task 1 0: stack: (59 : (IDENTIFIER), 1700 : (EXIT), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to identifier_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to identifier_opt
task 1 0: Minimal_Complete_Actions: state 59 reduce 1 to identifier_opt, goto 2089 via 1700
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 2 0 0), (2350 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, IDENTIFIER, 4, 59 8), (INSERT, SEMICOLON, 4, 2350 9)) minimal_complete ACTIVE
task 1 0: Insert: state 59 reduce 1 to identifier_opt, goto 2089 via 1700
task 1 0: Insert: insert WHEN: 15, ( 0 3 0 0 0 3 0 0), (2349 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, IDENTIFIER, 4, 59 8), (INSERT, WHEN, 4, 2349 9)) minimal_complete ACTIVE
task 1 0: enqueue: 2/ 281/363/83, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 0 2 0), (1216 : (EQUAL_GREATER))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6)) minimal_complete ACTIVE
task 1 0: stack: (1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (IDENTIFIER, (26 . 39)): 11, ( 0 3 0 0 0 0 2 0), (1216 : (EQUAL_GREATER))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 9
task 1 0: check: 1216 : 6:(IDENTIFIER, (26 . 39)) : (Shift, 10)
task 1 0: check: 10 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: new error point : 11, ( 0 3 0 0 0 0 2 0), Error (THEN, (41 . 44)) (10 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (FAST_FORWARD,  7))
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 0 2 0), (1216 : (EQUAL_GREATER))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6)) minimal_complete ACTIVE
task 1 0: stack: (1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to sequence_of_statements)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to sequence_of_statements
task 1 0: Minimal_Complete_Actions: state 1216 reduce 0 to sequence_of_statements, goto 1717 via 1216
task 1 0: Minimal_Complete_Actions: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Minimal_Complete_Actions: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Minimal_Complete_Actions: insert END: 12, ( 0 4 0 0 0 0 2 0), (784 : (END))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (INSERT, END, 6, 784 5)) minimal_complete ACTIVE
task 1 0: Insert: state 1216 reduce 0 to block_label_opt, goto 1705 via 1216
task 1 0: Insert: insert BEGIN: 15, ( 0 3 0 0 0 1 2 0), (2094 : (BEGIN))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (INSERT, BEGIN, 6, 2094 8)) minimal_complete ACTIVE
task 1 0: Insert: insert CASE: 15, ( 0 3 0 0 0 1 2 0), (1699 : (CASE))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (INSERT, CASE, 6, 1699 7)) minimal_complete ACTIVE
task 1 0: Insert: insert DECLARE: 15, ( 0 3 0 0 0 1 2 0), (2095 : (DECLARE))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (INSERT, DECLARE, 6, 2095 8)) minimal_complete ACTIVE
task 1 0: Insert: insert EXIT: 15, ( 0 3 0 0 0 1 2 0), (1700 : (EXIT))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (INSERT, EXIT, 6, 1700 7)) minimal_complete ACTIVE
task 1 0: Insert: insert FOR: 15, ( 0 3 0 0 0 1 2 0), (3 : (FOR))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (INSERT, FOR, 6, 3 7)) minimal_complete ACTIVE
task 1 0: Insert: insert IF: 15, ( 0 3 0 0 0 1 2 0), (1701 : (IF))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (INSERT, IF, 6, 1701 7)) minimal_complete ACTIVE
task 1 0: Insert: insert LOOP: 15, ( 0 3 0 0 0 1 2 0), (1702 : (LOOP))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (INSERT, LOOP, 6, 1702 7)) minimal_complete ACTIVE
task 1 0: Insert: insert RETURN: 15, ( 0 3 0 0 0 1 2 0), (1703 : (RETURN))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (INSERT, RETURN, 6, 1703 7)) minimal_complete ACTIVE
task 1 0: Insert: state 1216 reduce 0 to sequence_of_statements, goto 1717 via 1216
task 1 0: Insert: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Insert: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Insert: insert WHEN: 15, ( 0 3 0 0 0 1 2 0), (368 : (WHEN))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (INSERT, WHEN, 6, 368 5)) minimal_complete ACTIVE
task 1 0: Insert: abandon IDENTIFIER: current token
task 1 0: enqueue: 11/ 291/374/84, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, MINUS, 4, 39 8)) minimal_complete ACTIVE
task 1 0: stack: (39 : (MINUS), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, MINUS, 4, 39 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 39 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, MINUS, 4, 39 8)) minimal_complete ACTIVE
task 1 0: stack: (39 : (MINUS), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to unary_adding_operator)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to unary_adding_operator
task 1 0: Minimal_Complete_Actions: state 39 reduce 1 to unary_adding_operator, goto 84 via 1701
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 12, ( 0 4 0 0 0 2 0 0), (68 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, MINUS, 4, 39 8), (INSERT, NUMERIC_LITERAL, 4, 68 9)) minimal_complete ACTIVE
task 1 0: Insert: state 39 reduce 1 to unary_adding_operator, goto 84 via 1701
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (65 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, MINUS, 4, 39 8), (INSERT, LEFT_PAREN, 4, 65 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (66 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, MINUS, 4, 39 8), (INSERT, NOT, 4, 66 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (67 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, MINUS, 4, 39 8), (INSERT, STRING_LITERAL, 4, 67 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (69 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, MINUS, 4, 39 8), (INSERT, IDENTIFIER, 4, 69 9)) minimal_complete ACTIVE
task 1 0: enqueue: 5/ 295/379/85, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (67 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, STRING_LITERAL, 4, 67 8)) minimal_complete ACTIVE
task 1 0: stack: (67 : (STRING_LITERAL), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (67 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, STRING_LITERAL, 4, 67 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 67 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, primary,1) via 1701
task 1 0: check: 75 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, factor,0) via 1701
task 1 0: check: 72 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term,1) via 1701
task 1 0: check: 82 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term_list,1) via 1701
task 1 0: check: 83 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, simple_expression,1) via 1701
task 1 0: check: 81 : 4:(EQUAL, (23 . 23)) : (Shift, 179)
task 1 0: check: 179 : 5:(PLUS, (25 . 25)) : (Reduce, 1, relational_operator,0) via 81
task 1 0: check: 215 : 5:(PLUS, (25 . 25)) : (Shift, 40)
task 1 0: check: 40 : 6:(IDENTIFIER, (26 . 39)) : (Reduce, 1, unary_adding_operator,0) via 215
task 1 0: check: 551 : 6:(IDENTIFIER, (26 . 39)) : (Shift, 542)
task 1 0: check: 542 : 7:(THEN, (41 . 44)) : (Reduce, 1, name,2) via 551
task 1 0: check: 544 : 7:(THEN, (41 . 44)) : (Reduce, 1, primary,2) via 551
task 1 0: check: 546 : 7:(THEN, (41 . 44)) : (Reduce, 1, factor,0) via 551
task 1 0: check: 543 : 7:(THEN, (41 . 44)) : (Reduce, 1, term,1) via 551
task 1 0: check: 549 : 7:(THEN, (41 . 44)) : (Reduce, 1, term_list,1) via 551
task 1 0: check: 898 : 7:(THEN, (41 . 44)) : (Reduce, 2, simple_expression,0) via 215
task 1 0: check: 548 : 7:(THEN, (41 . 44)) : (Reduce, 3, relation,0) via 1701
task 1 0: check: 79 : 7:(THEN, (41 . 44)) : (Reduce, 1, expression,0) via 1701
task 1 0: check: 70 : 7:(THEN, (41 . 44)) : (Reduce, 1, expression_opt,0) via 1701
task 1 0: check: 2090 : 7:(THEN, (41 . 44)) : (Shift, 2351)
task 1 0: enqueue: 0/ 294/379/86, min cost: 11, active workers: 0
task 1 0: succeed: enqueue 380, check  86: 11, ( 0 3 0 0 0 2 0 0), (67 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, STRING_LITERAL, 4, 67 8)) minimal_complete ACTIVE
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (68 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, NUMERIC_LITERAL, 4, 68 8)) minimal_complete ACTIVE
task 1 0: stack: (68 : (NUMERIC_LITERAL), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (68 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, NUMERIC_LITERAL, 4, 68 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 68 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, primary,0) via 1701
task 1 0: check: 75 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, factor,0) via 1701
task 1 0: check: 72 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term,1) via 1701
task 1 0: check: 82 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term_list,1) via 1701
task 1 0: check: 83 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, simple_expression,1) via 1701
task 1 0: check: 81 : 4:(EQUAL, (23 . 23)) : (Shift, 179)
task 1 0: check: 179 : 5:(PLUS, (25 . 25)) : (Reduce, 1, relational_operator,0) via 81
task 1 0: check: 215 : 5:(PLUS, (25 . 25)) : (Shift, 40)
task 1 0: check: 40 : 6:(IDENTIFIER, (26 . 39)) : (Reduce, 1, unary_adding_operator,0) via 215
task 1 0: check: 551 : 6:(IDENTIFIER, (26 . 39)) : (Shift, 542)
task 1 0: check: 542 : 7:(THEN, (41 . 44)) : (Reduce, 1, name,2) via 551
task 1 0: check: 544 : 7:(THEN, (41 . 44)) : (Reduce, 1, primary,2) via 551
task 1 0: check: 546 : 7:(THEN, (41 . 44)) : (Reduce, 1, factor,0) via 551
task 1 0: check: 543 : 7:(THEN, (41 . 44)) : (Reduce, 1, term,1) via 551
task 1 0: check: 549 : 7:(THEN, (41 . 44)) : (Reduce, 1, term_list,1) via 551
task 1 0: check: 898 : 7:(THEN, (41 . 44)) : (Reduce, 2, simple_expression,0) via 215
task 1 0: check: 548 : 7:(THEN, (41 . 44)) : (Reduce, 3, relation,0) via 1701
task 1 0: check: 79 : 7:(THEN, (41 . 44)) : (Reduce, 1, expression,0) via 1701
task 1 0: check: 70 : 7:(THEN, (41 . 44)) : (Reduce, 1, expression_opt,0) via 1701
task 1 0: check: 2090 : 7:(THEN, (41 . 44)) : (Shift, 2351)
task 1 0: enqueue: 0/ 293/379/87, min cost: 11, active workers: 0
task 1 0: succeed: enqueue 380, check  87: 11, ( 0 3 0 0 0 2 0 0), (68 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, NUMERIC_LITERAL, 4, 68 8)) minimal_complete ACTIVE
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, PLUS, 4, 40 8)) minimal_complete ACTIVE
task 1 0: stack: (40 : (PLUS), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, PLUS, 4, 40 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 40 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, PLUS, 4, 40 8)) minimal_complete ACTIVE
task 1 0: stack: (40 : (PLUS), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to unary_adding_operator)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to unary_adding_operator
task 1 0: Minimal_Complete_Actions: state 40 reduce 1 to unary_adding_operator, goto 84 via 1701
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 12, ( 0 4 0 0 0 2 0 0), (68 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, PLUS, 4, 40 8), (INSERT, NUMERIC_LITERAL, 4, 68 9)) minimal_complete ACTIVE
task 1 0: Insert: state 40 reduce 1 to unary_adding_operator, goto 84 via 1701
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (65 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, PLUS, 4, 40 8), (INSERT, LEFT_PAREN, 4, 65 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (66 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, PLUS, 4, 40 8), (INSERT, NOT, 4, 66 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (67 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, PLUS, 4, 40 8), (INSERT, STRING_LITERAL, 4, 67 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (69 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, PLUS, 4, 40 8), (INSERT, IDENTIFIER, 4, 69 9)) minimal_complete ACTIVE
task 1 0: enqueue: 5/ 297/384/88, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 0 2 0), Error (THEN, (41 . 44)) (10 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (FAST_FORWARD,  7))
task 1 0: stack: (10 : (IDENTIFIER, (26 . 39)), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Language_Fixes: 11, ( 0 3 0 0 0 0 2 0), Error (THEN, (41 . 44)) (10 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (FAST_FORWARD,  7))
task 1 0: check: (THEN, (41 . 44)): 11, ( 0 3 0 0 0 0 2 0), (10 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (FAST_FORWARD,  7))
task 1 0: check: Shared_Token_Goal : 9
task 1 0: check: 10 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 0 2 0), Error (THEN, (41 . 44)) (10 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (FAST_FORWARD,  7))
task 1 0: stack: (10 : (IDENTIFIER, (26 . 39)), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to name)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to name
task 1 0: Minimal_Complete_Actions: state 10 reduce 1 to name, goto 1714 via 1216
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 0 2 0), (2098 : (SEMICOLON))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (FAST_FORWARD,  7), (INSERT, SEMICOLON, 7, 2098 8)) minimal_complete ACTIVE
task 1 0: Insert: state 10 reduce 1 to name, goto 1714 via 1216
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 1 2 0), (140 : (LEFT_PAREN))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (FAST_FORWARD,  7), (INSERT, LEFT_PAREN, 7, 140 8))
task 1 0: Insert: insert COLON: 15, ( 0 3 0 0 0 1 2 0), (135 : (COLON))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (FAST_FORWARD,  7), (INSERT, COLON, 7, 135 8))
task 1 0: Insert: insert COLON_EQUAL: 15, ( 0 3 0 0 0 1 2 0), (2097 : (COLON_EQUAL))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (FAST_FORWARD,  7), (INSERT, COLON_EQUAL, 7, 2097 8))
task 1 0: Insert: insert DOT: 15, ( 0 3 0 0 0 1 2 0), (142 : (DOT))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (FAST_FORWARD,  7), (INSERT, DOT, 7, 142 8))
task 1 0: push_back IDENTIFIER: 15, ( 0 3 0 1 0 0 2 0), (1216 : (EQUAL_GREATER))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (FAST_FORWARD,  7), (PUSH_BACK, IDENTIFIER, 6))
task 1 0: delete THEN: 15, ( 0 3 0 0 0 0 3 0), (10 : (IDENTIFIER, (26 . 39)))| 8:(IDENTIFIER, (49 . 68))|((DELETE, EQUAL, 4), (DELETE, PLUS, 5), (INSERT, WHEN, 6, 368 4), (INSERT, NUMERIC_LITERAL, 6, 783 5), (INSERT, EQUAL_GREATER, 6, 1216 6), (FAST_FORWARD,  7), (DELETE, THEN, 7))
task 1 0: enqueue: 7/ 303/391/89, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (114 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, LEFT_PAREN, 4, 114 8)) minimal_complete ACTIVE
task 1 0: stack: (114 : (LEFT_PAREN), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (114 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, LEFT_PAREN, 4, 114 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 114 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (114 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, LEFT_PAREN, 4, 114 8)) minimal_complete ACTIVE
task 1 0: stack: (114 : (LEFT_PAREN), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 114 reduce 0 to expression_opt, goto 244 via 114
task 1 0: Minimal_Complete_Actions: insert RIGHT_PAREN: 12, ( 0 4 0 0 0 2 0 0), (577 : (RIGHT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, LEFT_PAREN, 4, 114 8), (INSERT, RIGHT_PAREN, 4, 577 10)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (148 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, LEFT_PAREN, 4, 114 8), (INSERT, LEFT_PAREN, 4, 148 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (149 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, LEFT_PAREN, 4, 114 8), (INSERT, NOT, 4, 149 9)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, LEFT_PAREN, 4, 114 8), (INSERT, MINUS, 4, 39 9)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, LEFT_PAREN, 4, 114 8), (INSERT, PLUS, 4, 40 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (150 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, LEFT_PAREN, 4, 114 8), (INSERT, STRING_LITERAL, 4, 150 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (151 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, LEFT_PAREN, 4, 114 8), (INSERT, NUMERIC_LITERAL, 4, 151 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (152 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, LEFT_PAREN, 4, 114 8), (INSERT, IDENTIFIER, 4, 152 9)) minimal_complete ACTIVE
task 1 0: enqueue: 8/ 310/399/90, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (43 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8)) minimal_complete ACTIVE
task 1 0: stack: (43 : (IDENTIFIER), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (43 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 43 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, name,2) via 1699
task 1 0: check: 47 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, primary,2) via 1699
task 1 0: check: 49 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, factor,0) via 1699
task 1 0: check: 46 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term,1) via 1699
task 1 0: check: 56 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term_list,1) via 1699
task 1 0: check: 57 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, simple_expression,1) via 1699
task 1 0: check: 55 : 4:(EQUAL, (23 . 23)) : (Shift, 179)
task 1 0: check: 179 : 5:(PLUS, (25 . 25)) : (Reduce, 1, relational_operator,0) via 55
task 1 0: check: 185 : 5:(PLUS, (25 . 25)) : (Shift, 40)
task 1 0: check: 40 : 6:(IDENTIFIER, (26 . 39)) : (Reduce, 1, unary_adding_operator,0) via 185
task 1 0: check: 435 : 6:(IDENTIFIER, (26 . 39)) : (Shift, 426)
task 1 0: check: 426 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: new error point : 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (426 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7))
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), (43 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8)) minimal_complete ACTIVE
task 1 0: stack: (43 : (IDENTIFIER), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to name)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to name
task 1 0: Minimal_Complete_Actions: state 43 reduce 1 to name, goto 47 via 1699
task 1 0: Minimal_Complete_Actions: state 47 reduce 1 to primary, goto 49 via 1699
task 1 0: Minimal_Complete_Actions: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Minimal_Complete_Actions: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Minimal_Complete_Actions: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Minimal_Complete_Actions: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Minimal_Complete_Actions: state 55 reduce 1 to relation, goto 53 via 1699
task 1 0: Minimal_Complete_Actions: state 53 reduce 1 to expression, goto 44 via 1699
task 1 0: Minimal_Complete_Actions: state 44 reduce 1 to expression_opt, goto 2088 via 1699
task 1 0: Minimal_Complete_Actions: insert IS: 12, ( 0 4 0 0 0 2 0 0), (2348 : (IS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (INSERT, IS, 4, 2348 9)) minimal_complete ACTIVE
task 1 0: Insert: state 43 reduce 1 to name, goto 47 via 1699
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 1699
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: state 55 reduce 1 to relation, goto 53 via 1699
task 1 0: Insert: insert AND: 15, ( 0 3 0 0 0 3 0 0), (176 : (AND))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (INSERT, AND, 4, 176 9)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (170 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (INSERT, LEFT_PAREN, 4, 170 9)) minimal_complete ACTIVE
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 1699
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: state 55 reduce 1 to relation, goto 53 via 1699
task 1 0: Insert: insert OR: 15, ( 0 3 0 0 0 3 0 0), (177 : (OR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (INSERT, OR, 4, 177 9)) minimal_complete ACTIVE
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 1699
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: state 55 reduce 1 to relation, goto 53 via 1699
task 1 0: Insert: insert XOR: 15, ( 0 3 0 0 0 3 0 0), (178 : (XOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (INSERT, XOR, 4, 178 9)) minimal_complete ACTIVE
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 1699
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: insert AMPERSAND: 15, ( 0 3 0 0 0 3 0 0), (189 : (AMPERSAND))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (INSERT, AMPERSAND, 4, 189 9)) minimal_complete ACTIVE
task 1 0: Insert: insert DOT: 15, ( 0 3 0 0 0 3 0 0), (171 : (DOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (INSERT, DOT, 4, 171 9)) minimal_complete ACTIVE
task 1 0: Insert: abandon EQUAL: current token
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 1699
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert GREATER: 15, ( 0 3 0 0 0 3 0 0), (180 : (GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (INSERT, GREATER, 4, 180 9)) minimal_complete ACTIVE
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 1699
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert GREATER_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (181 : (GREATER_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (INSERT, GREATER_EQUAL, 4, 181 9)) minimal_complete ACTIVE
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 1699
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert LESS: 15, ( 0 3 0 0 0 3 0 0), (182 : (LESS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (INSERT, LESS, 4, 182 9)) minimal_complete ACTIVE
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 1699
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert LESS_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (183 : (LESS_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (INSERT, LESS_EQUAL, 4, 183 9)) minimal_complete ACTIVE
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 1699
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (190 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (INSERT, MINUS, 4, 190 9)) minimal_complete ACTIVE
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 1699
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (191 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (INSERT, PLUS, 4, 191 9)) minimal_complete ACTIVE
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 1699
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: insert SLASH: 15, ( 0 3 0 0 0 3 0 0), (186 : (SLASH))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (INSERT, SLASH, 4, 186 9)) minimal_complete ACTIVE
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 1699
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert SLASH_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (184 : (SLASH_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (INSERT, SLASH_EQUAL, 4, 184 9)) minimal_complete ACTIVE
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 1699
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: insert STAR: 15, ( 0 3 0 0 0 3 0 0), (187 : (STAR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (INSERT, STAR, 4, 187 9)) minimal_complete ACTIVE
task 1 0: enqueue: 17/ 326/416/91, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (140 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, LEFT_PAREN, 4, 140 8)) minimal_complete ACTIVE
task 1 0: stack: (140 : (LEFT_PAREN), 1714 : (name), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (140 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, LEFT_PAREN, 4, 140 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 140 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (140 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, LEFT_PAREN, 4, 140 8)) minimal_complete ACTIVE
task 1 0: stack: (140 : (LEFT_PAREN), 1714 : (name), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to association_list)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to association_list
task 1 0: Minimal_Complete_Actions: state 140 reduce 0 to association_list, goto 311 via 140
task 1 0: Minimal_Complete_Actions: insert RIGHT_PAREN: 12, ( 0 4 0 0 0 2 0 0), (677 : (RIGHT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, LEFT_PAREN, 4, 140 8), (INSERT, RIGHT_PAREN, 4, 677 10)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (305 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, LEFT_PAREN, 4, 140 8), (INSERT, LEFT_PAREN, 4, 305 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (306 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, LEFT_PAREN, 4, 140 8), (INSERT, NOT, 4, 306 9)) minimal_complete ACTIVE
task 1 0: Insert: state 140 reduce 0 to association_opt, goto 310 via 140
task 1 0: Insert: state 310 reduce 1 to association_list, goto 311 via 140
task 1 0: Insert: insert COMMA: 15, ( 0 3 0 0 0 3 0 0), (678 : (COMMA))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, LEFT_PAREN, 4, 140 8), (INSERT, COMMA, 4, 678 10)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, LEFT_PAREN, 4, 140 8), (INSERT, MINUS, 4, 39 9)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, LEFT_PAREN, 4, 140 8), (INSERT, PLUS, 4, 40 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (307 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, LEFT_PAREN, 4, 140 8), (INSERT, STRING_LITERAL, 4, 307 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (308 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, LEFT_PAREN, 4, 140 8), (INSERT, NUMERIC_LITERAL, 4, 308 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (309 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, LEFT_PAREN, 4, 140 8), (INSERT, IDENTIFIER, 4, 309 9)) minimal_complete ACTIVE
task 1 0: enqueue: 9/ 334/425/92, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (426 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7))
task 1 0: stack: (426 : (IDENTIFIER, (26 . 39)), 435 : (unary_adding_operator, (25 . 25)), 185 : (relational_operator, (23 . 23)), 55 : (simple_expression), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Language_Fixes: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (426 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7))
task 1 0: check: (THEN, (41 . 44)): 11, ( 0 3 0 0 0 2 0 0), (426 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7))
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 426 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (426 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7))
task 1 0: stack: (426 : (IDENTIFIER, (26 . 39)), 435 : (unary_adding_operator, (25 . 25)), 185 : (relational_operator, (23 . 23)), 55 : (simple_expression), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to name)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to name
task 1 0: Minimal_Complete_Actions: state 426 reduce 1 to name, goto 428 via 435
task 1 0: Minimal_Complete_Actions: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Minimal_Complete_Actions: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Minimal_Complete_Actions: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Minimal_Complete_Actions: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Minimal_Complete_Actions: state 822 reduce 2 to simple_expression, goto 432 via 185
task 1 0: Minimal_Complete_Actions: state 432 reduce 3 to relation, goto 53 via 1699
task 1 0: Minimal_Complete_Actions: state 53 reduce 1 to expression, goto 44 via 1699
task 1 0: Minimal_Complete_Actions: state 44 reduce 1 to expression_opt, goto 2088 via 1699
task 1 0: Minimal_Complete_Actions: insert IS: 12, ( 0 4 0 0 0 2 0 0), (2348 : (IS))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7), (INSERT, IS, 7, 2348 9)) minimal_complete ACTIVE
task 1 0: Insert: state 426 reduce 1 to name, goto 428 via 435
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: state 822 reduce 2 to simple_expression, goto 432 via 185
task 1 0: Insert: state 432 reduce 3 to relation, goto 53 via 1699
task 1 0: Insert: insert AND: 15, ( 0 3 0 0 0 3 0 0), (176 : (AND))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7), (INSERT, AND, 7, 176 9))
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (817 : (LEFT_PAREN))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7), (INSERT, LEFT_PAREN, 7, 817 12))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: state 822 reduce 2 to simple_expression, goto 432 via 185
task 1 0: Insert: state 432 reduce 3 to relation, goto 53 via 1699
task 1 0: Insert: insert OR: 15, ( 0 3 0 0 0 3 0 0), (177 : (OR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7), (INSERT, OR, 7, 177 9))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: state 822 reduce 2 to simple_expression, goto 432 via 185
task 1 0: Insert: state 432 reduce 3 to relation, goto 53 via 1699
task 1 0: Insert: insert XOR: 15, ( 0 3 0 0 0 3 0 0), (178 : (XOR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7), (INSERT, XOR, 7, 178 9))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: insert AMPERSAND: 15, ( 0 3 0 0 0 3 0 0), (189 : (AMPERSAND))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7), (INSERT, AMPERSAND, 7, 189 12))
task 1 0: Insert: insert DOT: 15, ( 0 3 0 0 0 3 0 0), (818 : (DOT))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7), (INSERT, DOT, 7, 818 12))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (190 : (MINUS))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7), (INSERT, MINUS, 7, 190 12))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (191 : (PLUS))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7), (INSERT, PLUS, 7, 191 12))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: insert SLASH: 15, ( 0 3 0 0 0 3 0 0), (186 : (SLASH))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7), (INSERT, SLASH, 7, 186 12))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: insert STAR: 15, ( 0 3 0 0 0 3 0 0), (187 : (STAR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7), (INSERT, STAR, 7, 187 12))
task 1 0: push_back IDENTIFIER: 15, ( 0 3 0 1 0 2 0 0), (435 : (unary_adding_operator, (25 . 25)))| 6:(IDENTIFIER, (26 . 39))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7), (PUSH_BACK, IDENTIFIER, 6))
task 1 0: delete THEN: 15, ( 0 3 0 0 0 2 1 0), (426 : (IDENTIFIER, (26 . 39)))| 8:(IDENTIFIER, (49 . 68))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IDENTIFIER, 4, 43 8), (FAST_FORWARD,  7), (DELETE, THEN, 7))
task 1 0: enqueue: 13/ 346/438/93, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 1 1 0), (368 : (WHEN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, WHEN, 5, 368 5)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 11, ( 0 3 0 0 0 1 1 0), (368 : (WHEN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, WHEN, 5, 368 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 368 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 1 1 0), Error (PLUS, (25 . 25)) (368 : (WHEN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, WHEN, 5, 368 5)) minimal_complete ACTIVE
task 1 0: stack: (368 : (WHEN), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift NUMERIC_LITERAL)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift NUMERIC_LITERAL
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 12, ( 0 4 0 0 0 1 1 0), (783 : (NUMERIC_LITERAL))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, WHEN, 5, 368 5), (INSERT, NUMERIC_LITERAL, 5, 783 6)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 346/439/94, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 1 1 0), (10 : (IDENTIFIER))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, IDENTIFIER, 5, 10 7)) minimal_complete ACTIVE
task 1 0: stack: (10 : (IDENTIFIER), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 11, ( 0 3 0 0 0 1 1 0), (10 : (IDENTIFIER))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, IDENTIFIER, 5, 10 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 10 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 1 1 0), Error (PLUS, (25 . 25)) (10 : (IDENTIFIER))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, IDENTIFIER, 5, 10 7)) minimal_complete ACTIVE
task 1 0: stack: (10 : (IDENTIFIER), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to name)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to name
task 1 0: Minimal_Complete_Actions: state 10 reduce 1 to name, goto 1714 via 1216
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 1 1 0), (2098 : (SEMICOLON))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, IDENTIFIER, 5, 10 7), (INSERT, SEMICOLON, 5, 2098 8)) minimal_complete ACTIVE
task 1 0: Insert: state 10 reduce 1 to name, goto 1714 via 1216
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 2 1 0), (140 : (LEFT_PAREN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, IDENTIFIER, 5, 10 7), (INSERT, LEFT_PAREN, 5, 140 8)) minimal_complete ACTIVE
task 1 0: Insert: insert COLON: 15, ( 0 3 0 0 0 2 1 0), (135 : (COLON))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, IDENTIFIER, 5, 10 7), (INSERT, COLON, 5, 135 8)) minimal_complete ACTIVE
task 1 0: Insert: insert COLON_EQUAL: 15, ( 0 3 0 0 0 2 1 0), (2097 : (COLON_EQUAL))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, IDENTIFIER, 5, 10 7), (INSERT, COLON_EQUAL, 5, 2097 8)) minimal_complete ACTIVE
task 1 0: Insert: insert DOT: 15, ( 0 3 0 0 0 2 1 0), (142 : (DOT))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, IDENTIFIER, 5, 10 7), (INSERT, DOT, 5, 142 8)) minimal_complete ACTIVE
task 1 0: enqueue: 5/ 350/444/95, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 7 0 0 0 1 0 0), (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: stack: (1721 : (SEMICOLON), 1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 7 0 0 0 1 0 0), (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1721 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 7 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: stack: (1721 : (SEMICOLON), 1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to case_statement)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to case_statement
task 1 0: Minimal_Complete_Actions: state 1721 reduce 7 to case_statement, goto 14 via 0
task 1 0: Minimal_Complete_Actions: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Minimal_Complete_Actions: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Minimal_Complete_Actions: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Minimal_Complete_Actions: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Minimal_Complete_Actions abandoned: no actions
task 1 0: Insert: state 1721 reduce 7 to case_statement, goto 14 via 0
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: state 16 reduce 0 to block_label_opt, goto 12 via 16
task 1 0: Insert: insert BEGIN: 15, ( 0 7 0 0 0 2 0 0), (136 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert CASE: 15, ( 0 7 0 0 0 2 0 0), (1 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, CASE, 4, 1 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: state 16 reduce 0 to block_label_opt, goto 12 via 16
task 1 0: Insert: insert DECLARE: 15, ( 0 7 0 0 0 2 0 0), (137 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, DECLARE, 4, 137 3)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert EXIT: 15, ( 0 7 0 0 0 2 0 0), (2 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, EXIT, 4, 2 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert FOR: 15, ( 0 7 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, FOR, 4, 3 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert FUNCTION: 15, ( 0 7 0 0 0 2 0 0), (4 : (FUNCTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, FUNCTION, 4, 4 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert IF: 15, ( 0 7 0 0 0 2 0 0), (5 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IF, 4, 5 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert LOOP: 15, ( 0 7 0 0 0 2 0 0), (6 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert PACKAGE: 15, ( 0 7 0 0 0 2 0 0), (7 : (PACKAGE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PACKAGE, 4, 7 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert PROCEDURE: 15, ( 0 7 0 0 0 2 0 0), (8 : (PROCEDURE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PROCEDURE, 4, 8 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert RETURN: 15, ( 0 7 0 0 0 2 0 0), (9 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, RETURN, 4, 9 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 7 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, SEMICOLON, 4, 2353 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IDENTIFIER, 4, 10 2)) minimal_complete DONE
task 1 0: enqueue: 12/ 361/456/96, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (118 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8)) minimal_complete ACTIVE
task 1 0: stack: (118 : (IDENTIFIER), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (118 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 118 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, name,2) via 1703
task 1 0: check: 123 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, primary,2) via 1703
task 1 0: check: 125 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, factor,0) via 1703
task 1 0: check: 122 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term,1) via 1703
task 1 0: check: 132 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term_list,1) via 1703
task 1 0: check: 133 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, simple_expression,1) via 1703
task 1 0: check: 131 : 4:(EQUAL, (23 . 23)) : (Shift, 179)
task 1 0: check: 179 : 5:(PLUS, (25 . 25)) : (Reduce, 1, relational_operator,0) via 131
task 1 0: check: 259 : 5:(PLUS, (25 . 25)) : (Shift, 40)
task 1 0: check: 40 : 6:(IDENTIFIER, (26 . 39)) : (Reduce, 1, unary_adding_operator,0) via 259
task 1 0: check: 646 : 6:(IDENTIFIER, (26 . 39)) : (Shift, 637)
task 1 0: check: 637 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: new error point : 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (637 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7))
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), (118 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8)) minimal_complete ACTIVE
task 1 0: stack: (118 : (IDENTIFIER), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to name)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to name
task 1 0: Minimal_Complete_Actions: state 118 reduce 1 to name, goto 123 via 1703
task 1 0: Minimal_Complete_Actions: state 123 reduce 1 to primary, goto 125 via 1703
task 1 0: Minimal_Complete_Actions: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Minimal_Complete_Actions: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Minimal_Complete_Actions: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Minimal_Complete_Actions: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Minimal_Complete_Actions: state 131 reduce 1 to relation, goto 129 via 1703
task 1 0: Minimal_Complete_Actions: state 129 reduce 1 to expression, goto 119 via 1703
task 1 0: Minimal_Complete_Actions: state 119 reduce 1 to expression_opt, goto 2092 via 1703
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 2 0 0), (2353 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, SEMICOLON, 4, 2353 9)) minimal_complete ACTIVE
task 1 0: Insert: state 118 reduce 1 to name, goto 123 via 1703
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 1703
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: state 131 reduce 1 to relation, goto 129 via 1703
task 1 0: Insert: insert AND: 15, ( 0 3 0 0 0 3 0 0), (256 : (AND))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, AND, 4, 256 9)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (250 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, LEFT_PAREN, 4, 250 9)) minimal_complete ACTIVE
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 1703
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: state 131 reduce 1 to relation, goto 129 via 1703
task 1 0: Insert: insert OR: 15, ( 0 3 0 0 0 3 0 0), (257 : (OR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, OR, 4, 257 9)) minimal_complete ACTIVE
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 1703
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: state 131 reduce 1 to relation, goto 129 via 1703
task 1 0: Insert: insert XOR: 15, ( 0 3 0 0 0 3 0 0), (258 : (XOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, XOR, 4, 258 9)) minimal_complete ACTIVE
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 1703
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: insert AMPERSAND: 15, ( 0 3 0 0 0 3 0 0), (189 : (AMPERSAND))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, AMPERSAND, 4, 189 9)) minimal_complete ACTIVE
task 1 0: Insert: insert COLON: 15, ( 0 3 0 0 0 3 0 0), (247 : (COLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, COLON, 4, 247 9)) minimal_complete ACTIVE
task 1 0: Insert: insert DOT: 15, ( 0 3 0 0 0 3 0 0), (251 : (DOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, DOT, 4, 251 9)) minimal_complete ACTIVE
task 1 0: Insert: abandon EQUAL: current token
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 1703
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert GREATER: 15, ( 0 3 0 0 0 3 0 0), (180 : (GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, GREATER, 4, 180 9)) minimal_complete ACTIVE
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 1703
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert GREATER_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (181 : (GREATER_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, GREATER_EQUAL, 4, 181 9)) minimal_complete ACTIVE
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 1703
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert LESS: 15, ( 0 3 0 0 0 3 0 0), (182 : (LESS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, LESS, 4, 182 9)) minimal_complete ACTIVE
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 1703
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert LESS_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (183 : (LESS_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, LESS_EQUAL, 4, 183 9)) minimal_complete ACTIVE
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 1703
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (190 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, MINUS, 4, 190 9)) minimal_complete ACTIVE
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 1703
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (191 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, PLUS, 4, 191 9)) minimal_complete ACTIVE
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 1703
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: insert SLASH: 15, ( 0 3 0 0 0 3 0 0), (186 : (SLASH))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, SLASH, 4, 186 9)) minimal_complete ACTIVE
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 1703
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert SLASH_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (184 : (SLASH_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, SLASH_EQUAL, 4, 184 9)) minimal_complete ACTIVE
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 1703
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: insert STAR: 15, ( 0 3 0 0 0 3 0 0), (187 : (STAR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (INSERT, STAR, 4, 187 9)) minimal_complete ACTIVE
task 1 0: enqueue: 18/ 378/474/97, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (135 : (COLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON, 4, 135 8)) minimal_complete ACTIVE
task 1 0: stack: (135 : (COLON), 10 : (IDENTIFIER), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (135 : (COLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON, 4, 135 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 135 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (135 : (COLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON, 4, 135 8)) minimal_complete ACTIVE
task 1 0: stack: (135 : (COLON), 10 : (IDENTIFIER), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to block_label_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to block_label_opt
task 1 0: Minimal_Complete_Actions: state 135 reduce 2 to block_label_opt, goto 1705 via 1216
task 1 0: Minimal_Complete_Actions: insert BEGIN: 12, ( 0 4 0 0 0 2 0 0), (2094 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON, 4, 135 8), (INSERT, BEGIN, 4, 2094 8)) minimal_complete ACTIVE
task 1 0: Insert: state 135 reduce 2 to block_label_opt, goto 1705 via 1216
task 1 0: Insert: insert DECLARE: 15, ( 0 3 0 0 0 3 0 0), (2095 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON, 4, 135 8), (INSERT, DECLARE, 4, 2095 8)) minimal_complete ACTIVE
task 1 0: enqueue: 2/ 379/476/98, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (2097 : (COLON_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON_EQUAL, 4, 2097 8)) minimal_complete ACTIVE
task 1 0: stack: (2097 : (COLON_EQUAL), 1714 : (name), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (2097 : (COLON_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON_EQUAL, 4, 2097 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2097 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (2097 : (COLON_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON_EQUAL, 4, 2097 8)) minimal_complete ACTIVE
task 1 0: stack: (2097 : (COLON_EQUAL), 1714 : (name), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 2097 reduce 0 to expression_opt, goto 2358 via 2097
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 2 0 0), (2510 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON_EQUAL, 4, 2097 8), (INSERT, SEMICOLON, 4, 2510 10)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (114 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON_EQUAL, 4, 2097 8), (INSERT, LEFT_PAREN, 4, 114 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (115 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON_EQUAL, 4, 2097 8), (INSERT, NOT, 4, 115 9)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON_EQUAL, 4, 2097 8), (INSERT, MINUS, 4, 39 9)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON_EQUAL, 4, 2097 8), (INSERT, PLUS, 4, 40 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (116 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON_EQUAL, 4, 2097 8), (INSERT, STRING_LITERAL, 4, 116 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (117 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON_EQUAL, 4, 2097 8), (INSERT, NUMERIC_LITERAL, 4, 117 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (245 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, COLON_EQUAL, 4, 2097 8), (INSERT, IDENTIFIER, 4, 245 9)) minimal_complete ACTIVE
task 1 0: enqueue: 8/ 386/484/99, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 7 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 7 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1217 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 7 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift SEMICOLON)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift SEMICOLON
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 8 0 0 0 1 0 0), (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, WHEN, 4, 368 5), (INSERT, NUMERIC_LITERAL, 4, 783 6), (INSERT, EQUAL_GREATER, 4, 1216 7), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 386/485/100, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (4 : (FUNCTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, FUNCTION, 4, 4 9)) minimal_complete ACTIVE
task 1 0: stack: (4 : (FUNCTION), 2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (4 : (FUNCTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, FUNCTION, 4, 4 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 4 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (4 : (FUNCTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, FUNCTION, 4, 4 9)) minimal_complete ACTIVE
task 1 0: stack: (4 : (FUNCTION), 2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift IDENTIFIER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift IDENTIFIER
task 1 0: Minimal_Complete_Actions: insert IDENTIFIER: 12, ( 0 4 0 0 0 2 0 0), (62 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, FUNCTION, 4, 4 9), (INSERT, IDENTIFIER, 4, 62 10)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 386/486/101, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (286 : (PACKAGE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, PACKAGE, 4, 286 9)) minimal_complete ACTIVE
task 1 0: stack: (286 : (PACKAGE), 2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (286 : (PACKAGE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, PACKAGE, 4, 286 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 286 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (286 : (PACKAGE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, PACKAGE, 4, 286 9)) minimal_complete ACTIVE
task 1 0: stack: (286 : (PACKAGE), 2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift BODY)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift BODY
task 1 0: Minimal_Complete_Actions: insert BODY: 12, ( 0 4 0 0 0 2 0 0), (663 : (BODY))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, PACKAGE, 4, 286 9), (INSERT, BODY, 4, 663 10)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 386/487/102, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 7 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 7 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 784 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 7 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift CASE)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift CASE
task 1 0: Minimal_Complete_Actions: insert CASE: 12, ( 0 8 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, END, 4, 2352 9), (INSERT, LOOP, 4, 2506 10), (INSERT, SEMICOLON, 4, 2728 12), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 386/488/103, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (655 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, BEGIN, 4, 655 10)) minimal_complete ACTIVE
task 1 0: stack: (655 : (BEGIN), 269 : (block_label_opt), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (655 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, BEGIN, 4, 655 10)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 655 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (655 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, BEGIN, 4, 655 10)) minimal_complete ACTIVE
task 1 0: stack: (655 : (BEGIN), 269 : (block_label_opt), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to handled_sequence_of_statements)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to handled_sequence_of_statements
task 1 0: Minimal_Complete_Actions: state 655 reduce 0 to handled_sequence_of_statements, goto 986 via 655
task 1 0: Minimal_Complete_Actions: insert END: 12, ( 0 4 0 0 0 2 0 0), (1516 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, BEGIN, 4, 655 10), (INSERT, END, 4, 1516 12)) minimal_complete ACTIVE
task 1 0: Insert: state 655 reduce 0 to block_label_opt, goto 269 via 655
task 1 0: Insert: insert BEGIN: 15, ( 0 3 0 0 0 3 0 0), (655 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, BEGIN, 4, 655 10), (INSERT, BEGIN, 4, 655 12)) minimal_complete ACTIVE
task 1 0: Insert: insert CASE: 15, ( 0 3 0 0 0 3 0 0), (263 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, BEGIN, 4, 655 10), (INSERT, CASE, 4, 263 11)) minimal_complete ACTIVE
task 1 0: Insert: insert DECLARE: 15, ( 0 3 0 0 0 3 0 0), (656 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, BEGIN, 4, 655 10), (INSERT, DECLARE, 4, 656 12)) minimal_complete ACTIVE
task 1 0: Insert: insert EXIT: 15, ( 0 3 0 0 0 3 0 0), (264 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, BEGIN, 4, 655 10), (INSERT, EXIT, 4, 264 11)) minimal_complete ACTIVE
task 1 0: Insert: state 655 reduce 0 to sequence_of_statements, goto 282 via 655
task 1 0: Insert: insert EXCEPTION: 15, ( 0 3 0 0 0 3 0 0), (662 : (EXCEPTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, BEGIN, 4, 655 10), (INSERT, EXCEPTION, 4, 662 12)) minimal_complete ACTIVE
task 1 0: Insert: insert FOR: 15, ( 0 3 0 0 0 3 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, BEGIN, 4, 655 10), (INSERT, FOR, 4, 3 11)) minimal_complete ACTIVE
task 1 0: Insert: insert IF: 15, ( 0 3 0 0 0 3 0 0), (265 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, BEGIN, 4, 655 10), (INSERT, IF, 4, 265 11)) minimal_complete ACTIVE
task 1 0: Insert: insert LOOP: 15, ( 0 3 0 0 0 3 0 0), (266 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, BEGIN, 4, 655 10), (INSERT, LOOP, 4, 266 11)) minimal_complete ACTIVE
task 1 0: Insert: insert RETURN: 15, ( 0 3 0 0 0 3 0 0), (267 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, BEGIN, 4, 655 10), (INSERT, RETURN, 4, 267 11)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, BEGIN, 4, 655 10), (INSERT, IDENTIFIER, 4, 10 11)) minimal_complete ACTIVE
task 1 0: enqueue: 11/ 396/499/104, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (263 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, CASE, 4, 263 9)) minimal_complete ACTIVE
task 1 0: stack: (263 : (CASE), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (263 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, CASE, 4, 263 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 263 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (263 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, CASE, 4, 263 9)) minimal_complete ACTIVE
task 1 0: stack: (263 : (CASE), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 263 reduce 0 to expression_opt, goto 649 via 263
task 1 0: Minimal_Complete_Actions: insert IS: 12, ( 0 4 0 0 0 2 0 0), (979 : (IS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, CASE, 4, 263 9), (INSERT, IS, 4, 979 11)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (37 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, CASE, 4, 263 9), (INSERT, LEFT_PAREN, 4, 37 10)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (38 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, CASE, 4, 263 9), (INSERT, NOT, 4, 38 10)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, CASE, 4, 263 9), (INSERT, MINUS, 4, 39 10)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, CASE, 4, 263 9), (INSERT, PLUS, 4, 40 10)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (41 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, CASE, 4, 263 9), (INSERT, STRING_LITERAL, 4, 41 10)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (42 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, CASE, 4, 263 9), (INSERT, NUMERIC_LITERAL, 4, 42 10)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (43 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, CASE, 4, 263 9), (INSERT, IDENTIFIER, 4, 43 10)) minimal_complete ACTIVE
task 1 0: enqueue: 8/ 403/507/105, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 7 0 0 0 1 0 0), (2096 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, LOOP, 4, 2096 8)) minimal_complete ACTIVE
task 1 0: stack: (2096 : (LOOP), 1712 : (iteration_scheme), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 7 0 0 0 1 0 0), (2096 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, LOOP, 4, 2096 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2096 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 7 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2096 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, LOOP, 4, 2096 8)) minimal_complete ACTIVE
task 1 0: stack: (2096 : (LOOP), 1712 : (iteration_scheme), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to sequence_of_statements)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to sequence_of_statements
task 1 0: Minimal_Complete_Actions: state 2096 reduce 0 to sequence_of_statements, goto 2357 via 2096
task 1 0: Minimal_Complete_Actions: insert END: 12, ( 0 8 0 0 0 1 0 0), (2509 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, LOOP, 4, 2096 8), (INSERT, END, 4, 2509 10)) minimal_complete ACTIVE
task 1 0: Insert: state 2096 reduce 0 to block_label_opt, goto 91 via 2096
task 1 0: Insert: insert BEGIN: 15, ( 0 7 0 0 0 2 0 0), (225 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, LOOP, 4, 2096 8), (INSERT, BEGIN, 4, 225 10)) minimal_complete ACTIVE
task 1 0: Insert: insert CASE: 15, ( 0 7 0 0 0 2 0 0), (85 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, LOOP, 4, 2096 8), (INSERT, CASE, 4, 85 9)) minimal_complete ACTIVE
task 1 0: Insert: insert DECLARE: 15, ( 0 7 0 0 0 2 0 0), (226 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, LOOP, 4, 2096 8), (INSERT, DECLARE, 4, 226 10)) minimal_complete ACTIVE
task 1 0: Insert: insert EXIT: 15, ( 0 7 0 0 0 2 0 0), (86 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, LOOP, 4, 2096 8), (INSERT, EXIT, 4, 86 9)) minimal_complete ACTIVE
task 1 0: Insert: insert FOR: 15, ( 0 7 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, LOOP, 4, 2096 8), (INSERT, FOR, 4, 3 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IF: 15, ( 0 7 0 0 0 2 0 0), (87 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, LOOP, 4, 2096 8), (INSERT, IF, 4, 87 9)) minimal_complete ACTIVE
task 1 0: Insert: insert LOOP: 15, ( 0 7 0 0 0 2 0 0), (88 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, LOOP, 4, 2096 8), (INSERT, LOOP, 4, 88 9)) minimal_complete ACTIVE
task 1 0: Insert: insert RETURN: 15, ( 0 7 0 0 0 2 0 0), (89 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, LOOP, 4, 2096 8), (INSERT, RETURN, 4, 89 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 7 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, LOOP, 4, 2096 8), (INSERT, IDENTIFIER, 4, 10 9)) minimal_complete ACTIVE
task 1 0: enqueue: 10/ 412/517/106, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (289 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, IDENTIFIER, 4, 289 9)) minimal_complete ACTIVE
task 1 0: stack: (289 : (IDENTIFIER), 2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (289 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, IDENTIFIER, 4, 289 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 289 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (289 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, IDENTIFIER, 4, 289 9)) minimal_complete ACTIVE
task 1 0: stack: (289 : (IDENTIFIER), 2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift COLON)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift COLON
task 1 0: Minimal_Complete_Actions: insert COLON: 12, ( 0 4 0 0 0 2 0 0), (666 : (COLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, IDENTIFIER, 4, 289 9), (INSERT, COLON, 4, 666 10)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 412/518/107, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 7 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 7 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1217 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 7 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift SEMICOLON)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift SEMICOLON
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 8 0 0 0 1 0 0), (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, END, 4, 2507 10), (INSERT, SEMICOLON, 4, 2729 12), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 412/519/108, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 1 1 0), (2094 : (BEGIN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, BEGIN, 5, 2094 8)) minimal_complete ACTIVE
task 1 0: stack: (2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 11, ( 0 3 0 0 0 1 1 0), (2094 : (BEGIN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, BEGIN, 5, 2094 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 2094 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 1 1 0), Error (PLUS, (25 . 25)) (2094 : (BEGIN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, BEGIN, 5, 2094 8)) minimal_complete ACTIVE
task 1 0: stack: (2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to handled_sequence_of_statements)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to handled_sequence_of_statements
task 1 0: Minimal_Complete_Actions: state 2094 reduce 0 to handled_sequence_of_statements, goto 2355 via 2094
task 1 0: Minimal_Complete_Actions: insert END: 12, ( 0 4 0 0 0 1 1 0), (2507 : (END))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, BEGIN, 5, 2094 8), (INSERT, END, 5, 2507 10)) minimal_complete ACTIVE
task 1 0: Insert: state 2094 reduce 0 to block_label_opt, goto 269 via 2094
task 1 0: Insert: insert BEGIN: 15, ( 0 3 0 0 0 2 1 0), (655 : (BEGIN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, BEGIN, 5, 2094 8), (INSERT, BEGIN, 5, 655 10)) minimal_complete ACTIVE
task 1 0: Insert: insert CASE: 15, ( 0 3 0 0 0 2 1 0), (263 : (CASE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, BEGIN, 5, 2094 8), (INSERT, CASE, 5, 263 9)) minimal_complete ACTIVE
task 1 0: Insert: insert DECLARE: 15, ( 0 3 0 0 0 2 1 0), (656 : (DECLARE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, BEGIN, 5, 2094 8), (INSERT, DECLARE, 5, 656 10)) minimal_complete ACTIVE
task 1 0: Insert: insert EXIT: 15, ( 0 3 0 0 0 2 1 0), (264 : (EXIT))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, BEGIN, 5, 2094 8), (INSERT, EXIT, 5, 264 9)) minimal_complete ACTIVE
task 1 0: Insert: state 2094 reduce 0 to sequence_of_statements, goto 282 via 2094
task 1 0: Insert: insert EXCEPTION: 15, ( 0 3 0 0 0 2 1 0), (662 : (EXCEPTION))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, BEGIN, 5, 2094 8), (INSERT, EXCEPTION, 5, 662 10)) minimal_complete ACTIVE
task 1 0: Insert: insert FOR: 15, ( 0 3 0 0 0 2 1 0), (3 : (FOR))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, BEGIN, 5, 2094 8), (INSERT, FOR, 5, 3 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IF: 15, ( 0 3 0 0 0 2 1 0), (265 : (IF))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, BEGIN, 5, 2094 8), (INSERT, IF, 5, 265 9)) minimal_complete ACTIVE
task 1 0: Insert: insert LOOP: 15, ( 0 3 0 0 0 2 1 0), (266 : (LOOP))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, BEGIN, 5, 2094 8), (INSERT, LOOP, 5, 266 9)) minimal_complete ACTIVE
task 1 0: Insert: insert RETURN: 15, ( 0 3 0 0 0 2 1 0), (267 : (RETURN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, BEGIN, 5, 2094 8), (INSERT, RETURN, 5, 267 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 2 1 0), (10 : (IDENTIFIER))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, BEGIN, 5, 2094 8), (INSERT, IDENTIFIER, 5, 10 9)) minimal_complete ACTIVE
task 1 0: enqueue: 11/ 422/530/109, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 1 1 0), (1699 : (CASE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7)) minimal_complete ACTIVE
task 1 0: stack: (1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 11, ( 0 3 0 0 0 1 1 0), (1699 : (CASE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 1699 : 5:(PLUS, (25 . 25)) : (Shift, 40)
task 1 0: check: 40 : 6:(IDENTIFIER, (26 . 39)) : (Reduce, 1, unary_adding_operator,0) via 1699
task 1 0: check: 58 : 6:(IDENTIFIER, (26 . 39)) : (Shift, 43)
task 1 0: check: 43 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: new error point : 11, ( 0 3 0 0 0 1 1 0), Error (THEN, (41 . 44)) (43 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7))
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 1 1 0), (1699 : (CASE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7)) minimal_complete ACTIVE
task 1 0: stack: (1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 1699 reduce 0 to expression_opt, goto 2088 via 1699
task 1 0: Minimal_Complete_Actions: insert IS: 12, ( 0 4 0 0 0 1 1 0), (2348 : (IS))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (INSERT, IS, 5, 2348 9)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 2 1 0), (37 : (LEFT_PAREN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (INSERT, LEFT_PAREN, 5, 37 8)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 2 1 0), (38 : (NOT))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (INSERT, NOT, 5, 38 8)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 2 1 0), (39 : (MINUS))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (INSERT, MINUS, 5, 39 8)) minimal_complete ACTIVE
task 1 0: Insert: abandon PLUS: current token
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 2 1 0), (41 : (STRING_LITERAL))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (INSERT, STRING_LITERAL, 5, 41 8)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 15, ( 0 3 0 0 0 2 1 0), (42 : (NUMERIC_LITERAL))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (INSERT, NUMERIC_LITERAL, 5, 42 8)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 2 1 0), (43 : (IDENTIFIER))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (INSERT, IDENTIFIER, 5, 43 8)) minimal_complete ACTIVE
task 1 0: enqueue: 8/ 429/538/110, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 1 1 0), (2095 : (DECLARE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, DECLARE, 5, 2095 8)) minimal_complete ACTIVE
task 1 0: stack: (2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 11, ( 0 3 0 0 0 1 1 0), (2095 : (DECLARE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, DECLARE, 5, 2095 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 2095 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 1 1 0), Error (PLUS, (25 . 25)) (2095 : (DECLARE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, DECLARE, 5, 2095 8)) minimal_complete ACTIVE
task 1 0: stack: (2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to declarative_part)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to declarative_part
task 1 0: Minimal_Complete_Actions: state 2095 reduce 0 to declarative_part, goto 2356 via 2095
task 1 0: Minimal_Complete_Actions: insert BEGIN: 12, ( 0 4 0 0 0 1 1 0), (2508 : (BEGIN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, DECLARE, 5, 2095 8), (INSERT, BEGIN, 5, 2508 10)) minimal_complete ACTIVE
task 1 0: Insert: insert FUNCTION: 15, ( 0 3 0 0 0 2 1 0), (4 : (FUNCTION))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, DECLARE, 5, 2095 8), (INSERT, FUNCTION, 5, 4 9)) minimal_complete ACTIVE
task 1 0: Insert: insert PACKAGE: 15, ( 0 3 0 0 0 2 1 0), (286 : (PACKAGE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, DECLARE, 5, 2095 8), (INSERT, PACKAGE, 5, 286 9)) minimal_complete ACTIVE
task 1 0: Insert: insert PROCEDURE: 15, ( 0 3 0 0 0 2 1 0), (287 : (PROCEDURE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, DECLARE, 5, 2095 8), (INSERT, PROCEDURE, 5, 287 9)) minimal_complete ACTIVE
task 1 0: Insert: insert TYPE: 15, ( 0 3 0 0 0 2 1 0), (288 : (TYPE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, DECLARE, 5, 2095 8), (INSERT, TYPE, 5, 288 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 2 1 0), (289 : (IDENTIFIER))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, DECLARE, 5, 2095 8), (INSERT, IDENTIFIER, 5, 289 9)) minimal_complete ACTIVE
task 1 0: enqueue: 6/ 434/544/111, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 1 1 0), (3 : (FOR))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, FOR, 5, 3 7)) minimal_complete ACTIVE
task 1 0: stack: (3 : (FOR), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 11, ( 0 3 0 0 0 1 1 0), (3 : (FOR))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, FOR, 5, 3 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 3 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 1 1 0), Error (PLUS, (25 . 25)) (3 : (FOR))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, FOR, 5, 3 7)) minimal_complete ACTIVE
task 1 0: stack: (3 : (FOR), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift IDENTIFIER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift IDENTIFIER
task 1 0: Minimal_Complete_Actions: insert IDENTIFIER: 12, ( 0 4 0 0 0 1 1 0), (61 : (IDENTIFIER))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, FOR, 5, 3 7), (INSERT, IDENTIFIER, 5, 61 8)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 434/545/112, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 1 1 0), (1701 : (IF))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, IF, 5, 1701 7)) minimal_complete ACTIVE
task 1 0: stack: (1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 11, ( 0 3 0 0 0 1 1 0), (1701 : (IF))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, IF, 5, 1701 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 1701 : 5:(PLUS, (25 . 25)) : (Shift, 40)
task 1 0: check: 40 : 6:(IDENTIFIER, (26 . 39)) : (Reduce, 1, unary_adding_operator,0) via 1701
task 1 0: check: 84 : 6:(IDENTIFIER, (26 . 39)) : (Shift, 69)
task 1 0: check: 69 : 7:(THEN, (41 . 44)) : (Reduce, 1, name,2) via 84
task 1 0: check: 73 : 7:(THEN, (41 . 44)) : (Reduce, 1, primary,2) via 84
task 1 0: check: 75 : 7:(THEN, (41 . 44)) : (Reduce, 1, factor,0) via 84
task 1 0: check: 72 : 7:(THEN, (41 . 44)) : (Reduce, 1, term,1) via 84
task 1 0: check: 82 : 7:(THEN, (41 . 44)) : (Reduce, 1, term_list,1) via 84
task 1 0: check: 218 : 7:(THEN, (41 . 44)) : (Reduce, 2, simple_expression,0) via 1701
task 1 0: check: 81 : 7:(THEN, (41 . 44)) : (Reduce, 1, relation,1) via 1701
task 1 0: check: 79 : 7:(THEN, (41 . 44)) : (Reduce, 1, expression,0) via 1701
task 1 0: check: 70 : 7:(THEN, (41 . 44)) : (Reduce, 1, expression_opt,0) via 1701
task 1 0: check: 2090 : 7:(THEN, (41 . 44)) : (Shift, 2351)
task 1 0: check: 2351 : 8:(IDENTIFIER, (49 . 68)) : (Shift, 10)
task 1 0: enqueue: 0/ 433/545/113, min cost: 11, active workers: 0
task 1 0: succeed: enqueue 546, check  113: 11, ( 0 3 0 0 0 1 1 0), (1701 : (IF))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, IF, 5, 1701 7)) minimal_complete ACTIVE
task 1 0: dequeue: 11, ( 0 3 0 0 0 1 1 0), (1702 : (LOOP))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, LOOP, 5, 1702 7)) minimal_complete ACTIVE
task 1 0: stack: (1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 11, ( 0 3 0 0 0 1 1 0), (1702 : (LOOP))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, LOOP, 5, 1702 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 1702 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 1 1 0), Error (PLUS, (25 . 25)) (1702 : (LOOP))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, LOOP, 5, 1702 7)) minimal_complete ACTIVE
task 1 0: stack: (1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to sequence_of_statements)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to sequence_of_statements
task 1 0: Minimal_Complete_Actions: state 1702 reduce 0 to sequence_of_statements, goto 2091 via 1702
task 1 0: Minimal_Complete_Actions: insert END: 12, ( 0 4 0 0 0 1 1 0), (2352 : (END))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, LOOP, 5, 1702 7), (INSERT, END, 5, 2352 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1702 reduce 0 to block_label_opt, goto 91 via 1702
task 1 0: Insert: insert BEGIN: 15, ( 0 3 0 0 0 2 1 0), (225 : (BEGIN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, LOOP, 5, 1702 7), (INSERT, BEGIN, 5, 225 9)) minimal_complete ACTIVE
task 1 0: Insert: insert CASE: 15, ( 0 3 0 0 0 2 1 0), (85 : (CASE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, LOOP, 5, 1702 7), (INSERT, CASE, 5, 85 8)) minimal_complete ACTIVE
task 1 0: Insert: insert DECLARE: 15, ( 0 3 0 0 0 2 1 0), (226 : (DECLARE))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, LOOP, 5, 1702 7), (INSERT, DECLARE, 5, 226 9)) minimal_complete ACTIVE
task 1 0: Insert: insert EXIT: 15, ( 0 3 0 0 0 2 1 0), (86 : (EXIT))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, LOOP, 5, 1702 7), (INSERT, EXIT, 5, 86 8)) minimal_complete ACTIVE
task 1 0: Insert: insert FOR: 15, ( 0 3 0 0 0 2 1 0), (3 : (FOR))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, LOOP, 5, 1702 7), (INSERT, FOR, 5, 3 8)) minimal_complete ACTIVE
task 1 0: Insert: insert IF: 15, ( 0 3 0 0 0 2 1 0), (87 : (IF))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, LOOP, 5, 1702 7), (INSERT, IF, 5, 87 8)) minimal_complete ACTIVE
task 1 0: Insert: insert LOOP: 15, ( 0 3 0 0 0 2 1 0), (88 : (LOOP))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, LOOP, 5, 1702 7), (INSERT, LOOP, 5, 88 8)) minimal_complete ACTIVE
task 1 0: Insert: insert RETURN: 15, ( 0 3 0 0 0 2 1 0), (89 : (RETURN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, LOOP, 5, 1702 7), (INSERT, RETURN, 5, 89 8)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 2 1 0), (10 : (IDENTIFIER))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, LOOP, 5, 1702 7), (INSERT, IDENTIFIER, 5, 10 8)) minimal_complete ACTIVE
task 1 0: enqueue: 10/ 442/555/114, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 1 1 0), (1703 : (RETURN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7)) minimal_complete ACTIVE
task 1 0: stack: (1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 11, ( 0 3 0 0 0 1 1 0), (1703 : (RETURN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 1703 : 5:(PLUS, (25 . 25)) : (Shift, 40)
task 1 0: check: 40 : 6:(IDENTIFIER, (26 . 39)) : (Reduce, 1, unary_adding_operator,0) via 1703
task 1 0: check: 134 : 6:(IDENTIFIER, (26 . 39)) : (Shift, 245)
task 1 0: check: 245 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: new error point : 11, ( 0 3 0 0 0 1 1 0), Error (THEN, (41 . 44)) (245 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7))
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 1 1 0), (1703 : (RETURN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7)) minimal_complete ACTIVE
task 1 0: stack: (1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 1703 reduce 0 to expression_opt, goto 2092 via 1703
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 1 1 0), (2353 : (SEMICOLON))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (INSERT, SEMICOLON, 5, 2353 9)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 2 1 0), (114 : (LEFT_PAREN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (INSERT, LEFT_PAREN, 5, 114 8)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 2 1 0), (115 : (NOT))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (INSERT, NOT, 5, 115 8)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 2 1 0), (39 : (MINUS))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (INSERT, MINUS, 5, 39 8)) minimal_complete ACTIVE
task 1 0: Insert: abandon PLUS: current token
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 2 1 0), (116 : (STRING_LITERAL))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (INSERT, STRING_LITERAL, 5, 116 8)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 15, ( 0 3 0 0 0 2 1 0), (117 : (NUMERIC_LITERAL))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (INSERT, NUMERIC_LITERAL, 5, 117 8)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 2 1 0), (118 : (IDENTIFIER))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (INSERT, IDENTIFIER, 5, 118 8)) minimal_complete ACTIVE
task 1 0: enqueue: 8/ 449/563/115, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 1 1 0), (1700 : (EXIT))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, EXIT, 5, 1700 7)) minimal_complete ACTIVE
task 1 0: stack: (1700 : (EXIT), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 11, ( 0 3 0 0 0 1 1 0), (1700 : (EXIT))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, EXIT, 5, 1700 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 1700 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 1 1 0), Error (PLUS, (25 . 25)) (1700 : (EXIT))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, EXIT, 5, 1700 7)) minimal_complete ACTIVE
task 1 0: stack: (1700 : (EXIT), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to identifier_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to identifier_opt
task 1 0: Minimal_Complete_Actions: state 1700 reduce 0 to identifier_opt, goto 2089 via 1700
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 1 1 0), (2350 : (SEMICOLON))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, EXIT, 5, 1700 7), (INSERT, SEMICOLON, 5, 2350 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1700 reduce 0 to identifier_opt, goto 2089 via 1700
task 1 0: Insert: insert WHEN: 15, ( 0 3 0 0 0 2 1 0), (2349 : (WHEN))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, EXIT, 5, 1700 7), (INSERT, WHEN, 5, 2349 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 2 1 0), (59 : (IDENTIFIER))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, EXIT, 5, 1700 7), (INSERT, IDENTIFIER, 5, 59 8)) minimal_complete ACTIVE
task 1 0: enqueue: 3/ 451/566/116, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 1 1 0), Error (THEN, (41 . 44)) (43 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7))
task 1 0: stack: (43 : (IDENTIFIER, (26 . 39)), 58 : (unary_adding_operator, (25 . 25)), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Language_Fixes: 11, ( 0 3 0 0 0 1 1 0), Error (THEN, (41 . 44)) (43 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7))
task 1 0: check: (THEN, (41 . 44)): 11, ( 0 3 0 0 0 1 1 0), (43 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7))
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 43 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 1 1 0), Error (THEN, (41 . 44)) (43 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7))
task 1 0: stack: (43 : (IDENTIFIER, (26 . 39)), 58 : (unary_adding_operator, (25 . 25)), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to name)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to name
task 1 0: Minimal_Complete_Actions: state 43 reduce 1 to name, goto 47 via 58
task 1 0: Minimal_Complete_Actions: state 47 reduce 1 to primary, goto 49 via 58
task 1 0: Minimal_Complete_Actions: state 49 reduce 1 to factor, goto 46 via 58
task 1 0: Minimal_Complete_Actions: state 46 reduce 1 to term, goto 56 via 58
task 1 0: Minimal_Complete_Actions: state 56 reduce 1 to term_list, goto 193 via 58
task 1 0: Minimal_Complete_Actions: state 193 reduce 2 to simple_expression, goto 55 via 1699
task 1 0: Minimal_Complete_Actions: state 55 reduce 1 to relation, goto 53 via 1699
task 1 0: Minimal_Complete_Actions: state 53 reduce 1 to expression, goto 44 via 1699
task 1 0: Minimal_Complete_Actions: state 44 reduce 1 to expression_opt, goto 2088 via 1699
task 1 0: Minimal_Complete_Actions: insert IS: 12, ( 0 4 0 0 0 1 1 0), (2348 : (IS))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, IS, 7, 2348 9)) minimal_complete ACTIVE
task 1 0: Insert: state 43 reduce 1 to name, goto 47 via 58
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 58
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 58
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 58
task 1 0: Insert: state 56 reduce 1 to term_list, goto 193 via 58
task 1 0: Insert: state 193 reduce 2 to simple_expression, goto 55 via 1699
task 1 0: Insert: state 55 reduce 1 to relation, goto 53 via 1699
task 1 0: Insert: insert AND: 15, ( 0 3 0 0 0 2 1 0), (176 : (AND))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, AND, 7, 176 9))
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 2 1 0), (170 : (LEFT_PAREN))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, LEFT_PAREN, 7, 170 10))
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 58
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 58
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 58
task 1 0: Insert: state 56 reduce 1 to term_list, goto 193 via 58
task 1 0: Insert: state 193 reduce 2 to simple_expression, goto 55 via 1699
task 1 0: Insert: state 55 reduce 1 to relation, goto 53 via 1699
task 1 0: Insert: insert OR: 15, ( 0 3 0 0 0 2 1 0), (177 : (OR))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, OR, 7, 177 9))
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 58
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 58
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 58
task 1 0: Insert: state 56 reduce 1 to term_list, goto 193 via 58
task 1 0: Insert: state 193 reduce 2 to simple_expression, goto 55 via 1699
task 1 0: Insert: state 55 reduce 1 to relation, goto 53 via 1699
task 1 0: Insert: insert XOR: 15, ( 0 3 0 0 0 2 1 0), (178 : (XOR))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, XOR, 7, 178 9))
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 58
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 58
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 58
task 1 0: Insert: state 56 reduce 1 to term_list, goto 193 via 58
task 1 0: Insert: insert AMPERSAND: 15, ( 0 3 0 0 0 2 1 0), (189 : (AMPERSAND))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, AMPERSAND, 7, 189 10))
task 1 0: Insert: insert DOT: 15, ( 0 3 0 0 0 2 1 0), (171 : (DOT))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, DOT, 7, 171 10))
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 58
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 58
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 58
task 1 0: Insert: state 56 reduce 1 to term_list, goto 193 via 58
task 1 0: Insert: state 193 reduce 2 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert EQUAL: 15, ( 0 3 0 0 0 2 1 0), (179 : (EQUAL))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, EQUAL, 7, 179 9))
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 58
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 58
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 58
task 1 0: Insert: state 56 reduce 1 to term_list, goto 193 via 58
task 1 0: Insert: state 193 reduce 2 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert GREATER: 15, ( 0 3 0 0 0 2 1 0), (180 : (GREATER))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, GREATER, 7, 180 9))
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 58
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 58
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 58
task 1 0: Insert: state 56 reduce 1 to term_list, goto 193 via 58
task 1 0: Insert: state 193 reduce 2 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert GREATER_EQUAL: 15, ( 0 3 0 0 0 2 1 0), (181 : (GREATER_EQUAL))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, GREATER_EQUAL, 7, 181 9))
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 58
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 58
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 58
task 1 0: Insert: state 56 reduce 1 to term_list, goto 193 via 58
task 1 0: Insert: state 193 reduce 2 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert LESS: 15, ( 0 3 0 0 0 2 1 0), (182 : (LESS))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, LESS, 7, 182 9))
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 58
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 58
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 58
task 1 0: Insert: state 56 reduce 1 to term_list, goto 193 via 58
task 1 0: Insert: state 193 reduce 2 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert LESS_EQUAL: 15, ( 0 3 0 0 0 2 1 0), (183 : (LESS_EQUAL))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, LESS_EQUAL, 7, 183 9))
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 58
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 58
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 58
task 1 0: Insert: state 56 reduce 1 to term_list, goto 193 via 58
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 2 1 0), (190 : (MINUS))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, MINUS, 7, 190 10))
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 58
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 58
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 58
task 1 0: Insert: state 56 reduce 1 to term_list, goto 193 via 58
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 2 1 0), (191 : (PLUS))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, PLUS, 7, 191 10))
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 58
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 58
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 58
task 1 0: Insert: insert SLASH: 15, ( 0 3 0 0 0 2 1 0), (186 : (SLASH))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, SLASH, 7, 186 10))
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 58
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 58
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 58
task 1 0: Insert: state 56 reduce 1 to term_list, goto 193 via 58
task 1 0: Insert: state 193 reduce 2 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert SLASH_EQUAL: 15, ( 0 3 0 0 0 2 1 0), (184 : (SLASH_EQUAL))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, SLASH_EQUAL, 7, 184 9))
task 1 0: Insert: state 47 reduce 1 to primary, goto 49 via 58
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 58
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 58
task 1 0: Insert: insert STAR: 15, ( 0 3 0 0 0 2 1 0), (187 : (STAR))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (INSERT, STAR, 7, 187 10))
task 1 0: push_back IDENTIFIER: 15, ( 0 3 0 1 0 1 1 0), (58 : (unary_adding_operator, (25 . 25)))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (PUSH_BACK, IDENTIFIER, 6))
task 1 0: delete THEN: 15, ( 0 3 0 0 0 1 2 0), (43 : (IDENTIFIER, (26 . 39)))| 8:(IDENTIFIER, (49 . 68))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, CASE, 5, 1699 7), (FAST_FORWARD,  7), (DELETE, THEN, 7))
task 1 0: enqueue: 19/ 469/585/117, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 1 1 0), Error (THEN, (41 . 44)) (245 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7))
task 1 0: stack: (245 : (IDENTIFIER, (26 . 39)), 134 : (unary_adding_operator, (25 . 25)), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Language_Fixes: 11, ( 0 3 0 0 0 1 1 0), Error (THEN, (41 . 44)) (245 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7))
task 1 0: check: (THEN, (41 . 44)): 11, ( 0 3 0 0 0 1 1 0), (245 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7))
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 245 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 1 1 0), Error (THEN, (41 . 44)) (245 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7))
task 1 0: stack: (245 : (IDENTIFIER, (26 . 39)), 134 : (unary_adding_operator, (25 . 25)), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to name)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to name
task 1 0: Minimal_Complete_Actions: state 245 reduce 1 to name, goto 123 via 134
task 1 0: Minimal_Complete_Actions: state 123 reduce 1 to primary, goto 125 via 134
task 1 0: Minimal_Complete_Actions: state 125 reduce 1 to factor, goto 122 via 134
task 1 0: Minimal_Complete_Actions: state 122 reduce 1 to term, goto 132 via 134
task 1 0: Minimal_Complete_Actions: state 132 reduce 1 to term_list, goto 262 via 134
task 1 0: Minimal_Complete_Actions: state 262 reduce 2 to simple_expression, goto 131 via 1703
task 1 0: Minimal_Complete_Actions: state 131 reduce 1 to relation, goto 129 via 1703
task 1 0: Minimal_Complete_Actions: state 129 reduce 1 to expression, goto 119 via 1703
task 1 0: Minimal_Complete_Actions: state 119 reduce 1 to expression_opt, goto 2092 via 1703
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 1 1 0), (2353 : (SEMICOLON))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, SEMICOLON, 7, 2353 9)) minimal_complete ACTIVE
task 1 0: Insert: state 245 reduce 1 to name, goto 123 via 134
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 134
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 134
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 134
task 1 0: Insert: state 132 reduce 1 to term_list, goto 262 via 134
task 1 0: Insert: state 262 reduce 2 to simple_expression, goto 131 via 1703
task 1 0: Insert: state 131 reduce 1 to relation, goto 129 via 1703
task 1 0: Insert: insert AND: 15, ( 0 3 0 0 0 2 1 0), (256 : (AND))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, AND, 7, 256 9))
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 2 1 0), (250 : (LEFT_PAREN))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, LEFT_PAREN, 7, 250 10))
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 134
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 134
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 134
task 1 0: Insert: state 132 reduce 1 to term_list, goto 262 via 134
task 1 0: Insert: state 262 reduce 2 to simple_expression, goto 131 via 1703
task 1 0: Insert: state 131 reduce 1 to relation, goto 129 via 1703
task 1 0: Insert: insert OR: 15, ( 0 3 0 0 0 2 1 0), (257 : (OR))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, OR, 7, 257 9))
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 134
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 134
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 134
task 1 0: Insert: state 132 reduce 1 to term_list, goto 262 via 134
task 1 0: Insert: state 262 reduce 2 to simple_expression, goto 131 via 1703
task 1 0: Insert: state 131 reduce 1 to relation, goto 129 via 1703
task 1 0: Insert: insert XOR: 15, ( 0 3 0 0 0 2 1 0), (258 : (XOR))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, XOR, 7, 258 9))
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 134
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 134
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 134
task 1 0: Insert: state 132 reduce 1 to term_list, goto 262 via 134
task 1 0: Insert: insert AMPERSAND: 15, ( 0 3 0 0 0 2 1 0), (189 : (AMPERSAND))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, AMPERSAND, 7, 189 10))
task 1 0: Insert: insert DOT: 15, ( 0 3 0 0 0 2 1 0), (251 : (DOT))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, DOT, 7, 251 10))
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 134
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 134
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 134
task 1 0: Insert: state 132 reduce 1 to term_list, goto 262 via 134
task 1 0: Insert: state 262 reduce 2 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert EQUAL: 15, ( 0 3 0 0 0 2 1 0), (179 : (EQUAL))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, EQUAL, 7, 179 9))
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 134
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 134
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 134
task 1 0: Insert: state 132 reduce 1 to term_list, goto 262 via 134
task 1 0: Insert: state 262 reduce 2 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert GREATER: 15, ( 0 3 0 0 0 2 1 0), (180 : (GREATER))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, GREATER, 7, 180 9))
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 134
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 134
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 134
task 1 0: Insert: state 132 reduce 1 to term_list, goto 262 via 134
task 1 0: Insert: state 262 reduce 2 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert GREATER_EQUAL: 15, ( 0 3 0 0 0 2 1 0), (181 : (GREATER_EQUAL))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, GREATER_EQUAL, 7, 181 9))
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 134
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 134
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 134
task 1 0: Insert: state 132 reduce 1 to term_list, goto 262 via 134
task 1 0: Insert: state 262 reduce 2 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert LESS: 15, ( 0 3 0 0 0 2 1 0), (182 : (LESS))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, LESS, 7, 182 9))
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 134
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 134
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 134
task 1 0: Insert: state 132 reduce 1 to term_list, goto 262 via 134
task 1 0: Insert: state 262 reduce 2 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert LESS_EQUAL: 15, ( 0 3 0 0 0 2 1 0), (183 : (LESS_EQUAL))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, LESS_EQUAL, 7, 183 9))
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 134
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 134
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 134
task 1 0: Insert: state 132 reduce 1 to term_list, goto 262 via 134
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 2 1 0), (190 : (MINUS))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, MINUS, 7, 190 10))
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 134
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 134
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 134
task 1 0: Insert: state 132 reduce 1 to term_list, goto 262 via 134
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 2 1 0), (191 : (PLUS))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, PLUS, 7, 191 10))
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 134
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 134
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 134
task 1 0: Insert: insert SLASH: 15, ( 0 3 0 0 0 2 1 0), (186 : (SLASH))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, SLASH, 7, 186 10))
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 134
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 134
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 134
task 1 0: Insert: state 132 reduce 1 to term_list, goto 262 via 134
task 1 0: Insert: state 262 reduce 2 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert SLASH_EQUAL: 15, ( 0 3 0 0 0 2 1 0), (184 : (SLASH_EQUAL))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, SLASH_EQUAL, 7, 184 9))
task 1 0: Insert: state 123 reduce 1 to primary, goto 125 via 134
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 134
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 134
task 1 0: Insert: insert STAR: 15, ( 0 3 0 0 0 2 1 0), (187 : (STAR))| 7:(THEN, (41 . 44))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (INSERT, STAR, 7, 187 10))
task 1 0: push_back IDENTIFIER: 15, ( 0 3 0 1 0 1 1 0), (134 : (unary_adding_operator, (25 . 25)))| 6:(IDENTIFIER, (26 . 39))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (PUSH_BACK, IDENTIFIER, 6))
task 1 0: delete THEN: 15, ( 0 3 0 0 0 1 2 0), (245 : (IDENTIFIER, (26 . 39)))| 8:(IDENTIFIER, (49 . 68))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, RETURN, 5, 1703 7), (FAST_FORWARD,  7), (DELETE, THEN, 7))
task 1 0: enqueue: 19/ 487/604/118, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (225 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, BEGIN, 4, 225 9)) minimal_complete ACTIVE
task 1 0: stack: (225 : (BEGIN), 91 : (block_label_opt), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (225 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, BEGIN, 4, 225 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 225 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (225 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, BEGIN, 4, 225 9)) minimal_complete ACTIVE
task 1 0: stack: (225 : (BEGIN), 91 : (block_label_opt), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to handled_sequence_of_statements)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to handled_sequence_of_statements
task 1 0: Minimal_Complete_Actions: state 225 reduce 0 to handled_sequence_of_statements, goto 561 via 225
task 1 0: Minimal_Complete_Actions: insert END: 12, ( 0 4 0 0 0 2 0 0), (903 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, BEGIN, 4, 225 9), (INSERT, END, 4, 903 11)) minimal_complete ACTIVE
task 1 0: Insert: state 225 reduce 0 to block_label_opt, goto 269 via 225
task 1 0: Insert: insert BEGIN: 15, ( 0 3 0 0 0 3 0 0), (655 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, BEGIN, 4, 225 9), (INSERT, BEGIN, 4, 655 11)) minimal_complete ACTIVE
task 1 0: Insert: insert CASE: 15, ( 0 3 0 0 0 3 0 0), (263 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, BEGIN, 4, 225 9), (INSERT, CASE, 4, 263 10)) minimal_complete ACTIVE
task 1 0: Insert: insert DECLARE: 15, ( 0 3 0 0 0 3 0 0), (656 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, BEGIN, 4, 225 9), (INSERT, DECLARE, 4, 656 11)) minimal_complete ACTIVE
task 1 0: Insert: insert EXIT: 15, ( 0 3 0 0 0 3 0 0), (264 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, BEGIN, 4, 225 9), (INSERT, EXIT, 4, 264 10)) minimal_complete ACTIVE
task 1 0: Insert: state 225 reduce 0 to sequence_of_statements, goto 282 via 225
task 1 0: Insert: insert EXCEPTION: 15, ( 0 3 0 0 0 3 0 0), (662 : (EXCEPTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, BEGIN, 4, 225 9), (INSERT, EXCEPTION, 4, 662 11)) minimal_complete ACTIVE
task 1 0: Insert: insert FOR: 15, ( 0 3 0 0 0 3 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, BEGIN, 4, 225 9), (INSERT, FOR, 4, 3 10)) minimal_complete ACTIVE
task 1 0: Insert: insert IF: 15, ( 0 3 0 0 0 3 0 0), (265 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, BEGIN, 4, 225 9), (INSERT, IF, 4, 265 10)) minimal_complete ACTIVE
task 1 0: Insert: insert LOOP: 15, ( 0 3 0 0 0 3 0 0), (266 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, BEGIN, 4, 225 9), (INSERT, LOOP, 4, 266 10)) minimal_complete ACTIVE
task 1 0: Insert: insert RETURN: 15, ( 0 3 0 0 0 3 0 0), (267 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, BEGIN, 4, 225 9), (INSERT, RETURN, 4, 267 10)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, BEGIN, 4, 225 9), (INSERT, IDENTIFIER, 4, 10 10)) minimal_complete ACTIVE
task 1 0: enqueue: 11/ 497/615/119, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (226 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, DECLARE, 4, 226 9)) minimal_complete ACTIVE
task 1 0: stack: (226 : (DECLARE), 91 : (block_label_opt), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (226 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, DECLARE, 4, 226 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 226 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (226 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, DECLARE, 4, 226 9)) minimal_complete ACTIVE
task 1 0: stack: (226 : (DECLARE), 91 : (block_label_opt), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to declarative_part)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to declarative_part
task 1 0: Minimal_Complete_Actions: state 226 reduce 0 to declarative_part, goto 562 via 226
task 1 0: Minimal_Complete_Actions: insert BEGIN: 12, ( 0 4 0 0 0 2 0 0), (904 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, DECLARE, 4, 226 9), (INSERT, BEGIN, 4, 904 11)) minimal_complete ACTIVE
task 1 0: Insert: insert FUNCTION: 15, ( 0 3 0 0 0 3 0 0), (4 : (FUNCTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, DECLARE, 4, 226 9), (INSERT, FUNCTION, 4, 4 10)) minimal_complete ACTIVE
task 1 0: Insert: insert PACKAGE: 15, ( 0 3 0 0 0 3 0 0), (286 : (PACKAGE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, DECLARE, 4, 226 9), (INSERT, PACKAGE, 4, 286 10)) minimal_complete ACTIVE
task 1 0: Insert: insert PROCEDURE: 15, ( 0 3 0 0 0 3 0 0), (287 : (PROCEDURE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, DECLARE, 4, 226 9), (INSERT, PROCEDURE, 4, 287 10)) minimal_complete ACTIVE
task 1 0: Insert: insert TYPE: 15, ( 0 3 0 0 0 3 0 0), (288 : (TYPE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, DECLARE, 4, 226 9), (INSERT, TYPE, 4, 288 10)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (289 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, DECLARE, 4, 226 9), (INSERT, IDENTIFIER, 4, 289 10)) minimal_complete ACTIVE
task 1 0: enqueue: 6/ 502/621/120, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (86 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, EXIT, 4, 86 8)) minimal_complete ACTIVE
task 1 0: stack: (86 : (EXIT), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (86 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, EXIT, 4, 86 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 86 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (86 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, EXIT, 4, 86 8)) minimal_complete ACTIVE
task 1 0: stack: (86 : (EXIT), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to identifier_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to identifier_opt
task 1 0: Minimal_Complete_Actions: state 86 reduce 0 to identifier_opt, goto 220 via 86
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 2 0 0), (556 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, EXIT, 4, 86 8), (INSERT, SEMICOLON, 4, 556 10)) minimal_complete ACTIVE
task 1 0: Insert: state 86 reduce 0 to identifier_opt, goto 220 via 86
task 1 0: Insert: insert WHEN: 15, ( 0 3 0 0 0 3 0 0), (555 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, EXIT, 4, 86 8), (INSERT, WHEN, 4, 555 10)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (59 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, EXIT, 4, 86 8), (INSERT, IDENTIFIER, 4, 59 9)) minimal_complete ACTIVE
task 1 0: enqueue: 3/ 504/624/121, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, FOR, 4, 3 8)) minimal_complete ACTIVE
task 1 0: stack: (3 : (FOR), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, FOR, 4, 3 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 3 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, FOR, 4, 3 8)) minimal_complete ACTIVE
task 1 0: stack: (3 : (FOR), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift IDENTIFIER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift IDENTIFIER
task 1 0: Minimal_Complete_Actions: insert IDENTIFIER: 12, ( 0 4 0 0 0 2 0 0), (61 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, FOR, 4, 3 8), (INSERT, IDENTIFIER, 4, 61 9)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 504/625/122, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (87 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IF, 4, 87 8)) minimal_complete ACTIVE
task 1 0: stack: (87 : (IF), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (87 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IF, 4, 87 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 87 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (87 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IF, 4, 87 8)) minimal_complete ACTIVE
task 1 0: stack: (87 : (IF), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 87 reduce 0 to expression_opt, goto 221 via 87
task 1 0: Minimal_Complete_Actions: insert THEN: 12, ( 0 4 0 0 0 2 0 0), (557 : (THEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IF, 4, 87 8), (INSERT, THEN, 4, 557 10)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (65 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IF, 4, 87 8), (INSERT, LEFT_PAREN, 4, 65 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (66 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IF, 4, 87 8), (INSERT, NOT, 4, 66 9)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IF, 4, 87 8), (INSERT, MINUS, 4, 39 9)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IF, 4, 87 8), (INSERT, PLUS, 4, 40 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (67 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IF, 4, 87 8), (INSERT, STRING_LITERAL, 4, 67 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (68 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IF, 4, 87 8), (INSERT, NUMERIC_LITERAL, 4, 68 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (69 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IF, 4, 87 8), (INSERT, IDENTIFIER, 4, 69 9)) minimal_complete ACTIVE
task 1 0: enqueue: 8/ 511/633/123, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (88 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, LOOP, 4, 88 8)) minimal_complete ACTIVE
task 1 0: stack: (88 : (LOOP), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (88 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, LOOP, 4, 88 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 88 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (88 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, LOOP, 4, 88 8)) minimal_complete ACTIVE
task 1 0: stack: (88 : (LOOP), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to sequence_of_statements)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to sequence_of_statements
task 1 0: Minimal_Complete_Actions: state 88 reduce 0 to sequence_of_statements, goto 222 via 88
task 1 0: Minimal_Complete_Actions: insert END: 12, ( 0 4 0 0 0 2 0 0), (558 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, LOOP, 4, 88 8), (INSERT, END, 4, 558 10)) minimal_complete ACTIVE
task 1 0: Insert: state 88 reduce 0 to block_label_opt, goto 91 via 88
task 1 0: Insert: insert BEGIN: 15, ( 0 3 0 0 0 3 0 0), (225 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, LOOP, 4, 88 8), (INSERT, BEGIN, 4, 225 10)) minimal_complete ACTIVE
task 1 0: Insert: insert CASE: 15, ( 0 3 0 0 0 3 0 0), (85 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, LOOP, 4, 88 8), (INSERT, CASE, 4, 85 9)) minimal_complete ACTIVE
task 1 0: Insert: insert DECLARE: 15, ( 0 3 0 0 0 3 0 0), (226 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, LOOP, 4, 88 8), (INSERT, DECLARE, 4, 226 10)) minimal_complete ACTIVE
task 1 0: Insert: insert EXIT: 15, ( 0 3 0 0 0 3 0 0), (86 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, LOOP, 4, 88 8), (INSERT, EXIT, 4, 86 9)) minimal_complete ACTIVE
task 1 0: Insert: insert FOR: 15, ( 0 3 0 0 0 3 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, LOOP, 4, 88 8), (INSERT, FOR, 4, 3 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IF: 15, ( 0 3 0 0 0 3 0 0), (87 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, LOOP, 4, 88 8), (INSERT, IF, 4, 87 9)) minimal_complete ACTIVE
task 1 0: Insert: insert LOOP: 15, ( 0 3 0 0 0 3 0 0), (88 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, LOOP, 4, 88 8), (INSERT, LOOP, 4, 88 9)) minimal_complete ACTIVE
task 1 0: Insert: insert RETURN: 15, ( 0 3 0 0 0 3 0 0), (89 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, LOOP, 4, 88 8), (INSERT, RETURN, 4, 89 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, LOOP, 4, 88 8), (INSERT, IDENTIFIER, 4, 10 9)) minimal_complete ACTIVE
task 1 0: enqueue: 10/ 520/643/124, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (89 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, RETURN, 4, 89 8)) minimal_complete ACTIVE
task 1 0: stack: (89 : (RETURN), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (89 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, RETURN, 4, 89 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 89 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (89 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, RETURN, 4, 89 8)) minimal_complete ACTIVE
task 1 0: stack: (89 : (RETURN), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 89 reduce 0 to expression_opt, goto 223 via 89
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 2 0 0), (559 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, RETURN, 4, 89 8), (INSERT, SEMICOLON, 4, 559 10)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (114 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, RETURN, 4, 89 8), (INSERT, LEFT_PAREN, 4, 114 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (115 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, RETURN, 4, 89 8), (INSERT, NOT, 4, 115 9)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, RETURN, 4, 89 8), (INSERT, MINUS, 4, 39 9)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, RETURN, 4, 89 8), (INSERT, PLUS, 4, 40 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (116 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, RETURN, 4, 89 8), (INSERT, STRING_LITERAL, 4, 116 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (117 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, RETURN, 4, 89 8), (INSERT, NUMERIC_LITERAL, 4, 117 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (118 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, RETURN, 4, 89 8), (INSERT, IDENTIFIER, 4, 118 9)) minimal_complete ACTIVE
task 1 0: enqueue: 8/ 527/651/125, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (66 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, NOT, 4, 66 8)) minimal_complete ACTIVE
task 1 0: stack: (66 : (NOT), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (66 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, NOT, 4, 66 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 66 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (66 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, NOT, 4, 66 8)) minimal_complete ACTIVE
task 1 0: stack: (66 : (NOT), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift NUMERIC_LITERAL)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift NUMERIC_LITERAL
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 12, ( 0 4 0 0 0 2 0 0), (68 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, NOT, 4, 66 8), (INSERT, NUMERIC_LITERAL, 4, 68 9)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (65 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, NOT, 4, 66 8), (INSERT, LEFT_PAREN, 4, 65 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (67 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, NOT, 4, 66 8), (INSERT, STRING_LITERAL, 4, 67 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (69 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, NOT, 4, 66 8), (INSERT, IDENTIFIER, 4, 69 9)) minimal_complete ACTIVE
task 1 0: enqueue: 4/ 530/655/126, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 7 0 0 0 1 0 0), (835 : (DOT_DOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, DOT_DOT, 4, 835 11)) minimal_complete ACTIVE
task 1 0: stack: (835 : (DOT_DOT), 451 : (simple_expression), 196 : (IN), 61 : (IDENTIFIER), 3 : (FOR), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 7 0 0 0 1 0 0), (835 : (DOT_DOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, DOT_DOT, 4, 835 11)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 835 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 7 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (835 : (DOT_DOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, DOT_DOT, 4, 835 11)) minimal_complete ACTIVE
task 1 0: stack: (835 : (DOT_DOT), 451 : (simple_expression), 196 : (IN), 61 : (IDENTIFIER), 3 : (FOR), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift NUMERIC_LITERAL)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift NUMERIC_LITERAL
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 12, ( 0 8 0 0 0 1 0 0), (1301 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, DOT_DOT, 4, 835 11), (INSERT, NUMERIC_LITERAL, 4, 1301 12)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 7 0 0 0 2 0 0), (1298 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, DOT_DOT, 4, 835 11), (INSERT, LEFT_PAREN, 4, 1298 12)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 7 0 0 0 2 0 0), (1299 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, DOT_DOT, 4, 835 11), (INSERT, NOT, 4, 1299 12)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 15, ( 0 7 0 0 0 2 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, DOT_DOT, 4, 835 11), (INSERT, MINUS, 4, 39 12)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 15, ( 0 7 0 0 0 2 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, DOT_DOT, 4, 835 11), (INSERT, PLUS, 4, 40 12)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 7 0 0 0 2 0 0), (1300 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, DOT_DOT, 4, 835 11), (INSERT, STRING_LITERAL, 4, 1300 12)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 7 0 0 0 2 0 0), (1302 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, FOR, 4, 3 7), (INSERT, IDENTIFIER, 4, 61 8), (INSERT, IN, 4, 196 9), (INSERT, IDENTIFIER, 4, 443 10), (INSERT, DOT_DOT, 4, 835 11), (INSERT, IDENTIFIER, 4, 1302 12)) minimal_complete ACTIVE
task 1 0: enqueue: 7/ 536/662/127, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 1 0 0 2 0), (783 : (NUMERIC_LITERAL))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4), (INSERT, IS, 5, 169 3), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5)) minimal_complete ACTIVE
task 1 0: stack: (783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (PLUS, (25 . 25)): 11, ( 0 3 0 1 0 0 2 0), (783 : (NUMERIC_LITERAL))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4), (INSERT, IS, 5, 169 3), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 8
task 1 0: check: 783 : 5:(PLUS, (25 . 25)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 1 0 0 2 0), Error (PLUS, (25 . 25)) (783 : (NUMERIC_LITERAL))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4), (INSERT, IS, 5, 169 3), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5)) minimal_complete ACTIVE
task 1 0: stack: (783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift EQUAL_GREATER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift EQUAL_GREATER
task 1 0: Minimal_Complete_Actions: insert EQUAL_GREATER: 12, ( 0 4 0 1 0 0 2 0), (1216 : (EQUAL_GREATER))| 5:(PLUS, (25 . 25))|((PUSH_BACK, IS, 3), (DELETE, IS, 3), (DELETE, EQUAL, 4), (INSERT, IS, 5, 169 3), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 536/663/128, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, MINUS, 4, 39 8)) minimal_complete ACTIVE
task 1 0: stack: (39 : (MINUS), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, MINUS, 4, 39 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 39 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, MINUS, 4, 39 8)) minimal_complete ACTIVE
task 1 0: stack: (39 : (MINUS), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to unary_adding_operator)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to unary_adding_operator
task 1 0: Minimal_Complete_Actions: state 39 reduce 1 to unary_adding_operator, goto 134 via 1703
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 12, ( 0 4 0 0 0 2 0 0), (117 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, MINUS, 4, 39 8), (INSERT, NUMERIC_LITERAL, 4, 117 9)) minimal_complete ACTIVE
task 1 0: Insert: state 39 reduce 1 to unary_adding_operator, goto 134 via 1703
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (114 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, MINUS, 4, 39 8), (INSERT, LEFT_PAREN, 4, 114 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (115 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, MINUS, 4, 39 8), (INSERT, NOT, 4, 115 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (116 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, MINUS, 4, 39 8), (INSERT, STRING_LITERAL, 4, 116 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (245 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, MINUS, 4, 39 8), (INSERT, IDENTIFIER, 4, 245 9)) minimal_complete ACTIVE
task 1 0: enqueue: 5/ 540/668/129, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, PLUS, 4, 40 8)) minimal_complete ACTIVE
task 1 0: stack: (40 : (PLUS), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, PLUS, 4, 40 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 40 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, PLUS, 4, 40 8)) minimal_complete ACTIVE
task 1 0: stack: (40 : (PLUS), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to unary_adding_operator)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to unary_adding_operator
task 1 0: Minimal_Complete_Actions: state 40 reduce 1 to unary_adding_operator, goto 134 via 1703
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 12, ( 0 4 0 0 0 2 0 0), (117 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, PLUS, 4, 40 8), (INSERT, NUMERIC_LITERAL, 4, 117 9)) minimal_complete ACTIVE
task 1 0: Insert: state 40 reduce 1 to unary_adding_operator, goto 134 via 1703
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (114 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, PLUS, 4, 40 8), (INSERT, LEFT_PAREN, 4, 114 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (115 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, PLUS, 4, 40 8), (INSERT, NOT, 4, 115 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (116 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, PLUS, 4, 40 8), (INSERT, STRING_LITERAL, 4, 116 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (245 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, PLUS, 4, 40 8), (INSERT, IDENTIFIER, 4, 245 9)) minimal_complete ACTIVE
task 1 0: enqueue: 5/ 544/673/130, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (116 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8)) minimal_complete ACTIVE
task 1 0: stack: (116 : (STRING_LITERAL), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (116 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 116 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, primary,1) via 1703
task 1 0: check: 125 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, factor,0) via 1703
task 1 0: check: 122 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term,1) via 1703
task 1 0: check: 132 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term_list,1) via 1703
task 1 0: check: 133 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, simple_expression,1) via 1703
task 1 0: check: 131 : 4:(EQUAL, (23 . 23)) : (Shift, 179)
task 1 0: check: 179 : 5:(PLUS, (25 . 25)) : (Reduce, 1, relational_operator,0) via 131
task 1 0: check: 259 : 5:(PLUS, (25 . 25)) : (Shift, 40)
task 1 0: check: 40 : 6:(IDENTIFIER, (26 . 39)) : (Reduce, 1, unary_adding_operator,0) via 259
task 1 0: check: 646 : 6:(IDENTIFIER, (26 . 39)) : (Shift, 637)
task 1 0: check: 637 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: new error point : 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (637 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7))
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), (116 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8)) minimal_complete ACTIVE
task 1 0: stack: (116 : (STRING_LITERAL), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to primary)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to primary
task 1 0: Minimal_Complete_Actions: state 116 reduce 1 to primary, goto 125 via 1703
task 1 0: Minimal_Complete_Actions: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Minimal_Complete_Actions: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Minimal_Complete_Actions: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Minimal_Complete_Actions: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Minimal_Complete_Actions: state 131 reduce 1 to relation, goto 129 via 1703
task 1 0: Minimal_Complete_Actions: state 129 reduce 1 to expression, goto 119 via 1703
task 1 0: Minimal_Complete_Actions: state 119 reduce 1 to expression_opt, goto 2092 via 1703
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 2 0 0), (2353 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (INSERT, SEMICOLON, 4, 2353 9)) minimal_complete ACTIVE
task 1 0: Insert: state 116 reduce 1 to primary, goto 125 via 1703
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: state 131 reduce 1 to relation, goto 129 via 1703
task 1 0: Insert: insert AND: 15, ( 0 3 0 0 0 3 0 0), (256 : (AND))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (INSERT, AND, 4, 256 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: state 131 reduce 1 to relation, goto 129 via 1703
task 1 0: Insert: insert OR: 15, ( 0 3 0 0 0 3 0 0), (257 : (OR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (INSERT, OR, 4, 257 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: state 131 reduce 1 to relation, goto 129 via 1703
task 1 0: Insert: insert XOR: 15, ( 0 3 0 0 0 3 0 0), (258 : (XOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (INSERT, XOR, 4, 258 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: insert AMPERSAND: 15, ( 0 3 0 0 0 3 0 0), (189 : (AMPERSAND))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (INSERT, AMPERSAND, 4, 189 9)) minimal_complete ACTIVE
task 1 0: Insert: abandon EQUAL: current token
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert GREATER: 15, ( 0 3 0 0 0 3 0 0), (180 : (GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (INSERT, GREATER, 4, 180 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert GREATER_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (181 : (GREATER_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (INSERT, GREATER_EQUAL, 4, 181 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert LESS: 15, ( 0 3 0 0 0 3 0 0), (182 : (LESS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (INSERT, LESS, 4, 182 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert LESS_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (183 : (LESS_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (INSERT, LESS_EQUAL, 4, 183 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (190 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (INSERT, MINUS, 4, 190 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (191 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (INSERT, PLUS, 4, 191 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: insert SLASH: 15, ( 0 3 0 0 0 3 0 0), (186 : (SLASH))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (INSERT, SLASH, 4, 186 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert SLASH_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (184 : (SLASH_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (INSERT, SLASH_EQUAL, 4, 184 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: insert STAR: 15, ( 0 3 0 0 0 3 0 0), (187 : (STAR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (INSERT, STAR, 4, 187 9)) minimal_complete ACTIVE
task 1 0: enqueue: 15/ 558/688/131, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (117 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8)) minimal_complete ACTIVE
task 1 0: stack: (117 : (NUMERIC_LITERAL), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (117 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 117 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, primary,0) via 1703
task 1 0: check: 125 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, factor,0) via 1703
task 1 0: check: 122 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term,1) via 1703
task 1 0: check: 132 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term_list,1) via 1703
task 1 0: check: 133 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, simple_expression,1) via 1703
task 1 0: check: 131 : 4:(EQUAL, (23 . 23)) : (Shift, 179)
task 1 0: check: 179 : 5:(PLUS, (25 . 25)) : (Reduce, 1, relational_operator,0) via 131
task 1 0: check: 259 : 5:(PLUS, (25 . 25)) : (Shift, 40)
task 1 0: check: 40 : 6:(IDENTIFIER, (26 . 39)) : (Reduce, 1, unary_adding_operator,0) via 259
task 1 0: check: 646 : 6:(IDENTIFIER, (26 . 39)) : (Shift, 637)
task 1 0: check: 637 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: new error point : 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (637 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7))
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), (117 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8)) minimal_complete ACTIVE
task 1 0: stack: (117 : (NUMERIC_LITERAL), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to primary)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to primary
task 1 0: Minimal_Complete_Actions: state 117 reduce 1 to primary, goto 125 via 1703
task 1 0: Minimal_Complete_Actions: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Minimal_Complete_Actions: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Minimal_Complete_Actions: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Minimal_Complete_Actions: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Minimal_Complete_Actions: state 131 reduce 1 to relation, goto 129 via 1703
task 1 0: Minimal_Complete_Actions: state 129 reduce 1 to expression, goto 119 via 1703
task 1 0: Minimal_Complete_Actions: state 119 reduce 1 to expression_opt, goto 2092 via 1703
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 2 0 0), (2353 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (INSERT, SEMICOLON, 4, 2353 9)) minimal_complete ACTIVE
task 1 0: Insert: state 117 reduce 1 to primary, goto 125 via 1703
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: state 131 reduce 1 to relation, goto 129 via 1703
task 1 0: Insert: insert AND: 15, ( 0 3 0 0 0 3 0 0), (256 : (AND))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (INSERT, AND, 4, 256 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: state 131 reduce 1 to relation, goto 129 via 1703
task 1 0: Insert: insert OR: 15, ( 0 3 0 0 0 3 0 0), (257 : (OR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (INSERT, OR, 4, 257 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: state 131 reduce 1 to relation, goto 129 via 1703
task 1 0: Insert: insert XOR: 15, ( 0 3 0 0 0 3 0 0), (258 : (XOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (INSERT, XOR, 4, 258 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: insert AMPERSAND: 15, ( 0 3 0 0 0 3 0 0), (189 : (AMPERSAND))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (INSERT, AMPERSAND, 4, 189 9)) minimal_complete ACTIVE
task 1 0: Insert: abandon EQUAL: current token
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert GREATER: 15, ( 0 3 0 0 0 3 0 0), (180 : (GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (INSERT, GREATER, 4, 180 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert GREATER_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (181 : (GREATER_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (INSERT, GREATER_EQUAL, 4, 181 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert LESS: 15, ( 0 3 0 0 0 3 0 0), (182 : (LESS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (INSERT, LESS, 4, 182 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert LESS_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (183 : (LESS_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (INSERT, LESS_EQUAL, 4, 183 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (190 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (INSERT, MINUS, 4, 190 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (191 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (INSERT, PLUS, 4, 191 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: insert SLASH: 15, ( 0 3 0 0 0 3 0 0), (186 : (SLASH))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (INSERT, SLASH, 4, 186 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: state 132 reduce 1 to term_list, goto 133 via 1703
task 1 0: Insert: state 133 reduce 1 to simple_expression, goto 131 via 1703
task 1 0: Insert: insert SLASH_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (184 : (SLASH_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (INSERT, SLASH_EQUAL, 4, 184 9)) minimal_complete ACTIVE
task 1 0: Insert: state 125 reduce 1 to factor, goto 122 via 1703
task 1 0: Insert: state 122 reduce 1 to term, goto 132 via 1703
task 1 0: Insert: insert STAR: 15, ( 0 3 0 0 0 3 0 0), (187 : (STAR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (INSERT, STAR, 4, 187 9)) minimal_complete ACTIVE
task 1 0: enqueue: 15/ 572/703/132, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (637 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7))
task 1 0: stack: (637 : (IDENTIFIER, (26 . 39)), 646 : (unary_adding_operator, (25 . 25)), 259 : (relational_operator, (23 . 23)), 131 : (simple_expression), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Language_Fixes: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (637 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7))
task 1 0: check: (THEN, (41 . 44)): 11, ( 0 3 0 0 0 2 0 0), (637 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7))
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 637 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (637 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7))
task 1 0: stack: (637 : (IDENTIFIER, (26 . 39)), 646 : (unary_adding_operator, (25 . 25)), 259 : (relational_operator, (23 . 23)), 131 : (simple_expression), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to name)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to name
task 1 0: Minimal_Complete_Actions: state 637 reduce 1 to name, goto 639 via 646
task 1 0: Minimal_Complete_Actions: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Minimal_Complete_Actions: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Minimal_Complete_Actions: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Minimal_Complete_Actions: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Minimal_Complete_Actions: state 978 reduce 2 to simple_expression, goto 643 via 259
task 1 0: Minimal_Complete_Actions: state 643 reduce 3 to relation, goto 129 via 1703
task 1 0: Minimal_Complete_Actions: state 129 reduce 1 to expression, goto 119 via 1703
task 1 0: Minimal_Complete_Actions: state 119 reduce 1 to expression_opt, goto 2092 via 1703
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 2 0 0), (2353 : (SEMICOLON))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7), (INSERT, SEMICOLON, 7, 2353 9)) minimal_complete ACTIVE
task 1 0: Insert: state 637 reduce 1 to name, goto 639 via 646
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: state 978 reduce 2 to simple_expression, goto 643 via 259
task 1 0: Insert: state 643 reduce 3 to relation, goto 129 via 1703
task 1 0: Insert: insert AND: 15, ( 0 3 0 0 0 3 0 0), (256 : (AND))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7), (INSERT, AND, 7, 256 9))
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (973 : (LEFT_PAREN))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7), (INSERT, LEFT_PAREN, 7, 973 12))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: state 978 reduce 2 to simple_expression, goto 643 via 259
task 1 0: Insert: state 643 reduce 3 to relation, goto 129 via 1703
task 1 0: Insert: insert OR: 15, ( 0 3 0 0 0 3 0 0), (257 : (OR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7), (INSERT, OR, 7, 257 9))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: state 978 reduce 2 to simple_expression, goto 643 via 259
task 1 0: Insert: state 643 reduce 3 to relation, goto 129 via 1703
task 1 0: Insert: insert XOR: 15, ( 0 3 0 0 0 3 0 0), (258 : (XOR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7), (INSERT, XOR, 7, 258 9))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: insert AMPERSAND: 15, ( 0 3 0 0 0 3 0 0), (189 : (AMPERSAND))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7), (INSERT, AMPERSAND, 7, 189 12))
task 1 0: Insert: insert DOT: 15, ( 0 3 0 0 0 3 0 0), (974 : (DOT))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7), (INSERT, DOT, 7, 974 12))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (190 : (MINUS))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7), (INSERT, MINUS, 7, 190 12))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (191 : (PLUS))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7), (INSERT, PLUS, 7, 191 12))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: insert SLASH: 15, ( 0 3 0 0 0 3 0 0), (186 : (SLASH))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7), (INSERT, SLASH, 7, 186 12))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: insert STAR: 15, ( 0 3 0 0 0 3 0 0), (187 : (STAR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7), (INSERT, STAR, 7, 187 12))
task 1 0: push_back IDENTIFIER: 15, ( 0 3 0 1 0 2 0 0), (646 : (unary_adding_operator, (25 . 25)))| 6:(IDENTIFIER, (26 . 39))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7), (PUSH_BACK, IDENTIFIER, 6))
task 1 0: delete THEN: 15, ( 0 3 0 0 0 2 1 0), (637 : (IDENTIFIER, (26 . 39)))| 8:(IDENTIFIER, (49 . 68))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, STRING_LITERAL, 4, 116 8), (FAST_FORWARD,  7), (DELETE, THEN, 7))
task 1 0: enqueue: 13/ 584/716/133, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (637 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7))
task 1 0: stack: (637 : (IDENTIFIER, (26 . 39)), 646 : (unary_adding_operator, (25 . 25)), 259 : (relational_operator, (23 . 23)), 131 : (simple_expression), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Language_Fixes: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (637 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7))
task 1 0: check: (THEN, (41 . 44)): 11, ( 0 3 0 0 0 2 0 0), (637 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7))
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 637 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (637 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7))
task 1 0: stack: (637 : (IDENTIFIER, (26 . 39)), 646 : (unary_adding_operator, (25 . 25)), 259 : (relational_operator, (23 . 23)), 131 : (simple_expression), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to name)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to name
task 1 0: Minimal_Complete_Actions: state 637 reduce 1 to name, goto 639 via 646
task 1 0: Minimal_Complete_Actions: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Minimal_Complete_Actions: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Minimal_Complete_Actions: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Minimal_Complete_Actions: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Minimal_Complete_Actions: state 978 reduce 2 to simple_expression, goto 643 via 259
task 1 0: Minimal_Complete_Actions: state 643 reduce 3 to relation, goto 129 via 1703
task 1 0: Minimal_Complete_Actions: state 129 reduce 1 to expression, goto 119 via 1703
task 1 0: Minimal_Complete_Actions: state 119 reduce 1 to expression_opt, goto 2092 via 1703
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 2 0 0), (2353 : (SEMICOLON))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7), (INSERT, SEMICOLON, 7, 2353 9)) minimal_complete ACTIVE
task 1 0: Insert: state 637 reduce 1 to name, goto 639 via 646
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: state 978 reduce 2 to simple_expression, goto 643 via 259
task 1 0: Insert: state 643 reduce 3 to relation, goto 129 via 1703
task 1 0: Insert: insert AND: 15, ( 0 3 0 0 0 3 0 0), (256 : (AND))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7), (INSERT, AND, 7, 256 9))
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (973 : (LEFT_PAREN))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7), (INSERT, LEFT_PAREN, 7, 973 12))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: state 978 reduce 2 to simple_expression, goto 643 via 259
task 1 0: Insert: state 643 reduce 3 to relation, goto 129 via 1703
task 1 0: Insert: insert OR: 15, ( 0 3 0 0 0 3 0 0), (257 : (OR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7), (INSERT, OR, 7, 257 9))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: state 978 reduce 2 to simple_expression, goto 643 via 259
task 1 0: Insert: state 643 reduce 3 to relation, goto 129 via 1703
task 1 0: Insert: insert XOR: 15, ( 0 3 0 0 0 3 0 0), (258 : (XOR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7), (INSERT, XOR, 7, 258 9))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: insert AMPERSAND: 15, ( 0 3 0 0 0 3 0 0), (189 : (AMPERSAND))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7), (INSERT, AMPERSAND, 7, 189 12))
task 1 0: Insert: insert DOT: 15, ( 0 3 0 0 0 3 0 0), (974 : (DOT))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7), (INSERT, DOT, 7, 974 12))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (190 : (MINUS))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7), (INSERT, MINUS, 7, 190 12))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (191 : (PLUS))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7), (INSERT, PLUS, 7, 191 12))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: insert SLASH: 15, ( 0 3 0 0 0 3 0 0), (186 : (SLASH))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7), (INSERT, SLASH, 7, 186 12))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: insert STAR: 15, ( 0 3 0 0 0 3 0 0), (187 : (STAR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7), (INSERT, STAR, 7, 187 12))
task 1 0: push_back IDENTIFIER: 15, ( 0 3 0 1 0 2 0 0), (646 : (unary_adding_operator, (25 . 25)))| 6:(IDENTIFIER, (26 . 39))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7), (PUSH_BACK, IDENTIFIER, 6))
task 1 0: delete THEN: 15, ( 0 3 0 0 0 2 1 0), (637 : (IDENTIFIER, (26 . 39)))| 8:(IDENTIFIER, (49 . 68))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NUMERIC_LITERAL, 4, 117 8), (FAST_FORWARD,  7), (DELETE, THEN, 7))
task 1 0: enqueue: 13/ 596/729/134, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 7 0 0 0 1 0 0), (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: stack: (1721 : (SEMICOLON), 1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 7 0 0 0 1 0 0), (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1721 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 7 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: stack: (1721 : (SEMICOLON), 1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to case_statement)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to case_statement
task 1 0: Minimal_Complete_Actions: state 1721 reduce 7 to case_statement, goto 14 via 0
task 1 0: Minimal_Complete_Actions: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Minimal_Complete_Actions: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Minimal_Complete_Actions: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Minimal_Complete_Actions: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Minimal_Complete_Actions abandoned: no actions
task 1 0: Insert: state 1721 reduce 7 to case_statement, goto 14 via 0
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: state 16 reduce 0 to block_label_opt, goto 12 via 16
task 1 0: Insert: insert BEGIN: 15, ( 0 7 0 0 0 2 0 0), (136 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert CASE: 15, ( 0 7 0 0 0 2 0 0), (1 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, CASE, 4, 1 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: state 16 reduce 0 to block_label_opt, goto 12 via 16
task 1 0: Insert: insert DECLARE: 15, ( 0 7 0 0 0 2 0 0), (137 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, DECLARE, 4, 137 3)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert EXIT: 15, ( 0 7 0 0 0 2 0 0), (2 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, EXIT, 4, 2 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert FOR: 15, ( 0 7 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, FOR, 4, 3 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert FUNCTION: 15, ( 0 7 0 0 0 2 0 0), (4 : (FUNCTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, FUNCTION, 4, 4 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert IF: 15, ( 0 7 0 0 0 2 0 0), (5 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IF, 4, 5 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert LOOP: 15, ( 0 7 0 0 0 2 0 0), (6 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert PACKAGE: 15, ( 0 7 0 0 0 2 0 0), (7 : (PACKAGE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PACKAGE, 4, 7 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert PROCEDURE: 15, ( 0 7 0 0 0 2 0 0), (8 : (PROCEDURE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PROCEDURE, 4, 8 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert RETURN: 15, ( 0 7 0 0 0 2 0 0), (9 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, RETURN, 4, 9 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 7 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, SEMICOLON, 4, 2350 9), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IDENTIFIER, 4, 10 2)) minimal_complete DONE
task 1 0: enqueue: 12/ 607/741/135, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IDENTIFIER, 4, 10 8)) minimal_complete ACTIVE
task 1 0: stack: (10 : (IDENTIFIER), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IDENTIFIER, 4, 10 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 10 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IDENTIFIER, 4, 10 8)) minimal_complete ACTIVE
task 1 0: stack: (10 : (IDENTIFIER), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to name)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to name
task 1 0: Minimal_Complete_Actions: state 10 reduce 1 to name, goto 100 via 1702
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 2 0 0), (229 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IDENTIFIER, 4, 10 8), (INSERT, SEMICOLON, 4, 229 9)) minimal_complete ACTIVE
task 1 0: Insert: state 10 reduce 1 to name, goto 100 via 1702
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (140 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IDENTIFIER, 4, 10 8), (INSERT, LEFT_PAREN, 4, 140 9)) minimal_complete ACTIVE
task 1 0: Insert: insert COLON: 15, ( 0 3 0 0 0 3 0 0), (135 : (COLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IDENTIFIER, 4, 10 8), (INSERT, COLON, 4, 135 9)) minimal_complete ACTIVE
task 1 0: Insert: insert COLON_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (228 : (COLON_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IDENTIFIER, 4, 10 8), (INSERT, COLON_EQUAL, 4, 228 9)) minimal_complete ACTIVE
task 1 0: Insert: insert DOT: 15, ( 0 3 0 0 0 3 0 0), (142 : (DOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, IDENTIFIER, 4, 10 8), (INSERT, DOT, 4, 142 9)) minimal_complete ACTIVE
task 1 0: enqueue: 5/ 611/746/136, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (637 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7))
task 1 0: stack: (637 : (IDENTIFIER, (26 . 39)), 646 : (unary_adding_operator, (25 . 25)), 259 : (relational_operator, (23 . 23)), 131 : (simple_expression), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Language_Fixes: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (637 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7))
task 1 0: check: (THEN, (41 . 44)): 11, ( 0 3 0 0 0 2 0 0), (637 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7))
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 637 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (637 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7))
task 1 0: stack: (637 : (IDENTIFIER, (26 . 39)), 646 : (unary_adding_operator, (25 . 25)), 259 : (relational_operator, (23 . 23)), 131 : (simple_expression), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to name)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to name
task 1 0: Minimal_Complete_Actions: state 637 reduce 1 to name, goto 639 via 646
task 1 0: Minimal_Complete_Actions: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Minimal_Complete_Actions: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Minimal_Complete_Actions: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Minimal_Complete_Actions: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Minimal_Complete_Actions: state 978 reduce 2 to simple_expression, goto 643 via 259
task 1 0: Minimal_Complete_Actions: state 643 reduce 3 to relation, goto 129 via 1703
task 1 0: Minimal_Complete_Actions: state 129 reduce 1 to expression, goto 119 via 1703
task 1 0: Minimal_Complete_Actions: state 119 reduce 1 to expression_opt, goto 2092 via 1703
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 2 0 0), (2353 : (SEMICOLON))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7), (INSERT, SEMICOLON, 7, 2353 9)) minimal_complete ACTIVE
task 1 0: Insert: state 637 reduce 1 to name, goto 639 via 646
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: state 978 reduce 2 to simple_expression, goto 643 via 259
task 1 0: Insert: state 643 reduce 3 to relation, goto 129 via 1703
task 1 0: Insert: insert AND: 15, ( 0 3 0 0 0 3 0 0), (256 : (AND))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7), (INSERT, AND, 7, 256 9))
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (973 : (LEFT_PAREN))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7), (INSERT, LEFT_PAREN, 7, 973 12))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: state 978 reduce 2 to simple_expression, goto 643 via 259
task 1 0: Insert: state 643 reduce 3 to relation, goto 129 via 1703
task 1 0: Insert: insert OR: 15, ( 0 3 0 0 0 3 0 0), (257 : (OR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7), (INSERT, OR, 7, 257 9))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: state 978 reduce 2 to simple_expression, goto 643 via 259
task 1 0: Insert: state 643 reduce 3 to relation, goto 129 via 1703
task 1 0: Insert: insert XOR: 15, ( 0 3 0 0 0 3 0 0), (258 : (XOR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7), (INSERT, XOR, 7, 258 9))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: insert AMPERSAND: 15, ( 0 3 0 0 0 3 0 0), (189 : (AMPERSAND))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7), (INSERT, AMPERSAND, 7, 189 12))
task 1 0: Insert: insert DOT: 15, ( 0 3 0 0 0 3 0 0), (974 : (DOT))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7), (INSERT, DOT, 7, 974 12))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (190 : (MINUS))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7), (INSERT, MINUS, 7, 190 12))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: state 644 reduce 1 to term_list, goto 978 via 646
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (191 : (PLUS))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7), (INSERT, PLUS, 7, 191 12))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: insert SLASH: 15, ( 0 3 0 0 0 3 0 0), (186 : (SLASH))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7), (INSERT, SLASH, 7, 186 12))
task 1 0: Insert: state 639 reduce 1 to primary, goto 641 via 646
task 1 0: Insert: state 641 reduce 1 to factor, goto 638 via 646
task 1 0: Insert: state 638 reduce 1 to term, goto 644 via 646
task 1 0: Insert: insert STAR: 15, ( 0 3 0 0 0 3 0 0), (187 : (STAR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7), (INSERT, STAR, 7, 187 12))
task 1 0: push_back IDENTIFIER: 15, ( 0 3 0 1 0 2 0 0), (646 : (unary_adding_operator, (25 . 25)))| 6:(IDENTIFIER, (26 . 39))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7), (PUSH_BACK, IDENTIFIER, 6))
task 1 0: delete THEN: 15, ( 0 3 0 0 0 2 1 0), (637 : (IDENTIFIER, (26 . 39)))| 8:(IDENTIFIER, (49 . 68))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, IDENTIFIER, 4, 118 8), (FAST_FORWARD,  7), (DELETE, THEN, 7))
task 1 0: enqueue: 13/ 623/759/137, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (662 : (EXCEPTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, EXCEPTION, 4, 662 10)) minimal_complete ACTIVE
task 1 0: stack: (662 : (EXCEPTION), 282 : (sequence_of_statements), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (662 : (EXCEPTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, EXCEPTION, 4, 662 10)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 662 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (662 : (EXCEPTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, EXCEPTION, 4, 662 10)) minimal_complete ACTIVE
task 1 0: stack: (662 : (EXCEPTION), 282 : (sequence_of_statements), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to exception_handler_list_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to exception_handler_list_opt
task 1 0: Minimal_Complete_Actions: state 662 reduce 0 to exception_handler_list_opt, goto 994 via 662
task 1 0: Minimal_Complete_Actions: state 994 reduce 3 to handled_sequence_of_statements, goto 2355 via 2094
task 1 0: Minimal_Complete_Actions: insert END: 12, ( 0 4 0 0 0 2 0 0), (2507 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, EXCEPTION, 4, 662 10), (INSERT, END, 4, 2507 10)) minimal_complete ACTIVE
task 1 0: Insert: insert WHEN: 15, ( 0 3 0 0 0 3 0 0), (991 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, EXCEPTION, 4, 662 10), (INSERT, WHEN, 4, 991 11)) minimal_complete ACTIVE
task 1 0: enqueue: 2/ 624/761/138, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (265 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IF, 4, 265 9)) minimal_complete ACTIVE
task 1 0: stack: (265 : (IF), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (265 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IF, 4, 265 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 265 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (265 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IF, 4, 265 9)) minimal_complete ACTIVE
task 1 0: stack: (265 : (IF), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 265 reduce 0 to expression_opt, goto 651 via 265
task 1 0: Minimal_Complete_Actions: insert THEN: 12, ( 0 4 0 0 0 2 0 0), (982 : (THEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IF, 4, 265 9), (INSERT, THEN, 4, 982 11)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (65 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IF, 4, 265 9), (INSERT, LEFT_PAREN, 4, 65 10)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (66 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IF, 4, 265 9), (INSERT, NOT, 4, 66 10)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IF, 4, 265 9), (INSERT, MINUS, 4, 39 10)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IF, 4, 265 9), (INSERT, PLUS, 4, 40 10)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (67 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IF, 4, 265 9), (INSERT, STRING_LITERAL, 4, 67 10)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (68 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IF, 4, 265 9), (INSERT, NUMERIC_LITERAL, 4, 68 10)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (69 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IF, 4, 265 9), (INSERT, IDENTIFIER, 4, 69 10)) minimal_complete ACTIVE
task 1 0: enqueue: 8/ 631/769/139, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (266 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, LOOP, 4, 266 9)) minimal_complete ACTIVE
task 1 0: stack: (266 : (LOOP), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (266 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, LOOP, 4, 266 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 266 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (266 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, LOOP, 4, 266 9)) minimal_complete ACTIVE
task 1 0: stack: (266 : (LOOP), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to sequence_of_statements)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to sequence_of_statements
task 1 0: Minimal_Complete_Actions: state 266 reduce 0 to sequence_of_statements, goto 652 via 266
task 1 0: Minimal_Complete_Actions: insert END: 12, ( 0 4 0 0 0 2 0 0), (983 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, LOOP, 4, 266 9), (INSERT, END, 4, 983 11)) minimal_complete ACTIVE
task 1 0: Insert: state 266 reduce 0 to block_label_opt, goto 91 via 266
task 1 0: Insert: insert BEGIN: 15, ( 0 3 0 0 0 3 0 0), (225 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, LOOP, 4, 266 9), (INSERT, BEGIN, 4, 225 11)) minimal_complete ACTIVE
task 1 0: Insert: insert CASE: 15, ( 0 3 0 0 0 3 0 0), (85 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, LOOP, 4, 266 9), (INSERT, CASE, 4, 85 10)) minimal_complete ACTIVE
task 1 0: Insert: insert DECLARE: 15, ( 0 3 0 0 0 3 0 0), (226 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, LOOP, 4, 266 9), (INSERT, DECLARE, 4, 226 11)) minimal_complete ACTIVE
task 1 0: Insert: insert EXIT: 15, ( 0 3 0 0 0 3 0 0), (86 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, LOOP, 4, 266 9), (INSERT, EXIT, 4, 86 10)) minimal_complete ACTIVE
task 1 0: Insert: insert FOR: 15, ( 0 3 0 0 0 3 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, LOOP, 4, 266 9), (INSERT, FOR, 4, 3 10)) minimal_complete ACTIVE
task 1 0: Insert: insert IF: 15, ( 0 3 0 0 0 3 0 0), (87 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, LOOP, 4, 266 9), (INSERT, IF, 4, 87 10)) minimal_complete ACTIVE
task 1 0: Insert: insert LOOP: 15, ( 0 3 0 0 0 3 0 0), (88 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, LOOP, 4, 266 9), (INSERT, LOOP, 4, 88 10)) minimal_complete ACTIVE
task 1 0: Insert: insert RETURN: 15, ( 0 3 0 0 0 3 0 0), (89 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, LOOP, 4, 266 9), (INSERT, RETURN, 4, 89 10)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, LOOP, 4, 266 9), (INSERT, IDENTIFIER, 4, 10 10)) minimal_complete ACTIVE
task 1 0: enqueue: 10/ 640/779/140, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (656 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, DECLARE, 4, 656 10)) minimal_complete ACTIVE
task 1 0: stack: (656 : (DECLARE), 269 : (block_label_opt), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (656 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, DECLARE, 4, 656 10)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 656 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (656 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, DECLARE, 4, 656 10)) minimal_complete ACTIVE
task 1 0: stack: (656 : (DECLARE), 269 : (block_label_opt), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to declarative_part)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to declarative_part
task 1 0: Minimal_Complete_Actions: state 656 reduce 0 to declarative_part, goto 987 via 656
task 1 0: Minimal_Complete_Actions: insert BEGIN: 12, ( 0 4 0 0 0 2 0 0), (1517 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, DECLARE, 4, 656 10), (INSERT, BEGIN, 4, 1517 12)) minimal_complete ACTIVE
task 1 0: Insert: insert FUNCTION: 15, ( 0 3 0 0 0 3 0 0), (4 : (FUNCTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, DECLARE, 4, 656 10), (INSERT, FUNCTION, 4, 4 11)) minimal_complete ACTIVE
task 1 0: Insert: insert PACKAGE: 15, ( 0 3 0 0 0 3 0 0), (286 : (PACKAGE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, DECLARE, 4, 656 10), (INSERT, PACKAGE, 4, 286 11)) minimal_complete ACTIVE
task 1 0: Insert: insert PROCEDURE: 15, ( 0 3 0 0 0 3 0 0), (287 : (PROCEDURE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, DECLARE, 4, 656 10), (INSERT, PROCEDURE, 4, 287 11)) minimal_complete ACTIVE
task 1 0: Insert: insert TYPE: 15, ( 0 3 0 0 0 3 0 0), (288 : (TYPE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, DECLARE, 4, 656 10), (INSERT, TYPE, 4, 288 11)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (289 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, DECLARE, 4, 656 10), (INSERT, IDENTIFIER, 4, 289 11)) minimal_complete ACTIVE
task 1 0: enqueue: 6/ 645/785/141, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (264 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, EXIT, 4, 264 9)) minimal_complete ACTIVE
task 1 0: stack: (264 : (EXIT), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (264 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, EXIT, 4, 264 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 264 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (264 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, EXIT, 4, 264 9)) minimal_complete ACTIVE
task 1 0: stack: (264 : (EXIT), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to identifier_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to identifier_opt
task 1 0: Minimal_Complete_Actions: state 264 reduce 0 to identifier_opt, goto 650 via 264
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 2 0 0), (981 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, EXIT, 4, 264 9), (INSERT, SEMICOLON, 4, 981 11)) minimal_complete ACTIVE
task 1 0: Insert: state 264 reduce 0 to identifier_opt, goto 650 via 264
task 1 0: Insert: insert WHEN: 15, ( 0 3 0 0 0 3 0 0), (980 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, EXIT, 4, 264 9), (INSERT, WHEN, 4, 980 11)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (59 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, EXIT, 4, 264 9), (INSERT, IDENTIFIER, 4, 59 10)) minimal_complete ACTIVE
task 1 0: enqueue: 3/ 647/788/142, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 2 0 0 0 0), (783 : (NUMERIC_LITERAL))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, IS, 2, 169 3), (INSERT, WHEN, 2, 368 4), (INSERT, NUMERIC_LITERAL, 2, 783 5)) minimal_complete ACTIVE
task 1 0: stack: (783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS), 45 : (expression_opt), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (IDENTIFIER, (6 . 18)): 11, ( 0 3 0 2 0 0 0 0), (783 : (NUMERIC_LITERAL))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, IS, 2, 169 3), (INSERT, WHEN, 2, 368 4), (INSERT, NUMERIC_LITERAL, 2, 783 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 783 : 2:(IDENTIFIER, (6 . 18)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 2 0 0 0 0), Error (IDENTIFIER, (6 . 18)) (783 : (NUMERIC_LITERAL))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, IS, 2, 169 3), (INSERT, WHEN, 2, 368 4), (INSERT, NUMERIC_LITERAL, 2, 783 5)) minimal_complete ACTIVE
task 1 0: stack: (783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS), 45 : (expression_opt), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift EQUAL_GREATER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift EQUAL_GREATER
task 1 0: Minimal_Complete_Actions: insert EQUAL_GREATER: 12, ( 0 4 0 2 0 0 0 0), (1216 : (EQUAL_GREATER))| 2:(IDENTIFIER, (6 . 18))|((PUSH_BACK, IS, 3), (PUSH_BACK, expression_opt, 2), (INSERT, IS, 2, 169 3), (INSERT, WHEN, 2, 368 4), (INSERT, NUMERIC_LITERAL, 2, 783 5), (INSERT, EQUAL_GREATER, 2, 1216 6)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 647/789/143, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (142 : (DOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, DOT, 4, 142 8)) minimal_complete ACTIVE
task 1 0: stack: (142 : (DOT), 1714 : (name), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (142 : (DOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, DOT, 4, 142 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 142 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (142 : (DOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, DOT, 4, 142 8)) minimal_complete ACTIVE
task 1 0: stack: (142 : (DOT), 1714 : (name), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift IDENTIFIER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift IDENTIFIER
task 1 0: Minimal_Complete_Actions: insert IDENTIFIER: 12, ( 0 4 0 0 0 2 0 0), (329 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, DOT, 4, 142 8), (INSERT, IDENTIFIER, 4, 329 9)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 647/790/144, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (69 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, IDENTIFIER, 4, 69 8)) minimal_complete ACTIVE
task 1 0: stack: (69 : (IDENTIFIER), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (69 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, IDENTIFIER, 4, 69 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 69 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, name,2) via 1701
task 1 0: check: 73 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, primary,2) via 1701
task 1 0: check: 75 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, factor,0) via 1701
task 1 0: check: 72 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term,1) via 1701
task 1 0: check: 82 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term_list,1) via 1701
task 1 0: check: 83 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, simple_expression,1) via 1701
task 1 0: check: 81 : 4:(EQUAL, (23 . 23)) : (Shift, 179)
task 1 0: check: 179 : 5:(PLUS, (25 . 25)) : (Reduce, 1, relational_operator,0) via 81
task 1 0: check: 215 : 5:(PLUS, (25 . 25)) : (Shift, 40)
task 1 0: check: 40 : 6:(IDENTIFIER, (26 . 39)) : (Reduce, 1, unary_adding_operator,0) via 215
task 1 0: check: 551 : 6:(IDENTIFIER, (26 . 39)) : (Shift, 542)
task 1 0: check: 542 : 7:(THEN, (41 . 44)) : (Reduce, 1, name,2) via 551
task 1 0: check: 544 : 7:(THEN, (41 . 44)) : (Reduce, 1, primary,2) via 551
task 1 0: check: 546 : 7:(THEN, (41 . 44)) : (Reduce, 1, factor,0) via 551
task 1 0: check: 543 : 7:(THEN, (41 . 44)) : (Reduce, 1, term,1) via 551
task 1 0: check: 549 : 7:(THEN, (41 . 44)) : (Reduce, 1, term_list,1) via 551
task 1 0: check: 898 : 7:(THEN, (41 . 44)) : (Reduce, 2, simple_expression,0) via 215
task 1 0: check: 548 : 7:(THEN, (41 . 44)) : (Reduce, 3, relation,0) via 1701
task 1 0: check: 79 : 7:(THEN, (41 . 44)) : (Reduce, 1, expression,0) via 1701
task 1 0: check: 70 : 7:(THEN, (41 . 44)) : (Reduce, 1, expression_opt,0) via 1701
task 1 0: check: 2090 : 7:(THEN, (41 . 44)) : (Shift, 2351)
task 1 0: enqueue: 0/ 646/790/145, min cost: 11, active workers: 0
task 1 0: succeed: enqueue 791, check  145: 11, ( 0 3 0 0 0 2 0 0), (69 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, IDENTIFIER, 4, 69 8)) minimal_complete ACTIVE
task 1 0: dequeue: 11, ( 0 7 0 0 0 1 0 0), (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: stack: (1721 : (SEMICOLON), 1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 7 0 0 0 1 0 0), (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1721 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 7 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (1721 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7)) minimal_complete ACTIVE
task 1 0: stack: (1721 : (SEMICOLON), 1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to case_statement)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to case_statement
task 1 0: Minimal_Complete_Actions: state 1721 reduce 7 to case_statement, goto 14 via 0
task 1 0: Minimal_Complete_Actions: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Minimal_Complete_Actions: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Minimal_Complete_Actions: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Minimal_Complete_Actions: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Minimal_Complete_Actions abandoned: no actions
task 1 0: Insert: state 1721 reduce 7 to case_statement, goto 14 via 0
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: state 16 reduce 0 to block_label_opt, goto 12 via 16
task 1 0: Insert: insert BEGIN: 15, ( 0 7 0 0 0 2 0 0), (136 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, BEGIN, 4, 136 3)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert CASE: 15, ( 0 7 0 0 0 2 0 0), (1 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, CASE, 4, 1 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: state 16 reduce 0 to block_label_opt, goto 12 via 16
task 1 0: Insert: insert DECLARE: 15, ( 0 7 0 0 0 2 0 0), (137 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, DECLARE, 4, 137 3)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert EXIT: 15, ( 0 7 0 0 0 2 0 0), (2 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, EXIT, 4, 2 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert FOR: 15, ( 0 7 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, FOR, 4, 3 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert FUNCTION: 15, ( 0 7 0 0 0 2 0 0), (4 : (FUNCTION))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, FUNCTION, 4, 4 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert IF: 15, ( 0 7 0 0 0 2 0 0), (5 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IF, 4, 5 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert LOOP: 15, ( 0 7 0 0 0 2 0 0), (6 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, LOOP, 4, 6 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert PACKAGE: 15, ( 0 7 0 0 0 2 0 0), (7 : (PACKAGE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PACKAGE, 4, 7 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert PROCEDURE: 15, ( 0 7 0 0 0 2 0 0), (8 : (PROCEDURE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, PROCEDURE, 4, 8 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert RETURN: 15, ( 0 7 0 0 0 2 0 0), (9 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, RETURN, 4, 9 2)) minimal_complete DONE
task 1 0: Insert: state 14 reduce 1 to compound_statement, goto 17 via 0
task 1 0: Insert: state 17 reduce 1 to statement, goto 33 via 0
task 1 0: Insert: state 33 reduce 1 to compilation_unit, goto 15 via 0
task 1 0: Insert: state 15 reduce 1 to compilation_unit_list, goto 16 via 0
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 7 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IDENTIFIER, 4, 10 7), (INSERT, SEMICOLON, 4, 2098 8), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6), (INSERT, SEMICOLON, 4, 1721 7), (INSERT, IDENTIFIER, 4, 10 2)) minimal_complete DONE
task 1 0: enqueue: 12/ 657/802/146, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (41 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8)) minimal_complete ACTIVE
task 1 0: stack: (41 : (STRING_LITERAL), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (41 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 41 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, primary,1) via 1699
task 1 0: check: 49 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, factor,0) via 1699
task 1 0: check: 46 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term,1) via 1699
task 1 0: check: 56 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term_list,1) via 1699
task 1 0: check: 57 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, simple_expression,1) via 1699
task 1 0: check: 55 : 4:(EQUAL, (23 . 23)) : (Shift, 179)
task 1 0: check: 179 : 5:(PLUS, (25 . 25)) : (Reduce, 1, relational_operator,0) via 55
task 1 0: check: 185 : 5:(PLUS, (25 . 25)) : (Shift, 40)
task 1 0: check: 40 : 6:(IDENTIFIER, (26 . 39)) : (Reduce, 1, unary_adding_operator,0) via 185
task 1 0: check: 435 : 6:(IDENTIFIER, (26 . 39)) : (Shift, 426)
task 1 0: check: 426 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: new error point : 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (426 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7))
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), (41 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8)) minimal_complete ACTIVE
task 1 0: stack: (41 : (STRING_LITERAL), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to primary)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to primary
task 1 0: Minimal_Complete_Actions: state 41 reduce 1 to primary, goto 49 via 1699
task 1 0: Minimal_Complete_Actions: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Minimal_Complete_Actions: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Minimal_Complete_Actions: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Minimal_Complete_Actions: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Minimal_Complete_Actions: state 55 reduce 1 to relation, goto 53 via 1699
task 1 0: Minimal_Complete_Actions: state 53 reduce 1 to expression, goto 44 via 1699
task 1 0: Minimal_Complete_Actions: state 44 reduce 1 to expression_opt, goto 2088 via 1699
task 1 0: Minimal_Complete_Actions: insert IS: 12, ( 0 4 0 0 0 2 0 0), (2348 : (IS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (INSERT, IS, 4, 2348 9)) minimal_complete ACTIVE
task 1 0: Insert: state 41 reduce 1 to primary, goto 49 via 1699
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: state 55 reduce 1 to relation, goto 53 via 1699
task 1 0: Insert: insert AND: 15, ( 0 3 0 0 0 3 0 0), (176 : (AND))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (INSERT, AND, 4, 176 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: state 55 reduce 1 to relation, goto 53 via 1699
task 1 0: Insert: insert OR: 15, ( 0 3 0 0 0 3 0 0), (177 : (OR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (INSERT, OR, 4, 177 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: state 55 reduce 1 to relation, goto 53 via 1699
task 1 0: Insert: insert XOR: 15, ( 0 3 0 0 0 3 0 0), (178 : (XOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (INSERT, XOR, 4, 178 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: insert AMPERSAND: 15, ( 0 3 0 0 0 3 0 0), (189 : (AMPERSAND))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (INSERT, AMPERSAND, 4, 189 9)) minimal_complete ACTIVE
task 1 0: Insert: abandon EQUAL: current token
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert GREATER: 15, ( 0 3 0 0 0 3 0 0), (180 : (GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (INSERT, GREATER, 4, 180 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert GREATER_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (181 : (GREATER_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (INSERT, GREATER_EQUAL, 4, 181 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert LESS: 15, ( 0 3 0 0 0 3 0 0), (182 : (LESS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (INSERT, LESS, 4, 182 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert LESS_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (183 : (LESS_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (INSERT, LESS_EQUAL, 4, 183 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (190 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (INSERT, MINUS, 4, 190 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (191 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (INSERT, PLUS, 4, 191 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: insert SLASH: 15, ( 0 3 0 0 0 3 0 0), (186 : (SLASH))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (INSERT, SLASH, 4, 186 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert SLASH_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (184 : (SLASH_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (INSERT, SLASH_EQUAL, 4, 184 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: insert STAR: 15, ( 0 3 0 0 0 3 0 0), (187 : (STAR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (INSERT, STAR, 4, 187 9)) minimal_complete ACTIVE
task 1 0: enqueue: 15/ 671/817/147, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (42 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8)) minimal_complete ACTIVE
task 1 0: stack: (42 : (NUMERIC_LITERAL), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (42 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 42 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, primary,0) via 1699
task 1 0: check: 49 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, factor,0) via 1699
task 1 0: check: 46 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term,1) via 1699
task 1 0: check: 56 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, term_list,1) via 1699
task 1 0: check: 57 : 4:(EQUAL, (23 . 23)) : (Reduce, 1, simple_expression,1) via 1699
task 1 0: check: 55 : 4:(EQUAL, (23 . 23)) : (Shift, 179)
task 1 0: check: 179 : 5:(PLUS, (25 . 25)) : (Reduce, 1, relational_operator,0) via 55
task 1 0: check: 185 : 5:(PLUS, (25 . 25)) : (Shift, 40)
task 1 0: check: 40 : 6:(IDENTIFIER, (26 . 39)) : (Reduce, 1, unary_adding_operator,0) via 185
task 1 0: check: 435 : 6:(IDENTIFIER, (26 . 39)) : (Shift, 426)
task 1 0: check: 426 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: new error point : 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (426 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7))
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), (42 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8)) minimal_complete ACTIVE
task 1 0: stack: (42 : (NUMERIC_LITERAL), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to primary)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to primary
task 1 0: Minimal_Complete_Actions: state 42 reduce 1 to primary, goto 49 via 1699
task 1 0: Minimal_Complete_Actions: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Minimal_Complete_Actions: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Minimal_Complete_Actions: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Minimal_Complete_Actions: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Minimal_Complete_Actions: state 55 reduce 1 to relation, goto 53 via 1699
task 1 0: Minimal_Complete_Actions: state 53 reduce 1 to expression, goto 44 via 1699
task 1 0: Minimal_Complete_Actions: state 44 reduce 1 to expression_opt, goto 2088 via 1699
task 1 0: Minimal_Complete_Actions: insert IS: 12, ( 0 4 0 0 0 2 0 0), (2348 : (IS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (INSERT, IS, 4, 2348 9)) minimal_complete ACTIVE
task 1 0: Insert: state 42 reduce 1 to primary, goto 49 via 1699
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: state 55 reduce 1 to relation, goto 53 via 1699
task 1 0: Insert: insert AND: 15, ( 0 3 0 0 0 3 0 0), (176 : (AND))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (INSERT, AND, 4, 176 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: state 55 reduce 1 to relation, goto 53 via 1699
task 1 0: Insert: insert OR: 15, ( 0 3 0 0 0 3 0 0), (177 : (OR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (INSERT, OR, 4, 177 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: state 55 reduce 1 to relation, goto 53 via 1699
task 1 0: Insert: insert XOR: 15, ( 0 3 0 0 0 3 0 0), (178 : (XOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (INSERT, XOR, 4, 178 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: insert AMPERSAND: 15, ( 0 3 0 0 0 3 0 0), (189 : (AMPERSAND))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (INSERT, AMPERSAND, 4, 189 9)) minimal_complete ACTIVE
task 1 0: Insert: abandon EQUAL: current token
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert GREATER: 15, ( 0 3 0 0 0 3 0 0), (180 : (GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (INSERT, GREATER, 4, 180 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert GREATER_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (181 : (GREATER_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (INSERT, GREATER_EQUAL, 4, 181 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert LESS: 15, ( 0 3 0 0 0 3 0 0), (182 : (LESS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (INSERT, LESS, 4, 182 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert LESS_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (183 : (LESS_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (INSERT, LESS_EQUAL, 4, 183 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (190 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (INSERT, MINUS, 4, 190 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (191 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (INSERT, PLUS, 4, 191 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: insert SLASH: 15, ( 0 3 0 0 0 3 0 0), (186 : (SLASH))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (INSERT, SLASH, 4, 186 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: state 56 reduce 1 to term_list, goto 57 via 1699
task 1 0: Insert: state 57 reduce 1 to simple_expression, goto 55 via 1699
task 1 0: Insert: insert SLASH_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (184 : (SLASH_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (INSERT, SLASH_EQUAL, 4, 184 9)) minimal_complete ACTIVE
task 1 0: Insert: state 49 reduce 1 to factor, goto 46 via 1699
task 1 0: Insert: state 46 reduce 1 to term, goto 56 via 1699
task 1 0: Insert: insert STAR: 15, ( 0 3 0 0 0 3 0 0), (187 : (STAR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (INSERT, STAR, 4, 187 9)) minimal_complete ACTIVE
task 1 0: enqueue: 15/ 685/832/148, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (426 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7))
task 1 0: stack: (426 : (IDENTIFIER, (26 . 39)), 435 : (unary_adding_operator, (25 . 25)), 185 : (relational_operator, (23 . 23)), 55 : (simple_expression), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Language_Fixes: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (426 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7))
task 1 0: check: (THEN, (41 . 44)): 11, ( 0 3 0 0 0 2 0 0), (426 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7))
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 426 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (426 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7))
task 1 0: stack: (426 : (IDENTIFIER, (26 . 39)), 435 : (unary_adding_operator, (25 . 25)), 185 : (relational_operator, (23 . 23)), 55 : (simple_expression), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to name)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to name
task 1 0: Minimal_Complete_Actions: state 426 reduce 1 to name, goto 428 via 435
task 1 0: Minimal_Complete_Actions: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Minimal_Complete_Actions: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Minimal_Complete_Actions: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Minimal_Complete_Actions: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Minimal_Complete_Actions: state 822 reduce 2 to simple_expression, goto 432 via 185
task 1 0: Minimal_Complete_Actions: state 432 reduce 3 to relation, goto 53 via 1699
task 1 0: Minimal_Complete_Actions: state 53 reduce 1 to expression, goto 44 via 1699
task 1 0: Minimal_Complete_Actions: state 44 reduce 1 to expression_opt, goto 2088 via 1699
task 1 0: Minimal_Complete_Actions: insert IS: 12, ( 0 4 0 0 0 2 0 0), (2348 : (IS))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7), (INSERT, IS, 7, 2348 9)) minimal_complete ACTIVE
task 1 0: Insert: state 426 reduce 1 to name, goto 428 via 435
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: state 822 reduce 2 to simple_expression, goto 432 via 185
task 1 0: Insert: state 432 reduce 3 to relation, goto 53 via 1699
task 1 0: Insert: insert AND: 15, ( 0 3 0 0 0 3 0 0), (176 : (AND))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7), (INSERT, AND, 7, 176 9))
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (817 : (LEFT_PAREN))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7), (INSERT, LEFT_PAREN, 7, 817 12))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: state 822 reduce 2 to simple_expression, goto 432 via 185
task 1 0: Insert: state 432 reduce 3 to relation, goto 53 via 1699
task 1 0: Insert: insert OR: 15, ( 0 3 0 0 0 3 0 0), (177 : (OR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7), (INSERT, OR, 7, 177 9))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: state 822 reduce 2 to simple_expression, goto 432 via 185
task 1 0: Insert: state 432 reduce 3 to relation, goto 53 via 1699
task 1 0: Insert: insert XOR: 15, ( 0 3 0 0 0 3 0 0), (178 : (XOR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7), (INSERT, XOR, 7, 178 9))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: insert AMPERSAND: 15, ( 0 3 0 0 0 3 0 0), (189 : (AMPERSAND))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7), (INSERT, AMPERSAND, 7, 189 12))
task 1 0: Insert: insert DOT: 15, ( 0 3 0 0 0 3 0 0), (818 : (DOT))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7), (INSERT, DOT, 7, 818 12))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (190 : (MINUS))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7), (INSERT, MINUS, 7, 190 12))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (191 : (PLUS))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7), (INSERT, PLUS, 7, 191 12))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: insert SLASH: 15, ( 0 3 0 0 0 3 0 0), (186 : (SLASH))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7), (INSERT, SLASH, 7, 186 12))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: insert STAR: 15, ( 0 3 0 0 0 3 0 0), (187 : (STAR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7), (INSERT, STAR, 7, 187 12))
task 1 0: push_back IDENTIFIER: 15, ( 0 3 0 1 0 2 0 0), (435 : (unary_adding_operator, (25 . 25)))| 6:(IDENTIFIER, (26 . 39))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7), (PUSH_BACK, IDENTIFIER, 6))
task 1 0: delete THEN: 15, ( 0 3 0 0 0 2 1 0), (426 : (IDENTIFIER, (26 . 39)))| 8:(IDENTIFIER, (49 . 68))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, STRING_LITERAL, 4, 41 8), (FAST_FORWARD,  7), (DELETE, THEN, 7))
task 1 0: enqueue: 13/ 697/845/149, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (426 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7))
task 1 0: stack: (426 : (IDENTIFIER, (26 . 39)), 435 : (unary_adding_operator, (25 . 25)), 185 : (relational_operator, (23 . 23)), 55 : (simple_expression), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Language_Fixes: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (426 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7))
task 1 0: check: (THEN, (41 . 44)): 11, ( 0 3 0 0 0 2 0 0), (426 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7))
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 426 : 7:(THEN, (41 . 44)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (THEN, (41 . 44)) (426 : (IDENTIFIER, (26 . 39)))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7))
task 1 0: stack: (426 : (IDENTIFIER, (26 . 39)), 435 : (unary_adding_operator, (25 . 25)), 185 : (relational_operator, (23 . 23)), 55 : (simple_expression), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to name)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to name
task 1 0: Minimal_Complete_Actions: state 426 reduce 1 to name, goto 428 via 435
task 1 0: Minimal_Complete_Actions: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Minimal_Complete_Actions: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Minimal_Complete_Actions: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Minimal_Complete_Actions: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Minimal_Complete_Actions: state 822 reduce 2 to simple_expression, goto 432 via 185
task 1 0: Minimal_Complete_Actions: state 432 reduce 3 to relation, goto 53 via 1699
task 1 0: Minimal_Complete_Actions: state 53 reduce 1 to expression, goto 44 via 1699
task 1 0: Minimal_Complete_Actions: state 44 reduce 1 to expression_opt, goto 2088 via 1699
task 1 0: Minimal_Complete_Actions: insert IS: 12, ( 0 4 0 0 0 2 0 0), (2348 : (IS))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7), (INSERT, IS, 7, 2348 9)) minimal_complete ACTIVE
task 1 0: Insert: state 426 reduce 1 to name, goto 428 via 435
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: state 822 reduce 2 to simple_expression, goto 432 via 185
task 1 0: Insert: state 432 reduce 3 to relation, goto 53 via 1699
task 1 0: Insert: insert AND: 15, ( 0 3 0 0 0 3 0 0), (176 : (AND))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7), (INSERT, AND, 7, 176 9))
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (817 : (LEFT_PAREN))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7), (INSERT, LEFT_PAREN, 7, 817 12))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: state 822 reduce 2 to simple_expression, goto 432 via 185
task 1 0: Insert: state 432 reduce 3 to relation, goto 53 via 1699
task 1 0: Insert: insert OR: 15, ( 0 3 0 0 0 3 0 0), (177 : (OR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7), (INSERT, OR, 7, 177 9))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: state 822 reduce 2 to simple_expression, goto 432 via 185
task 1 0: Insert: state 432 reduce 3 to relation, goto 53 via 1699
task 1 0: Insert: insert XOR: 15, ( 0 3 0 0 0 3 0 0), (178 : (XOR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7), (INSERT, XOR, 7, 178 9))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: insert AMPERSAND: 15, ( 0 3 0 0 0 3 0 0), (189 : (AMPERSAND))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7), (INSERT, AMPERSAND, 7, 189 12))
task 1 0: Insert: insert DOT: 15, ( 0 3 0 0 0 3 0 0), (818 : (DOT))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7), (INSERT, DOT, 7, 818 12))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (190 : (MINUS))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7), (INSERT, MINUS, 7, 190 12))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: state 433 reduce 1 to term_list, goto 822 via 435
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (191 : (PLUS))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7), (INSERT, PLUS, 7, 191 12))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: insert SLASH: 15, ( 0 3 0 0 0 3 0 0), (186 : (SLASH))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7), (INSERT, SLASH, 7, 186 12))
task 1 0: Insert: state 428 reduce 1 to primary, goto 430 via 435
task 1 0: Insert: state 430 reduce 1 to factor, goto 427 via 435
task 1 0: Insert: state 427 reduce 1 to term, goto 433 via 435
task 1 0: Insert: insert STAR: 15, ( 0 3 0 0 0 3 0 0), (187 : (STAR))| 7:(THEN, (41 . 44))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7), (INSERT, STAR, 7, 187 12))
task 1 0: push_back IDENTIFIER: 15, ( 0 3 0 1 0 2 0 0), (435 : (unary_adding_operator, (25 . 25)))| 6:(IDENTIFIER, (26 . 39))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7), (PUSH_BACK, IDENTIFIER, 6))
task 1 0: delete THEN: 15, ( 0 3 0 0 0 2 1 0), (426 : (IDENTIFIER, (26 . 39)))| 8:(IDENTIFIER, (49 . 68))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NUMERIC_LITERAL, 4, 42 8), (FAST_FORWARD,  7), (DELETE, THEN, 7))
task 1 0: enqueue: 13/ 709/858/150, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (85 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, CASE, 4, 85 8)) minimal_complete ACTIVE
task 1 0: stack: (85 : (CASE), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (85 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, CASE, 4, 85 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 85 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (85 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, CASE, 4, 85 8)) minimal_complete ACTIVE
task 1 0: stack: (85 : (CASE), 1702 : (LOOP), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 85 reduce 0 to expression_opt, goto 219 via 85
task 1 0: Minimal_Complete_Actions: insert IS: 12, ( 0 4 0 0 0 2 0 0), (554 : (IS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, CASE, 4, 85 8), (INSERT, IS, 4, 554 10)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (37 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, CASE, 4, 85 8), (INSERT, LEFT_PAREN, 4, 37 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (38 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, CASE, 4, 85 8), (INSERT, NOT, 4, 38 9)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, CASE, 4, 85 8), (INSERT, MINUS, 4, 39 9)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, CASE, 4, 85 8), (INSERT, PLUS, 4, 40 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (41 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, CASE, 4, 85 8), (INSERT, STRING_LITERAL, 4, 41 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (42 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, CASE, 4, 85 8), (INSERT, NUMERIC_LITERAL, 4, 42 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (43 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, LOOP, 4, 1702 7), (INSERT, CASE, 4, 85 8), (INSERT, IDENTIFIER, 4, 43 9)) minimal_complete ACTIVE
task 1 0: enqueue: 8/ 716/866/151, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, FOR, 4, 3 9)) minimal_complete ACTIVE
task 1 0: stack: (3 : (FOR), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, FOR, 4, 3 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 3 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, FOR, 4, 3 9)) minimal_complete ACTIVE
task 1 0: stack: (3 : (FOR), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift IDENTIFIER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift IDENTIFIER
task 1 0: Minimal_Complete_Actions: insert IDENTIFIER: 12, ( 0 4 0 0 0 2 0 0), (61 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, FOR, 4, 3 9), (INSERT, IDENTIFIER, 4, 61 10)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 716/867/152, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (287 : (PROCEDURE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, PROCEDURE, 4, 287 9)) minimal_complete ACTIVE
task 1 0: stack: (287 : (PROCEDURE), 2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (287 : (PROCEDURE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, PROCEDURE, 4, 287 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 287 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (287 : (PROCEDURE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, PROCEDURE, 4, 287 9)) minimal_complete ACTIVE
task 1 0: stack: (287 : (PROCEDURE), 2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift IDENTIFIER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift IDENTIFIER
task 1 0: Minimal_Complete_Actions: insert IDENTIFIER: 12, ( 0 4 0 0 0 2 0 0), (111 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, PROCEDURE, 4, 287 9), (INSERT, IDENTIFIER, 4, 111 10)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 716/868/153, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (288 : (TYPE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, TYPE, 4, 288 9)) minimal_complete ACTIVE
task 1 0: stack: (288 : (TYPE), 2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (288 : (TYPE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, TYPE, 4, 288 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 288 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (288 : (TYPE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, TYPE, 4, 288 9)) minimal_complete ACTIVE
task 1 0: stack: (288 : (TYPE), 2095 : (DECLARE), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift IDENTIFIER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift IDENTIFIER
task 1 0: Minimal_Complete_Actions: insert IDENTIFIER: 12, ( 0 4 0 0 0 2 0 0), (665 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, TYPE, 4, 288 9), (INSERT, IDENTIFIER, 4, 665 10)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 716/869/154, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 7 0 0 0 1 0 0), (1216 : (EQUAL_GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11), (INSERT, EQUAL_GREATER, 4, 1216 12)) minimal_complete ACTIVE
task 1 0: stack: (1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 2348 : (IS), 2088 : (expression_opt), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 7 0 0 0 1 0 0), (1216 : (EQUAL_GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11), (INSERT, EQUAL_GREATER, 4, 1216 12)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 1216 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 7 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (1216 : (EQUAL_GREATER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11), (INSERT, EQUAL_GREATER, 4, 1216 12)) minimal_complete ACTIVE
task 1 0: stack: (1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 2348 : (IS), 2088 : (expression_opt), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to sequence_of_statements)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to sequence_of_statements
task 1 0: Minimal_Complete_Actions: state 1216 reduce 0 to sequence_of_statements, goto 1717 via 1216
task 1 0: Minimal_Complete_Actions: state 1717 reduce 4 to case_statement_alternative, goto 369 via 2348
task 1 0: Minimal_Complete_Actions: state 369 reduce 1 to case_statement_alternative_list, goto 2503 via 2348
task 1 0: Minimal_Complete_Actions: insert END: 12, ( 0 8 0 0 0 1 0 0), (2644 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11), (INSERT, EQUAL_GREATER, 4, 1216 12), (INSERT, END, 4, 2644 11)) minimal_complete ACTIVE
task 1 0: Insert: state 1216 reduce 0 to block_label_opt, goto 1705 via 1216
task 1 0: Insert: insert BEGIN: 15, ( 0 7 0 0 0 2 0 0), (2094 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11), (INSERT, EQUAL_GREATER, 4, 1216 12), (INSERT, BEGIN, 4, 2094 14)) minimal_complete ACTIVE
task 1 0: Insert: insert CASE: 15, ( 0 7 0 0 0 2 0 0), (1699 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11), (INSERT, EQUAL_GREATER, 4, 1216 12), (INSERT, CASE, 4, 1699 13)) minimal_complete ACTIVE
task 1 0: Insert: insert DECLARE: 15, ( 0 7 0 0 0 2 0 0), (2095 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11), (INSERT, EQUAL_GREATER, 4, 1216 12), (INSERT, DECLARE, 4, 2095 14)) minimal_complete ACTIVE
task 1 0: Insert: insert EXIT: 15, ( 0 7 0 0 0 2 0 0), (1700 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11), (INSERT, EQUAL_GREATER, 4, 1216 12), (INSERT, EXIT, 4, 1700 13)) minimal_complete ACTIVE
task 1 0: Insert: insert FOR: 15, ( 0 7 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11), (INSERT, EQUAL_GREATER, 4, 1216 12), (INSERT, FOR, 4, 3 13)) minimal_complete ACTIVE
task 1 0: Insert: insert IF: 15, ( 0 7 0 0 0 2 0 0), (1701 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11), (INSERT, EQUAL_GREATER, 4, 1216 12), (INSERT, IF, 4, 1701 13)) minimal_complete ACTIVE
task 1 0: Insert: insert LOOP: 15, ( 0 7 0 0 0 2 0 0), (1702 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11), (INSERT, EQUAL_GREATER, 4, 1216 12), (INSERT, LOOP, 4, 1702 13)) minimal_complete ACTIVE
task 1 0: Insert: insert RETURN: 15, ( 0 7 0 0 0 2 0 0), (1703 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11), (INSERT, EQUAL_GREATER, 4, 1216 12), (INSERT, RETURN, 4, 1703 13)) minimal_complete ACTIVE
task 1 0: Insert: state 1216 reduce 0 to sequence_of_statements, goto 1717 via 1216
task 1 0: Insert: state 1717 reduce 4 to case_statement_alternative, goto 369 via 2348
task 1 0: Insert: state 369 reduce 1 to case_statement_alternative_list, goto 2503 via 2348
task 1 0: Insert: insert WHEN: 15, ( 0 7 0 0 0 2 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11), (INSERT, EQUAL_GREATER, 4, 1216 12), (INSERT, WHEN, 4, 368 11)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 7 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, IS, 4, 2348 9), (INSERT, WHEN, 4, 368 10), (INSERT, NUMERIC_LITERAL, 4, 783 11), (INSERT, EQUAL_GREATER, 4, 1216 12), (INSERT, IDENTIFIER, 4, 10 13)) minimal_complete ACTIVE
task 1 0: enqueue: 11/ 726/880/155, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (37 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, LEFT_PAREN, 4, 37 8)) minimal_complete ACTIVE
task 1 0: stack: (37 : (LEFT_PAREN), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (37 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, LEFT_PAREN, 4, 37 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 37 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (37 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, LEFT_PAREN, 4, 37 8)) minimal_complete ACTIVE
task 1 0: stack: (37 : (LEFT_PAREN), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 37 reduce 0 to expression_opt, goto 154 via 37
task 1 0: Minimal_Complete_Actions: insert RIGHT_PAREN: 12, ( 0 4 0 0 0 2 0 0), (354 : (RIGHT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, LEFT_PAREN, 4, 37 8), (INSERT, RIGHT_PAREN, 4, 354 10)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (148 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, LEFT_PAREN, 4, 37 8), (INSERT, LEFT_PAREN, 4, 148 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (149 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, LEFT_PAREN, 4, 37 8), (INSERT, NOT, 4, 149 9)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, LEFT_PAREN, 4, 37 8), (INSERT, MINUS, 4, 39 9)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, LEFT_PAREN, 4, 37 8), (INSERT, PLUS, 4, 40 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (150 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, LEFT_PAREN, 4, 37 8), (INSERT, STRING_LITERAL, 4, 150 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (151 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, LEFT_PAREN, 4, 37 8), (INSERT, NUMERIC_LITERAL, 4, 151 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (152 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, LEFT_PAREN, 4, 37 8), (INSERT, IDENTIFIER, 4, 152 9)) minimal_complete ACTIVE
task 1 0: enqueue: 8/ 733/888/156, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (38 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NOT, 4, 38 8)) minimal_complete ACTIVE
task 1 0: stack: (38 : (NOT), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (38 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NOT, 4, 38 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 38 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (38 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NOT, 4, 38 8)) minimal_complete ACTIVE
task 1 0: stack: (38 : (NOT), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift NUMERIC_LITERAL)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift NUMERIC_LITERAL
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 12, ( 0 4 0 0 0 2 0 0), (42 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NOT, 4, 38 8), (INSERT, NUMERIC_LITERAL, 4, 42 9)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (37 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NOT, 4, 38 8), (INSERT, LEFT_PAREN, 4, 37 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (41 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NOT, 4, 38 8), (INSERT, STRING_LITERAL, 4, 41 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (43 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, NOT, 4, 38 8), (INSERT, IDENTIFIER, 4, 43 9)) minimal_complete ACTIVE
task 1 0: enqueue: 4/ 736/892/157, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 7 0 0 0 1 0 0), (2818 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12), (INSERT, SEMICOLON, 4, 2818 13)) minimal_complete ACTIVE
task 1 0: stack: (2818 : (SEMICOLON), 2725 : (IF), 2647 : (END), 2505 : (sequence_of_statements), 2351 : (THEN), 2090 : (expression_opt), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 7 0 0 0 1 0 0), (2818 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12), (INSERT, SEMICOLON, 4, 2818 13)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2818 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 7 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (2818 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12), (INSERT, SEMICOLON, 4, 2818 13)) minimal_complete ACTIVE
task 1 0: stack: (2818 : (SEMICOLON), 2725 : (IF), 2647 : (END), 2505 : (sequence_of_statements), 2351 : (THEN), 2090 : (expression_opt), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to if_statement)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to if_statement
task 1 0: Minimal_Complete_Actions: state 2818 reduce 7 to if_statement, goto 1711 via 1216
task 1 0: Minimal_Complete_Actions: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Minimal_Complete_Actions: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Minimal_Complete_Actions: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Minimal_Complete_Actions: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 0: Minimal_Complete_Actions: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Minimal_Complete_Actions: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Minimal_Complete_Actions: insert END: 12, ( 0 8 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12), (INSERT, SEMICOLON, 4, 2818 13), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: Insert: state 2818 reduce 7 to if_statement, goto 1711 via 1216
task 1 0: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 0: Insert: insert BEGIN: 15, ( 0 7 0 0 0 2 0 0), (2094 : (BEGIN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12), (INSERT, SEMICOLON, 4, 2818 13), (INSERT, BEGIN, 4, 2094 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert CASE: 15, ( 0 7 0 0 0 2 0 0), (1699 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12), (INSERT, SEMICOLON, 4, 2818 13), (INSERT, CASE, 4, 1699 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 0: Insert: insert DECLARE: 15, ( 0 7 0 0 0 2 0 0), (2095 : (DECLARE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12), (INSERT, SEMICOLON, 4, 2818 13), (INSERT, DECLARE, 4, 2095 9)) minimal_complete ACTIVE
task 1 0: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert EXIT: 15, ( 0 7 0 0 0 2 0 0), (1700 : (EXIT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12), (INSERT, SEMICOLON, 4, 2818 13), (INSERT, EXIT, 4, 1700 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert FOR: 15, ( 0 7 0 0 0 2 0 0), (3 : (FOR))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12), (INSERT, SEMICOLON, 4, 2818 13), (INSERT, FOR, 4, 3 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert IF: 15, ( 0 7 0 0 0 2 0 0), (1701 : (IF))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12), (INSERT, SEMICOLON, 4, 2818 13), (INSERT, IF, 4, 1701 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert LOOP: 15, ( 0 7 0 0 0 2 0 0), (1702 : (LOOP))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12), (INSERT, SEMICOLON, 4, 2818 13), (INSERT, LOOP, 4, 1702 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert RETURN: 15, ( 0 7 0 0 0 2 0 0), (1703 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12), (INSERT, SEMICOLON, 4, 2818 13), (INSERT, RETURN, 4, 1703 8)) minimal_complete ACTIVE
task 1 0: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 0: Insert: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 0: Insert: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 0: Insert: insert WHEN: 15, ( 0 7 0 0 0 2 0 0), (368 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12), (INSERT, SEMICOLON, 4, 2818 13), (INSERT, WHEN, 4, 368 5)) minimal_complete ACTIVE
task 1 0: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 0: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 0: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 7 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, THEN, 4, 2351 9), (INSERT, END, 4, 2647 11), (INSERT, IF, 4, 2725 12), (INSERT, SEMICOLON, 4, 2818 13), (INSERT, IDENTIFIER, 4, 10 8)) minimal_complete ACTIVE
task 1 0: enqueue: 11/ 746/903/158, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, MINUS, 4, 39 8)) minimal_complete ACTIVE
task 1 0: stack: (39 : (MINUS), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, MINUS, 4, 39 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 39 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, MINUS, 4, 39 8)) minimal_complete ACTIVE
task 1 0: stack: (39 : (MINUS), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to unary_adding_operator)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to unary_adding_operator
task 1 0: Minimal_Complete_Actions: state 39 reduce 1 to unary_adding_operator, goto 58 via 1699
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 12, ( 0 4 0 0 0 2 0 0), (42 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, MINUS, 4, 39 8), (INSERT, NUMERIC_LITERAL, 4, 42 9)) minimal_complete ACTIVE
task 1 0: Insert: state 39 reduce 1 to unary_adding_operator, goto 58 via 1699
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (37 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, MINUS, 4, 39 8), (INSERT, LEFT_PAREN, 4, 37 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (38 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, MINUS, 4, 39 8), (INSERT, NOT, 4, 38 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (41 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, MINUS, 4, 39 8), (INSERT, STRING_LITERAL, 4, 41 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (43 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, MINUS, 4, 39 8), (INSERT, IDENTIFIER, 4, 43 9)) minimal_complete ACTIVE
task 1 0: enqueue: 5/ 750/908/159, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, PLUS, 4, 40 8)) minimal_complete ACTIVE
task 1 0: stack: (40 : (PLUS), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, PLUS, 4, 40 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 40 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, PLUS, 4, 40 8)) minimal_complete ACTIVE
task 1 0: stack: (40 : (PLUS), 1699 : (CASE), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to unary_adding_operator)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to unary_adding_operator
task 1 0: Minimal_Complete_Actions: state 40 reduce 1 to unary_adding_operator, goto 58 via 1699
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 12, ( 0 4 0 0 0 2 0 0), (42 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, PLUS, 4, 40 8), (INSERT, NUMERIC_LITERAL, 4, 42 9)) minimal_complete ACTIVE
task 1 0: Insert: state 40 reduce 1 to unary_adding_operator, goto 58 via 1699
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (37 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, PLUS, 4, 40 8), (INSERT, LEFT_PAREN, 4, 37 9)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (38 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, PLUS, 4, 40 8), (INSERT, NOT, 4, 38 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (41 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, PLUS, 4, 40 8), (INSERT, STRING_LITERAL, 4, 41 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (43 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, CASE, 4, 1699 7), (INSERT, PLUS, 4, 40 8), (INSERT, IDENTIFIER, 4, 43 9)) minimal_complete ACTIVE
task 1 0: enqueue: 5/ 754/913/160, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (115 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NOT, 4, 115 8)) minimal_complete ACTIVE
task 1 0: stack: (115 : (NOT), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (115 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NOT, 4, 115 8)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 115 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (115 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NOT, 4, 115 8)) minimal_complete ACTIVE
task 1 0: stack: (115 : (NOT), 1703 : (RETURN), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift NUMERIC_LITERAL)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift NUMERIC_LITERAL
task 1 0: Minimal_Complete_Actions: insert NUMERIC_LITERAL: 12, ( 0 4 0 0 0 2 0 0), (117 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NOT, 4, 115 8), (INSERT, NUMERIC_LITERAL, 4, 117 9)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (114 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NOT, 4, 115 8), (INSERT, LEFT_PAREN, 4, 114 9)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (116 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NOT, 4, 115 8), (INSERT, STRING_LITERAL, 4, 116 9)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (245 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, RETURN, 4, 1703 7), (INSERT, NOT, 4, 115 8), (INSERT, IDENTIFIER, 4, 245 9)) minimal_complete ACTIVE
task 1 0: enqueue: 4/ 757/917/161, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (2349 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, WHEN, 4, 2349 9)) minimal_complete ACTIVE
task 1 0: stack: (2349 : (WHEN), 2089 : (identifier_opt), 1700 : (EXIT), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (2349 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, WHEN, 4, 2349 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 2349 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (2349 : (WHEN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, WHEN, 4, 2349 9)) minimal_complete ACTIVE
task 1 0: stack: (2349 : (WHEN), 2089 : (identifier_opt), 1700 : (EXIT), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 2349 reduce 0 to expression_opt, goto 2504 via 2349
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 2 0 0), (2645 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, WHEN, 4, 2349 9), (INSERT, SEMICOLON, 4, 2645 11)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (114 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, WHEN, 4, 2349 9), (INSERT, LEFT_PAREN, 4, 114 10)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (115 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, WHEN, 4, 2349 9), (INSERT, NOT, 4, 115 10)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, WHEN, 4, 2349 9), (INSERT, MINUS, 4, 39 10)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, WHEN, 4, 2349 9), (INSERT, PLUS, 4, 40 10)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (116 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, WHEN, 4, 2349 9), (INSERT, STRING_LITERAL, 4, 116 10)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (117 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, WHEN, 4, 2349 9), (INSERT, NUMERIC_LITERAL, 4, 117 10)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (245 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, EXIT, 4, 1700 7), (INSERT, WHEN, 4, 2349 9), (INSERT, IDENTIFIER, 4, 245 10)) minimal_complete ACTIVE
task 1 0: enqueue: 8/ 764/925/162, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 1 1 0 0 0), (783 : (NUMERIC_LITERAL))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3), (INSERT, WHEN, 3, 368 4), (INSERT, NUMERIC_LITERAL, 3, 783 5)) minimal_complete ACTIVE
task 1 0: stack: (783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (IS, (20 . 21)): 11, ( 0 3 0 1 1 0 0 0), (783 : (NUMERIC_LITERAL))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3), (INSERT, WHEN, 3, 368 4), (INSERT, NUMERIC_LITERAL, 3, 783 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 783 : 3:(IS, (20 . 21)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 1 1 0 0 0), Error (IS, (20 . 21)) (783 : (NUMERIC_LITERAL))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3), (INSERT, WHEN, 3, 368 4), (INSERT, NUMERIC_LITERAL, 3, 783 5)) minimal_complete ACTIVE
task 1 0: stack: (783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift EQUAL_GREATER)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift EQUAL_GREATER
task 1 0: Minimal_Complete_Actions: insert EQUAL_GREATER: 12, ( 0 4 0 1 1 0 0 0), (1216 : (EQUAL_GREATER))| 3:(IS, (20 . 21))|((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3), (INSERT, WHEN, 3, 368 4), (INSERT, NUMERIC_LITERAL, 3, 783 5), (INSERT, EQUAL_GREATER, 3, 1216 6)) minimal_complete ACTIVE
task 1 0: parse Matching_Begin: Insert_Delete: ((INSERT, PROCEDURE, 3))
task 1 0: parse Matching_Begin: (PROCEDURE): 11, ( 0 3 0 1 1 0 0 0), (783 : (NUMERIC_LITERAL))/1:(INSERT, PROCEDURE, 3)/((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3), (INSERT, WHEN, 3, 368 4), (INSERT, NUMERIC_LITERAL, 3, 783 5), (INSERT, PROCEDURE, 3)) minimal_complete ACTIVE
task 1 0: parse Matching_Begin: 783 : 2:(PROCEDURE) : (Error)
task 1 0: Matching_Begin: abandon (PROCEDURE): parse fail: 11, ( 0 3 0 1 1 0 0 0), Error (PROCEDURE) (783 : (NUMERIC_LITERAL))/1:(INSERT, PROCEDURE, 3)/((PUSH_BACK, IS, 3), (UNDO_REDUCE, expression_opt, 1), (INSERT, IS, 3, 169 3), (INSERT, WHEN, 3, 368 4), (INSERT, NUMERIC_LITERAL, 3, 783 5), (INSERT, PROCEDURE, 3)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 764/926/163, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 7 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 7 0 0 0 1 0 0), (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 784 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 7 0 0 0 1 0 0), Error (EQUAL, (23 . 23)) (784 : (END))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14), (INSERT, END, 4, 784 5)) minimal_complete ACTIVE
task 1 0: stack: (784 : (END), 370 : (case_statement_alternative_list), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Shift CASE)
task 1 0: Minimal_Complete_Actions: dequeue work item Shift CASE
task 1 0: Minimal_Complete_Actions: insert CASE: 12, ( 0 8 0 0 0 1 0 0), (1217 : (CASE))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, DECLARE, 4, 2095 8), (INSERT, BEGIN, 4, 2508 10), (INSERT, END, 4, 2730 12), (INSERT, SEMICOLON, 4, 2868 14), (INSERT, END, 4, 784 5), (INSERT, CASE, 4, 1217 6)) minimal_complete ACTIVE
task 1 0: enqueue: 1/ 764/927/164, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (267 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, RETURN, 4, 267 9)) minimal_complete ACTIVE
task 1 0: stack: (267 : (RETURN), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (267 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, RETURN, 4, 267 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 267 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (267 : (RETURN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, RETURN, 4, 267 9)) minimal_complete ACTIVE
task 1 0: stack: (267 : (RETURN), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to expression_opt)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to expression_opt
task 1 0: Minimal_Complete_Actions: state 267 reduce 0 to expression_opt, goto 653 via 267
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 2 0 0), (984 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, RETURN, 4, 267 9), (INSERT, SEMICOLON, 4, 984 11)) minimal_complete ACTIVE
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (114 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, RETURN, 4, 267 9), (INSERT, LEFT_PAREN, 4, 114 10)) minimal_complete ACTIVE
task 1 0: Insert: insert NOT: 15, ( 0 3 0 0 0 3 0 0), (115 : (NOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, RETURN, 4, 267 9), (INSERT, NOT, 4, 115 10)) minimal_complete ACTIVE
task 1 0: Insert: insert MINUS: 15, ( 0 3 0 0 0 3 0 0), (39 : (MINUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, RETURN, 4, 267 9), (INSERT, MINUS, 4, 39 10)) minimal_complete ACTIVE
task 1 0: Insert: insert PLUS: 15, ( 0 3 0 0 0 3 0 0), (40 : (PLUS))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, RETURN, 4, 267 9), (INSERT, PLUS, 4, 40 10)) minimal_complete ACTIVE
task 1 0: Insert: insert STRING_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (116 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, RETURN, 4, 267 9), (INSERT, STRING_LITERAL, 4, 116 10)) minimal_complete ACTIVE
task 1 0: Insert: insert NUMERIC_LITERAL: 15, ( 0 3 0 0 0 3 0 0), (117 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, RETURN, 4, 267 9), (INSERT, NUMERIC_LITERAL, 4, 117 10)) minimal_complete ACTIVE
task 1 0: Insert: insert IDENTIFIER: 15, ( 0 3 0 0 0 3 0 0), (118 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, RETURN, 4, 267 9), (INSERT, IDENTIFIER, 4, 118 10)) minimal_complete ACTIVE
task 1 0: enqueue: 8/ 771/935/165, min cost: 11, active workers: 0
task 1 0: dequeue: 11, ( 0 3 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IDENTIFIER, 4, 10 9)) minimal_complete ACTIVE
task 1 0: stack: (10 : (IDENTIFIER), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: check: (EQUAL, (23 . 23)): 11, ( 0 3 0 0 0 2 0 0), (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IDENTIFIER, 4, 10 9)) minimal_complete ACTIVE
task 1 0: check: Shared_Token_Goal : 7
task 1 0: check: 10 : 4:(EQUAL, (23 . 23)) : (Error)
task 1 0: check result: CONTINUE
task 1 0: continuing: 11, ( 0 3 0 0 0 2 0 0), Error (EQUAL, (23 . 23)) (10 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IDENTIFIER, 4, 10 9)) minimal_complete ACTIVE
task 1 0: stack: (10 : (IDENTIFIER), 2094 : (BEGIN), 1705 : (block_label_opt), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 0: Minimal_Complete_Actions: (Reduce to name)
task 1 0: Minimal_Complete_Actions: dequeue work item Reduce to name
task 1 0: Minimal_Complete_Actions: state 10 reduce 1 to name, goto 279 via 2094
task 1 0: Minimal_Complete_Actions: insert SEMICOLON: 12, ( 0 4 0 0 0 2 0 0), (660 : (SEMICOLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IDENTIFIER, 4, 10 9), (INSERT, SEMICOLON, 4, 660 10)) minimal_complete ACTIVE
task 1 0: Insert: state 10 reduce 1 to name, goto 279 via 2094
task 1 0: Insert: insert LEFT_PAREN: 15, ( 0 3 0 0 0 3 0 0), (140 : (LEFT_PAREN))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IDENTIFIER, 4, 10 9), (INSERT, LEFT_PAREN, 4, 140 10)) minimal_complete ACTIVE
task 1 0: Insert: insert COLON: 15, ( 0 3 0 0 0 3 0 0), (135 : (COLON))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IDENTIFIER, 4, 10 9), (INSERT, COLON, 4, 135 10)) minimal_complete ACTIVE
task 1 0: Insert: insert COLON_EQUAL: 15, ( 0 3 0 0 0 3 0 0), (659 : (COLON_EQUAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IDENTIFIER, 4, 10 9), (INSERT, COLON_EQUAL, 4, 659 10)) minimal_complete ACTIVE
task 1 0: Insert: insert DOT: 15, ( 0 3 0 0 0 3 0 0), (142 : (DOT))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, BEGIN, 4, 2094 8), (INSERT, IDENTIFIER, 4, 10 9), (INSERT, DOT, 4, 142 10)) minimal_complete ACTIVE
task 1 0: enqueue: 5/ 775/940/166, min cost: 12, active workers: 0
Supervisor: done, succeed

Supervisor: Done
 0: succeed 4, enqueue 941, check  166, cost:  11
spawn parser 1 from 0 (2 active)
 1:  11, ( 0 3 0 0 0 2 0 0), (67 : (STRING_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, STRING_LITERAL, 4, 67 8)) minimal_complete ACTIVE
spawn parser 2 from 0 (3 active)
 2:  11, ( 0 3 0 0 0 2 0 0), (69 : (IDENTIFIER))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, IDENTIFIER, 4, 69 8)) minimal_complete ACTIVE
spawn parser 3 from 0 (4 active)
 3:  11, ( 0 3 0 0 0 1 1 0), (1701 : (IF))| 5:(PLUS, (25 . 25))|((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, IF, 5, 1701 7)) minimal_complete ACTIVE
 0:  11, ( 0 3 0 0 0 2 0 0), (68 : (NUMERIC_LITERAL))| 4:(EQUAL, (23 . 23))|((INSERT, WHEN, 4, 368 4), (INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, NUMERIC_LITERAL, 4, 68 8)) minimal_complete ACTIVE
 3: before Ops applied:
 3: stack (169 : 3:(IS, (20 . 21)), 45 :(expression_opt, (6 . 18)), 1 : 1:(CASE, (1 . 4)), 0 :)
 3: Shared_Token   4:(EQUAL, (23 . 23))
 3: Current_Token  4:(EQUAL, (23 . 23))
 3: after Ops applied:
 3: stack (169 : 3:(IS, (20 . 21)), 45 :(expression_opt, (6 . 18)), 1 : 1:(CASE, (1 . 4)), 0 :)
 3: Shared_Token   5:(PLUS, (25 . 25))
 3: Current_Token (WHEN)
 3: recover_insert_delete ((INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, IF, 5, 1701 7))
 3: inc_shared_token FALSE parser verb SHIFT
 2: before Ops applied:
 2: stack (169 : 3:(IS, (20 . 21)), 45 :(expression_opt, (6 . 18)), 1 : 1:(CASE, (1 . 4)), 0 :)
 2: Shared_Token   4:(EQUAL, (23 . 23))
 2: Current_Token  4:(EQUAL, (23 . 23))
 2: after Ops applied:
 2: stack (169 : 3:(IS, (20 . 21)), 45 :(expression_opt, (6 . 18)), 1 : 1:(CASE, (1 . 4)), 0 :)
 2: Shared_Token   4:(EQUAL, (23 . 23))
 2: Current_Token (WHEN)
 2: recover_insert_delete ((INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, IDENTIFIER, 4, 69 8))
 2: inc_shared_token FALSE parser verb SHIFT
 1: before Ops applied:
 1: stack (169 : 3:(IS, (20 . 21)), 45 :(expression_opt, (6 . 18)), 1 : 1:(CASE, (1 . 4)), 0 :)
 1: Shared_Token   4:(EQUAL, (23 . 23))
 1: Current_Token  4:(EQUAL, (23 . 23))
 1: after Ops applied:
 1: stack (169 : 3:(IS, (20 . 21)), 45 :(expression_opt, (6 . 18)), 1 : 1:(CASE, (1 . 4)), 0 :)
 1: Shared_Token   4:(EQUAL, (23 . 23))
 1: Current_Token (WHEN)
 1: recover_insert_delete ((INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, STRING_LITERAL, 4, 67 8))
 1: inc_shared_token FALSE parser verb SHIFT
 0: before Ops applied:
 0: stack (169 : 3:(IS, (20 . 21)), 45 :(expression_opt, (6 . 18)), 1 : 1:(CASE, (1 . 4)), 0 :)
 0: Shared_Token   4:(EQUAL, (23 . 23))
 0: Current_Token  4:(EQUAL, (23 . 23))
 0: after Ops applied:
 0: stack (169 : 3:(IS, (20 . 21)), 45 :(expression_opt, (6 . 18)), 1 : 1:(CASE, (1 . 4)), 0 :)
 0: Shared_Token   4:(EQUAL, (23 . 23))
 0: Current_Token (WHEN)
 0: recover_insert_delete ((INSERT, NUMERIC_LITERAL, 4, 783 5), (INSERT, EQUAL_GREATER, 4, 1216 6), (INSERT, IF, 4, 1701 7), (INSERT, NUMERIC_LITERAL, 4, 68 8))
 0: inc_shared_token FALSE parser verb SHIFT
recover: succeed, parser count 4
 3: Current_Token (WHEN) Shared_Token  5:(PLUS, (25 . 25))
 3: resume_active: True, token goal 8
 2: Current_Token (WHEN) Shared_Token  4:(EQUAL, (23 . 23))
 2: resume_active: True, token goal 7
 1: Current_Token (WHEN) Shared_Token  4:(EQUAL, (23 . 23))
 1: resume_active: True, token goal 7
 0: Current_Token (WHEN) Shared_Token  4:(EQUAL, (23 . 23))
 0: resume_active: True, token goal 7
 3: 169: (WHEN) : shift and goto state 368
 2: 169: (WHEN) : shift and goto state 368
 1: 169: (WHEN) : shift and goto state 368
 0: 169: (WHEN) : shift and goto state 368
 3: 368: (NUMERIC_LITERAL) : shift and goto state 783
 2: 368: (NUMERIC_LITERAL) : shift and goto state 783
 1: 368: (NUMERIC_LITERAL) : shift and goto state 783
 0: 368: (NUMERIC_LITERAL) : shift and goto state 783
 3: 783: (EQUAL_GREATER) : shift and goto state 1216
 2: 783: (EQUAL_GREATER) : shift and goto state 1216
 1: 783: (EQUAL_GREATER) : shift and goto state 1216
 0: 783: (EQUAL_GREATER) : shift and goto state 1216
 3: 1216: (IF) : shift and goto state 1701
 2: 1216: (IF) : shift and goto state 1701
 1: 1216: (IF) : shift and goto state 1701
 0: 1216: (IF) : shift and goto state 1701
 3: 1701:  5:(PLUS, (25 . 25)) : shift and goto state 40
 2: 1701: (IDENTIFIER) : shift and goto state 69
 1: 1701: (STRING_LITERAL) : shift and goto state 67
 0: 1701: (NUMERIC_LITERAL) : shift and goto state 68
 3: 40:  6:(IDENTIFIER, (26 . 39)) : reduce 1 tokens to unary_adding_operator
unary_adding_operator_0: (unary_adding_operator, (25 . 25)) <= ( 5:(PLUS, (25 . 25)))
 ... goto state 84
 2: 69:  4:(EQUAL, (23 . 23)) : reduce 1 tokens to name
name_2: (name) <= ((IDENTIFIER))
semantic check OK
 ... goto state 73
 1: 67:  4:(EQUAL, (23 . 23)) : reduce 1 tokens to primary
primary_1: (primary) <= ((STRING_LITERAL))
 ... goto state 75
 0: 68:  4:(EQUAL, (23 . 23)) : reduce 1 tokens to primary
primary_0: (primary) <= ((NUMERIC_LITERAL))
 ... goto state 75
 3: 84:  6:(IDENTIFIER, (26 . 39)) : shift and goto state 69
 2: 73:  4:(EQUAL, (23 . 23)) : reduce 1 tokens to primary
primary_2: (primary) <= ((name))
 ... goto state 75
 1: 75:  4:(EQUAL, (23 . 23)) : reduce 1 tokens to factor
factor_0: (factor) <= ((primary))
 ... goto state 72
 0: 75:  4:(EQUAL, (23 . 23)) : reduce 1 tokens to factor
factor_0: (factor) <= ((primary))
 ... goto state 72
 2: 75:  4:(EQUAL, (23 . 23)) : reduce 1 tokens to factor
factor_0: (factor) <= ((primary))
 ... goto state 72
 1: 72:  4:(EQUAL, (23 . 23)) : reduce 1 tokens to term
term_1: (term) <= ((factor))
 ... goto state 82
 0: 72:  4:(EQUAL, (23 . 23)) : reduce 1 tokens to term
term_1: (term) <= ((factor))
 ... goto state 82
 2: 72:  4:(EQUAL, (23 . 23)) : reduce 1 tokens to term
term_1: (term) <= ((factor))
 ... goto state 82
 1: 82:  4:(EQUAL, (23 . 23)) : reduce 1 tokens to term_list
term_list_1: (term_list) <= ((term))
 ... goto state 83
 0: 82:  4:(EQUAL, (23 . 23)) : reduce 1 tokens to term_list
term_list_1: (term_list) <= ((term))
 ... goto state 83
 2: 82:  4:(EQUAL, (23 . 23)) : reduce 1 tokens to term_list
term_list_1: (term_list) <= ((term))
 ... goto state 83
 1: 83:  4:(EQUAL, (23 . 23)) : reduce 1 tokens to simple_expression
simple_expression_1: (simple_expression) <= ((term_list))
 ... goto state 81
 0: 83:  4:(EQUAL, (23 . 23)) : reduce 1 tokens to simple_expression
simple_expression_1: (simple_expression) <= ((term_list))
 ... goto state 81
 2: 83:  4:(EQUAL, (23 . 23)) : reduce 1 tokens to simple_expression
simple_expression_1: (simple_expression) <= ((term_list))
 ... goto state 81
 1: 81:  4:(EQUAL, (23 . 23)) : shift and goto state 179
 0: 81:  4:(EQUAL, (23 . 23)) : shift and goto state 179
 2: 81:  4:(EQUAL, (23 . 23)) : shift and goto state 179
 3: 69:  7:(THEN, (41 . 44)) : reduce 1 tokens to name
name_2: (name, (26 . 39)) <= ( 6:(IDENTIFIER, (26 . 39)))
semantic check OK
 ... goto state 73
 2: 179:  5:(PLUS, (25 . 25)) : reduce 1 tokens to relational_operator
relational_operator_0: (relational_operator, (23 . 23)) <= ( 4:(EQUAL, (23 . 23)))
 ... goto state 215
 1: 179:  5:(PLUS, (25 . 25)) : reduce 1 tokens to relational_operator
relational_operator_0: (relational_operator, (23 . 23)) <= ( 4:(EQUAL, (23 . 23)))
 ... goto state 215
 0: 179:  5:(PLUS, (25 . 25)) : reduce 1 tokens to relational_operator
relational_operator_0: (relational_operator, (23 . 23)) <= ( 4:(EQUAL, (23 . 23)))
 ... goto state 215
 3: 73:  7:(THEN, (41 . 44)) : reduce 1 tokens to primary
primary_2: (primary, (26 . 39)) <= ((name, (26 . 39)))
 ... goto state 75
 2: 215:  5:(PLUS, (25 . 25)) : shift and goto state 40
 1: 215:  5:(PLUS, (25 . 25)) : shift and goto state 40
 0: 215:  5:(PLUS, (25 . 25)) : shift and goto state 40
 3: 75:  7:(THEN, (41 . 44)) : reduce 1 tokens to factor
factor_0: (factor, (26 . 39)) <= ((primary, (26 . 39)))
 ... goto state 72
 3: 72:  7:(THEN, (41 . 44)) : reduce 1 tokens to term
term_1: (term, (26 . 39)) <= ((factor, (26 . 39)))
 ... goto state 82
 3: 82:  7:(THEN, (41 . 44)) : reduce 1 tokens to term_list
term_list_1: (term_list, (26 . 39)) <= ((term, (26 . 39)))
 ... goto state 218
 3: 218:  7:(THEN, (41 . 44)) : reduce 2 tokens to simple_expression
simple_expression_0: (simple_expression, (25 . 39)) <= ((unary_adding_operator, (25 . 25)), (term_list, (26 . 39)))
 ... goto state 81
 3: 81:  7:(THEN, (41 . 44)) : reduce 1 tokens to relation
relation_1: (relation, (25 . 39)) <= ((simple_expression, (25 . 39)))
 ... goto state 79
 3: 79:  7:(THEN, (41 . 44)) : reduce 1 tokens to expression
expression_0: (expression, (25 . 39)) <= ((relation, (25 . 39)))
 ... goto state 70
 3: 70:  7:(THEN, (41 . 44)) : reduce 1 tokens to expression_opt
expression_opt_0: (expression_opt, (25 . 39)) <= ((expression, (25 . 39)))
 ... goto state 2090
 3: 2090:  7:(THEN, (41 . 44)) : shift and goto state 2351
 3: 2351:  8:(IDENTIFIER, (49 . 68)) : shift and goto state 10
 2: 40:  6:(IDENTIFIER, (26 . 39)) : reduce 1 tokens to unary_adding_operator
unary_adding_operator_0: (unary_adding_operator, (25 . 25)) <= ( 5:(PLUS, (25 . 25)))
 ... goto state 551
 1: 40:  6:(IDENTIFIER, (26 . 39)) : reduce 1 tokens to unary_adding_operator
unary_adding_operator_0: (unary_adding_operator, (25 . 25)) <= ( 5:(PLUS, (25 . 25)))
 ... goto state 551
 0: 40:  6:(IDENTIFIER, (26 . 39)) : reduce 1 tokens to unary_adding_operator
unary_adding_operator_0: (unary_adding_operator, (25 . 25)) <= ( 5:(PLUS, (25 . 25)))
 ... goto state 551
 3: resume_active: False
 2: 551:  6:(IDENTIFIER, (26 . 39)) : shift and goto state 542
 1: 551:  6:(IDENTIFIER, (26 . 39)) : shift and goto state 542
 0: 551:  6:(IDENTIFIER, (26 . 39)) : shift and goto state 542
 2: 542:  7:(THEN, (41 . 44)) : reduce 1 tokens to name
name_2: (name, (26 . 39)) <= ( 6:(IDENTIFIER, (26 . 39)))
semantic check OK
 ... goto state 544
 1: 542:  7:(THEN, (41 . 44)) : reduce 1 tokens to name
name_2: (name, (26 . 39)) <= ( 6:(IDENTIFIER, (26 . 39)))
semantic check OK
 ... goto state 544
 0: 542:  7:(THEN, (41 . 44)) : reduce 1 tokens to name
name_2: (name, (26 . 39)) <= ( 6:(IDENTIFIER, (26 . 39)))
semantic check OK
 ... goto state 544
 2: 544:  7:(THEN, (41 . 44)) : reduce 1 tokens to primary
primary_2: (primary, (26 . 39)) <= ((name, (26 . 39)))
 ... goto state 546
 1: 544:  7:(THEN, (41 . 44)) : reduce 1 tokens to primary
primary_2: (primary, (26 . 39)) <= ((name, (26 . 39)))
 ... goto state 546
 0: 544:  7:(THEN, (41 . 44)) : reduce 1 tokens to primary
primary_2: (primary, (26 . 39)) <= ((name, (26 . 39)))
 ... goto state 546
 2: 546:  7:(THEN, (41 . 44)) : reduce 1 tokens to factor
factor_0: (factor, (26 . 39)) <= ((primary, (26 . 39)))
 ... goto state 543
 1: 546:  7:(THEN, (41 . 44)) : reduce 1 tokens to factor
factor_0: (factor, (26 . 39)) <= ((primary, (26 . 39)))
 ... goto state 543
 0: 546:  7:(THEN, (41 . 44)) : reduce 1 tokens to factor
factor_0: (factor, (26 . 39)) <= ((primary, (26 . 39)))
 ... goto state 543
 2: 543:  7:(THEN, (41 . 44)) : reduce 1 tokens to term
term_1: (term, (26 . 39)) <= ((factor, (26 . 39)))
 ... goto state 549
 1: 543:  7:(THEN, (41 . 44)) : reduce 1 tokens to term
term_1: (term, (26 . 39)) <= ((factor, (26 . 39)))
 ... goto state 549
 0: 543:  7:(THEN, (41 . 44)) : reduce 1 tokens to term
term_1: (term, (26 . 39)) <= ((factor, (26 . 39)))
 ... goto state 549
 2: 549:  7:(THEN, (41 . 44)) : reduce 1 tokens to term_list
term_list_1: (term_list, (26 . 39)) <= ((term, (26 . 39)))
 ... goto state 898
 1: 549:  7:(THEN, (41 . 44)) : reduce 1 tokens to term_list
term_list_1: (term_list, (26 . 39)) <= ((term, (26 . 39)))
 ... goto state 898
 0: 549:  7:(THEN, (41 . 44)) : reduce 1 tokens to term_list
term_list_1: (term_list, (26 . 39)) <= ((term, (26 . 39)))
 ... goto state 898
 2: 898:  7:(THEN, (41 . 44)) : reduce 2 tokens to simple_expression
simple_expression_0: (simple_expression, (25 . 39)) <= ((unary_adding_operator, (25 . 25)), (term_list, (26 . 39)))
 ... goto state 548
 1: 898:  7:(THEN, (41 . 44)) : reduce 2 tokens to simple_expression
simple_expression_0: (simple_expression, (25 . 39)) <= ((unary_adding_operator, (25 . 25)), (term_list, (26 . 39)))
 ... goto state 548
 0: 898:  7:(THEN, (41 . 44)) : reduce 2 tokens to simple_expression
simple_expression_0: (simple_expression, (25 . 39)) <= ((unary_adding_operator, (25 . 25)), (term_list, (26 . 39)))
 ... goto state 548
 2: 548:  7:(THEN, (41 . 44)) : reduce 3 tokens to relation
relation_0: (relation, (23 . 39)) <= ((simple_expression), (relational_operator, (23 . 23)), (simple_expression, (25 . 39)))
 ... goto state 79
 1: 548:  7:(THEN, (41 . 44)) : reduce 3 tokens to relation
relation_0: (relation, (23 . 39)) <= ((simple_expression), (relational_operator, (23 . 23)), (simple_expression, (25 . 39)))
 ... goto state 79
 0: 548:  7:(THEN, (41 . 44)) : reduce 3 tokens to relation
relation_0: (relation, (23 . 39)) <= ((simple_expression), (relational_operator, (23 . 23)), (simple_expression, (25 . 39)))
 ... goto state 79
 2: 79:  7:(THEN, (41 . 44)) : reduce 1 tokens to expression
expression_0: (expression, (23 . 39)) <= ((relation, (23 . 39)))
 ... goto state 70
 1: 79:  7:(THEN, (41 . 44)) : reduce 1 tokens to expression
expression_0: (expression, (23 . 39)) <= ((relation, (23 . 39)))
 ... goto state 70
 0: 79:  7:(THEN, (41 . 44)) : reduce 1 tokens to expression
expression_0: (expression, (23 . 39)) <= ((relation, (23 . 39)))
 ... goto state 70
 2: 70:  7:(THEN, (41 . 44)) : reduce 1 tokens to expression_opt
expression_opt_0: (expression_opt, (23 . 39)) <= ((expression, (23 . 39)))
 ... goto state 2090
 1: 70:  7:(THEN, (41 . 44)) : reduce 1 tokens to expression_opt
expression_opt_0: (expression_opt, (23 . 39)) <= ((expression, (23 . 39)))
 ... goto state 2090
 0: 70:  7:(THEN, (41 . 44)) : reduce 1 tokens to expression_opt
expression_opt_0: (expression_opt, (23 . 39)) <= ((expression, (23 . 39)))
 ... goto state 2090
 2: 2090:  7:(THEN, (41 . 44)) : shift and goto state 2351
 1: 2090:  7:(THEN, (41 . 44)) : shift and goto state 2351
 0: 2090:  7:(THEN, (41 . 44)) : shift and goto state 2351
 2: resume_active: False
 1: resume_active: False
 0: resume_active: False
 3: 10:  9:(COLON_EQUAL, (70 . 71)) : reduce 1 tokens to name
name_2: (name, (49 . 68)) <= ( 8:(IDENTIFIER, (49 . 68)))
semantic check OK
 ... goto state 480
 1: terminate (3 active): duplicate state: random 8:(IDENTIFIER, (49 . 68))
 2: 2351:  8:(IDENTIFIER, (49 . 68)) : shift and goto state 10
 0: 2351:  8:(IDENTIFIER, (49 . 68)) : shift and goto state 10
 3: 480:  9:(COLON_EQUAL, (70 . 71)) : shift and goto state 854
 3: 854:  10:(PLUS, (73 . 73)) : shift and goto state 40
 0: terminate (2 active): duplicate state: random 9:(COLON_EQUAL, (70 . 71))
 2: 10:  9:(COLON_EQUAL, (70 . 71)) : reduce 1 tokens to name
name_2: (name, (49 . 68)) <= ( 8:(IDENTIFIER, (49 . 68)))
semantic check OK
 ... goto state 480
 2: 480:  9:(COLON_EQUAL, (70 . 71)) : shift and goto state 854
 3: 40:  11:(IDENTIFIER, (74 . 86)) : reduce 1 tokens to unary_adding_operator
unary_adding_operator_0: (unary_adding_operator, (73 . 73)) <= ( 10:(PLUS, (73 . 73)))
 ... goto state 134
 2: 854:  10:(PLUS, (73 . 73)) : shift and goto state 40
 3: 134:  11:(IDENTIFIER, (74 . 86)) : shift and goto state 245
 3: 245:  12:(SEMICOLON, (87 . 87)) : reduce 1 tokens to name
name_2: (name, (74 . 86)) <= ( 11:(IDENTIFIER, (74 . 86)))
semantic check OK
 ... goto state 123
 2: 40:  11:(IDENTIFIER, (74 . 86)) : reduce 1 tokens to unary_adding_operator
unary_adding_operator_0: (unary_adding_operator, (73 . 73)) <= ( 10:(PLUS, (73 . 73)))
 ... goto state 134
 3: 123:  12:(SEMICOLON, (87 . 87)) : reduce 1 tokens to primary
primary_2: (primary, (74 . 86)) <= ((name, (74 . 86)))
 ... goto state 125
 2: 134:  11:(IDENTIFIER, (74 . 86)) : shift and goto state 245
 3: 125:  12:(SEMICOLON, (87 . 87)) : reduce 1 tokens to factor
factor_0: (factor, (74 . 86)) <= ((primary, (74 . 86)))
 ... goto state 122
 3: 122:  12:(SEMICOLON, (87 . 87)) : reduce 1 tokens to term
term_1: (term, (74 . 86)) <= ((factor, (74 . 86)))
 ... goto state 132
 3: 132:  12:(SEMICOLON, (87 . 87)) : reduce 1 tokens to term_list
term_list_1: (term_list, (74 . 86)) <= ((term, (74 . 86)))
 ... goto state 262
 3: 262:  12:(SEMICOLON, (87 . 87)) : reduce 2 tokens to simple_expression
simple_expression_0: (simple_expression, (73 . 86)) <= ((unary_adding_operator, (73 . 73)), (term_list, (74 . 86)))
 ... goto state 131
 3: 131:  12:(SEMICOLON, (87 . 87)) : reduce 1 tokens to relation
relation_1: (relation, (73 . 86)) <= ((simple_expression, (73 . 86)))
 ... goto state 129
 3: 129:  12:(SEMICOLON, (87 . 87)) : reduce 1 tokens to expression
expression_0: (expression, (73 . 86)) <= ((relation, (73 . 86)))
 ... goto state 119
 3: 119:  12:(SEMICOLON, (87 . 87)) : reduce 1 tokens to expression_opt
expression_opt_0: (expression_opt, (73 . 86)) <= ((expression, (73 . 86)))
 ... goto state 1327
 3: 1327:  12:(SEMICOLON, (87 . 87)) : shift and goto state 1782
 3: 1782:  13:(ELSE, (89 . 92)) : reduce 4 tokens to assignment_statement
assignment_statement_0: (assignment_statement, (49 . 87)) <= ((name, (49 . 68)),  9:(COLON_EQUAL, (70 . 71)), (expression_opt, (73 . 86)),  12:(SEMICOLON, (87 . 87)))
 ... goto state 470
 2: 245:  12:(SEMICOLON, (87 . 87)) : reduce 1 tokens to name
name_2: (name, (74 . 86)) <= ( 11:(IDENTIFIER, (74 . 86)))
semantic check OK
 ... goto state 123
 3: 470:  13:(ELSE, (89 . 92)) : reduce 1 tokens to simple_statement
simple_statement_0: (simple_statement, (49 . 87)) <= ((assignment_statement, (49 . 87)))
 ... goto state 485
 2: 123:  12:(SEMICOLON, (87 . 87)) : reduce 1 tokens to primary
primary_2: (primary, (74 . 86)) <= ((name, (74 . 86)))
 ... goto state 125
 3: 485:  13:(ELSE, (89 . 92)) : reduce 1 tokens to statement
statement_0: (statement, (49 . 87)) <= ((simple_statement, (49 . 87)))
 ... goto state 486
 2: 125:  12:(SEMICOLON, (87 . 87)) : reduce 1 tokens to factor
factor_0: (factor, (74 . 86)) <= ((primary, (74 . 86)))
 ... goto state 122
 3: 486:  13:(ELSE, (89 . 92)) : reduce 1 tokens to sequence_of_statements_list
sequence_of_statements_list_1: (sequence_of_statements_list, (49 . 87)) <= ((statement, (49 . 87)))
 ... goto state 482
 2: 122:  12:(SEMICOLON, (87 . 87)) : reduce 1 tokens to term
term_1: (term, (74 . 86)) <= ((factor, (74 . 86)))
 ... goto state 132
 3: 482:  13:(ELSE, (89 . 92)) : reduce 1 tokens to sequence_of_statements
sequence_of_statements_0: (sequence_of_statements, (49 . 87)) <= ((sequence_of_statements_list, (49 . 87)))
 ... goto state 2505
 2: 132:  12:(SEMICOLON, (87 . 87)) : reduce 1 tokens to term_list
term_list_1: (term_list, (74 . 86)) <= ((term, (74 . 86)))
 ... goto state 262
 3: 2505:  13:(ELSE, (89 . 92)) : shift and goto state 2646
 2: 262:  12:(SEMICOLON, (87 . 87)) : reduce 2 tokens to simple_expression
simple_expression_0: (simple_expression, (73 . 86)) <= ((unary_adding_operator, (73 . 73)), (term_list, (74 . 86)))
 ... goto state 131
 2: 131:  12:(SEMICOLON, (87 . 87)) : reduce 1 tokens to relation
relation_1: (relation, (73 . 86)) <= ((simple_expression, (73 . 86)))
 ... goto state 129
 2: 129:  12:(SEMICOLON, (87 . 87)) : reduce 1 tokens to expression
expression_0: (expression, (73 . 86)) <= ((relation, (73 . 86)))
 ... goto state 119
 2: 119:  12:(SEMICOLON, (87 . 87)) : reduce 1 tokens to expression_opt
expression_opt_0: (expression_opt, (73 . 86)) <= ((expression, (73 . 86)))
 ... goto state 1327
 2: 1327:  12:(SEMICOLON, (87 . 87)) : shift and goto state 1782
 3: 2646:  14:(IDENTIFIER, (97 . 116)) : shift and goto state 10
 2: 1782:  13:(ELSE, (89 . 92)) : reduce 4 tokens to assignment_statement
assignment_statement_0: (assignment_statement, (49 . 87)) <= ((name, (49 . 68)),  9:(COLON_EQUAL, (70 . 71)), (expression_opt, (73 . 86)),  12:(SEMICOLON, (87 . 87)))
 ... goto state 470
 2: 470:  13:(ELSE, (89 . 92)) : reduce 1 tokens to simple_statement
simple_statement_0: (simple_statement, (49 . 87)) <= ((assignment_statement, (49 . 87)))
 ... goto state 485
 2: 485:  13:(ELSE, (89 . 92)) : reduce 1 tokens to statement
statement_0: (statement, (49 . 87)) <= ((simple_statement, (49 . 87)))
 ... goto state 486
 2: 486:  13:(ELSE, (89 . 92)) : reduce 1 tokens to sequence_of_statements_list
sequence_of_statements_list_1: (sequence_of_statements_list, (49 . 87)) <= ((statement, (49 . 87)))
 ... goto state 482
 2: 482:  13:(ELSE, (89 . 92)) : reduce 1 tokens to sequence_of_statements
sequence_of_statements_0: (sequence_of_statements, (49 . 87)) <= ((sequence_of_statements_list, (49 . 87)))
 ... goto state 2505
 2: 2505:  13:(ELSE, (89 . 92)) : shift and goto state 2646
 3: 10:  15:(COLON_EQUAL, (118 . 119)) : reduce 1 tokens to name
name_2: (name, (97 . 116)) <= ( 14:(IDENTIFIER, (97 . 116)))
semantic check OK
 ... goto state 100
 2: 2646:  14:(IDENTIFIER, (97 . 116)) : shift and goto state 10
 3: 100:  15:(COLON_EQUAL, (118 . 119)) : shift and goto state 228
 3: 228:  16:(IDENTIFIER, (121 . 136)) : shift and goto state 245
 2: 10:  15:(COLON_EQUAL, (118 . 119)) : reduce 1 tokens to name
name_2: (name, (97 . 116)) <= ( 14:(IDENTIFIER, (97 . 116)))
semantic check OK
 ... goto state 100
 2: 100:  15:(COLON_EQUAL, (118 . 119)) : shift and goto state 228
 3: 245:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to name
name_2: (name, (121 . 136)) <= ( 16:(IDENTIFIER, (121 . 136)))
semantic check OK
 ... goto state 123
 2: 228:  16:(IDENTIFIER, (121 . 136)) : shift and goto state 245
 3: 123:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to primary
primary_2: (primary, (121 . 136)) <= ((name, (121 . 136)))
 ... goto state 125
 3: 125:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to factor
factor_0: (factor, (121 . 136)) <= ((primary, (121 . 136)))
 ... goto state 122
 3: 122:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to term
term_1: (term, (121 . 136)) <= ((factor, (121 . 136)))
 ... goto state 132
 3: 132:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to term_list
term_list_1: (term_list, (121 . 136)) <= ((term, (121 . 136)))
 ... goto state 133
 3: 133:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to simple_expression
simple_expression_1: (simple_expression, (121 . 136)) <= ((term_list, (121 . 136)))
 ... goto state 131
 3: 131:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to relation
relation_1: (relation, (121 . 136)) <= ((simple_expression, (121 . 136)))
 ... goto state 129
 3: 129:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to expression
expression_0: (expression, (121 . 136)) <= ((relation, (121 . 136)))
 ... goto state 119
 3: 119:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to expression_opt
expression_opt_0: (expression_opt, (121 . 136)) <= ((expression, (121 . 136)))
 ... goto state 564
 3: 564:  17:(SEMICOLON, (137 . 137)) : shift and goto state 906
 3: 906:  18:(END, (139 . 141)) : reduce 4 tokens to assignment_statement
assignment_statement_0: (assignment_statement, (97 . 137)) <= ((name, (97 . 116)),  15:(COLON_EQUAL, (118 . 119)), (expression_opt, (121 . 136)),  17:(SEMICOLON, (137 . 137)))
 ... goto state 90
 2: 245:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to name
name_2: (name, (121 . 136)) <= ( 16:(IDENTIFIER, (121 . 136)))
semantic check OK
 ... goto state 123
 3: 90:  18:(END, (139 . 141)) : reduce 1 tokens to simple_statement
simple_statement_0: (simple_statement, (97 . 137)) <= ((assignment_statement, (97 . 137)))
 ... goto state 105
 2: 123:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to primary
primary_2: (primary, (121 . 136)) <= ((name, (121 . 136)))
 ... goto state 125
 3: 105:  18:(END, (139 . 141)) : reduce 1 tokens to statement
statement_0: (statement, (97 . 137)) <= ((simple_statement, (97 . 137)))
 ... goto state 106
 2: 125:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to factor
factor_0: (factor, (121 . 136)) <= ((primary, (121 . 136)))
 ... goto state 122
 3: 106:  18:(END, (139 . 141)) : reduce 1 tokens to sequence_of_statements_list
sequence_of_statements_list_1: (sequence_of_statements_list, (97 . 137)) <= ((statement, (97 . 137)))
 ... goto state 102
 2: 122:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to term
term_1: (term, (121 . 136)) <= ((factor, (121 . 136)))
 ... goto state 132
 3: 102:  18:(END, (139 . 141)) : reduce 1 tokens to sequence_of_statements
sequence_of_statements_0: (sequence_of_statements, (97 . 137)) <= ((sequence_of_statements_list, (97 . 137)))
 ... goto state 2724
 2: 132:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to term_list
term_list_1: (term_list, (121 . 136)) <= ((term, (121 . 136)))
 ... goto state 133
 3: 2724:  18:(END, (139 . 141)) : shift and goto state 2817
 2: 133:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to simple_expression
simple_expression_1: (simple_expression, (121 . 136)) <= ((term_list, (121 . 136)))
 ... goto state 131
 2: 131:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to relation
relation_1: (relation, (121 . 136)) <= ((simple_expression, (121 . 136)))
 ... goto state 129
 2: 129:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to expression
expression_0: (expression, (121 . 136)) <= ((relation, (121 . 136)))
 ... goto state 119
 2: 119:  17:(SEMICOLON, (137 . 137)) : reduce 1 tokens to expression_opt
expression_opt_0: (expression_opt, (121 . 136)) <= ((expression, (121 . 136)))
 ... goto state 564
 2: 564:  17:(SEMICOLON, (137 . 137)) : shift and goto state 906
 3: 2817:  19:(IF, (143 . 144)) : shift and goto state 2865
 2: 906:  18:(END, (139 . 141)) : reduce 4 tokens to assignment_statement
assignment_statement_0: (assignment_statement, (97 . 137)) <= ((name, (97 . 116)),  15:(COLON_EQUAL, (118 . 119)), (expression_opt, (121 . 136)),  17:(SEMICOLON, (137 . 137)))
 ... goto state 90
 2: 90:  18:(END, (139 . 141)) : reduce 1 tokens to simple_statement
simple_statement_0: (simple_statement, (97 . 137)) <= ((assignment_statement, (97 . 137)))
 ... goto state 105
 2: 105:  18:(END, (139 . 141)) : reduce 1 tokens to statement
statement_0: (statement, (97 . 137)) <= ((simple_statement, (97 . 137)))
 ... goto state 106
 2: 106:  18:(END, (139 . 141)) : reduce 1 tokens to sequence_of_statements_list
sequence_of_statements_list_1: (sequence_of_statements_list, (97 . 137)) <= ((statement, (97 . 137)))
 ... goto state 102
 2: 102:  18:(END, (139 . 141)) : reduce 1 tokens to sequence_of_statements
sequence_of_statements_0: (sequence_of_statements, (97 . 137)) <= ((sequence_of_statements_list, (97 . 137)))
 ... goto state 2724
 2: 2724:  18:(END, (139 . 141)) : shift and goto state 2817
 3: 2865:  20:(SEMICOLON, (145 . 145)) : shift and goto state 2891
 2: 2817:  19:(IF, (143 . 144)) : shift and goto state 2865
 3: 2891:  21:(Wisi_EOI, (146 . 145)) : ERROR
 3: 2891: expecting: BEGIN, CASE, DECLARE, END, EXIT, FOR, IF, LOOP, RETURN, WHEN, IDENTIFIER
 3: zombie
 2: 2865:  20:(SEMICOLON, (145 . 145)) : shift and goto state 2891
 3: zombie
 2: 2891:  21:(Wisi_EOI, (146 . 145)) : ERROR
 2: 2891: expecting: BEGIN, CASE, DECLARE, END, EXIT, FOR, IF, LOOP, RETURN, WHEN, IDENTIFIER
 2: zombie

 McKenzie error recovery

parser 3: State 2891 Current_Token 21:(Wisi_EOI, (146 . 145)) Resume_Token_Goal 24
Action
task 0 3: (2891 : 20:(SEMICOLON, (145 . 145)), 2865 : 19:(IF, (143 . 144)), 2817 : 18:(END, (139 . 141)), 2724 :(sequence_of_statements, (97 . 137)), 2646 : 13:(ELSE, (89 . 92)), 2505 :(sequence_of_statements, (49 . 87)), 2351 : 7:(THEN, (41 . 44)), 2090 :(expression_opt, (25 . 39)), 1701 :(IF), 1216 :(EQUAL_GREATER), 783 :(NUMERIC_LITERAL), 368 :(WHEN), 169 : 3:(IS, (20 . 21)), 45 :(expression_opt, (6 . 18)), 1 : 1:(CASE, (1 . 4)), 0 :)
 3: enqueue: 0, ( 0 0 0 0 0 0 0 0), Error (Wisi_EOI, (146 . 145)) (2891 : (SEMICOLON, (145 . 145)))| 21:(Wisi_EOI, (146 . 145))|()

parser 2: State 2891 Current_Token 21:(Wisi_EOI, (146 . 145)) Resume_Token_Goal 24
Action
task 0 2: (2891 : 20:(SEMICOLON, (145 . 145)), 2865 : 19:(IF, (143 . 144)), 2817 : 18:(END, (139 . 141)), 2724 :(sequence_of_statements, (97 . 137)), 2646 : 13:(ELSE, (89 . 92)), 2505 :(sequence_of_statements, (49 . 87)), 2351 : 7:(THEN, (41 . 44)), 2090 :(expression_opt, (23 . 39)), 1701 :(IF), 1216 :(EQUAL_GREATER), 783 :(NUMERIC_LITERAL), 368 :(WHEN), 169 : 3:(IS, (20 . 21)), 45 :(expression_opt, (6 . 18)), 1 : 1:(CASE, (1 . 4)), 0 :)
 2: enqueue: 0, ( 0 0 0 0 0 0 0 0), Error (Wisi_EOI, (146 . 145)) (2891 : (SEMICOLON, (145 . 145)))| 21:(Wisi_EOI, (146 . 145))|()

 1 parallel tasks
task 1 3: dequeue: 0, ( 0 0 0 0 0 0 0 0), Error (Wisi_EOI, (146 . 145)) (2891 : (SEMICOLON, (145 . 145)))| 21:(Wisi_EOI, (146 . 145))|()
task 1 3: stack: (2891 : (SEMICOLON, (145 . 145)), 2865 : (IF, (143 . 144)), 2817 : (END, (139 . 141)), 2724 : (sequence_of_statements, (97 . 137)), 2646 : (ELSE, (89 . 92)), 2505 : (sequence_of_statements, (49 . 87)), 2351 : (THEN, (41 . 44)), 2090 : (expression_opt, (25 . 39)), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 3: Language_Fixes: 0, ( 0 0 0 0 0 0 0 0), Error (Wisi_EOI, (146 . 145)) (2891 : (SEMICOLON, (145 . 145)))| 21:(Wisi_EOI, (146 . 145))|()
task 1 3: check: (Wisi_EOI, (146 . 145)): 0, ( 0 0 0 0 0 0 0 0), (2891 : (SEMICOLON, (145 . 145)))| 21:(Wisi_EOI, (146 . 145))|()
task 1 3: check: Shared_Token_Goal : 24
task 1 3: check: 2891 : 21:(Wisi_EOI, (146 . 145)) : (Error)
task 1 3: check result: CONTINUE
task 1 3: continuing: 0, ( 0 0 0 0 0 0 0 0), Error (Wisi_EOI, (146 . 145)) (2891 : (SEMICOLON, (145 . 145)))| 21:(Wisi_EOI, (146 . 145))|()
task 1 3: stack: (2891 : (SEMICOLON, (145 . 145)), 2865 : (IF, (143 . 144)), 2817 : (END, (139 . 141)), 2724 : (sequence_of_statements, (97 . 137)), 2646 : (ELSE, (89 . 92)), 2505 : (sequence_of_statements, (49 . 87)), 2351 : (THEN, (41 . 44)), 2090 : (expression_opt, (25 . 39)), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 3: Minimal_Complete_Actions: (Reduce to if_statement)
task 1 3: Minimal_Complete_Actions: dequeue work item Reduce to if_statement
task 1 3: Minimal_Complete_Actions: state 2891 reduce 9 to if_statement, goto 1711 via 1216
task 1 3: Minimal_Complete_Actions: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 3: Minimal_Complete_Actions: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 3: Minimal_Complete_Actions: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 3: Minimal_Complete_Actions: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 3: Minimal_Complete_Actions: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 3: Minimal_Complete_Actions: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 3: Minimal_Complete_Actions: insert END: 1, ( 0 1 0 0 0 0 0 0), (784 : (END))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5)) minimal_complete ACTIVE
task 1 3: Insert: state 2891 reduce 9 to if_statement, goto 1711 via 1216
task 1 3: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 3: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 3: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 3: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 3: Insert: insert BEGIN: 4, ( 0 0 0 0 0 1 0 0), (2094 : (BEGIN))| 21:(Wisi_EOI, (146 . 145))|((INSERT, BEGIN, 21, 2094 9))
task 1 3: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 3: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 3: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 3: Insert: insert CASE: 4, ( 0 0 0 0 0 1 0 0), (1699 : (CASE))| 21:(Wisi_EOI, (146 . 145))|((INSERT, CASE, 21, 1699 8))
task 1 3: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 3: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 3: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 3: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 3: Insert: insert DECLARE: 4, ( 0 0 0 0 0 1 0 0), (2095 : (DECLARE))| 21:(Wisi_EOI, (146 . 145))|((INSERT, DECLARE, 21, 2095 9))
task 1 3: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 3: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 3: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 3: Insert: insert EXIT: 4, ( 0 0 0 0 0 1 0 0), (1700 : (EXIT))| 21:(Wisi_EOI, (146 . 145))|((INSERT, EXIT, 21, 1700 8))
task 1 3: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 3: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 3: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 3: Insert: insert FOR: 4, ( 0 0 0 0 0 1 0 0), (3 : (FOR))| 21:(Wisi_EOI, (146 . 145))|((INSERT, FOR, 21, 3 8))
task 1 3: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 3: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 3: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 3: Insert: insert IF: 4, ( 0 0 0 0 0 1 0 0), (1701 : (IF))| 21:(Wisi_EOI, (146 . 145))|((INSERT, IF, 21, 1701 8))
task 1 3: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 3: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 3: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 3: Insert: insert LOOP: 4, ( 0 0 0 0 0 1 0 0), (1702 : (LOOP))| 21:(Wisi_EOI, (146 . 145))|((INSERT, LOOP, 21, 1702 8))
task 1 3: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 3: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 3: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 3: Insert: insert RETURN: 4, ( 0 0 0 0 0 1 0 0), (1703 : (RETURN))| 21:(Wisi_EOI, (146 . 145))|((INSERT, RETURN, 21, 1703 8))
task 1 3: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 3: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 3: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 3: Insert: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 3: Insert: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 3: Insert: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 3: Insert: insert WHEN: 4, ( 0 0 0 0 0 1 0 0), (368 : (WHEN))| 21:(Wisi_EOI, (146 . 145))|((INSERT, WHEN, 21, 368 5))
task 1 3: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 3: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 3: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 3: Insert: insert IDENTIFIER: 4, ( 0 0 0 0 0 1 0 0), (10 : (IDENTIFIER))| 21:(Wisi_EOI, (146 . 145))|((INSERT, IDENTIFIER, 21, 10 8))
task 1 3: push_back SEMICOLON: 4, ( 0 0 0 1 0 0 0 0), (2865 : (IF, (143 . 144)))| 20:(SEMICOLON, (145 . 145))|((PUSH_BACK, SEMICOLON, 20))
task 1 3: enqueue: 12/ 12/12/1, min cost: 1, active workers: 0
task 1 2: dequeue: 0, ( 0 0 0 0 0 0 0 0), Error (Wisi_EOI, (146 . 145)) (2891 : (SEMICOLON, (145 . 145)))| 21:(Wisi_EOI, (146 . 145))|()
task 1 2: stack: (2891 : (SEMICOLON, (145 . 145)), 2865 : (IF, (143 . 144)), 2817 : (END, (139 . 141)), 2724 : (sequence_of_statements, (97 . 137)), 2646 : (ELSE, (89 . 92)), 2505 : (sequence_of_statements, (49 . 87)), 2351 : (THEN, (41 . 44)), 2090 : (expression_opt, (23 . 39)), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 2: Language_Fixes: 0, ( 0 0 0 0 0 0 0 0), Error (Wisi_EOI, (146 . 145)) (2891 : (SEMICOLON, (145 . 145)))| 21:(Wisi_EOI, (146 . 145))|()
task 1 2: check: (Wisi_EOI, (146 . 145)): 0, ( 0 0 0 0 0 0 0 0), (2891 : (SEMICOLON, (145 . 145)))| 21:(Wisi_EOI, (146 . 145))|()
task 1 2: check: Shared_Token_Goal : 24
task 1 2: check: 2891 : 21:(Wisi_EOI, (146 . 145)) : (Error)
task 1 2: check result: CONTINUE
task 1 2: continuing: 0, ( 0 0 0 0 0 0 0 0), Error (Wisi_EOI, (146 . 145)) (2891 : (SEMICOLON, (145 . 145)))| 21:(Wisi_EOI, (146 . 145))|()
task 1 2: stack: (2891 : (SEMICOLON, (145 . 145)), 2865 : (IF, (143 . 144)), 2817 : (END, (139 . 141)), 2724 : (sequence_of_statements, (97 . 137)), 2646 : (ELSE, (89 . 92)), 2505 : (sequence_of_statements, (49 . 87)), 2351 : (THEN, (41 . 44)), 2090 : (expression_opt, (23 . 39)), 1701 : (IF), 1216 : (EQUAL_GREATER), 783 : (NUMERIC_LITERAL), 368 : (WHEN), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 2: Minimal_Complete_Actions: (Reduce to if_statement)
task 1 2: Minimal_Complete_Actions: dequeue work item Reduce to if_statement
task 1 2: Minimal_Complete_Actions: state 2891 reduce 9 to if_statement, goto 1711 via 1216
task 1 2: Minimal_Complete_Actions: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 2: Minimal_Complete_Actions: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 2: Minimal_Complete_Actions: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 2: Minimal_Complete_Actions: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 2: Minimal_Complete_Actions: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 2: Minimal_Complete_Actions: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 2: Minimal_Complete_Actions: insert END: 1, ( 0 1 0 0 0 0 0 0), (784 : (END))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5)) minimal_complete ACTIVE
task 1 2: Insert: state 2891 reduce 9 to if_statement, goto 1711 via 1216
task 1 2: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 2: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 2: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 2: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 2: Insert: insert BEGIN: 4, ( 0 0 0 0 0 1 0 0), (2094 : (BEGIN))| 21:(Wisi_EOI, (146 . 145))|((INSERT, BEGIN, 21, 2094 9))
task 1 2: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 2: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 2: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 2: Insert: insert CASE: 4, ( 0 0 0 0 0 1 0 0), (1699 : (CASE))| 21:(Wisi_EOI, (146 . 145))|((INSERT, CASE, 21, 1699 8))
task 1 2: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 2: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 2: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 2: Insert: state 1716 reduce 0 to block_label_opt, goto 1705 via 1716
task 1 2: Insert: insert DECLARE: 4, ( 0 0 0 0 0 1 0 0), (2095 : (DECLARE))| 21:(Wisi_EOI, (146 . 145))|((INSERT, DECLARE, 21, 2095 9))
task 1 2: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 2: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 2: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 2: Insert: insert EXIT: 4, ( 0 0 0 0 0 1 0 0), (1700 : (EXIT))| 21:(Wisi_EOI, (146 . 145))|((INSERT, EXIT, 21, 1700 8))
task 1 2: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 2: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 2: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 2: Insert: insert FOR: 4, ( 0 0 0 0 0 1 0 0), (3 : (FOR))| 21:(Wisi_EOI, (146 . 145))|((INSERT, FOR, 21, 3 8))
task 1 2: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 2: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 2: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 2: Insert: insert IF: 4, ( 0 0 0 0 0 1 0 0), (1701 : (IF))| 21:(Wisi_EOI, (146 . 145))|((INSERT, IF, 21, 1701 8))
task 1 2: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 2: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 2: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 2: Insert: insert LOOP: 4, ( 0 0 0 0 0 1 0 0), (1702 : (LOOP))| 21:(Wisi_EOI, (146 . 145))|((INSERT, LOOP, 21, 1702 8))
task 1 2: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 2: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 2: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 2: Insert: insert RETURN: 4, ( 0 0 0 0 0 1 0 0), (1703 : (RETURN))| 21:(Wisi_EOI, (146 . 145))|((INSERT, RETURN, 21, 1703 8))
task 1 2: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 2: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 2: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 2: Insert: state 1716 reduce 1 to sequence_of_statements, goto 1717 via 1216
task 1 2: Insert: state 1717 reduce 4 to case_statement_alternative, goto 369 via 169
task 1 2: Insert: state 369 reduce 1 to case_statement_alternative_list, goto 370 via 169
task 1 2: Insert: insert WHEN: 4, ( 0 0 0 0 0 1 0 0), (368 : (WHEN))| 21:(Wisi_EOI, (146 . 145))|((INSERT, WHEN, 21, 368 5))
task 1 2: Insert: state 1711 reduce 1 to compound_statement, goto 1708 via 1216
task 1 2: Insert: state 1708 reduce 1 to statement, goto 1720 via 1216
task 1 2: Insert: state 1720 reduce 1 to sequence_of_statements_list, goto 1716 via 1216
task 1 2: Insert: insert IDENTIFIER: 4, ( 0 0 0 0 0 1 0 0), (10 : (IDENTIFIER))| 21:(Wisi_EOI, (146 . 145))|((INSERT, IDENTIFIER, 21, 10 8))
task 1 2: push_back SEMICOLON: 4, ( 0 0 0 1 0 0 0 0), (2865 : (IF, (143 . 144)))| 20:(SEMICOLON, (145 . 145))|((PUSH_BACK, SEMICOLON, 20))
task 1 2: enqueue: 12/ 12/24/1, min cost: 1, active workers: 0
task 1 3: dequeue: 1, ( 0 1 0 0 0 0 0 0), (784 : (END))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5)) minimal_complete ACTIVE
task 1 3: stack: (784 : (END), 370 : (case_statement_alternative_list, (25 . 145)), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 3: check: (Wisi_EOI, (146 . 145)): 1, ( 0 1 0 0 0 0 0 0), (784 : (END))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5)) minimal_complete ACTIVE
task 1 3: check: Shared_Token_Goal : 24
task 1 3: check: 784 : 21:(Wisi_EOI, (146 . 145)) : (Error)
task 1 3: check result: CONTINUE
task 1 3: continuing: 1, ( 0 1 0 0 0 0 0 0), Error (Wisi_EOI, (146 . 145)) (784 : (END))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5)) minimal_complete ACTIVE
task 1 3: stack: (784 : (END), 370 : (case_statement_alternative_list, (25 . 145)), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 3: Minimal_Complete_Actions: (Shift CASE)
task 1 3: Minimal_Complete_Actions: dequeue work item Shift CASE
task 1 3: Minimal_Complete_Actions: insert CASE: 2, ( 0 2 0 0 0 0 0 0), (1217 : (CASE))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6)) minimal_complete ACTIVE
task 1 3: enqueue: 1/ 12/25/2, min cost: 2, active workers: 0
task 1 2: dequeue: 1, ( 0 1 0 0 0 0 0 0), (784 : (END))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5)) minimal_complete ACTIVE
task 1 2: stack: (784 : (END), 370 : (case_statement_alternative_list, (23 . 145)), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 2: check: (Wisi_EOI, (146 . 145)): 1, ( 0 1 0 0 0 0 0 0), (784 : (END))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5)) minimal_complete ACTIVE
task 1 2: check: Shared_Token_Goal : 24
task 1 2: check: 784 : 21:(Wisi_EOI, (146 . 145)) : (Error)
task 1 2: check result: CONTINUE
task 1 2: continuing: 1, ( 0 1 0 0 0 0 0 0), Error (Wisi_EOI, (146 . 145)) (784 : (END))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5)) minimal_complete ACTIVE
task 1 2: stack: (784 : (END), 370 : (case_statement_alternative_list, (23 . 145)), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 2: Minimal_Complete_Actions: (Shift CASE)
task 1 2: Minimal_Complete_Actions: dequeue work item Shift CASE
task 1 2: Minimal_Complete_Actions: insert CASE: 2, ( 0 2 0 0 0 0 0 0), (1217 : (CASE))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6)) minimal_complete ACTIVE
task 1 2: enqueue: 1/ 12/26/2, min cost: 2, active workers: 0
task 1 3: dequeue: 2, ( 0 2 0 0 0 0 0 0), (1217 : (CASE))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6)) minimal_complete ACTIVE
task 1 3: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list, (25 . 145)), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 3: check: (Wisi_EOI, (146 . 145)): 2, ( 0 2 0 0 0 0 0 0), (1217 : (CASE))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6)) minimal_complete ACTIVE
task 1 3: check: Shared_Token_Goal : 24
task 1 3: check: 1217 : 21:(Wisi_EOI, (146 . 145)) : (Error)
task 1 3: check result: CONTINUE
task 1 3: continuing: 2, ( 0 2 0 0 0 0 0 0), Error (Wisi_EOI, (146 . 145)) (1217 : (CASE))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6)) minimal_complete ACTIVE
task 1 3: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list, (25 . 145)), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 3: Minimal_Complete_Actions: (Shift SEMICOLON)
task 1 3: Minimal_Complete_Actions: dequeue work item Shift SEMICOLON
task 1 3: Minimal_Complete_Actions: insert SEMICOLON: 3, ( 0 3 0 0 0 0 0 0), (1721 : (SEMICOLON))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6), (INSERT, SEMICOLON, 21, 1721 7)) minimal_complete ACTIVE
task 1 3: enqueue: 1/ 12/27/3, min cost: 3, active workers: 0
task 1 2: dequeue: 2, ( 0 2 0 0 0 0 0 0), (1217 : (CASE))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6)) minimal_complete ACTIVE
task 1 2: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list, (23 . 145)), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 2: check: (Wisi_EOI, (146 . 145)): 2, ( 0 2 0 0 0 0 0 0), (1217 : (CASE))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6)) minimal_complete ACTIVE
task 1 2: check: Shared_Token_Goal : 24
task 1 2: check: 1217 : 21:(Wisi_EOI, (146 . 145)) : (Error)
task 1 2: check result: CONTINUE
task 1 2: continuing: 2, ( 0 2 0 0 0 0 0 0), Error (Wisi_EOI, (146 . 145)) (1217 : (CASE))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6)) minimal_complete ACTIVE
task 1 2: stack: (1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list, (23 . 145)), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 2: Minimal_Complete_Actions: (Shift SEMICOLON)
task 1 2: Minimal_Complete_Actions: dequeue work item Shift SEMICOLON
task 1 2: Minimal_Complete_Actions: insert SEMICOLON: 3, ( 0 3 0 0 0 0 0 0), (1721 : (SEMICOLON))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6), (INSERT, SEMICOLON, 21, 1721 7)) minimal_complete ACTIVE
task 1 2: enqueue: 1/ 12/28/3, min cost: 3, active workers: 0
task 1 3: dequeue: 3, ( 0 3 0 0 0 0 0 0), (1721 : (SEMICOLON))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6), (INSERT, SEMICOLON, 21, 1721 7)) minimal_complete ACTIVE
task 1 3: stack: (1721 : (SEMICOLON), 1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list, (25 . 145)), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 3: check: (Wisi_EOI, (146 . 145)): 3, ( 0 3 0 0 0 0 0 0), (1721 : (SEMICOLON))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6), (INSERT, SEMICOLON, 21, 1721 7)) minimal_complete ACTIVE
task 1 3: check: Shared_Token_Goal : 24
task 1 3: check: 1721 : 21:(Wisi_EOI, (146 . 145)) : (Reduce, 7, case_statement,0) via 0
task 1 3: check: 14 : 21:(Wisi_EOI, (146 . 145)) : (Reduce, 1, compound_statement,1) via 0
task 1 3: check: 17 : 21:(Wisi_EOI, (146 . 145)) : (Reduce, 1, statement,1) via 0
task 1 3: check: 33 : 21:(Wisi_EOI, (146 . 145)) : (Reduce, 1, compilation_unit,5) via 0
task 1 3: check: 15 : 21:(Wisi_EOI, (146 . 145)) : (Reduce, 1, compilation_unit_list,1) via 0
task 1 3: check: 16 : 21:(Wisi_EOI, (146 . 145)) : (Accept It)
task 1 3: enqueue: 0/ 11/28/4, min cost: 4, active workers: 0
task 1 3: succeed: enqueue 15, check  4: 3, ( 0 3 0 0 0 0 0 0), (1721 : (SEMICOLON))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6), (INSERT, SEMICOLON, 21, 1721 7)) minimal_complete ACTIVE
task 1 2: dequeue: 3, ( 0 3 0 0 0 0 0 0), (1721 : (SEMICOLON))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6), (INSERT, SEMICOLON, 21, 1721 7)) minimal_complete ACTIVE
task 1 2: stack: (1721 : (SEMICOLON), 1217 : (CASE), 784 : (END), 370 : (case_statement_alternative_list, (23 . 145)), 169 : (IS, (20 . 21)), 45 : (expression_opt, (6 . 18)), 1 : (CASE, (1 . 4)), 0 : (-))
task 1 2: check: (Wisi_EOI, (146 . 145)): 3, ( 0 3 0 0 0 0 0 0), (1721 : (SEMICOLON))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6), (INSERT, SEMICOLON, 21, 1721 7)) minimal_complete ACTIVE
task 1 2: check: Shared_Token_Goal : 24
task 1 2: check: 1721 : 21:(Wisi_EOI, (146 . 145)) : (Reduce, 7, case_statement,0) via 0
task 1 2: check: 14 : 21:(Wisi_EOI, (146 . 145)) : (Reduce, 1, compound_statement,1) via 0
task 1 2: check: 17 : 21:(Wisi_EOI, (146 . 145)) : (Reduce, 1, statement,1) via 0
task 1 2: check: 33 : 21:(Wisi_EOI, (146 . 145)) : (Reduce, 1, compilation_unit,5) via 0
task 1 2: check: 15 : 21:(Wisi_EOI, (146 . 145)) : (Reduce, 1, compilation_unit_list,1) via 0
task 1 2: check: 16 : 21:(Wisi_EOI, (146 . 145)) : (Accept It)
task 1 2: enqueue: 0/ 11/28/4, min cost: 4, active workers: 0
task 1 2: succeed: enqueue 15, check  4: 3, ( 0 3 0 0 0 0 0 0), (1721 : (SEMICOLON))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6), (INSERT, SEMICOLON, 21, 1721 7)) minimal_complete ACTIVE
Supervisor: done, succeed

Supervisor: Done
 3: succeed 1, enqueue 15, check  4, cost:  3
 3:  3, ( 0 3 0 0 0 0 0 0), (1721 : (SEMICOLON))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6), (INSERT, SEMICOLON, 21, 1721 7)) minimal_complete ACTIVE
 2: succeed 1, enqueue 15, check  4, cost:  3
 2:  3, ( 0 3 0 0 0 0 0 0), (1721 : (SEMICOLON))| 21:(Wisi_EOI, (146 . 145))|((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6), (INSERT, SEMICOLON, 21, 1721 7)) minimal_complete ACTIVE
 3: before Ops applied:
 3: stack (2891 : 20:(SEMICOLON, (145 . 145)), 2865 : 19:(IF, (143 . 144)), 2817 : 18:(END, (139 . 141)), 2724 :(sequence_of_statements, (97 . 137)), 2646 : 13:(ELSE, (89 . 92)), 2505 :(sequence_of_statements, (49 . 87)), 2351 : 7:(THEN, (41 . 44)), 2090 :(expression_opt, (25 . 39)), 1701 :(IF), 1216 :(EQUAL_GREATER), 783 :(NUMERIC_LITERAL), 368 :(WHEN), 169 : 3:(IS, (20 . 21)), 45 :(expression_opt, (6 . 18)), 1 : 1:(CASE, (1 . 4)), 0 :)
 3: Shared_Token   21:(Wisi_EOI, (146 . 145))
 3: Current_Token  21:(Wisi_EOI, (146 . 145))
 3: after Ops applied:
 3: stack (2891 : 20:(SEMICOLON, (145 . 145)), 2865 : 19:(IF, (143 . 144)), 2817 : 18:(END, (139 . 141)), 2724 :(sequence_of_statements, (97 . 137)), 2646 : 13:(ELSE, (89 . 92)), 2505 :(sequence_of_statements, (49 . 87)), 2351 : 7:(THEN, (41 . 44)), 2090 :(expression_opt, (25 . 39)), 1701 :(IF), 1216 :(EQUAL_GREATER), 783 :(NUMERIC_LITERAL), 368 :(WHEN), 169 : 3:(IS, (20 . 21)), 45 :(expression_opt, (6 . 18)), 1 : 1:(CASE, (1 . 4)), 0 :)
 3: Shared_Token   21:(Wisi_EOI, (146 . 145))
 3: Current_Token (END)
 3: recover_insert_delete ((INSERT, CASE, 21, 1217 6), (INSERT, SEMICOLON, 21, 1721 7))
 3: inc_shared_token FALSE parser verb SHIFT
 2: before Ops applied:
 2: stack (2891 : 20:(SEMICOLON, (145 . 145)), 2865 : 19:(IF, (143 . 144)), 2817 : 18:(END, (139 . 141)), 2724 :(sequence_of_statements, (97 . 137)), 2646 : 13:(ELSE, (89 . 92)), 2505 :(sequence_of_statements, (49 . 87)), 2351 : 7:(THEN, (41 . 44)), 2090 :(expression_opt, (23 . 39)), 1701 :(IF), 1216 :(EQUAL_GREATER), 783 :(NUMERIC_LITERAL), 368 :(WHEN), 169 : 3:(IS, (20 . 21)), 45 :(expression_opt, (6 . 18)), 1 : 1:(CASE, (1 . 4)), 0 :)
 2: Shared_Token   21:(Wisi_EOI, (146 . 145))
 2: Current_Token  21:(Wisi_EOI, (146 . 145))
 2: after Ops applied:
 2: stack (2891 : 20:(SEMICOLON, (145 . 145)), 2865 : 19:(IF, (143 . 144)), 2817 : 18:(END, (139 . 141)), 2724 :(sequence_of_statements, (97 . 137)), 2646 : 13:(ELSE, (89 . 92)), 2505 :(sequence_of_statements, (49 . 87)), 2351 : 7:(THEN, (41 . 44)), 2090 :(expression_opt, (23 . 39)), 1701 :(IF), 1216 :(EQUAL_GREATER), 783 :(NUMERIC_LITERAL), 368 :(WHEN), 169 : 3:(IS, (20 . 21)), 45 :(expression_opt, (6 . 18)), 1 : 1:(CASE, (1 . 4)), 0 :)
 2: Shared_Token   21:(Wisi_EOI, (146 . 145))
 2: Current_Token (END)
 2: recover_insert_delete ((INSERT, CASE, 21, 1217 6), (INSERT, SEMICOLON, 21, 1721 7))
 2: inc_shared_token FALSE parser verb SHIFT
recover: succeed, parser count 2
 3: Current_Token (END) Shared_Token  21:(Wisi_EOI, (146 . 145))
 3: resume_active: True, token goal 24
 2: Current_Token (END) Shared_Token  21:(Wisi_EOI, (146 . 145))
 2: resume_active: True, token goal 24
 3: 2891: (END) : reduce 9 tokens to if_statement
if_statement_1: (if_statement, (25 . 145)) <= ((IF), (expression_opt, (25 . 39)),  7:(THEN, (41 . 44)), (sequence_of_statements, (49 . 87)),  13:(ELSE, (89 . 92)), (sequence_of_statements, (97 . 137)),  18:(END, (139 . 141)),  19:(IF, (143 . 144)),  20:(SEMICOLON, (145 . 145)))
 ... goto state 1711
 2: 2891: (END) : reduce 9 tokens to if_statement
if_statement_1: (if_statement, (23 . 145)) <= ((IF), (expression_opt, (23 . 39)),  7:(THEN, (41 . 44)), (sequence_of_statements, (49 . 87)),  13:(ELSE, (89 . 92)), (sequence_of_statements, (97 . 137)),  18:(END, (139 . 141)),  19:(IF, (143 . 144)),  20:(SEMICOLON, (145 . 145)))
 ... goto state 1711
 3: 1711: (END) : reduce 1 tokens to compound_statement
compound_statement_0: (compound_statement, (25 . 145)) <= ((if_statement, (25 . 145)))
 ... goto state 1708
 2: 1711: (END) : reduce 1 tokens to compound_statement
compound_statement_0: (compound_statement, (23 . 145)) <= ((if_statement, (23 . 145)))
 ... goto state 1708
 3: 1708: (END) : reduce 1 tokens to statement
statement_1: (statement, (25 . 145)) <= ((compound_statement, (25 . 145)))
 ... goto state 1720
 2: 1708: (END) : reduce 1 tokens to statement
statement_1: (statement, (23 . 145)) <= ((compound_statement, (23 . 145)))
 ... goto state 1720
 3: 1720: (END) : reduce 1 tokens to sequence_of_statements_list
sequence_of_statements_list_1: (sequence_of_statements_list, (25 . 145)) <= ((statement, (25 . 145)))
 ... goto state 1716
 2: 1720: (END) : reduce 1 tokens to sequence_of_statements_list
sequence_of_statements_list_1: (sequence_of_statements_list, (23 . 145)) <= ((statement, (23 . 145)))
 ... goto state 1716
 3: 1716: (END) : reduce 1 tokens to sequence_of_statements
sequence_of_statements_0: (sequence_of_statements, (25 . 145)) <= ((sequence_of_statements_list, (25 . 145)))
 ... goto state 1717
 2: 1716: (END) : reduce 1 tokens to sequence_of_statements
sequence_of_statements_0: (sequence_of_statements, (23 . 145)) <= ((sequence_of_statements_list, (23 . 145)))
 ... goto state 1717
 3: 1717: (END) : reduce 4 tokens to case_statement_alternative
case_statement_alternative_0: (case_statement_alternative, (25 . 145)) <= ((WHEN), (NUMERIC_LITERAL), (EQUAL_GREATER), (sequence_of_statements, (25 . 145)))
 ... goto state 369
 2: 1717: (END) : reduce 4 tokens to case_statement_alternative
case_statement_alternative_0: (case_statement_alternative, (23 . 145)) <= ((WHEN), (NUMERIC_LITERAL), (EQUAL_GREATER), (sequence_of_statements, (23 . 145)))
 ... goto state 369
 3: 369: (END) : reduce 1 tokens to case_statement_alternative_list
case_statement_alternative_list_1: (case_statement_alternative_list, (25 . 145)) <= ((case_statement_alternative, (25 . 145)))
 ... goto state 370
 2: 369: (END) : reduce 1 tokens to case_statement_alternative_list
case_statement_alternative_list_1: (case_statement_alternative_list, (23 . 145)) <= ((case_statement_alternative, (23 . 145)))
 ... goto state 370
 3: 370: (END) : shift and goto state 784
 2: 370: (END) : shift and goto state 784
 3: 784: (CASE) : shift and goto state 1217
 2: 784: (CASE) : shift and goto state 1217
 3: 1217: (SEMICOLON) : shift and goto state 1721
 2: 1217: (SEMICOLON) : shift and goto state 1721
 3: 1721:  21:(Wisi_EOI, (146 . 145)) : reduce 7 tokens to case_statement
case_statement_0: (case_statement, (1 . 145)) <= ( 1:(CASE, (1 . 4)), (expression_opt, (6 . 18)),  3:(IS, (20 . 21)), (case_statement_alternative_list, (25 . 145)), (END), (CASE), (SEMICOLON))
 ... goto state 14
 2: 1721:  21:(Wisi_EOI, (146 . 145)) : reduce 7 tokens to case_statement
case_statement_0: (case_statement, (1 . 145)) <= ( 1:(CASE, (1 . 4)), (expression_opt, (6 . 18)),  3:(IS, (20 . 21)), (case_statement_alternative_list, (23 . 145)), (END), (CASE), (SEMICOLON))
 ... goto state 14
 3: 14:  21:(Wisi_EOI, (146 . 145)) : reduce 1 tokens to compound_statement
compound_statement_1: (compound_statement, (1 . 145)) <= ((case_statement, (1 . 145)))
 ... goto state 17
 2: 14:  21:(Wisi_EOI, (146 . 145)) : reduce 1 tokens to compound_statement
compound_statement_1: (compound_statement, (1 . 145)) <= ((case_statement, (1 . 145)))
 ... goto state 17
 3: 17:  21:(Wisi_EOI, (146 . 145)) : reduce 1 tokens to statement
statement_1: (statement, (1 . 145)) <= ((compound_statement, (1 . 145)))
 ... goto state 33
 2: 17:  21:(Wisi_EOI, (146 . 145)) : reduce 1 tokens to statement
statement_1: (statement, (1 . 145)) <= ((compound_statement, (1 . 145)))
 ... goto state 33
 3: 33:  21:(Wisi_EOI, (146 . 145)) : reduce 1 tokens to compilation_unit
compilation_unit_5: (compilation_unit, (1 . 145)) <= ((statement, (1 . 145)))
 ... goto state 15
 2: 33:  21:(Wisi_EOI, (146 . 145)) : reduce 1 tokens to compilation_unit
compilation_unit_5: (compilation_unit, (1 . 145)) <= ((statement, (1 . 145)))
 ... goto state 15
 3: 15:  21:(Wisi_EOI, (146 . 145)) : reduce 1 tokens to compilation_unit_list
compilation_unit_list_1: (compilation_unit_list, (1 . 145)) <= ((compilation_unit, (1 . 145)))
semantic check OK
 ... goto state 16
 2: 15:  21:(Wisi_EOI, (146 . 145)) : reduce 1 tokens to compilation_unit_list
compilation_unit_list_1: (compilation_unit_list, (1 . 145)) <= ((compilation_unit, (1 . 145)))
semantic check OK
 ... goto state 16
 3: 16:  21:(Wisi_EOI, (146 . 145)) : accept it
wisitoken_accept_0: (wisitoken_accept, (1 . 145)) <= ((compilation_unit_list, (1 . 145)))
 2: 16:  21:(Wisi_EOI, (146 . 145)) : accept it
wisitoken_accept_0: (wisitoken_accept, (1 . 145)) <= ((compilation_unit_list, (1 . 145)))
 2: terminate (1 active): recover cost/length 21:(Wisi_EOI, (146 . 145))
 3: succeed
convert_if_to_case.ada_lite:2:0: syntax error: expecting WHEN, found '='
   recovered: ((DELETE, EQUAL, 4), (INSERT, WHEN, 5, 368 4), (INSERT, NUMERIC_LITERAL, 5, 783 5), (INSERT, EQUAL_GREATER, 5, 1216 6), (INSERT, IF, 5, 1701 7))
convert_if_to_case.ada_lite:7:0: syntax error: expecting BEGIN, CASE, DECLARE, END, EXIT, FOR, IF, LOOP, RETURN, WHEN, IDENTIFIER, found ''
   recovered: ((INSERT, END, 21, 784 5), (INSERT, CASE, 21, 1217 6), (INSERT, SEMICOLON, 21, 1721 7))

