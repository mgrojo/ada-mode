;; Grammar has no conflicts; test wisi cache actions in Emacs
;; (ediff "subprograms.wy" "../../../org.wisitoken.stephe-1/wisi/test/subprograms.wy")

%{
;; Copyright (C) 2013, 2017 Stephen Leake.  All Rights Reserved.

;; This program is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License as
;; published by the Free Software Foundation; either version 3, or (at
;; your option) any later version.
;;
;; This software is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.

with WisiToken.Token_Region;
%%
State : aliased WisiToken.Token_Region.State_Type (Trace'Access);
%}

%keyword BEGIN "begin"
%keyword END "end"
%keyword EXCEPTION "exception"
%keyword FUNCTION "function"
%keyword LEFT_PAREN "("
%keyword PROCEDURE "procedure"
%keyword RIGHT_PAREN ")"
%keyword WHEN "when"

%token <punctuation> SEMICOLON ";"

%token <symbol> SYMBOL "[a-zA-Z][0-9a-zA-Z_]*"

%non_grammar <non-reporting> WHITESPACE [ \t\n]
%non_grammar <non-reporting> COMMENT "--"[^\n]*[\n]

%start compilation_unit
%parser_algorithm LALR
%output_language Ada_Emacs
%lexer Elisp

;; elisp names in actions
%elisp_class name
%elisp_class misc
%elisp_class open-paren
%elisp_class close-paren

%elisp_face font-lock-keyword-face
%elisp_face font-lock-function-name-face
%elisp_face nil

%%

block
  : BEGIN END
  | BEGIN EXCEPTION WHEN SYMBOL END
;

compilation_unit
  : declarations
  ;

declarations
  : declaration
  | declarations declaration
  ;

declaration
  : subprogram
  ;

subprogram
  : FUNCTION parameter_list SYMBOL block SEMICOLON
    (progn
      ;; an example of each supported action, with the most complex parameter syntax
      (wisi-statement-action [1 name 2 misc])
      (wisi-containing-action 1 2)
      (wisi-motion-action [1 [4 EXCEPTION WHEN] 5])
      (wisi-face-apply-action [1 nil font-lock-keyword-face 3 nil font-lock-function-name-face])
      (wisi-indent-action [0 ada-indent-broken
                             [2 ada-indent-broken]])) ;; single action on two lines
  | PROCEDURE parameter_list SYMBOL
    (progn
      (wisi-statement-action [1 name 2 misc])
      (wisi-face-apply-action [3 nil font-lock-function-name-face])
      (wisi-indent-action [0 ada-indent-broken
                             (wisi-anchored% 3 ada-indent-broken)]))
  ;

;; not on one line, empty production with comment
parameter_list
  : LEFT_PAREN RIGHT_PAREN ;; c-like no parameters
    (wisi-statement-action [1 open-paren 2 close-paren]) ;; single action; no progn
  | ;; ada-like no parameters
  | LEFT_PAREN SYMBOL RIGHT_PAREN
    (wisi-statement-action [1 open-paren 3 close-paren])
  ;

%%

;; end of file
