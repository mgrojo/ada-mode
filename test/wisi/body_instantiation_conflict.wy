;; grammar has a shift/reduce conflict
;; between a procedure body and a generic procedure instantiation.
;; Conflict is handled by generalized parser
;;
;; (ediff "body_instantiation_conflict.wy" "../../../org.opentoken.stephe/wisi/test/body_instantiation_conflict.wy")

%{
(require 'wisi)
(require 'semantic/lex)
(require 'wisi-compile)
%}

%keyword BEGIN "begin"
%keyword END "end"
%keyword IS "is"
%keyword LEFT_PAREN "("
%keyword NEW "new"
%keyword NULL "null"
%keyword PROCEDURE "procedure"
%keyword RIGHT_PAREN ")"

%token <punctuation> SEMICOLON ";"
%token <symbol> IDENTIFIER

%start compilation_unit

%conflict REDUCE/SHIFT in state parameter_list, generic_instantiation on token IS

%%

compilation_unit
  : library_item library_item
    (setq wisi-test-success t)
  ;

library_item : subprogram_body | generic_instantiation  ;

subprogram_body
 ;; comment before : line
  : subprogram_specification IS BEGIN NULL END SEMICOLON
    (wisi-statement-action [1 statement-start 6 statement-end])
  ;

;; some on one line
subprogram_specification
  : PROCEDURE IDENTIFIER parameter_list  ;

;; all on one line, empty production
parameter_list : | LEFT_PAREN IDENTIFIER RIGHT_PAREN ;

generic_instantiation
  : PROCEDURE IDENTIFIER IS NEW IDENTIFIER LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON
    (wisi-statement-action [1 statement-start 9 statement-end])
  ;

%%

;;; end of file
