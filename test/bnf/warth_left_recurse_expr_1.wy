;; wisi grammar for [warth 2008] left recursive example 1

;; References:
;;
;; see wisitoken-parse-packrat.ads

%code copyright_license %{
;;  Copyright (C) 2018 Stephen Leake.  All Rights Reserved.

;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 3, or (at
;;  your option) any later version.
;;
;;  This software is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;;  General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public License
;;  along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.
}%

%code actions body context %{with Warth_Left_Recurse_Expr_1_Runtime; use Warth_Left_Recurse_Expr_1_Runtime;}%

%generate Packrat_Gen  Ada re2c
%generate LALR         Ada re2c
%generate Packrat_Proc Ada re2c

%token <punctuation> MINUS "-"
%token <number> NUMERIC_LITERAL %[ [0-9]+ ]%

%non_grammar <non-reporting> WHITESPACE %[ [ \t] ]%
%non_grammar <new-line> NEW_LINE %[ [\x0a]|[\x0d][\x0a] ]%
;; no comment
;; no mckenzie

%start expr

expr
  : expr MINUS NUMERIC_LITERAL
    %(Push (User_Data, Tree, Tokens, 3);
      Subtract (User_Data, Tree, Tokens);)%
  | NUMERIC_LITERAL
    %(Push (User_Data, Tree, Tokens, 1);)%
  ;

;; end of file
