 3 tokens lexed
 0: 0: (-1, 1:(LPAREN, (55 . 55))) : shift and goto state 7
 0: 7: (-1, 2:(IDENTIFIER, (56 . 56))) : shift and goto state 28
 0: 28: (-1, 3:(Wisi_EOI, (58 . 57))) : ERROR
 0: 28: expecting: LPAREN, RPAREN, LBRACK, DOT, INC, DEC, ADD, SUB, MUL, DIV, MOD
 0: zombie

 McKenzie error recovery

parser 0: State 28 Current_Token (-1, 3:(Wisi_EOI, (58 . 57))) Resume_Token_Goal 7
LR_Parse_Action

 1 parallel tasks
new Worker_Task 1
 0: succeed 2, enqueue 36, check  5, cost:  1
spawn parser 1 from 0 (2 active)
 1:  1, ( 0 0 1 0 0 0 0 0 0), (57 : (RPAREN))|(-1, 3:(Wisi_EOI, (58 . 57)))|((INSERT, RPAREN, 3))
 0:  1, ( 0 0 3 0 0 0 0 0 0), (57 : (RPAREN))|(-1, 3:(Wisi_EOI, (58 . 57)))|((INSERT, LPAREN, 3), (INSERT, RPAREN, 3), (INSERT, RPAREN, 3))

recover: succeed, parser count 2
 1: stack (1, (0, 0:(-)), (7, 1:(LPAREN, (55 . 55))), ^(28, 2:(IDENTIFIER, (56 . 56))))
    Current_Token: (1, -4:(RPAREN))
    Shared_Token: (-1, 3:(Wisi_EOI, (58 . 57)))
    stream input: (1, (-1, -4:(RPAREN)))
    recover_insert_delete:
    resume_active: True, token goal 7, inc_shared_stream_token: FALSE
 0: stack (0, (0, 0:(-)), (7, 1:(LPAREN, (55 . 55))), ^(28, 2:(IDENTIFIER, (56 . 56))))
    Current_Token: (0, -5:(LPAREN))
    Shared_Token: (-1, 3:(Wisi_EOI, (58 . 57)))
    stream input: (0, (-1, -5:(LPAREN)))
    recover_insert_delete:((INSERT, RPAREN, 3), (INSERT, RPAREN, 3))
    resume_active: True, token goal 7, inc_shared_stream_token: FALSE

 1: 28: (1, -4:(RPAREN)) : reduce 1 tokens to primary
(primary_3, (56 . 56)) <= (2:(IDENTIFIER, (56 . 56)))
 ... goto state 33
 0: 28: (0, -5:(LPAREN)) : shift and goto state 56
 1: 33: (1, -4:(RPAREN)) : reduce 1 tokens to expression
(expression_0, (56 . 56)) <= ((primary, (56 . 56)))
 ... goto state 32
 1: 32: (1, -4:(RPAREN)) : shift and goto state 57
 1: 57: (-1, 3:(Wisi_EOI, (58 . 57))) : reduce 3 tokens to primary
(primary_0, (55 . 56)) <= (1:(LPAREN, (55 . 55)), (expression, (56 . 56)), -4:(RPAREN))
 ... goto state 17
 0: 56: (0, -8:(RPAREN)) : shift and goto state 110
 1: 17: (-1, 3:(Wisi_EOI, (58 . 57))) : reduce 1 tokens to expression
(expression_0, (55 . 56)) <= ((primary, (55 . 56)))
 ... goto state 16
 1: 16: (-1, 3:(Wisi_EOI, (58 . 57))) : accept it
(wisitoken_accept_0, (55 . 56)) <= ((expression, (55 . 56)))
 0: 110: (0, -12:(RPAREN)) : reduce 3 tokens to methodCall
(methodCall_1, (56 . 56)) <= (2:(IDENTIFIER, (56 . 56)), -5:(LPAREN), -8:(RPAREN))
 ... goto state 31
 0: 31: (0, -12:(RPAREN)) : reduce 1 tokens to expression
(expression_3, (56 . 56)) <= ((methodCall, (56 . 56)))
 ... goto state 32
 0: 32: (0, -12:(RPAREN)) : shift and goto state 57
 0: 57: (-1, 3:(Wisi_EOI, (58 . 57))) : reduce 3 tokens to primary
(primary_0, (55 . 56)) <= (1:(LPAREN, (55 . 55)), (expression, (56 . 56)), -12:(RPAREN))
 ... goto state 17
 0: 17: (-1, 3:(Wisi_EOI, (58 . 57))) : reduce 1 tokens to expression
(expression_0, (55 . 56)) <= ((primary, (55 . 56)))
 ... goto state 16
 0: 16: (-1, 3:(Wisi_EOI, (58 . 57))) : accept it
(wisitoken_accept_0, (55 . 56)) <= ((expression, (55 . 56)))
 0: terminate (1 active): recover cost/length (-1, 3:(Wisi_EOI, (58 . 57)))
 1: succeed
java_expressions_antlr.input:3:1: syntax error: expecting LPAREN, RPAREN, LBRACK, DOT, INC, DEC, ADD, SUB, MUL, DIV, MOD, found ''
   recovered: ((INSERT, RPAREN, 3))
