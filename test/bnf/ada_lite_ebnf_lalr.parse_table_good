Tokens:
 0 => WHITESPACE
 1 => NEW_LINE
 2 => COMMENT
 3 => AND
 4 => BEGIN
 5 => BODY
 6 => CASE
 7 => DECLARE
 8 => ELSE
 9 => ELSIF
 10 => END
 11 => EXIT
 12 => EXCEPTION
 13 => FOR
 14 => FUNCTION
 15 => IF
 16 => IN
 17 => IS
 18 => LEFT_PAREN
 19 => LOOP
 20 => NEW
 21 => NOT
 22 => OR
 23 => PACKAGE
 24 => PROCEDURE
 25 => RANGE
 26 => RETURN
 27 => RIGHT_PAREN
 28 => SEPARATE
 29 => THEN
 30 => TYPE
 31 => WHEN
 32 => WITH
 33 => XOR
 34 => AMPERSAND
 35 => COLON
 36 => COLON_EQUAL
 37 => COMMA
 38 => DOT
 39 => DOT_DOT
 40 => EQUAL
 41 => EQUAL_GREATER
 42 => GREATER
 43 => GREATER_EQUAL
 44 => LESS
 45 => LESS_EQUAL
 46 => MINUS
 47 => PLUS
 48 => SEMICOLON
 49 => SLASH
 50 => SLASH_EQUAL
 51 => STAR
 52 => STRING_LITERAL
 53 => NUMERIC_LITERAL
 54 => IDENTIFIER
 55 => Wisi_EOI
 56 => wisitoken_accept
 57 => actual_parameter_part
 58 => aspect_specification
 59 => assignment_statement
 60 => association
 61 => association_list
 62 => binary_adding_operator
 63 => block_label_opt
 64 => block_statement
 65 => body_g
 66 => body_stub
 67 => case_statement
 68 => case_statement_alternative
 69 => compilation_unit
 70 => compilation_unit_list
 71 => compound_statement
 72 => constraint
 73 => declaration
 74 => declarative_part
 75 => discrete_subtype_definition
 76 => enumeration_type_definition
 77 => exception_choice
 78 => exception_handler
 79 => exit_statement
 80 => expression
 81 => extended_return_object_declaration
 82 => extended_return_statement
 83 => factor
 84 => formal_part
 85 => full_type_declaration
 86 => function_specification
 87 => generic_instantiation
 88 => handled_sequence_of_statements
 89 => identifier_opt
 90 => if_statement
 91 => index_constraint
 92 => iteration_scheme
 93 => loop_statement
 94 => multiplying_operator
 95 => name
 96 => name_opt
 97 => object_declaration
 98 => package_body
 99 => parameter_and_result_profile
 100 => parameter_profile
 101 => parameter_specification
 102 => paren_expression
 103 => primary
 104 => procedure_call_statement
 105 => procedure_specification
 106 => proper_body
 107 => range_g
 108 => range_list
 109 => relation
 110 => relational_operator
 111 => selected_component
 112 => sequence_of_statements
 113 => simple_expression
 114 => simple_return_statement
 115 => simple_statement
 116 => statement
 117 => subprogram_body
 118 => subprogram_body_stub
 119 => subprogram_declaration
 120 => subprogram_specification
 121 => subtype_indication
 122 => term
 123 => type_declaration
 124 => type_definition
 125 => unary_adding_operator
 126 => nonterminal_005
 127 => nonterminal_004_list_opt
 128 => nonterminal_003_list
 129 => nonterminal_007
 130 => nonterminal_006_list
 131 => nonterminal_009
 132 => nonterminal_008_list
 133 => nonterminal_012
 134 => nonterminal_011_list_opt
 135 => nonterminal_010_list
 136 => nonterminal_015
 137 => nonterminal_014_list_opt
 138 => nonterminal_013_list
 139 => nonterminal_017
 140 => nonterminal_016_list
 141 => nonterminal_019
 142 => nonterminal_018_list
 143 => nonterminal_021
 144 => nonterminal_020_list
 145 => nonterminal_024
 146 => nonterminal_023_list_opt
 147 => nonterminal_022_list
 148 => nonterminal_027
 149 => nonterminal_026_list_opt
 150 => nonterminal_025_list
 151 => nonterminal_030
 152 => nonterminal_029_list_opt
 153 => nonterminal_028_list
 154 => nonterminal_033
 155 => nonterminal_032_list_opt
 156 => nonterminal_031_list
 157 => nonterminal_036
 158 => nonterminal_035_list_opt
 159 => nonterminal_034_list
 160 => nonterminal_039
 161 => nonterminal_038_list_opt
 162 => nonterminal_037_list
 163 => nonterminal_040
 164 => nonterminal_041
 165 => nonterminal_042
 166 => nonterminal_043
 167 => nonterminal_044
 168 => nonterminal_045
 169 => nonterminal_046
 170 => nonterminal_047
 171 => nonterminal_048

Productions:
56.0: wisitoken_accept <= compilation_unit_list Wisi_EOI
57.0: actual_parameter_part <= LEFT_PAREN association_list RIGHT_PAREN
58.0: aspect_specification <= WITH association_list
59.0: assignment_statement <= name COLON_EQUAL expression SEMICOLON
60.0: association <= nonterminal_048 expression
60.1: association <= expression
61.0: association_list <= association nonterminal_004_list_opt
62.0: binary_adding_operator <= PLUS
62.1: binary_adding_operator <= MINUS
62.2: binary_adding_operator <= AMPERSAND
63.0: block_label_opt <= IDENTIFIER COLON
63.1: block_label_opt <=
64.0: block_statement <= block_label_opt nonterminal_047 BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON
64.1: block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON
65.0: body_g <= proper_body
65.1: body_g <= body_stub
66.0: body_stub <= subprogram_body_stub
67.0: case_statement <= CASE expression IS nonterminal_006_list END CASE SEMICOLON
68.0: case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements
69.0: compilation_unit <= package_body
69.1: compilation_unit <= subprogram_declaration
69.2: compilation_unit <= subprogram_body
69.3: compilation_unit <= generic_instantiation
69.4: compilation_unit <= statement
70.0: compilation_unit_list <= nonterminal_008_list
71.0: compound_statement <= if_statement
71.1: compound_statement <= case_statement
71.2: compound_statement <= loop_statement
71.3: compound_statement <= block_statement
71.4: compound_statement <= extended_return_statement
72.0: constraint <= RANGE range_g
72.1: constraint <= index_constraint
73.0: declaration <= body_g
73.1: declaration <= object_declaration
73.2: declaration <= subprogram_declaration
73.3: declaration <= type_declaration
74.0: declarative_part <= nonterminal_011_list_opt
75.0: discrete_subtype_definition <= subtype_indication
75.1: discrete_subtype_definition <= range_g
76.0: enumeration_type_definition <= LEFT_PAREN IDENTIFIER nonterminal_014_list_opt RIGHT_PAREN
77.0: exception_choice <= name
78.0: exception_handler <= WHEN exception_choice EQUAL_GREATER sequence_of_statements
79.0: exit_statement <= EXIT IDENTIFIER nonterminal_046 SEMICOLON
79.1: exit_statement <= EXIT nonterminal_046 SEMICOLON
79.2: exit_statement <= EXIT IDENTIFIER SEMICOLON
79.3: exit_statement <= EXIT SEMICOLON
80.0: expression <= relation
80.1: expression <= relation nonterminal_016_list
80.2: expression <= relation nonterminal_018_list
80.3: expression <= relation nonterminal_020_list
81.0: extended_return_object_declaration <= IDENTIFIER COLON subtype_indication
82.0: extended_return_statement <= RETURN extended_return_object_declaration SEMICOLON
83.0: factor <= primary
83.1: factor <= NOT primary
84.0: formal_part <= LEFT_PAREN parameter_specification nonterminal_023_list_opt RIGHT_PAREN
85.0: full_type_declaration <= TYPE IDENTIFIER IS type_definition SEMICOLON
86.0: function_specification <= FUNCTION name parameter_and_result_profile
87.0: generic_instantiation <= PACKAGE name IS NEW name SEMICOLON
87.1: generic_instantiation <= PROCEDURE name IS NEW name SEMICOLON
88.0: handled_sequence_of_statements <= sequence_of_statements nonterminal_045
88.1: handled_sequence_of_statements <= sequence_of_statements
89.0: identifier_opt <= IDENTIFIER
89.1: identifier_opt <=
90.0: if_statement <= IF expression THEN sequence_of_statements nonterminal_029_list_opt nonterminal_044 END IF SEMICOLON
90.1: if_statement <= IF expression THEN sequence_of_statements nonterminal_029_list_opt END IF SEMICOLON
91.0: index_constraint <= LEFT_PAREN discrete_subtype_definition RIGHT_PAREN
92.0: iteration_scheme <= FOR IDENTIFIER IN discrete_subtype_definition
93.0: loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON
93.1: loop_statement <= LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON
94.0: multiplying_operator <= STAR
94.1: multiplying_operator <= SLASH
95.0: name <= name LEFT_PAREN range_list RIGHT_PAREN
95.1: name <= name actual_parameter_part
95.2: name <= IDENTIFIER
95.3: name <= selected_component
96.0: name_opt <= name
96.1: name_opt <=
97.0: object_declaration <= IDENTIFIER COLON subtype_indication nonterminal_043 SEMICOLON
97.1: object_declaration <= IDENTIFIER COLON subtype_indication SEMICOLON
98.0: package_body <= PACKAGE BODY name aspect_specification IS declarative_part nonterminal_042 END name_opt SEMICOLON
98.1: package_body <= PACKAGE BODY name IS declarative_part nonterminal_042 END name_opt SEMICOLON
98.2: package_body <= PACKAGE BODY name aspect_specification IS declarative_part END name_opt SEMICOLON
98.3: package_body <= PACKAGE BODY name IS declarative_part END name_opt SEMICOLON
99.0: parameter_and_result_profile <= formal_part RETURN IDENTIFIER
99.1: parameter_and_result_profile <= RETURN IDENTIFIER
100.0: parameter_profile <= formal_part
100.1: parameter_profile <=
101.0: parameter_specification <= IDENTIFIER COLON IDENTIFIER nonterminal_041
101.1: parameter_specification <= IDENTIFIER COLON IDENTIFIER
102.0: paren_expression <= LEFT_PAREN expression RIGHT_PAREN
103.0: primary <= NUMERIC_LITERAL
103.1: primary <= STRING_LITERAL
103.2: primary <= name
103.3: primary <= paren_expression
104.0: procedure_call_statement <= name SEMICOLON
105.0: procedure_specification <= PROCEDURE name parameter_profile
106.0: proper_body <= package_body
106.1: proper_body <= subprogram_body
107.0: range_g <= simple_expression DOT_DOT simple_expression
108.0: range_list <= range_list COMMA range_g
108.1: range_list <= range_g
109.0: relation <= simple_expression nonterminal_040
109.1: relation <= simple_expression
110.0: relational_operator <= EQUAL
110.1: relational_operator <= SLASH_EQUAL
110.2: relational_operator <= LESS
110.3: relational_operator <= LESS_EQUAL
110.4: relational_operator <= GREATER
110.5: relational_operator <= GREATER_EQUAL
111.0: selected_component <= name DOT IDENTIFIER
112.0: sequence_of_statements <= nonterminal_032_list_opt
113.0: simple_expression <= unary_adding_operator term nonterminal_035_list_opt
113.1: simple_expression <= term nonterminal_035_list_opt
114.0: simple_return_statement <= RETURN expression SEMICOLON
115.0: simple_statement <= assignment_statement
115.1: simple_statement <= exit_statement
115.2: simple_statement <= procedure_call_statement
115.3: simple_statement <= simple_return_statement
116.0: statement <= simple_statement
116.1: statement <= compound_statement
117.0: subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
117.1: subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
118.0: subprogram_body_stub <= subprogram_specification IS SEPARATE SEMICOLON
119.0: subprogram_declaration <= subprogram_specification SEMICOLON
120.0: subprogram_specification <= procedure_specification
120.1: subprogram_specification <= function_specification
121.0: subtype_indication <= name constraint
121.1: subtype_indication <= name
122.0: term <= factor nonterminal_038_list_opt
123.0: type_declaration <= full_type_declaration
124.0: type_definition <= enumeration_type_definition
125.0: unary_adding_operator <= PLUS
125.1: unary_adding_operator <= MINUS
126.0: nonterminal_005 <= COMMA association
127.0: nonterminal_004_list_opt <=
127.1: nonterminal_004_list_opt <= nonterminal_003_list
128.0: nonterminal_003_list <= nonterminal_005
128.1: nonterminal_003_list <= nonterminal_003_list nonterminal_005
129.0: nonterminal_007 <= case_statement_alternative
130.0: nonterminal_006_list <= nonterminal_007
130.1: nonterminal_006_list <= nonterminal_006_list nonterminal_007
131.0: nonterminal_009 <= compilation_unit
132.0: nonterminal_008_list <= nonterminal_009
132.1: nonterminal_008_list <= nonterminal_008_list nonterminal_009
133.0: nonterminal_012 <= declaration
134.0: nonterminal_011_list_opt <=
134.1: nonterminal_011_list_opt <= nonterminal_010_list
135.0: nonterminal_010_list <= nonterminal_012
135.1: nonterminal_010_list <= nonterminal_010_list nonterminal_012
136.0: nonterminal_015 <= COMMA IDENTIFIER
137.0: nonterminal_014_list_opt <=
137.1: nonterminal_014_list_opt <= nonterminal_013_list
138.0: nonterminal_013_list <= nonterminal_015
138.1: nonterminal_013_list <= nonterminal_013_list nonterminal_015
139.0: nonterminal_017 <= AND relation
140.0: nonterminal_016_list <= nonterminal_017
140.1: nonterminal_016_list <= nonterminal_016_list nonterminal_017
141.0: nonterminal_019 <= OR relation
142.0: nonterminal_018_list <= nonterminal_019
142.1: nonterminal_018_list <= nonterminal_018_list nonterminal_019
143.0: nonterminal_021 <= XOR relation
144.0: nonterminal_020_list <= nonterminal_021
144.1: nonterminal_020_list <= nonterminal_020_list nonterminal_021
145.0: nonterminal_024 <= SEMICOLON parameter_specification
146.0: nonterminal_023_list_opt <=
146.1: nonterminal_023_list_opt <= nonterminal_022_list
147.0: nonterminal_022_list <= nonterminal_024
147.1: nonterminal_022_list <= nonterminal_022_list nonterminal_024
148.0: nonterminal_027 <= exception_handler
149.0: nonterminal_026_list_opt <=
149.1: nonterminal_026_list_opt <= nonterminal_025_list
150.0: nonterminal_025_list <= nonterminal_027
150.1: nonterminal_025_list <= nonterminal_025_list nonterminal_027
151.0: nonterminal_030 <= ELSIF expression THEN sequence_of_statements
152.0: nonterminal_029_list_opt <=
152.1: nonterminal_029_list_opt <= nonterminal_028_list
153.0: nonterminal_028_list <= nonterminal_030
153.1: nonterminal_028_list <= nonterminal_028_list nonterminal_030
154.0: nonterminal_033 <= statement
155.0: nonterminal_032_list_opt <=
155.1: nonterminal_032_list_opt <= nonterminal_031_list
156.0: nonterminal_031_list <= nonterminal_033
156.1: nonterminal_031_list <= nonterminal_031_list nonterminal_033
157.0: nonterminal_036 <= binary_adding_operator term
158.0: nonterminal_035_list_opt <=
158.1: nonterminal_035_list_opt <= nonterminal_034_list
159.0: nonterminal_034_list <= nonterminal_036
159.1: nonterminal_034_list <= nonterminal_034_list nonterminal_036
160.0: nonterminal_039 <= multiplying_operator factor
161.0: nonterminal_038_list_opt <=
161.1: nonterminal_038_list_opt <= nonterminal_037_list
162.0: nonterminal_037_list <= nonterminal_039
162.1: nonterminal_037_list <= nonterminal_037_list nonterminal_039
163.0: nonterminal_040 <= relational_operator simple_expression
164.0: nonterminal_041 <= COLON_EQUAL expression
165.0: nonterminal_042 <= BEGIN handled_sequence_of_statements
166.0: nonterminal_043 <= COLON_EQUAL expression
167.0: nonterminal_044 <= ELSE sequence_of_statements
168.0: nonterminal_045 <= EXCEPTION nonterminal_026_list_opt
169.0: nonterminal_046 <= WHEN expression
170.0: nonterminal_047 <= DECLARE declarative_part
171.0: nonterminal_048 <= IDENTIFIER EQUAL_GREATER

McKenzie:
(Insert =>
 AND             => 4,
 BEGIN           => 3,
 BODY            => 4,
 CASE            => 3,
 DECLARE         => 3,
 ELSE            => 3,
 ELSIF           => 3,
 END             => 1,
 EXIT            => 3,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 3,
 IF              => 2,
 IN              => 4,
 IS              => 3,
 LEFT_PAREN      => 4,
 LOOP            => 2,
 NEW             => 3,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 3,
 RANGE           => 4,
 RETURN          => 3,
 RIGHT_PAREN     => 3,
 SEPARATE        => 4,
 THEN            => 3,
 TYPE            => 4,
 WHEN            => 3,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 1,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 4,
 NUMERIC_LITERAL => 4,
 IDENTIFIER      => 3,
 Wisi_EOI        => 4)
(Delete =>
 AND             => 4,
 BEGIN           => 1,
 BODY            => 4,
 CASE            => 4,
 DECLARE         => 4,
 ELSE            => 4,
 ELSIF           => 4,
 END             => 1,
 EXIT            => 4,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 4,
 IF              => 4,
 IN              => 4,
 IS              => 4,
 LEFT_PAREN      => 4,
 LOOP            => 4,
 NEW             => 4,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 4,
 RANGE           => 4,
 RETURN          => 4,
 RIGHT_PAREN     => 4,
 SEPARATE        => 4,
 THEN            => 4,
 TYPE            => 4,
 WHEN            => 4,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 2,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 2,
 NUMERIC_LITERAL => 4,
 IDENTIFIER      => 4,
 Wisi_EOI        => 4)
(Push_Back =>
 AND             => 4,
 BEGIN           => 1,
 BODY            => 4,
 CASE            => 4,
 DECLARE         => 4,
 ELSE            => 4,
 ELSIF           => 4,
 END             => 1,
 EXIT            => 4,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 4,
 IF              => 4,
 IN              => 4,
 IS              => 4,
 LEFT_PAREN      => 4,
 LOOP            => 4,
 NEW             => 4,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 4,
 RANGE           => 4,
 RETURN          => 4,
 RIGHT_PAREN     => 4,
 SEPARATE        => 4,
 THEN            => 4,
 TYPE            => 4,
 WHEN            => 4,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 2,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 2,
 NUMERIC_LITERAL => 4,
 IDENTIFIER      => 4,
 Wisi_EOI        => 4)
Ignore_Check_Fail => 4
Task_Count        => 0
Cost_Limit        => 10
Check_Limit       => 3
Check_Delta_Limit => 2147483647
Enqueue_Limit     => 2147483647

LALR Parse Table:
State 0:
     56.0:wisitoken_accept <= ^ compilation_unit_list Wisi_EOI, 

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   EXIT                               => shift and goto state 3
   FOR                                => shift and goto state 4
   FUNCTION                           => shift and goto state 5
   IF                                 => shift and goto state 6
   LOOP                               => shift and goto state 7
   PACKAGE                            => shift and goto state 8
   PROCEDURE                          => shift and goto state 9
   RETURN                             => shift and goto state 10
   IDENTIFIER                         => shift and goto state 11
   default                            => ERROR

   assignment_statement               goto state 12
   block_label_opt                    goto state 13
   block_statement                    goto state 14
   case_statement                     goto state 15
   compilation_unit                   goto state 16
   compilation_unit_list              goto state 17
   compound_statement                 goto state 18
   exit_statement                     goto state 19
   extended_return_statement          goto state 20
   function_specification             goto state 21
   generic_instantiation              goto state 22
   if_statement                       goto state 23
   iteration_scheme                   goto state 24
   loop_statement                     goto state 25
   name                               goto state 26
   package_body                       goto state 27
   procedure_call_statement           goto state 28
   procedure_specification            goto state 29
   selected_component                 goto state 30
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 33
   subprogram_body                    goto state 34
   subprogram_declaration             goto state 35
   subprogram_specification           goto state 36
   nonterminal_009                    goto state 37
   nonterminal_008_list               goto state 38

   Minimal_Complete_Action => (EXIT)

State 1:
     67.0:case_statement <= CASE ^ expression IS nonterminal_006_list END CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   expression                         goto state 46
   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   relation                           goto state 51
   selected_component                 goto state 30
   simple_expression                  goto state 52
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 2:
    170.0:nonterminal_047 <= DECLARE ^ declarative_part, BEGIN

   BEGIN                              => reduce 0 tokens to nonterminal_011_list_opt 134.0
   FUNCTION                           => shift and goto state 5
   PACKAGE                            => shift and goto state 55
   PROCEDURE                          => shift and goto state 56
   TYPE                               => shift and goto state 57
   IDENTIFIER                         => shift and goto state 58
   default                            => ERROR

   body_g                             goto state 59
   body_stub                          goto state 60
   declaration                        goto state 61
   declarative_part                   goto state 62
   full_type_declaration              goto state 63
   function_specification             goto state 21
   object_declaration                 goto state 64
   package_body                       goto state 65
   procedure_specification            goto state 29
   proper_body                        goto state 66
   subprogram_body                    goto state 67
   subprogram_body_stub               goto state 68
   subprogram_declaration             goto state 69
   subprogram_specification           goto state 70
   type_declaration                   goto state 71
   nonterminal_012                    goto state 72
   nonterminal_011_list_opt           goto state 73
   nonterminal_010_list               goto state 74

   Minimal_Complete_Action => (declarative_part)

State 3:
     79.0:exit_statement <= EXIT ^ IDENTIFIER nonterminal_046 SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     79.1:exit_statement <= EXIT ^ nonterminal_046 SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     79.2:exit_statement <= EXIT ^ IDENTIFIER SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     79.3:exit_statement <= EXIT ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   WHEN                               => shift and goto state 75
   SEMICOLON                          => shift and goto state 76
   IDENTIFIER                         => shift and goto state 77
   default                            => ERROR

   nonterminal_046                    goto state 78

   Minimal_Complete_Action => (SEMICOLON)

State 4:
     92.0:iteration_scheme <= FOR ^ IDENTIFIER IN discrete_subtype_definition, LOOP

   IDENTIFIER                         => shift and goto state 79
   default                            => ERROR

   Minimal_Complete_Action => (IDENTIFIER)

State 5:
     86.0:function_specification <= FUNCTION ^ name parameter_and_result_profile, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   name                               goto state 80
   selected_component                 goto state 30

   Minimal_Complete_Action => (IDENTIFIER)

State 6:
     90.0:if_statement <= IF ^ expression THEN sequence_of_statements nonterminal_029_list_opt nonterminal_044 END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.1:if_statement <= IF ^ expression THEN sequence_of_statements nonterminal_029_list_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   expression                         goto state 81
   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   relation                           goto state 51
   selected_component                 goto state 30
   simple_expression                  goto state 52
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 7:
     93.1:loop_statement <= LOOP ^ sequence_of_statements END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to nonterminal_032_list_opt 155.0
   EXIT                               => shift and goto state 3
   FOR                                => shift and goto state 4
   IF                                 => shift and goto state 6
   LOOP                               => shift and goto state 7
   RETURN                             => shift and goto state 10
   IDENTIFIER                         => shift and goto state 11
   default                            => ERROR

   assignment_statement               goto state 12
   block_label_opt                    goto state 13
   block_statement                    goto state 14
   case_statement                     goto state 15
   compound_statement                 goto state 18
   exit_statement                     goto state 19
   extended_return_statement          goto state 20
   if_statement                       goto state 23
   iteration_scheme                   goto state 24
   loop_statement                     goto state 25
   name                               goto state 26
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements             goto state 82
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 83
   nonterminal_033                    goto state 84
   nonterminal_032_list_opt           goto state 85
   nonterminal_031_list               goto state 86

   Minimal_Complete_Action => (sequence_of_statements)

State 8:
     87.0:generic_instantiation <= PACKAGE ^ name IS NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
     98.0:package_body <= PACKAGE ^ BODY name aspect_specification IS declarative_part nonterminal_042 END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
     98.1:package_body <= PACKAGE ^ BODY name IS declarative_part nonterminal_042 END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
     98.2:package_body <= PACKAGE ^ BODY name aspect_specification IS declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
     98.3:package_body <= PACKAGE ^ BODY name IS declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BODY                               => shift and goto state 87
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   name                               goto state 88
   selected_component                 goto state 30

   Minimal_Complete_Action => (IDENTIFIER)

State 9:
     87.1:generic_instantiation <= PROCEDURE ^ name IS NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
    105.0:procedure_specification <= PROCEDURE ^ name parameter_profile, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   name                               goto state 89
   selected_component                 goto state 30

   Minimal_Complete_Action => (IDENTIFIER)

State 10:
     82.0:extended_return_statement <= RETURN ^ extended_return_object_declaration SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
    114.0:simple_return_statement <= RETURN ^ expression SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 90
   default                            => ERROR

   expression                         goto state 91
   extended_return_object_declaration goto state 92
   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   relation                           goto state 51
   selected_component                 goto state 30
   simple_expression                  goto state 52
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 11:
     63.0:block_label_opt <= IDENTIFIER ^ COLON, BEGIN/DECLARE
     95.2:name <= IDENTIFIER ^, LEFT_PAREN/COLON_EQUAL/DOT/SEMICOLON

   LEFT_PAREN                         => reduce 1 tokens to name 95.2
   COLON                              => shift and goto state 93
   COLON_EQUAL                        => reduce 1 tokens to name 95.2
   DOT                                => reduce 1 tokens to name 95.2
   SEMICOLON                          => reduce 1 tokens to name 95.2
   default                            => ERROR

   Minimal_Complete_Action => (name)

State 12:
    115.0:simple_statement <= assignment_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to simple_statement 115.0
   CASE                               => reduce 1 tokens to simple_statement 115.0
   DECLARE                            => reduce 1 tokens to simple_statement 115.0
   ELSE                               => reduce 1 tokens to simple_statement 115.0
   ELSIF                              => reduce 1 tokens to simple_statement 115.0
   END                                => reduce 1 tokens to simple_statement 115.0
   EXIT                               => reduce 1 tokens to simple_statement 115.0
   EXCEPTION                          => reduce 1 tokens to simple_statement 115.0
   FOR                                => reduce 1 tokens to simple_statement 115.0
   FUNCTION                           => reduce 1 tokens to simple_statement 115.0
   IF                                 => reduce 1 tokens to simple_statement 115.0
   LOOP                               => reduce 1 tokens to simple_statement 115.0
   PACKAGE                            => reduce 1 tokens to simple_statement 115.0
   PROCEDURE                          => reduce 1 tokens to simple_statement 115.0
   RETURN                             => reduce 1 tokens to simple_statement 115.0
   WHEN                               => reduce 1 tokens to simple_statement 115.0
   IDENTIFIER                         => reduce 1 tokens to simple_statement 115.0
   Wisi_EOI                           => reduce 1 tokens to simple_statement 115.0
   default                            => ERROR

   Minimal_Complete_Action => (simple_statement)

State 13:
     64.0:block_statement <= block_label_opt ^ nonterminal_047 BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     64.1:block_statement <= block_label_opt ^ BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 94
   DECLARE                            => shift and goto state 2
   default                            => ERROR

   nonterminal_047                    goto state 95

   Minimal_Complete_Action => (BEGIN)

State 14:
     71.3:compound_statement <= block_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compound_statement 71.3
   CASE                               => reduce 1 tokens to compound_statement 71.3
   DECLARE                            => reduce 1 tokens to compound_statement 71.3
   ELSE                               => reduce 1 tokens to compound_statement 71.3
   ELSIF                              => reduce 1 tokens to compound_statement 71.3
   END                                => reduce 1 tokens to compound_statement 71.3
   EXIT                               => reduce 1 tokens to compound_statement 71.3
   EXCEPTION                          => reduce 1 tokens to compound_statement 71.3
   FOR                                => reduce 1 tokens to compound_statement 71.3
   FUNCTION                           => reduce 1 tokens to compound_statement 71.3
   IF                                 => reduce 1 tokens to compound_statement 71.3
   LOOP                               => reduce 1 tokens to compound_statement 71.3
   PACKAGE                            => reduce 1 tokens to compound_statement 71.3
   PROCEDURE                          => reduce 1 tokens to compound_statement 71.3
   RETURN                             => reduce 1 tokens to compound_statement 71.3
   WHEN                               => reduce 1 tokens to compound_statement 71.3
   IDENTIFIER                         => reduce 1 tokens to compound_statement 71.3
   Wisi_EOI                           => reduce 1 tokens to compound_statement 71.3
   default                            => ERROR

   Minimal_Complete_Action => (compound_statement)

State 15:
     71.1:compound_statement <= case_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compound_statement 71.1
   CASE                               => reduce 1 tokens to compound_statement 71.1
   DECLARE                            => reduce 1 tokens to compound_statement 71.1
   ELSE                               => reduce 1 tokens to compound_statement 71.1
   ELSIF                              => reduce 1 tokens to compound_statement 71.1
   END                                => reduce 1 tokens to compound_statement 71.1
   EXIT                               => reduce 1 tokens to compound_statement 71.1
   EXCEPTION                          => reduce 1 tokens to compound_statement 71.1
   FOR                                => reduce 1 tokens to compound_statement 71.1
   FUNCTION                           => reduce 1 tokens to compound_statement 71.1
   IF                                 => reduce 1 tokens to compound_statement 71.1
   LOOP                               => reduce 1 tokens to compound_statement 71.1
   PACKAGE                            => reduce 1 tokens to compound_statement 71.1
   PROCEDURE                          => reduce 1 tokens to compound_statement 71.1
   RETURN                             => reduce 1 tokens to compound_statement 71.1
   WHEN                               => reduce 1 tokens to compound_statement 71.1
   IDENTIFIER                         => reduce 1 tokens to compound_statement 71.1
   Wisi_EOI                           => reduce 1 tokens to compound_statement 71.1
   default                            => ERROR

   Minimal_Complete_Action => (compound_statement)

State 16:
    131.0:nonterminal_009 <= compilation_unit ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to nonterminal_009 131.0
   CASE                               => reduce 1 tokens to nonterminal_009 131.0
   DECLARE                            => reduce 1 tokens to nonterminal_009 131.0
   EXIT                               => reduce 1 tokens to nonterminal_009 131.0
   FOR                                => reduce 1 tokens to nonterminal_009 131.0
   FUNCTION                           => reduce 1 tokens to nonterminal_009 131.0
   IF                                 => reduce 1 tokens to nonterminal_009 131.0
   LOOP                               => reduce 1 tokens to nonterminal_009 131.0
   PACKAGE                            => reduce 1 tokens to nonterminal_009 131.0
   PROCEDURE                          => reduce 1 tokens to nonterminal_009 131.0
   RETURN                             => reduce 1 tokens to nonterminal_009 131.0
   IDENTIFIER                         => reduce 1 tokens to nonterminal_009 131.0
   Wisi_EOI                           => reduce 1 tokens to nonterminal_009 131.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_009)

State 17:
     56.0:wisitoken_accept <= compilation_unit_list ^ Wisi_EOI, 

   Wisi_EOI                           => accept it 56.0
   default                            => ERROR

   Minimal_Complete_Action => ()

State 18:
    116.1:statement <= compound_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to statement 116.1
   CASE                               => reduce 1 tokens to statement 116.1
   DECLARE                            => reduce 1 tokens to statement 116.1
   ELSE                               => reduce 1 tokens to statement 116.1
   ELSIF                              => reduce 1 tokens to statement 116.1
   END                                => reduce 1 tokens to statement 116.1
   EXIT                               => reduce 1 tokens to statement 116.1
   EXCEPTION                          => reduce 1 tokens to statement 116.1
   FOR                                => reduce 1 tokens to statement 116.1
   FUNCTION                           => reduce 1 tokens to statement 116.1
   IF                                 => reduce 1 tokens to statement 116.1
   LOOP                               => reduce 1 tokens to statement 116.1
   PACKAGE                            => reduce 1 tokens to statement 116.1
   PROCEDURE                          => reduce 1 tokens to statement 116.1
   RETURN                             => reduce 1 tokens to statement 116.1
   WHEN                               => reduce 1 tokens to statement 116.1
   IDENTIFIER                         => reduce 1 tokens to statement 116.1
   Wisi_EOI                           => reduce 1 tokens to statement 116.1
   default                            => ERROR

   Minimal_Complete_Action => (statement)

State 19:
    115.1:simple_statement <= exit_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to simple_statement 115.1
   CASE                               => reduce 1 tokens to simple_statement 115.1
   DECLARE                            => reduce 1 tokens to simple_statement 115.1
   ELSE                               => reduce 1 tokens to simple_statement 115.1
   ELSIF                              => reduce 1 tokens to simple_statement 115.1
   END                                => reduce 1 tokens to simple_statement 115.1
   EXIT                               => reduce 1 tokens to simple_statement 115.1
   EXCEPTION                          => reduce 1 tokens to simple_statement 115.1
   FOR                                => reduce 1 tokens to simple_statement 115.1
   FUNCTION                           => reduce 1 tokens to simple_statement 115.1
   IF                                 => reduce 1 tokens to simple_statement 115.1
   LOOP                               => reduce 1 tokens to simple_statement 115.1
   PACKAGE                            => reduce 1 tokens to simple_statement 115.1
   PROCEDURE                          => reduce 1 tokens to simple_statement 115.1
   RETURN                             => reduce 1 tokens to simple_statement 115.1
   WHEN                               => reduce 1 tokens to simple_statement 115.1
   IDENTIFIER                         => reduce 1 tokens to simple_statement 115.1
   Wisi_EOI                           => reduce 1 tokens to simple_statement 115.1
   default                            => ERROR

   Minimal_Complete_Action => (simple_statement)

State 20:
     71.4:compound_statement <= extended_return_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compound_statement 71.4
   CASE                               => reduce 1 tokens to compound_statement 71.4
   DECLARE                            => reduce 1 tokens to compound_statement 71.4
   ELSE                               => reduce 1 tokens to compound_statement 71.4
   ELSIF                              => reduce 1 tokens to compound_statement 71.4
   END                                => reduce 1 tokens to compound_statement 71.4
   EXIT                               => reduce 1 tokens to compound_statement 71.4
   EXCEPTION                          => reduce 1 tokens to compound_statement 71.4
   FOR                                => reduce 1 tokens to compound_statement 71.4
   FUNCTION                           => reduce 1 tokens to compound_statement 71.4
   IF                                 => reduce 1 tokens to compound_statement 71.4
   LOOP                               => reduce 1 tokens to compound_statement 71.4
   PACKAGE                            => reduce 1 tokens to compound_statement 71.4
   PROCEDURE                          => reduce 1 tokens to compound_statement 71.4
   RETURN                             => reduce 1 tokens to compound_statement 71.4
   WHEN                               => reduce 1 tokens to compound_statement 71.4
   IDENTIFIER                         => reduce 1 tokens to compound_statement 71.4
   Wisi_EOI                           => reduce 1 tokens to compound_statement 71.4
   default                            => ERROR

   Minimal_Complete_Action => (compound_statement)

State 21:
    120.1:subprogram_specification <= function_specification ^, IS/WITH/SEMICOLON

   IS                                 => reduce 1 tokens to subprogram_specification 120.1
   WITH                               => reduce 1 tokens to subprogram_specification 120.1
   SEMICOLON                          => reduce 1 tokens to subprogram_specification 120.1
   default                            => ERROR

   Minimal_Complete_Action => (subprogram_specification)

State 22:
     69.3:compilation_unit <= generic_instantiation ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compilation_unit 69.3
   CASE                               => reduce 1 tokens to compilation_unit 69.3
   DECLARE                            => reduce 1 tokens to compilation_unit 69.3
   EXIT                               => reduce 1 tokens to compilation_unit 69.3
   FOR                                => reduce 1 tokens to compilation_unit 69.3
   FUNCTION                           => reduce 1 tokens to compilation_unit 69.3
   IF                                 => reduce 1 tokens to compilation_unit 69.3
   LOOP                               => reduce 1 tokens to compilation_unit 69.3
   PACKAGE                            => reduce 1 tokens to compilation_unit 69.3
   PROCEDURE                          => reduce 1 tokens to compilation_unit 69.3
   RETURN                             => reduce 1 tokens to compilation_unit 69.3
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 69.3
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 69.3
   default                            => ERROR

   Minimal_Complete_Action => (compilation_unit)

State 23:
     71.0:compound_statement <= if_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compound_statement 71.0
   CASE                               => reduce 1 tokens to compound_statement 71.0
   DECLARE                            => reduce 1 tokens to compound_statement 71.0
   ELSE                               => reduce 1 tokens to compound_statement 71.0
   ELSIF                              => reduce 1 tokens to compound_statement 71.0
   END                                => reduce 1 tokens to compound_statement 71.0
   EXIT                               => reduce 1 tokens to compound_statement 71.0
   EXCEPTION                          => reduce 1 tokens to compound_statement 71.0
   FOR                                => reduce 1 tokens to compound_statement 71.0
   FUNCTION                           => reduce 1 tokens to compound_statement 71.0
   IF                                 => reduce 1 tokens to compound_statement 71.0
   LOOP                               => reduce 1 tokens to compound_statement 71.0
   PACKAGE                            => reduce 1 tokens to compound_statement 71.0
   PROCEDURE                          => reduce 1 tokens to compound_statement 71.0
   RETURN                             => reduce 1 tokens to compound_statement 71.0
   WHEN                               => reduce 1 tokens to compound_statement 71.0
   IDENTIFIER                         => reduce 1 tokens to compound_statement 71.0
   Wisi_EOI                           => reduce 1 tokens to compound_statement 71.0
   default                            => ERROR

   Minimal_Complete_Action => (compound_statement)

State 24:
     93.0:loop_statement <= iteration_scheme ^ LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LOOP                               => shift and goto state 96
   default                            => ERROR

   Minimal_Complete_Action => (LOOP)

State 25:
     71.2:compound_statement <= loop_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compound_statement 71.2
   CASE                               => reduce 1 tokens to compound_statement 71.2
   DECLARE                            => reduce 1 tokens to compound_statement 71.2
   ELSE                               => reduce 1 tokens to compound_statement 71.2
   ELSIF                              => reduce 1 tokens to compound_statement 71.2
   END                                => reduce 1 tokens to compound_statement 71.2
   EXIT                               => reduce 1 tokens to compound_statement 71.2
   EXCEPTION                          => reduce 1 tokens to compound_statement 71.2
   FOR                                => reduce 1 tokens to compound_statement 71.2
   FUNCTION                           => reduce 1 tokens to compound_statement 71.2
   IF                                 => reduce 1 tokens to compound_statement 71.2
   LOOP                               => reduce 1 tokens to compound_statement 71.2
   PACKAGE                            => reduce 1 tokens to compound_statement 71.2
   PROCEDURE                          => reduce 1 tokens to compound_statement 71.2
   RETURN                             => reduce 1 tokens to compound_statement 71.2
   WHEN                               => reduce 1 tokens to compound_statement 71.2
   IDENTIFIER                         => reduce 1 tokens to compound_statement 71.2
   Wisi_EOI                           => reduce 1 tokens to compound_statement 71.2
   default                            => ERROR

   Minimal_Complete_Action => (compound_statement)

State 26:
     59.0:assignment_statement <= name ^ COLON_EQUAL expression SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/COLON_EQUAL/DOT/SEMICOLON
     95.1:name <= name ^ actual_parameter_part, LEFT_PAREN/COLON_EQUAL/DOT/SEMICOLON
    104.0:procedure_call_statement <= name ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
    111.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/COLON_EQUAL/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 97
   COLON_EQUAL                        => shift and goto state 98
   DOT                                => shift and goto state 99
   SEMICOLON                          => shift and goto state 100
   default                            => ERROR

   actual_parameter_part              goto state 101

   Minimal_Complete_Action => (SEMICOLON)

State 27:
     69.0:compilation_unit <= package_body ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compilation_unit 69.0
   CASE                               => reduce 1 tokens to compilation_unit 69.0
   DECLARE                            => reduce 1 tokens to compilation_unit 69.0
   EXIT                               => reduce 1 tokens to compilation_unit 69.0
   FOR                                => reduce 1 tokens to compilation_unit 69.0
   FUNCTION                           => reduce 1 tokens to compilation_unit 69.0
   IF                                 => reduce 1 tokens to compilation_unit 69.0
   LOOP                               => reduce 1 tokens to compilation_unit 69.0
   PACKAGE                            => reduce 1 tokens to compilation_unit 69.0
   PROCEDURE                          => reduce 1 tokens to compilation_unit 69.0
   RETURN                             => reduce 1 tokens to compilation_unit 69.0
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 69.0
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 69.0
   default                            => ERROR

   Minimal_Complete_Action => (compilation_unit)

State 28:
    115.2:simple_statement <= procedure_call_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to simple_statement 115.2
   CASE                               => reduce 1 tokens to simple_statement 115.2
   DECLARE                            => reduce 1 tokens to simple_statement 115.2
   ELSE                               => reduce 1 tokens to simple_statement 115.2
   ELSIF                              => reduce 1 tokens to simple_statement 115.2
   END                                => reduce 1 tokens to simple_statement 115.2
   EXIT                               => reduce 1 tokens to simple_statement 115.2
   EXCEPTION                          => reduce 1 tokens to simple_statement 115.2
   FOR                                => reduce 1 tokens to simple_statement 115.2
   FUNCTION                           => reduce 1 tokens to simple_statement 115.2
   IF                                 => reduce 1 tokens to simple_statement 115.2
   LOOP                               => reduce 1 tokens to simple_statement 115.2
   PACKAGE                            => reduce 1 tokens to simple_statement 115.2
   PROCEDURE                          => reduce 1 tokens to simple_statement 115.2
   RETURN                             => reduce 1 tokens to simple_statement 115.2
   WHEN                               => reduce 1 tokens to simple_statement 115.2
   IDENTIFIER                         => reduce 1 tokens to simple_statement 115.2
   Wisi_EOI                           => reduce 1 tokens to simple_statement 115.2
   default                            => ERROR

   Minimal_Complete_Action => (simple_statement)

State 29:
    120.0:subprogram_specification <= procedure_specification ^, IS/WITH/SEMICOLON

   IS                                 => reduce 1 tokens to subprogram_specification 120.0
   WITH                               => reduce 1 tokens to subprogram_specification 120.0
   SEMICOLON                          => reduce 1 tokens to subprogram_specification 120.0
   default                            => ERROR

   Minimal_Complete_Action => (subprogram_specification)

State 30:
     95.3:name <= selected_component ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to name 95.3
   IS                                 => reduce 1 tokens to name 95.3
   LEFT_PAREN                         => reduce 1 tokens to name 95.3
   LOOP                               => reduce 1 tokens to name 95.3
   OR                                 => reduce 1 tokens to name 95.3
   RANGE                              => reduce 1 tokens to name 95.3
   RETURN                             => reduce 1 tokens to name 95.3
   RIGHT_PAREN                        => reduce 1 tokens to name 95.3
   THEN                               => reduce 1 tokens to name 95.3
   WITH                               => reduce 1 tokens to name 95.3
   XOR                                => reduce 1 tokens to name 95.3
   AMPERSAND                          => reduce 1 tokens to name 95.3
   COLON_EQUAL                        => reduce 1 tokens to name 95.3
   COMMA                              => reduce 1 tokens to name 95.3
   DOT                                => reduce 1 tokens to name 95.3
   DOT_DOT                            => reduce 1 tokens to name 95.3
   EQUAL                              => reduce 1 tokens to name 95.3
   EQUAL_GREATER                      => reduce 1 tokens to name 95.3
   GREATER                            => reduce 1 tokens to name 95.3
   GREATER_EQUAL                      => reduce 1 tokens to name 95.3
   LESS                               => reduce 1 tokens to name 95.3
   LESS_EQUAL                         => reduce 1 tokens to name 95.3
   MINUS                              => reduce 1 tokens to name 95.3
   PLUS                               => reduce 1 tokens to name 95.3
   SEMICOLON                          => reduce 1 tokens to name 95.3
   SLASH                              => reduce 1 tokens to name 95.3
   SLASH_EQUAL                        => reduce 1 tokens to name 95.3
   STAR                               => reduce 1 tokens to name 95.3
   default                            => ERROR

   Minimal_Complete_Action => (name)

State 31:
    115.3:simple_statement <= simple_return_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to simple_statement 115.3
   CASE                               => reduce 1 tokens to simple_statement 115.3
   DECLARE                            => reduce 1 tokens to simple_statement 115.3
   ELSE                               => reduce 1 tokens to simple_statement 115.3
   ELSIF                              => reduce 1 tokens to simple_statement 115.3
   END                                => reduce 1 tokens to simple_statement 115.3
   EXIT                               => reduce 1 tokens to simple_statement 115.3
   EXCEPTION                          => reduce 1 tokens to simple_statement 115.3
   FOR                                => reduce 1 tokens to simple_statement 115.3
   FUNCTION                           => reduce 1 tokens to simple_statement 115.3
   IF                                 => reduce 1 tokens to simple_statement 115.3
   LOOP                               => reduce 1 tokens to simple_statement 115.3
   PACKAGE                            => reduce 1 tokens to simple_statement 115.3
   PROCEDURE                          => reduce 1 tokens to simple_statement 115.3
   RETURN                             => reduce 1 tokens to simple_statement 115.3
   WHEN                               => reduce 1 tokens to simple_statement 115.3
   IDENTIFIER                         => reduce 1 tokens to simple_statement 115.3
   Wisi_EOI                           => reduce 1 tokens to simple_statement 115.3
   default                            => ERROR

   Minimal_Complete_Action => (simple_statement)

State 32:
    116.0:statement <= simple_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to statement 116.0
   CASE                               => reduce 1 tokens to statement 116.0
   DECLARE                            => reduce 1 tokens to statement 116.0
   ELSE                               => reduce 1 tokens to statement 116.0
   ELSIF                              => reduce 1 tokens to statement 116.0
   END                                => reduce 1 tokens to statement 116.0
   EXIT                               => reduce 1 tokens to statement 116.0
   EXCEPTION                          => reduce 1 tokens to statement 116.0
   FOR                                => reduce 1 tokens to statement 116.0
   FUNCTION                           => reduce 1 tokens to statement 116.0
   IF                                 => reduce 1 tokens to statement 116.0
   LOOP                               => reduce 1 tokens to statement 116.0
   PACKAGE                            => reduce 1 tokens to statement 116.0
   PROCEDURE                          => reduce 1 tokens to statement 116.0
   RETURN                             => reduce 1 tokens to statement 116.0
   WHEN                               => reduce 1 tokens to statement 116.0
   IDENTIFIER                         => reduce 1 tokens to statement 116.0
   Wisi_EOI                           => reduce 1 tokens to statement 116.0
   default                            => ERROR

   Minimal_Complete_Action => (statement)

State 33:
     69.4:compilation_unit <= statement ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compilation_unit 69.4
   CASE                               => reduce 1 tokens to compilation_unit 69.4
   DECLARE                            => reduce 1 tokens to compilation_unit 69.4
   EXIT                               => reduce 1 tokens to compilation_unit 69.4
   FOR                                => reduce 1 tokens to compilation_unit 69.4
   FUNCTION                           => reduce 1 tokens to compilation_unit 69.4
   IF                                 => reduce 1 tokens to compilation_unit 69.4
   LOOP                               => reduce 1 tokens to compilation_unit 69.4
   PACKAGE                            => reduce 1 tokens to compilation_unit 69.4
   PROCEDURE                          => reduce 1 tokens to compilation_unit 69.4
   RETURN                             => reduce 1 tokens to compilation_unit 69.4
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 69.4
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 69.4
   default                            => ERROR

   Minimal_Complete_Action => (compilation_unit)

State 34:
     69.2:compilation_unit <= subprogram_body ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compilation_unit 69.2
   CASE                               => reduce 1 tokens to compilation_unit 69.2
   DECLARE                            => reduce 1 tokens to compilation_unit 69.2
   EXIT                               => reduce 1 tokens to compilation_unit 69.2
   FOR                                => reduce 1 tokens to compilation_unit 69.2
   FUNCTION                           => reduce 1 tokens to compilation_unit 69.2
   IF                                 => reduce 1 tokens to compilation_unit 69.2
   LOOP                               => reduce 1 tokens to compilation_unit 69.2
   PACKAGE                            => reduce 1 tokens to compilation_unit 69.2
   PROCEDURE                          => reduce 1 tokens to compilation_unit 69.2
   RETURN                             => reduce 1 tokens to compilation_unit 69.2
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 69.2
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 69.2
   default                            => ERROR

   Minimal_Complete_Action => (compilation_unit)

State 35:
     69.1:compilation_unit <= subprogram_declaration ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compilation_unit 69.1
   CASE                               => reduce 1 tokens to compilation_unit 69.1
   DECLARE                            => reduce 1 tokens to compilation_unit 69.1
   EXIT                               => reduce 1 tokens to compilation_unit 69.1
   FOR                                => reduce 1 tokens to compilation_unit 69.1
   FUNCTION                           => reduce 1 tokens to compilation_unit 69.1
   IF                                 => reduce 1 tokens to compilation_unit 69.1
   LOOP                               => reduce 1 tokens to compilation_unit 69.1
   PACKAGE                            => reduce 1 tokens to compilation_unit 69.1
   PROCEDURE                          => reduce 1 tokens to compilation_unit 69.1
   RETURN                             => reduce 1 tokens to compilation_unit 69.1
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 69.1
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 69.1
   default                            => ERROR

   Minimal_Complete_Action => (compilation_unit)

State 36:
    117.0:subprogram_body <= subprogram_specification ^ aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
    117.1:subprogram_body <= subprogram_specification ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
    119.0:subprogram_declaration <= subprogram_specification ^ SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   IS                                 => shift and goto state 102
   WITH                               => shift and goto state 103
   SEMICOLON                          => shift and goto state 104
   default                            => ERROR

   aspect_specification               goto state 105

   Minimal_Complete_Action => (SEMICOLON)

State 37:
    132.0:nonterminal_008_list <= nonterminal_009 ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to nonterminal_008_list 132.0
   CASE                               => reduce 1 tokens to nonterminal_008_list 132.0
   DECLARE                            => reduce 1 tokens to nonterminal_008_list 132.0
   EXIT                               => reduce 1 tokens to nonterminal_008_list 132.0
   FOR                                => reduce 1 tokens to nonterminal_008_list 132.0
   FUNCTION                           => reduce 1 tokens to nonterminal_008_list 132.0
   IF                                 => reduce 1 tokens to nonterminal_008_list 132.0
   LOOP                               => reduce 1 tokens to nonterminal_008_list 132.0
   PACKAGE                            => reduce 1 tokens to nonterminal_008_list 132.0
   PROCEDURE                          => reduce 1 tokens to nonterminal_008_list 132.0
   RETURN                             => reduce 1 tokens to nonterminal_008_list 132.0
   IDENTIFIER                         => reduce 1 tokens to nonterminal_008_list 132.0
   Wisi_EOI                           => reduce 1 tokens to nonterminal_008_list 132.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_008_list)

State 38:
     70.0:compilation_unit_list <= nonterminal_008_list ^, Wisi_EOI
    132.1:nonterminal_008_list <= nonterminal_008_list ^ nonterminal_009, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   EXIT                               => shift and goto state 3
   FOR                                => shift and goto state 4
   FUNCTION                           => shift and goto state 5
   IF                                 => shift and goto state 6
   LOOP                               => shift and goto state 7
   PACKAGE                            => shift and goto state 8
   PROCEDURE                          => shift and goto state 9
   RETURN                             => shift and goto state 10
   IDENTIFIER                         => shift and goto state 11
   Wisi_EOI                           => reduce 1 tokens to compilation_unit_list 70.0
   default                            => ERROR

   assignment_statement               goto state 12
   block_label_opt                    goto state 13
   block_statement                    goto state 14
   case_statement                     goto state 15
   compilation_unit                   goto state 16
   compound_statement                 goto state 18
   exit_statement                     goto state 19
   extended_return_statement          goto state 20
   function_specification             goto state 21
   generic_instantiation              goto state 22
   if_statement                       goto state 23
   iteration_scheme                   goto state 24
   loop_statement                     goto state 25
   name                               goto state 26
   package_body                       goto state 27
   procedure_call_statement           goto state 28
   procedure_specification            goto state 29
   selected_component                 goto state 30
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 33
   subprogram_body                    goto state 34
   subprogram_declaration             goto state 35
   subprogram_specification           goto state 36
   nonterminal_009                    goto state 106

   Minimal_Complete_Action => (compilation_unit_list)

State 39:
    102.0:paren_expression <= LEFT_PAREN ^ expression RIGHT_PAREN, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   expression                         goto state 107
   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   relation                           goto state 51
   selected_component                 goto state 30
   simple_expression                  goto state 52
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 40:
     83.1:factor <= NOT ^ primary, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 108
   selected_component                 goto state 30

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 41:
    125.1:unary_adding_operator <= MINUS ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to unary_adding_operator 125.1
   NOT                                => reduce 1 tokens to unary_adding_operator 125.1
   STRING_LITERAL                     => reduce 1 tokens to unary_adding_operator 125.1
   NUMERIC_LITERAL                    => reduce 1 tokens to unary_adding_operator 125.1
   IDENTIFIER                         => reduce 1 tokens to unary_adding_operator 125.1
   default                            => ERROR

   Minimal_Complete_Action => (unary_adding_operator)

State 42:
    125.0:unary_adding_operator <= PLUS ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to unary_adding_operator 125.0
   NOT                                => reduce 1 tokens to unary_adding_operator 125.0
   STRING_LITERAL                     => reduce 1 tokens to unary_adding_operator 125.0
   NUMERIC_LITERAL                    => reduce 1 tokens to unary_adding_operator 125.0
   IDENTIFIER                         => reduce 1 tokens to unary_adding_operator 125.0
   default                            => ERROR

   Minimal_Complete_Action => (unary_adding_operator)

State 43:
    103.1:primary <= STRING_LITERAL ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to primary 103.1
   IS                                 => reduce 1 tokens to primary 103.1
   LOOP                               => reduce 1 tokens to primary 103.1
   OR                                 => reduce 1 tokens to primary 103.1
   RIGHT_PAREN                        => reduce 1 tokens to primary 103.1
   THEN                               => reduce 1 tokens to primary 103.1
   XOR                                => reduce 1 tokens to primary 103.1
   AMPERSAND                          => reduce 1 tokens to primary 103.1
   COLON_EQUAL                        => reduce 1 tokens to primary 103.1
   COMMA                              => reduce 1 tokens to primary 103.1
   DOT_DOT                            => reduce 1 tokens to primary 103.1
   EQUAL                              => reduce 1 tokens to primary 103.1
   GREATER                            => reduce 1 tokens to primary 103.1
   GREATER_EQUAL                      => reduce 1 tokens to primary 103.1
   LESS                               => reduce 1 tokens to primary 103.1
   LESS_EQUAL                         => reduce 1 tokens to primary 103.1
   MINUS                              => reduce 1 tokens to primary 103.1
   PLUS                               => reduce 1 tokens to primary 103.1
   SEMICOLON                          => reduce 1 tokens to primary 103.1
   SLASH                              => reduce 1 tokens to primary 103.1
   SLASH_EQUAL                        => reduce 1 tokens to primary 103.1
   STAR                               => reduce 1 tokens to primary 103.1
   default                            => ERROR

   Minimal_Complete_Action => (primary)

State 44:
    103.0:primary <= NUMERIC_LITERAL ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to primary 103.0
   IS                                 => reduce 1 tokens to primary 103.0
   LOOP                               => reduce 1 tokens to primary 103.0
   OR                                 => reduce 1 tokens to primary 103.0
   RIGHT_PAREN                        => reduce 1 tokens to primary 103.0
   THEN                               => reduce 1 tokens to primary 103.0
   XOR                                => reduce 1 tokens to primary 103.0
   AMPERSAND                          => reduce 1 tokens to primary 103.0
   COLON_EQUAL                        => reduce 1 tokens to primary 103.0
   COMMA                              => reduce 1 tokens to primary 103.0
   DOT_DOT                            => reduce 1 tokens to primary 103.0
   EQUAL                              => reduce 1 tokens to primary 103.0
   GREATER                            => reduce 1 tokens to primary 103.0
   GREATER_EQUAL                      => reduce 1 tokens to primary 103.0
   LESS                               => reduce 1 tokens to primary 103.0
   LESS_EQUAL                         => reduce 1 tokens to primary 103.0
   MINUS                              => reduce 1 tokens to primary 103.0
   PLUS                               => reduce 1 tokens to primary 103.0
   SEMICOLON                          => reduce 1 tokens to primary 103.0
   SLASH                              => reduce 1 tokens to primary 103.0
   SLASH_EQUAL                        => reduce 1 tokens to primary 103.0
   STAR                               => reduce 1 tokens to primary 103.0
   default                            => ERROR

   Minimal_Complete_Action => (primary)

State 45:
     95.2:name <= IDENTIFIER ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to name 95.2
   IS                                 => reduce 1 tokens to name 95.2
   LEFT_PAREN                         => reduce 1 tokens to name 95.2
   LOOP                               => reduce 1 tokens to name 95.2
   OR                                 => reduce 1 tokens to name 95.2
   RANGE                              => reduce 1 tokens to name 95.2
   RETURN                             => reduce 1 tokens to name 95.2
   RIGHT_PAREN                        => reduce 1 tokens to name 95.2
   THEN                               => reduce 1 tokens to name 95.2
   WITH                               => reduce 1 tokens to name 95.2
   XOR                                => reduce 1 tokens to name 95.2
   AMPERSAND                          => reduce 1 tokens to name 95.2
   COLON_EQUAL                        => reduce 1 tokens to name 95.2
   COMMA                              => reduce 1 tokens to name 95.2
   DOT                                => reduce 1 tokens to name 95.2
   DOT_DOT                            => reduce 1 tokens to name 95.2
   EQUAL                              => reduce 1 tokens to name 95.2
   EQUAL_GREATER                      => reduce 1 tokens to name 95.2
   GREATER                            => reduce 1 tokens to name 95.2
   GREATER_EQUAL                      => reduce 1 tokens to name 95.2
   LESS                               => reduce 1 tokens to name 95.2
   LESS_EQUAL                         => reduce 1 tokens to name 95.2
   MINUS                              => reduce 1 tokens to name 95.2
   PLUS                               => reduce 1 tokens to name 95.2
   SEMICOLON                          => reduce 1 tokens to name 95.2
   SLASH                              => reduce 1 tokens to name 95.2
   SLASH_EQUAL                        => reduce 1 tokens to name 95.2
   STAR                               => reduce 1 tokens to name 95.2
   default                            => ERROR

   Minimal_Complete_Action => (name)

State 46:
     67.0:case_statement <= CASE expression ^ IS nonterminal_006_list END CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   IS                                 => shift and goto state 109
   default                            => ERROR

   Minimal_Complete_Action => (IS)

State 47:
    122.0:term <= factor ^ nonterminal_038_list_opt, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 0 tokens to nonterminal_038_list_opt 161.0
   IS                                 => reduce 0 tokens to nonterminal_038_list_opt 161.0
   LOOP                               => reduce 0 tokens to nonterminal_038_list_opt 161.0
   OR                                 => reduce 0 tokens to nonterminal_038_list_opt 161.0
   RIGHT_PAREN                        => reduce 0 tokens to nonterminal_038_list_opt 161.0
   THEN                               => reduce 0 tokens to nonterminal_038_list_opt 161.0
   XOR                                => reduce 0 tokens to nonterminal_038_list_opt 161.0
   AMPERSAND                          => reduce 0 tokens to nonterminal_038_list_opt 161.0
   COLON_EQUAL                        => reduce 0 tokens to nonterminal_038_list_opt 161.0
   COMMA                              => reduce 0 tokens to nonterminal_038_list_opt 161.0
   DOT_DOT                            => reduce 0 tokens to nonterminal_038_list_opt 161.0
   EQUAL                              => reduce 0 tokens to nonterminal_038_list_opt 161.0
   GREATER                            => reduce 0 tokens to nonterminal_038_list_opt 161.0
   GREATER_EQUAL                      => reduce 0 tokens to nonterminal_038_list_opt 161.0
   LESS                               => reduce 0 tokens to nonterminal_038_list_opt 161.0
   LESS_EQUAL                         => reduce 0 tokens to nonterminal_038_list_opt 161.0
   MINUS                              => reduce 0 tokens to nonterminal_038_list_opt 161.0
   PLUS                               => reduce 0 tokens to nonterminal_038_list_opt 161.0
   SEMICOLON                          => reduce 0 tokens to nonterminal_038_list_opt 161.0
   SLASH                              => shift and goto state 110
   SLASH_EQUAL                        => reduce 0 tokens to nonterminal_038_list_opt 161.0
   STAR                               => shift and goto state 111
   default                            => ERROR

   multiplying_operator               goto state 112
   nonterminal_039                    goto state 113
   nonterminal_038_list_opt           goto state 114
   nonterminal_037_list               goto state 115

   Minimal_Complete_Action => (nonterminal_038_list_opt)

State 48:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
     95.1:name <= name ^ actual_parameter_part, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    103.2:primary <= name ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    111.0:selected_component <= name ^ DOT IDENTIFIER, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to primary 103.2
   IS                                 => reduce 1 tokens to primary 103.2
   LEFT_PAREN                         => shift and goto state 97
   LOOP                               => reduce 1 tokens to primary 103.2
   OR                                 => reduce 1 tokens to primary 103.2
   RIGHT_PAREN                        => reduce 1 tokens to primary 103.2
   THEN                               => reduce 1 tokens to primary 103.2
   XOR                                => reduce 1 tokens to primary 103.2
   AMPERSAND                          => reduce 1 tokens to primary 103.2
   COLON_EQUAL                        => reduce 1 tokens to primary 103.2
   COMMA                              => reduce 1 tokens to primary 103.2
   DOT                                => shift and goto state 99
   DOT_DOT                            => reduce 1 tokens to primary 103.2
   EQUAL                              => reduce 1 tokens to primary 103.2
   GREATER                            => reduce 1 tokens to primary 103.2
   GREATER_EQUAL                      => reduce 1 tokens to primary 103.2
   LESS                               => reduce 1 tokens to primary 103.2
   LESS_EQUAL                         => reduce 1 tokens to primary 103.2
   MINUS                              => reduce 1 tokens to primary 103.2
   PLUS                               => reduce 1 tokens to primary 103.2
   SEMICOLON                          => reduce 1 tokens to primary 103.2
   SLASH                              => reduce 1 tokens to primary 103.2
   SLASH_EQUAL                        => reduce 1 tokens to primary 103.2
   STAR                               => reduce 1 tokens to primary 103.2
   default                            => ERROR

   actual_parameter_part              goto state 101

   Minimal_Complete_Action => (primary)

State 49:
    103.3:primary <= paren_expression ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to primary 103.3
   IS                                 => reduce 1 tokens to primary 103.3
   LOOP                               => reduce 1 tokens to primary 103.3
   OR                                 => reduce 1 tokens to primary 103.3
   RIGHT_PAREN                        => reduce 1 tokens to primary 103.3
   THEN                               => reduce 1 tokens to primary 103.3
   XOR                                => reduce 1 tokens to primary 103.3
   AMPERSAND                          => reduce 1 tokens to primary 103.3
   COLON_EQUAL                        => reduce 1 tokens to primary 103.3
   COMMA                              => reduce 1 tokens to primary 103.3
   DOT_DOT                            => reduce 1 tokens to primary 103.3
   EQUAL                              => reduce 1 tokens to primary 103.3
   GREATER                            => reduce 1 tokens to primary 103.3
   GREATER_EQUAL                      => reduce 1 tokens to primary 103.3
   LESS                               => reduce 1 tokens to primary 103.3
   LESS_EQUAL                         => reduce 1 tokens to primary 103.3
   MINUS                              => reduce 1 tokens to primary 103.3
   PLUS                               => reduce 1 tokens to primary 103.3
   SEMICOLON                          => reduce 1 tokens to primary 103.3
   SLASH                              => reduce 1 tokens to primary 103.3
   SLASH_EQUAL                        => reduce 1 tokens to primary 103.3
   STAR                               => reduce 1 tokens to primary 103.3
   default                            => ERROR

   Minimal_Complete_Action => (primary)

State 50:
     83.0:factor <= primary ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to factor 83.0
   IS                                 => reduce 1 tokens to factor 83.0
   LOOP                               => reduce 1 tokens to factor 83.0
   OR                                 => reduce 1 tokens to factor 83.0
   RIGHT_PAREN                        => reduce 1 tokens to factor 83.0
   THEN                               => reduce 1 tokens to factor 83.0
   XOR                                => reduce 1 tokens to factor 83.0
   AMPERSAND                          => reduce 1 tokens to factor 83.0
   COLON_EQUAL                        => reduce 1 tokens to factor 83.0
   COMMA                              => reduce 1 tokens to factor 83.0
   DOT_DOT                            => reduce 1 tokens to factor 83.0
   EQUAL                              => reduce 1 tokens to factor 83.0
   GREATER                            => reduce 1 tokens to factor 83.0
   GREATER_EQUAL                      => reduce 1 tokens to factor 83.0
   LESS                               => reduce 1 tokens to factor 83.0
   LESS_EQUAL                         => reduce 1 tokens to factor 83.0
   MINUS                              => reduce 1 tokens to factor 83.0
   PLUS                               => reduce 1 tokens to factor 83.0
   SEMICOLON                          => reduce 1 tokens to factor 83.0
   SLASH                              => reduce 1 tokens to factor 83.0
   SLASH_EQUAL                        => reduce 1 tokens to factor 83.0
   STAR                               => reduce 1 tokens to factor 83.0
   default                            => ERROR

   Minimal_Complete_Action => (factor)

State 51:
     80.0:expression <= relation ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
     80.1:expression <= relation ^ nonterminal_016_list, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
     80.2:expression <= relation ^ nonterminal_018_list, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
     80.3:expression <= relation ^ nonterminal_020_list, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   AND                                => shift and goto state 116
   IS                                 => reduce 1 tokens to expression 80.0
   OR                                 => shift and goto state 117
   RIGHT_PAREN                        => reduce 1 tokens to expression 80.0
   THEN                               => reduce 1 tokens to expression 80.0
   XOR                                => shift and goto state 118
   COMMA                              => reduce 1 tokens to expression 80.0
   SEMICOLON                          => reduce 1 tokens to expression 80.0
   default                            => ERROR

   nonterminal_017                    goto state 119
   nonterminal_016_list               goto state 120
   nonterminal_019                    goto state 121
   nonterminal_018_list               goto state 122
   nonterminal_021                    goto state 123
   nonterminal_020_list               goto state 124

   Minimal_Complete_Action => (expression)

State 52:
    109.0:relation <= simple_expression ^ nonterminal_040, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON
    109.1:relation <= simple_expression ^, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   AND                                => reduce 1 tokens to relation 109.1
   IS                                 => reduce 1 tokens to relation 109.1
   OR                                 => reduce 1 tokens to relation 109.1
   RIGHT_PAREN                        => reduce 1 tokens to relation 109.1
   THEN                               => reduce 1 tokens to relation 109.1
   XOR                                => reduce 1 tokens to relation 109.1
   COMMA                              => reduce 1 tokens to relation 109.1
   EQUAL                              => shift and goto state 125
   GREATER                            => shift and goto state 126
   GREATER_EQUAL                      => shift and goto state 127
   LESS                               => shift and goto state 128
   LESS_EQUAL                         => shift and goto state 129
   SEMICOLON                          => reduce 1 tokens to relation 109.1
   SLASH_EQUAL                        => shift and goto state 130
   default                            => ERROR

   relational_operator                goto state 131
   nonterminal_040                    goto state 132

   Minimal_Complete_Action => (relation)

State 53:
    113.1:simple_expression <= term ^ nonterminal_035_list_opt, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 0 tokens to nonterminal_035_list_opt 158.0
   IS                                 => reduce 0 tokens to nonterminal_035_list_opt 158.0
   LOOP                               => reduce 0 tokens to nonterminal_035_list_opt 158.0
   OR                                 => reduce 0 tokens to nonterminal_035_list_opt 158.0
   RIGHT_PAREN                        => reduce 0 tokens to nonterminal_035_list_opt 158.0
   THEN                               => reduce 0 tokens to nonterminal_035_list_opt 158.0
   XOR                                => reduce 0 tokens to nonterminal_035_list_opt 158.0
   AMPERSAND                          => shift and goto state 133
   COLON_EQUAL                        => reduce 0 tokens to nonterminal_035_list_opt 158.0
   COMMA                              => reduce 0 tokens to nonterminal_035_list_opt 158.0
   DOT_DOT                            => reduce 0 tokens to nonterminal_035_list_opt 158.0
   EQUAL                              => reduce 0 tokens to nonterminal_035_list_opt 158.0
   GREATER                            => reduce 0 tokens to nonterminal_035_list_opt 158.0
   GREATER_EQUAL                      => reduce 0 tokens to nonterminal_035_list_opt 158.0
   LESS                               => reduce 0 tokens to nonterminal_035_list_opt 158.0
   LESS_EQUAL                         => reduce 0 tokens to nonterminal_035_list_opt 158.0
   MINUS                              => shift and goto state 134
   PLUS                               => shift and goto state 135
   SEMICOLON                          => reduce 0 tokens to nonterminal_035_list_opt 158.0
   SLASH_EQUAL                        => reduce 0 tokens to nonterminal_035_list_opt 158.0
   default                            => ERROR

   binary_adding_operator             goto state 136
   nonterminal_036                    goto state 137
   nonterminal_035_list_opt           goto state 138
   nonterminal_034_list               goto state 139

   Minimal_Complete_Action => (nonterminal_035_list_opt)

State 54:
    113.0:simple_expression <= unary_adding_operator ^ term nonterminal_035_list_opt, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   selected_component                 goto state 30
   term                               goto state 140

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 55:
     98.0:package_body <= PACKAGE ^ BODY name aspect_specification IS declarative_part nonterminal_042 END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
     98.1:package_body <= PACKAGE ^ BODY name IS declarative_part nonterminal_042 END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
     98.2:package_body <= PACKAGE ^ BODY name aspect_specification IS declarative_part END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
     98.3:package_body <= PACKAGE ^ BODY name IS declarative_part END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BODY                               => shift and goto state 87
   default                            => ERROR

   Minimal_Complete_Action => (BODY)

State 56:
    105.0:procedure_specification <= PROCEDURE ^ name parameter_profile, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   name                               goto state 141
   selected_component                 goto state 30

   Minimal_Complete_Action => (IDENTIFIER)

State 57:
     85.0:full_type_declaration <= TYPE ^ IDENTIFIER IS type_definition SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   IDENTIFIER                         => shift and goto state 142
   default                            => ERROR

   Minimal_Complete_Action => (IDENTIFIER)

State 58:
     97.0:object_declaration <= IDENTIFIER ^ COLON subtype_indication nonterminal_043 SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
     97.1:object_declaration <= IDENTIFIER ^ COLON subtype_indication SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   COLON                              => shift and goto state 143
   default                            => ERROR

   Minimal_Complete_Action => (COLON)

State 59:
     73.0:declaration <= body_g ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declaration 73.0
   END                                => reduce 1 tokens to declaration 73.0
   FUNCTION                           => reduce 1 tokens to declaration 73.0
   PACKAGE                            => reduce 1 tokens to declaration 73.0
   PROCEDURE                          => reduce 1 tokens to declaration 73.0
   TYPE                               => reduce 1 tokens to declaration 73.0
   IDENTIFIER                         => reduce 1 tokens to declaration 73.0
   default                            => ERROR

   Minimal_Complete_Action => (declaration)

State 60:
     65.1:body_g <= body_stub ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to body_g 65.1
   END                                => reduce 1 tokens to body_g 65.1
   FUNCTION                           => reduce 1 tokens to body_g 65.1
   PACKAGE                            => reduce 1 tokens to body_g 65.1
   PROCEDURE                          => reduce 1 tokens to body_g 65.1
   TYPE                               => reduce 1 tokens to body_g 65.1
   IDENTIFIER                         => reduce 1 tokens to body_g 65.1
   default                            => ERROR

   Minimal_Complete_Action => (body_g)

State 61:
    133.0:nonterminal_012 <= declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to nonterminal_012 133.0
   END                                => reduce 1 tokens to nonterminal_012 133.0
   FUNCTION                           => reduce 1 tokens to nonterminal_012 133.0
   PACKAGE                            => reduce 1 tokens to nonterminal_012 133.0
   PROCEDURE                          => reduce 1 tokens to nonterminal_012 133.0
   TYPE                               => reduce 1 tokens to nonterminal_012 133.0
   IDENTIFIER                         => reduce 1 tokens to nonterminal_012 133.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_012)

State 62:
    170.0:nonterminal_047 <= DECLARE declarative_part ^, BEGIN

   BEGIN                              => reduce 2 tokens to nonterminal_047 170.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_047)

State 63:
    123.0:type_declaration <= full_type_declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to type_declaration 123.0
   END                                => reduce 1 tokens to type_declaration 123.0
   FUNCTION                           => reduce 1 tokens to type_declaration 123.0
   PACKAGE                            => reduce 1 tokens to type_declaration 123.0
   PROCEDURE                          => reduce 1 tokens to type_declaration 123.0
   TYPE                               => reduce 1 tokens to type_declaration 123.0
   IDENTIFIER                         => reduce 1 tokens to type_declaration 123.0
   default                            => ERROR

   Minimal_Complete_Action => (type_declaration)

State 64:
     73.1:declaration <= object_declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declaration 73.1
   END                                => reduce 1 tokens to declaration 73.1
   FUNCTION                           => reduce 1 tokens to declaration 73.1
   PACKAGE                            => reduce 1 tokens to declaration 73.1
   PROCEDURE                          => reduce 1 tokens to declaration 73.1
   TYPE                               => reduce 1 tokens to declaration 73.1
   IDENTIFIER                         => reduce 1 tokens to declaration 73.1
   default                            => ERROR

   Minimal_Complete_Action => (declaration)

State 65:
    106.0:proper_body <= package_body ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to proper_body 106.0
   END                                => reduce 1 tokens to proper_body 106.0
   FUNCTION                           => reduce 1 tokens to proper_body 106.0
   PACKAGE                            => reduce 1 tokens to proper_body 106.0
   PROCEDURE                          => reduce 1 tokens to proper_body 106.0
   TYPE                               => reduce 1 tokens to proper_body 106.0
   IDENTIFIER                         => reduce 1 tokens to proper_body 106.0
   default                            => ERROR

   Minimal_Complete_Action => (proper_body)

State 66:
     65.0:body_g <= proper_body ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to body_g 65.0
   END                                => reduce 1 tokens to body_g 65.0
   FUNCTION                           => reduce 1 tokens to body_g 65.0
   PACKAGE                            => reduce 1 tokens to body_g 65.0
   PROCEDURE                          => reduce 1 tokens to body_g 65.0
   TYPE                               => reduce 1 tokens to body_g 65.0
   IDENTIFIER                         => reduce 1 tokens to body_g 65.0
   default                            => ERROR

   Minimal_Complete_Action => (body_g)

State 67:
    106.1:proper_body <= subprogram_body ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to proper_body 106.1
   END                                => reduce 1 tokens to proper_body 106.1
   FUNCTION                           => reduce 1 tokens to proper_body 106.1
   PACKAGE                            => reduce 1 tokens to proper_body 106.1
   PROCEDURE                          => reduce 1 tokens to proper_body 106.1
   TYPE                               => reduce 1 tokens to proper_body 106.1
   IDENTIFIER                         => reduce 1 tokens to proper_body 106.1
   default                            => ERROR

   Minimal_Complete_Action => (proper_body)

State 68:
     66.0:body_stub <= subprogram_body_stub ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to body_stub 66.0
   END                                => reduce 1 tokens to body_stub 66.0
   FUNCTION                           => reduce 1 tokens to body_stub 66.0
   PACKAGE                            => reduce 1 tokens to body_stub 66.0
   PROCEDURE                          => reduce 1 tokens to body_stub 66.0
   TYPE                               => reduce 1 tokens to body_stub 66.0
   IDENTIFIER                         => reduce 1 tokens to body_stub 66.0
   default                            => ERROR

   Minimal_Complete_Action => (body_stub)

State 69:
     73.2:declaration <= subprogram_declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declaration 73.2
   END                                => reduce 1 tokens to declaration 73.2
   FUNCTION                           => reduce 1 tokens to declaration 73.2
   PACKAGE                            => reduce 1 tokens to declaration 73.2
   PROCEDURE                          => reduce 1 tokens to declaration 73.2
   TYPE                               => reduce 1 tokens to declaration 73.2
   IDENTIFIER                         => reduce 1 tokens to declaration 73.2
   default                            => ERROR

   Minimal_Complete_Action => (declaration)

State 70:
    117.0:subprogram_body <= subprogram_specification ^ aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    117.1:subprogram_body <= subprogram_specification ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    118.0:subprogram_body_stub <= subprogram_specification ^ IS SEPARATE SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    119.0:subprogram_declaration <= subprogram_specification ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   IS                                 => shift and goto state 144
   WITH                               => shift and goto state 103
   SEMICOLON                          => shift and goto state 104
   default                            => ERROR

   aspect_specification               goto state 105

   Minimal_Complete_Action => (SEMICOLON)

State 71:
     73.3:declaration <= type_declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declaration 73.3
   END                                => reduce 1 tokens to declaration 73.3
   FUNCTION                           => reduce 1 tokens to declaration 73.3
   PACKAGE                            => reduce 1 tokens to declaration 73.3
   PROCEDURE                          => reduce 1 tokens to declaration 73.3
   TYPE                               => reduce 1 tokens to declaration 73.3
   IDENTIFIER                         => reduce 1 tokens to declaration 73.3
   default                            => ERROR

   Minimal_Complete_Action => (declaration)

State 72:
    135.0:nonterminal_010_list <= nonterminal_012 ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to nonterminal_010_list 135.0
   END                                => reduce 1 tokens to nonterminal_010_list 135.0
   FUNCTION                           => reduce 1 tokens to nonterminal_010_list 135.0
   PACKAGE                            => reduce 1 tokens to nonterminal_010_list 135.0
   PROCEDURE                          => reduce 1 tokens to nonterminal_010_list 135.0
   TYPE                               => reduce 1 tokens to nonterminal_010_list 135.0
   IDENTIFIER                         => reduce 1 tokens to nonterminal_010_list 135.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_010_list)

State 73:
     74.0:declarative_part <= nonterminal_011_list_opt ^, BEGIN/END

   BEGIN                              => reduce 1 tokens to declarative_part 74.0
   END                                => reduce 1 tokens to declarative_part 74.0
   default                            => ERROR

   Minimal_Complete_Action => (declarative_part)

State 74:
    134.1:nonterminal_011_list_opt <= nonterminal_010_list ^, BEGIN/END
    135.1:nonterminal_010_list <= nonterminal_010_list ^ nonterminal_012, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to nonterminal_011_list_opt 134.1
   END                                => reduce 1 tokens to nonterminal_011_list_opt 134.1
   FUNCTION                           => shift and goto state 5
   PACKAGE                            => shift and goto state 55
   PROCEDURE                          => shift and goto state 56
   TYPE                               => shift and goto state 57
   IDENTIFIER                         => shift and goto state 58
   default                            => ERROR

   body_g                             goto state 59
   body_stub                          goto state 60
   declaration                        goto state 61
   full_type_declaration              goto state 63
   function_specification             goto state 21
   object_declaration                 goto state 64
   package_body                       goto state 65
   procedure_specification            goto state 29
   proper_body                        goto state 66
   subprogram_body                    goto state 67
   subprogram_body_stub               goto state 68
   subprogram_declaration             goto state 69
   subprogram_specification           goto state 70
   type_declaration                   goto state 71
   nonterminal_012                    goto state 145

   Minimal_Complete_Action => (nonterminal_011_list_opt)

State 75:
    169.0:nonterminal_046 <= WHEN ^ expression, SEMICOLON

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   expression                         goto state 146
   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   relation                           goto state 51
   selected_component                 goto state 30
   simple_expression                  goto state 52
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 76:
     79.3:exit_statement <= EXIT SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 2 tokens to exit_statement 79.3
   CASE                               => reduce 2 tokens to exit_statement 79.3
   DECLARE                            => reduce 2 tokens to exit_statement 79.3
   ELSE                               => reduce 2 tokens to exit_statement 79.3
   ELSIF                              => reduce 2 tokens to exit_statement 79.3
   END                                => reduce 2 tokens to exit_statement 79.3
   EXIT                               => reduce 2 tokens to exit_statement 79.3
   EXCEPTION                          => reduce 2 tokens to exit_statement 79.3
   FOR                                => reduce 2 tokens to exit_statement 79.3
   FUNCTION                           => reduce 2 tokens to exit_statement 79.3
   IF                                 => reduce 2 tokens to exit_statement 79.3
   LOOP                               => reduce 2 tokens to exit_statement 79.3
   PACKAGE                            => reduce 2 tokens to exit_statement 79.3
   PROCEDURE                          => reduce 2 tokens to exit_statement 79.3
   RETURN                             => reduce 2 tokens to exit_statement 79.3
   WHEN                               => reduce 2 tokens to exit_statement 79.3
   IDENTIFIER                         => reduce 2 tokens to exit_statement 79.3
   Wisi_EOI                           => reduce 2 tokens to exit_statement 79.3
   default                            => ERROR

   Minimal_Complete_Action => (exit_statement)

State 77:
     79.0:exit_statement <= EXIT IDENTIFIER ^ nonterminal_046 SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     79.2:exit_statement <= EXIT IDENTIFIER ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   WHEN                               => shift and goto state 75
   SEMICOLON                          => shift and goto state 147
   default                            => ERROR

   nonterminal_046                    goto state 148

   Minimal_Complete_Action => (SEMICOLON)

State 78:
     79.1:exit_statement <= EXIT nonterminal_046 ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 149
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 79:
     92.0:iteration_scheme <= FOR IDENTIFIER ^ IN discrete_subtype_definition, LOOP

   IN                                 => shift and goto state 150
   default                            => ERROR

   Minimal_Complete_Action => (IN)

State 80:
     86.0:function_specification <= FUNCTION name ^ parameter_and_result_profile, IS/WITH/SEMICOLON
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/RETURN/DOT
     95.1:name <= name ^ actual_parameter_part, LEFT_PAREN/RETURN/DOT
    111.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/RETURN/DOT

   LEFT_PAREN                         => shift and goto state 151
   RETURN                             => shift and goto state 152
   DOT                                => shift and goto state 99
   default                            => ERROR

   actual_parameter_part              goto state 101
   formal_part                        goto state 153
   parameter_and_result_profile       goto state 154

   Minimal_Complete_Action => (RETURN)

State 81:
     90.0:if_statement <= IF expression ^ THEN sequence_of_statements nonterminal_029_list_opt nonterminal_044 END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.1:if_statement <= IF expression ^ THEN sequence_of_statements nonterminal_029_list_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   THEN                               => shift and goto state 155
   default                            => ERROR

   Minimal_Complete_Action => (THEN)

State 82:
     93.1:loop_statement <= LOOP sequence_of_statements ^ END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 156
   default                            => ERROR

   Minimal_Complete_Action => (END)

State 83:
    154.0:nonterminal_033 <= statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 1 tokens to nonterminal_033 154.0
   CASE                               => reduce 1 tokens to nonterminal_033 154.0
   DECLARE                            => reduce 1 tokens to nonterminal_033 154.0
   ELSE                               => reduce 1 tokens to nonterminal_033 154.0
   ELSIF                              => reduce 1 tokens to nonterminal_033 154.0
   END                                => reduce 1 tokens to nonterminal_033 154.0
   EXIT                               => reduce 1 tokens to nonterminal_033 154.0
   EXCEPTION                          => reduce 1 tokens to nonterminal_033 154.0
   FOR                                => reduce 1 tokens to nonterminal_033 154.0
   IF                                 => reduce 1 tokens to nonterminal_033 154.0
   LOOP                               => reduce 1 tokens to nonterminal_033 154.0
   RETURN                             => reduce 1 tokens to nonterminal_033 154.0
   WHEN                               => reduce 1 tokens to nonterminal_033 154.0
   IDENTIFIER                         => reduce 1 tokens to nonterminal_033 154.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_033)

State 84:
    156.0:nonterminal_031_list <= nonterminal_033 ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 1 tokens to nonterminal_031_list 156.0
   CASE                               => reduce 1 tokens to nonterminal_031_list 156.0
   DECLARE                            => reduce 1 tokens to nonterminal_031_list 156.0
   ELSE                               => reduce 1 tokens to nonterminal_031_list 156.0
   ELSIF                              => reduce 1 tokens to nonterminal_031_list 156.0
   END                                => reduce 1 tokens to nonterminal_031_list 156.0
   EXIT                               => reduce 1 tokens to nonterminal_031_list 156.0
   EXCEPTION                          => reduce 1 tokens to nonterminal_031_list 156.0
   FOR                                => reduce 1 tokens to nonterminal_031_list 156.0
   IF                                 => reduce 1 tokens to nonterminal_031_list 156.0
   LOOP                               => reduce 1 tokens to nonterminal_031_list 156.0
   RETURN                             => reduce 1 tokens to nonterminal_031_list 156.0
   WHEN                               => reduce 1 tokens to nonterminal_031_list 156.0
   IDENTIFIER                         => reduce 1 tokens to nonterminal_031_list 156.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_031_list)

State 85:
    112.0:sequence_of_statements <= nonterminal_032_list_opt ^, ELSE/ELSIF/END/EXCEPTION/WHEN

   ELSE                               => reduce 1 tokens to sequence_of_statements 112.0
   ELSIF                              => reduce 1 tokens to sequence_of_statements 112.0
   END                                => reduce 1 tokens to sequence_of_statements 112.0
   EXCEPTION                          => reduce 1 tokens to sequence_of_statements 112.0
   WHEN                               => reduce 1 tokens to sequence_of_statements 112.0
   default                            => ERROR

   Minimal_Complete_Action => (sequence_of_statements)

State 86:
    155.1:nonterminal_032_list_opt <= nonterminal_031_list ^, ELSE/ELSIF/END/EXCEPTION/WHEN
    156.1:nonterminal_031_list <= nonterminal_031_list ^ nonterminal_033, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   ELSE                               => reduce 1 tokens to nonterminal_032_list_opt 155.1
   ELSIF                              => reduce 1 tokens to nonterminal_032_list_opt 155.1
   END                                => reduce 1 tokens to nonterminal_032_list_opt 155.1
   EXIT                               => shift and goto state 3
   EXCEPTION                          => reduce 1 tokens to nonterminal_032_list_opt 155.1
   FOR                                => shift and goto state 4
   IF                                 => shift and goto state 6
   LOOP                               => shift and goto state 7
   RETURN                             => shift and goto state 10
   WHEN                               => reduce 1 tokens to nonterminal_032_list_opt 155.1
   IDENTIFIER                         => shift and goto state 11
   default                            => ERROR

   assignment_statement               goto state 12
   block_label_opt                    goto state 13
   block_statement                    goto state 14
   case_statement                     goto state 15
   compound_statement                 goto state 18
   exit_statement                     goto state 19
   extended_return_statement          goto state 20
   if_statement                       goto state 23
   iteration_scheme                   goto state 24
   loop_statement                     goto state 25
   name                               goto state 26
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 83
   nonterminal_033                    goto state 157

   Minimal_Complete_Action => (nonterminal_032_list_opt)

State 87:
     98.0:package_body <= PACKAGE BODY ^ name aspect_specification IS declarative_part nonterminal_042 END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.1:package_body <= PACKAGE BODY ^ name IS declarative_part nonterminal_042 END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.2:package_body <= PACKAGE BODY ^ name aspect_specification IS declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.3:package_body <= PACKAGE BODY ^ name IS declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   name                               goto state 158
   selected_component                 goto state 30

   Minimal_Complete_Action => (IDENTIFIER)

State 88:
     87.0:generic_instantiation <= PACKAGE name ^ IS NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, IS/LEFT_PAREN/DOT
     95.1:name <= name ^ actual_parameter_part, IS/LEFT_PAREN/DOT
    111.0:selected_component <= name ^ DOT IDENTIFIER, IS/LEFT_PAREN/DOT

   IS                                 => shift and goto state 159
   LEFT_PAREN                         => shift and goto state 97
   DOT                                => shift and goto state 99
   default                            => ERROR

   actual_parameter_part              goto state 101

   Minimal_Complete_Action => (IS)

State 89:
     87.1:generic_instantiation <= PROCEDURE name ^ IS NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, IS/LEFT_PAREN/WITH/DOT/SEMICOLON
     95.1:name <= name ^ actual_parameter_part, IS/LEFT_PAREN/WITH/DOT/SEMICOLON
    105.0:procedure_specification <= PROCEDURE name ^ parameter_profile, IS/WITH/SEMICOLON
    111.0:selected_component <= name ^ DOT IDENTIFIER, IS/LEFT_PAREN/WITH/DOT/SEMICOLON

   IS                                 => shift and goto state 160,
                                         reduce 0 tokens to parameter_profile 100.1
   LEFT_PAREN                         => shift and goto state 151
   WITH                               => reduce 0 tokens to parameter_profile 100.1
   DOT                                => shift and goto state 99
   SEMICOLON                          => reduce 0 tokens to parameter_profile 100.1
   default                            => ERROR

   actual_parameter_part              goto state 101
   formal_part                        goto state 161
   parameter_profile                  goto state 162

   Minimal_Complete_Action => (parameter_profile)

State 90:
     81.0:extended_return_object_declaration <= IDENTIFIER ^ COLON subtype_indication, SEMICOLON
     95.2:name <= IDENTIFIER ^, AND/LEFT_PAREN/OR/XOR/AMPERSAND/DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to name 95.2
   LEFT_PAREN                         => reduce 1 tokens to name 95.2
   OR                                 => reduce 1 tokens to name 95.2
   XOR                                => reduce 1 tokens to name 95.2
   AMPERSAND                          => reduce 1 tokens to name 95.2
   COLON                              => shift and goto state 163
   DOT                                => reduce 1 tokens to name 95.2
   EQUAL                              => reduce 1 tokens to name 95.2
   GREATER                            => reduce 1 tokens to name 95.2
   GREATER_EQUAL                      => reduce 1 tokens to name 95.2
   LESS                               => reduce 1 tokens to name 95.2
   LESS_EQUAL                         => reduce 1 tokens to name 95.2
   MINUS                              => reduce 1 tokens to name 95.2
   PLUS                               => reduce 1 tokens to name 95.2
   SEMICOLON                          => reduce 1 tokens to name 95.2
   SLASH                              => reduce 1 tokens to name 95.2
   SLASH_EQUAL                        => reduce 1 tokens to name 95.2
   STAR                               => reduce 1 tokens to name 95.2
   default                            => ERROR

   Minimal_Complete_Action => (name)

State 91:
    114.0:simple_return_statement <= RETURN expression ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 164
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 92:
     82.0:extended_return_statement <= RETURN extended_return_object_declaration ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 165
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 93:
     63.0:block_label_opt <= IDENTIFIER COLON ^, BEGIN/DECLARE

   BEGIN                              => reduce 2 tokens to block_label_opt 63.0
   DECLARE                            => reduce 2 tokens to block_label_opt 63.0
   default                            => ERROR

   Minimal_Complete_Action => (block_label_opt)

State 94:
     64.1:block_statement <= block_label_opt BEGIN ^ handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to nonterminal_032_list_opt 155.0
   EXIT                               => shift and goto state 3
   EXCEPTION                          => reduce 0 tokens to nonterminal_032_list_opt 155.0
   FOR                                => shift and goto state 4
   IF                                 => shift and goto state 6
   LOOP                               => shift and goto state 7
   RETURN                             => shift and goto state 10
   IDENTIFIER                         => shift and goto state 11
   default                            => ERROR

   assignment_statement               goto state 12
   block_label_opt                    goto state 13
   block_statement                    goto state 14
   case_statement                     goto state 15
   compound_statement                 goto state 18
   exit_statement                     goto state 19
   extended_return_statement          goto state 20
   handled_sequence_of_statements     goto state 167
   if_statement                       goto state 23
   iteration_scheme                   goto state 24
   loop_statement                     goto state 25
   name                               goto state 26
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements             goto state 168
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 83
   nonterminal_033                    goto state 84
   nonterminal_032_list_opt           goto state 85
   nonterminal_031_list               goto state 86

   Minimal_Complete_Action => (handled_sequence_of_statements)

State 95:
     64.0:block_statement <= block_label_opt nonterminal_047 ^ BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 169
   default                            => ERROR

   Minimal_Complete_Action => (BEGIN)

State 96:
     93.0:loop_statement <= iteration_scheme LOOP ^ sequence_of_statements END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to nonterminal_032_list_opt 155.0
   EXIT                               => shift and goto state 3
   FOR                                => shift and goto state 4
   IF                                 => shift and goto state 6
   LOOP                               => shift and goto state 7
   RETURN                             => shift and goto state 10
   IDENTIFIER                         => shift and goto state 11
   default                            => ERROR

   assignment_statement               goto state 12
   block_label_opt                    goto state 13
   block_statement                    goto state 14
   case_statement                     goto state 15
   compound_statement                 goto state 18
   exit_statement                     goto state 19
   extended_return_statement          goto state 20
   if_statement                       goto state 23
   iteration_scheme                   goto state 24
   loop_statement                     goto state 25
   name                               goto state 26
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements             goto state 170
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 83
   nonterminal_033                    goto state 84
   nonterminal_032_list_opt           goto state 85
   nonterminal_031_list               goto state 86

   Minimal_Complete_Action => (sequence_of_statements)

State 97:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
     95.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 171
   default                            => ERROR

   association                        goto state 172
   association_list                   goto state 173
   expression                         goto state 174
   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   range_g                            goto state 175
   range_list                         goto state 176
   relation                           goto state 51
   selected_component                 goto state 30
   simple_expression                  goto state 177
   term                               goto state 53
   unary_adding_operator              goto state 54
   nonterminal_048                    goto state 178

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 98:
     59.0:assignment_statement <= name COLON_EQUAL ^ expression SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   expression                         goto state 179
   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   relation                           goto state 51
   selected_component                 goto state 30
   simple_expression                  goto state 52
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 99:
    111.0:selected_component <= name DOT ^ IDENTIFIER, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   IDENTIFIER                         => shift and goto state 180
   default                            => ERROR

   Minimal_Complete_Action => (IDENTIFIER)

State 100:
    104.0:procedure_call_statement <= name SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 2 tokens to procedure_call_statement 104.0
   CASE                               => reduce 2 tokens to procedure_call_statement 104.0
   DECLARE                            => reduce 2 tokens to procedure_call_statement 104.0
   ELSE                               => reduce 2 tokens to procedure_call_statement 104.0
   ELSIF                              => reduce 2 tokens to procedure_call_statement 104.0
   END                                => reduce 2 tokens to procedure_call_statement 104.0
   EXIT                               => reduce 2 tokens to procedure_call_statement 104.0
   EXCEPTION                          => reduce 2 tokens to procedure_call_statement 104.0
   FOR                                => reduce 2 tokens to procedure_call_statement 104.0
   FUNCTION                           => reduce 2 tokens to procedure_call_statement 104.0
   IF                                 => reduce 2 tokens to procedure_call_statement 104.0
   LOOP                               => reduce 2 tokens to procedure_call_statement 104.0
   PACKAGE                            => reduce 2 tokens to procedure_call_statement 104.0
   PROCEDURE                          => reduce 2 tokens to procedure_call_statement 104.0
   RETURN                             => reduce 2 tokens to procedure_call_statement 104.0
   WHEN                               => reduce 2 tokens to procedure_call_statement 104.0
   IDENTIFIER                         => reduce 2 tokens to procedure_call_statement 104.0
   Wisi_EOI                           => reduce 2 tokens to procedure_call_statement 104.0
   default                            => ERROR

   Minimal_Complete_Action => (procedure_call_statement)

State 101:
     95.1:name <= name actual_parameter_part ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 2 tokens to name 95.1
   IS                                 => reduce 2 tokens to name 95.1
   LEFT_PAREN                         => reduce 2 tokens to name 95.1
   LOOP                               => reduce 2 tokens to name 95.1
   OR                                 => reduce 2 tokens to name 95.1
   RANGE                              => reduce 2 tokens to name 95.1
   RETURN                             => reduce 2 tokens to name 95.1
   RIGHT_PAREN                        => reduce 2 tokens to name 95.1
   THEN                               => reduce 2 tokens to name 95.1
   WITH                               => reduce 2 tokens to name 95.1
   XOR                                => reduce 2 tokens to name 95.1
   AMPERSAND                          => reduce 2 tokens to name 95.1
   COLON_EQUAL                        => reduce 2 tokens to name 95.1
   COMMA                              => reduce 2 tokens to name 95.1
   DOT                                => reduce 2 tokens to name 95.1
   DOT_DOT                            => reduce 2 tokens to name 95.1
   EQUAL                              => reduce 2 tokens to name 95.1
   EQUAL_GREATER                      => reduce 2 tokens to name 95.1
   GREATER                            => reduce 2 tokens to name 95.1
   GREATER_EQUAL                      => reduce 2 tokens to name 95.1
   LESS                               => reduce 2 tokens to name 95.1
   LESS_EQUAL                         => reduce 2 tokens to name 95.1
   MINUS                              => reduce 2 tokens to name 95.1
   PLUS                               => reduce 2 tokens to name 95.1
   SEMICOLON                          => reduce 2 tokens to name 95.1
   SLASH                              => reduce 2 tokens to name 95.1
   SLASH_EQUAL                        => reduce 2 tokens to name 95.1
   STAR                               => reduce 2 tokens to name 95.1
   default                            => ERROR

   Minimal_Complete_Action => (name)

State 102:
    117.1:subprogram_body <= subprogram_specification IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to nonterminal_011_list_opt 134.0
   FUNCTION                           => shift and goto state 5
   PACKAGE                            => shift and goto state 55
   PROCEDURE                          => shift and goto state 56
   TYPE                               => shift and goto state 57
   IDENTIFIER                         => shift and goto state 58
   default                            => ERROR

   body_g                             goto state 59
   body_stub                          goto state 60
   declaration                        goto state 61
   declarative_part                   goto state 181
   full_type_declaration              goto state 63
   function_specification             goto state 21
   object_declaration                 goto state 64
   package_body                       goto state 65
   procedure_specification            goto state 29
   proper_body                        goto state 66
   subprogram_body                    goto state 67
   subprogram_body_stub               goto state 68
   subprogram_declaration             goto state 69
   subprogram_specification           goto state 70
   type_declaration                   goto state 71
   nonterminal_012                    goto state 72
   nonterminal_011_list_opt           goto state 73
   nonterminal_010_list               goto state 74

   Minimal_Complete_Action => (declarative_part)

State 103:
     58.0:aspect_specification <= WITH ^ association_list, IS

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 171
   default                            => ERROR

   association                        goto state 172
   association_list                   goto state 182
   expression                         goto state 174
   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   relation                           goto state 51
   selected_component                 goto state 30
   simple_expression                  goto state 52
   term                               goto state 53
   unary_adding_operator              goto state 54
   nonterminal_048                    goto state 178

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 104:
    119.0:subprogram_declaration <= subprogram_specification SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 2 tokens to subprogram_declaration 119.0
   CASE                               => reduce 2 tokens to subprogram_declaration 119.0
   DECLARE                            => reduce 2 tokens to subprogram_declaration 119.0
   END                                => reduce 2 tokens to subprogram_declaration 119.0
   EXIT                               => reduce 2 tokens to subprogram_declaration 119.0
   FOR                                => reduce 2 tokens to subprogram_declaration 119.0
   FUNCTION                           => reduce 2 tokens to subprogram_declaration 119.0
   IF                                 => reduce 2 tokens to subprogram_declaration 119.0
   LOOP                               => reduce 2 tokens to subprogram_declaration 119.0
   PACKAGE                            => reduce 2 tokens to subprogram_declaration 119.0
   PROCEDURE                          => reduce 2 tokens to subprogram_declaration 119.0
   RETURN                             => reduce 2 tokens to subprogram_declaration 119.0
   TYPE                               => reduce 2 tokens to subprogram_declaration 119.0
   IDENTIFIER                         => reduce 2 tokens to subprogram_declaration 119.0
   Wisi_EOI                           => reduce 2 tokens to subprogram_declaration 119.0
   default                            => ERROR

   Minimal_Complete_Action => (subprogram_declaration)

State 105:
    117.0:subprogram_body <= subprogram_specification aspect_specification ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   IS                                 => shift and goto state 183
   default                            => ERROR

   Minimal_Complete_Action => (IS)

State 106:
    132.1:nonterminal_008_list <= nonterminal_008_list nonterminal_009 ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 2 tokens to nonterminal_008_list 132.1
   CASE                               => reduce 2 tokens to nonterminal_008_list 132.1
   DECLARE                            => reduce 2 tokens to nonterminal_008_list 132.1
   EXIT                               => reduce 2 tokens to nonterminal_008_list 132.1
   FOR                                => reduce 2 tokens to nonterminal_008_list 132.1
   FUNCTION                           => reduce 2 tokens to nonterminal_008_list 132.1
   IF                                 => reduce 2 tokens to nonterminal_008_list 132.1
   LOOP                               => reduce 2 tokens to nonterminal_008_list 132.1
   PACKAGE                            => reduce 2 tokens to nonterminal_008_list 132.1
   PROCEDURE                          => reduce 2 tokens to nonterminal_008_list 132.1
   RETURN                             => reduce 2 tokens to nonterminal_008_list 132.1
   IDENTIFIER                         => reduce 2 tokens to nonterminal_008_list 132.1
   Wisi_EOI                           => reduce 2 tokens to nonterminal_008_list 132.1
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_008_list)

State 107:
    102.0:paren_expression <= LEFT_PAREN expression ^ RIGHT_PAREN, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   RIGHT_PAREN                        => shift and goto state 184
   default                            => ERROR

   Minimal_Complete_Action => (RIGHT_PAREN)

State 108:
     83.1:factor <= NOT primary ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 2 tokens to factor 83.1
   IS                                 => reduce 2 tokens to factor 83.1
   LOOP                               => reduce 2 tokens to factor 83.1
   OR                                 => reduce 2 tokens to factor 83.1
   RIGHT_PAREN                        => reduce 2 tokens to factor 83.1
   THEN                               => reduce 2 tokens to factor 83.1
   XOR                                => reduce 2 tokens to factor 83.1
   AMPERSAND                          => reduce 2 tokens to factor 83.1
   COLON_EQUAL                        => reduce 2 tokens to factor 83.1
   COMMA                              => reduce 2 tokens to factor 83.1
   DOT_DOT                            => reduce 2 tokens to factor 83.1
   EQUAL                              => reduce 2 tokens to factor 83.1
   GREATER                            => reduce 2 tokens to factor 83.1
   GREATER_EQUAL                      => reduce 2 tokens to factor 83.1
   LESS                               => reduce 2 tokens to factor 83.1
   LESS_EQUAL                         => reduce 2 tokens to factor 83.1
   MINUS                              => reduce 2 tokens to factor 83.1
   PLUS                               => reduce 2 tokens to factor 83.1
   SEMICOLON                          => reduce 2 tokens to factor 83.1
   SLASH                              => reduce 2 tokens to factor 83.1
   SLASH_EQUAL                        => reduce 2 tokens to factor 83.1
   STAR                               => reduce 2 tokens to factor 83.1
   default                            => ERROR

   Minimal_Complete_Action => (factor)

State 109:
     67.0:case_statement <= CASE expression IS ^ nonterminal_006_list END CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   WHEN                               => shift and goto state 185
   default                            => ERROR

   case_statement_alternative         goto state 186
   nonterminal_007                    goto state 187
   nonterminal_006_list               goto state 188

   Minimal_Complete_Action => (WHEN)

State 110:
     94.1:multiplying_operator <= SLASH ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to multiplying_operator 94.1
   NOT                                => reduce 1 tokens to multiplying_operator 94.1
   STRING_LITERAL                     => reduce 1 tokens to multiplying_operator 94.1
   NUMERIC_LITERAL                    => reduce 1 tokens to multiplying_operator 94.1
   IDENTIFIER                         => reduce 1 tokens to multiplying_operator 94.1
   default                            => ERROR

   Minimal_Complete_Action => (multiplying_operator)

State 111:
     94.0:multiplying_operator <= STAR ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to multiplying_operator 94.0
   NOT                                => reduce 1 tokens to multiplying_operator 94.0
   STRING_LITERAL                     => reduce 1 tokens to multiplying_operator 94.0
   NUMERIC_LITERAL                    => reduce 1 tokens to multiplying_operator 94.0
   IDENTIFIER                         => reduce 1 tokens to multiplying_operator 94.0
   default                            => ERROR

   Minimal_Complete_Action => (multiplying_operator)

State 112:
    160.0:nonterminal_039 <= multiplying_operator ^ factor, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   factor                             goto state 189
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   selected_component                 goto state 30

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 113:
    162.0:nonterminal_037_list <= nonterminal_039 ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to nonterminal_037_list 162.0
   IS                                 => reduce 1 tokens to nonterminal_037_list 162.0
   LOOP                               => reduce 1 tokens to nonterminal_037_list 162.0
   OR                                 => reduce 1 tokens to nonterminal_037_list 162.0
   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_037_list 162.0
   THEN                               => reduce 1 tokens to nonterminal_037_list 162.0
   XOR                                => reduce 1 tokens to nonterminal_037_list 162.0
   AMPERSAND                          => reduce 1 tokens to nonterminal_037_list 162.0
   COLON_EQUAL                        => reduce 1 tokens to nonterminal_037_list 162.0
   COMMA                              => reduce 1 tokens to nonterminal_037_list 162.0
   DOT_DOT                            => reduce 1 tokens to nonterminal_037_list 162.0
   EQUAL                              => reduce 1 tokens to nonterminal_037_list 162.0
   GREATER                            => reduce 1 tokens to nonterminal_037_list 162.0
   GREATER_EQUAL                      => reduce 1 tokens to nonterminal_037_list 162.0
   LESS                               => reduce 1 tokens to nonterminal_037_list 162.0
   LESS_EQUAL                         => reduce 1 tokens to nonterminal_037_list 162.0
   MINUS                              => reduce 1 tokens to nonterminal_037_list 162.0
   PLUS                               => reduce 1 tokens to nonterminal_037_list 162.0
   SEMICOLON                          => reduce 1 tokens to nonterminal_037_list 162.0
   SLASH                              => reduce 1 tokens to nonterminal_037_list 162.0
   SLASH_EQUAL                        => reduce 1 tokens to nonterminal_037_list 162.0
   STAR                               => reduce 1 tokens to nonterminal_037_list 162.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_037_list)

State 114:
    122.0:term <= factor nonterminal_038_list_opt ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 2 tokens to term 122.0
   IS                                 => reduce 2 tokens to term 122.0
   LOOP                               => reduce 2 tokens to term 122.0
   OR                                 => reduce 2 tokens to term 122.0
   RIGHT_PAREN                        => reduce 2 tokens to term 122.0
   THEN                               => reduce 2 tokens to term 122.0
   XOR                                => reduce 2 tokens to term 122.0
   AMPERSAND                          => reduce 2 tokens to term 122.0
   COLON_EQUAL                        => reduce 2 tokens to term 122.0
   COMMA                              => reduce 2 tokens to term 122.0
   DOT_DOT                            => reduce 2 tokens to term 122.0
   EQUAL                              => reduce 2 tokens to term 122.0
   GREATER                            => reduce 2 tokens to term 122.0
   GREATER_EQUAL                      => reduce 2 tokens to term 122.0
   LESS                               => reduce 2 tokens to term 122.0
   LESS_EQUAL                         => reduce 2 tokens to term 122.0
   MINUS                              => reduce 2 tokens to term 122.0
   PLUS                               => reduce 2 tokens to term 122.0
   SEMICOLON                          => reduce 2 tokens to term 122.0
   SLASH_EQUAL                        => reduce 2 tokens to term 122.0
   default                            => ERROR

   Minimal_Complete_Action => (term)

State 115:
    161.1:nonterminal_038_list_opt <= nonterminal_037_list ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL
    162.1:nonterminal_037_list <= nonterminal_037_list ^ nonterminal_039, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to nonterminal_038_list_opt 161.1
   IS                                 => reduce 1 tokens to nonterminal_038_list_opt 161.1
   LOOP                               => reduce 1 tokens to nonterminal_038_list_opt 161.1
   OR                                 => reduce 1 tokens to nonterminal_038_list_opt 161.1
   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_038_list_opt 161.1
   THEN                               => reduce 1 tokens to nonterminal_038_list_opt 161.1
   XOR                                => reduce 1 tokens to nonterminal_038_list_opt 161.1
   AMPERSAND                          => reduce 1 tokens to nonterminal_038_list_opt 161.1
   COLON_EQUAL                        => reduce 1 tokens to nonterminal_038_list_opt 161.1
   COMMA                              => reduce 1 tokens to nonterminal_038_list_opt 161.1
   DOT_DOT                            => reduce 1 tokens to nonterminal_038_list_opt 161.1
   EQUAL                              => reduce 1 tokens to nonterminal_038_list_opt 161.1
   GREATER                            => reduce 1 tokens to nonterminal_038_list_opt 161.1
   GREATER_EQUAL                      => reduce 1 tokens to nonterminal_038_list_opt 161.1
   LESS                               => reduce 1 tokens to nonterminal_038_list_opt 161.1
   LESS_EQUAL                         => reduce 1 tokens to nonterminal_038_list_opt 161.1
   MINUS                              => reduce 1 tokens to nonterminal_038_list_opt 161.1
   PLUS                               => reduce 1 tokens to nonterminal_038_list_opt 161.1
   SEMICOLON                          => reduce 1 tokens to nonterminal_038_list_opt 161.1
   SLASH                              => shift and goto state 110
   SLASH_EQUAL                        => reduce 1 tokens to nonterminal_038_list_opt 161.1
   STAR                               => shift and goto state 111
   default                            => ERROR

   multiplying_operator               goto state 112
   nonterminal_039                    goto state 190

   Minimal_Complete_Action => (nonterminal_038_list_opt)

State 116:
    139.0:nonterminal_017 <= AND ^ relation, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   relation                           goto state 191
   selected_component                 goto state 30
   simple_expression                  goto state 52
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 117:
    141.0:nonterminal_019 <= OR ^ relation, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   relation                           goto state 192
   selected_component                 goto state 30
   simple_expression                  goto state 52
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 118:
    143.0:nonterminal_021 <= XOR ^ relation, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   relation                           goto state 193
   selected_component                 goto state 30
   simple_expression                  goto state 52
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 119:
    140.0:nonterminal_016_list <= nonterminal_017 ^, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   AND                                => reduce 1 tokens to nonterminal_016_list 140.0
   IS                                 => reduce 1 tokens to nonterminal_016_list 140.0
   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_016_list 140.0
   THEN                               => reduce 1 tokens to nonterminal_016_list 140.0
   COMMA                              => reduce 1 tokens to nonterminal_016_list 140.0
   SEMICOLON                          => reduce 1 tokens to nonterminal_016_list 140.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_016_list)

State 120:
     80.1:expression <= relation nonterminal_016_list ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    140.1:nonterminal_016_list <= nonterminal_016_list ^ nonterminal_017, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   AND                                => shift and goto state 116
   IS                                 => reduce 2 tokens to expression 80.1
   RIGHT_PAREN                        => reduce 2 tokens to expression 80.1
   THEN                               => reduce 2 tokens to expression 80.1
   COMMA                              => reduce 2 tokens to expression 80.1
   SEMICOLON                          => reduce 2 tokens to expression 80.1
   default                            => ERROR

   nonterminal_017                    goto state 194

   Minimal_Complete_Action => (expression)

State 121:
    142.0:nonterminal_018_list <= nonterminal_019 ^, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   IS                                 => reduce 1 tokens to nonterminal_018_list 142.0
   OR                                 => reduce 1 tokens to nonterminal_018_list 142.0
   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_018_list 142.0
   THEN                               => reduce 1 tokens to nonterminal_018_list 142.0
   COMMA                              => reduce 1 tokens to nonterminal_018_list 142.0
   SEMICOLON                          => reduce 1 tokens to nonterminal_018_list 142.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_018_list)

State 122:
     80.2:expression <= relation nonterminal_018_list ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    142.1:nonterminal_018_list <= nonterminal_018_list ^ nonterminal_019, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   IS                                 => reduce 2 tokens to expression 80.2
   OR                                 => shift and goto state 117
   RIGHT_PAREN                        => reduce 2 tokens to expression 80.2
   THEN                               => reduce 2 tokens to expression 80.2
   COMMA                              => reduce 2 tokens to expression 80.2
   SEMICOLON                          => reduce 2 tokens to expression 80.2
   default                            => ERROR

   nonterminal_019                    goto state 195

   Minimal_Complete_Action => (expression)

State 123:
    144.0:nonterminal_020_list <= nonterminal_021 ^, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   IS                                 => reduce 1 tokens to nonterminal_020_list 144.0
   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_020_list 144.0
   THEN                               => reduce 1 tokens to nonterminal_020_list 144.0
   XOR                                => reduce 1 tokens to nonterminal_020_list 144.0
   COMMA                              => reduce 1 tokens to nonterminal_020_list 144.0
   SEMICOLON                          => reduce 1 tokens to nonterminal_020_list 144.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_020_list)

State 124:
     80.3:expression <= relation nonterminal_020_list ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    144.1:nonterminal_020_list <= nonterminal_020_list ^ nonterminal_021, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   IS                                 => reduce 2 tokens to expression 80.3
   RIGHT_PAREN                        => reduce 2 tokens to expression 80.3
   THEN                               => reduce 2 tokens to expression 80.3
   XOR                                => shift and goto state 118
   COMMA                              => reduce 2 tokens to expression 80.3
   SEMICOLON                          => reduce 2 tokens to expression 80.3
   default                            => ERROR

   nonterminal_021                    goto state 196

   Minimal_Complete_Action => (expression)

State 125:
    110.0:relational_operator <= EQUAL ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 110.0
   NOT                                => reduce 1 tokens to relational_operator 110.0
   MINUS                              => reduce 1 tokens to relational_operator 110.0
   PLUS                               => reduce 1 tokens to relational_operator 110.0
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 110.0
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 110.0
   IDENTIFIER                         => reduce 1 tokens to relational_operator 110.0
   default                            => ERROR

   Minimal_Complete_Action => (relational_operator)

State 126:
    110.4:relational_operator <= GREATER ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 110.4
   NOT                                => reduce 1 tokens to relational_operator 110.4
   MINUS                              => reduce 1 tokens to relational_operator 110.4
   PLUS                               => reduce 1 tokens to relational_operator 110.4
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 110.4
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 110.4
   IDENTIFIER                         => reduce 1 tokens to relational_operator 110.4
   default                            => ERROR

   Minimal_Complete_Action => (relational_operator)

State 127:
    110.5:relational_operator <= GREATER_EQUAL ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 110.5
   NOT                                => reduce 1 tokens to relational_operator 110.5
   MINUS                              => reduce 1 tokens to relational_operator 110.5
   PLUS                               => reduce 1 tokens to relational_operator 110.5
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 110.5
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 110.5
   IDENTIFIER                         => reduce 1 tokens to relational_operator 110.5
   default                            => ERROR

   Minimal_Complete_Action => (relational_operator)

State 128:
    110.2:relational_operator <= LESS ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 110.2
   NOT                                => reduce 1 tokens to relational_operator 110.2
   MINUS                              => reduce 1 tokens to relational_operator 110.2
   PLUS                               => reduce 1 tokens to relational_operator 110.2
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 110.2
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 110.2
   IDENTIFIER                         => reduce 1 tokens to relational_operator 110.2
   default                            => ERROR

   Minimal_Complete_Action => (relational_operator)

State 129:
    110.3:relational_operator <= LESS_EQUAL ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 110.3
   NOT                                => reduce 1 tokens to relational_operator 110.3
   MINUS                              => reduce 1 tokens to relational_operator 110.3
   PLUS                               => reduce 1 tokens to relational_operator 110.3
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 110.3
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 110.3
   IDENTIFIER                         => reduce 1 tokens to relational_operator 110.3
   default                            => ERROR

   Minimal_Complete_Action => (relational_operator)

State 130:
    110.1:relational_operator <= SLASH_EQUAL ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 110.1
   NOT                                => reduce 1 tokens to relational_operator 110.1
   MINUS                              => reduce 1 tokens to relational_operator 110.1
   PLUS                               => reduce 1 tokens to relational_operator 110.1
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 110.1
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 110.1
   IDENTIFIER                         => reduce 1 tokens to relational_operator 110.1
   default                            => ERROR

   Minimal_Complete_Action => (relational_operator)

State 131:
    163.0:nonterminal_040 <= relational_operator ^ simple_expression, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   selected_component                 goto state 30
   simple_expression                  goto state 197
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 132:
    109.0:relation <= simple_expression nonterminal_040 ^, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   AND                                => reduce 2 tokens to relation 109.0
   IS                                 => reduce 2 tokens to relation 109.0
   OR                                 => reduce 2 tokens to relation 109.0
   RIGHT_PAREN                        => reduce 2 tokens to relation 109.0
   THEN                               => reduce 2 tokens to relation 109.0
   XOR                                => reduce 2 tokens to relation 109.0
   COMMA                              => reduce 2 tokens to relation 109.0
   SEMICOLON                          => reduce 2 tokens to relation 109.0
   default                            => ERROR

   Minimal_Complete_Action => (relation)

State 133:
     62.2:binary_adding_operator <= AMPERSAND ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to binary_adding_operator 62.2
   NOT                                => reduce 1 tokens to binary_adding_operator 62.2
   STRING_LITERAL                     => reduce 1 tokens to binary_adding_operator 62.2
   NUMERIC_LITERAL                    => reduce 1 tokens to binary_adding_operator 62.2
   IDENTIFIER                         => reduce 1 tokens to binary_adding_operator 62.2
   default                            => ERROR

   Minimal_Complete_Action => (binary_adding_operator)

State 134:
     62.1:binary_adding_operator <= MINUS ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to binary_adding_operator 62.1
   NOT                                => reduce 1 tokens to binary_adding_operator 62.1
   STRING_LITERAL                     => reduce 1 tokens to binary_adding_operator 62.1
   NUMERIC_LITERAL                    => reduce 1 tokens to binary_adding_operator 62.1
   IDENTIFIER                         => reduce 1 tokens to binary_adding_operator 62.1
   default                            => ERROR

   Minimal_Complete_Action => (binary_adding_operator)

State 135:
     62.0:binary_adding_operator <= PLUS ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to binary_adding_operator 62.0
   NOT                                => reduce 1 tokens to binary_adding_operator 62.0
   STRING_LITERAL                     => reduce 1 tokens to binary_adding_operator 62.0
   NUMERIC_LITERAL                    => reduce 1 tokens to binary_adding_operator 62.0
   IDENTIFIER                         => reduce 1 tokens to binary_adding_operator 62.0
   default                            => ERROR

   Minimal_Complete_Action => (binary_adding_operator)

State 136:
    157.0:nonterminal_036 <= binary_adding_operator ^ term, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   selected_component                 goto state 30
   term                               goto state 198

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 137:
    159.0:nonterminal_034_list <= nonterminal_036 ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 1 tokens to nonterminal_034_list 159.0
   IS                                 => reduce 1 tokens to nonterminal_034_list 159.0
   LOOP                               => reduce 1 tokens to nonterminal_034_list 159.0
   OR                                 => reduce 1 tokens to nonterminal_034_list 159.0
   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_034_list 159.0
   THEN                               => reduce 1 tokens to nonterminal_034_list 159.0
   XOR                                => reduce 1 tokens to nonterminal_034_list 159.0
   AMPERSAND                          => reduce 1 tokens to nonterminal_034_list 159.0
   COLON_EQUAL                        => reduce 1 tokens to nonterminal_034_list 159.0
   COMMA                              => reduce 1 tokens to nonterminal_034_list 159.0
   DOT_DOT                            => reduce 1 tokens to nonterminal_034_list 159.0
   EQUAL                              => reduce 1 tokens to nonterminal_034_list 159.0
   GREATER                            => reduce 1 tokens to nonterminal_034_list 159.0
   GREATER_EQUAL                      => reduce 1 tokens to nonterminal_034_list 159.0
   LESS                               => reduce 1 tokens to nonterminal_034_list 159.0
   LESS_EQUAL                         => reduce 1 tokens to nonterminal_034_list 159.0
   MINUS                              => reduce 1 tokens to nonterminal_034_list 159.0
   PLUS                               => reduce 1 tokens to nonterminal_034_list 159.0
   SEMICOLON                          => reduce 1 tokens to nonterminal_034_list 159.0
   SLASH_EQUAL                        => reduce 1 tokens to nonterminal_034_list 159.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_034_list)

State 138:
    113.1:simple_expression <= term nonterminal_035_list_opt ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 2 tokens to simple_expression 113.1
   IS                                 => reduce 2 tokens to simple_expression 113.1
   LOOP                               => reduce 2 tokens to simple_expression 113.1
   OR                                 => reduce 2 tokens to simple_expression 113.1
   RIGHT_PAREN                        => reduce 2 tokens to simple_expression 113.1
   THEN                               => reduce 2 tokens to simple_expression 113.1
   XOR                                => reduce 2 tokens to simple_expression 113.1
   COLON_EQUAL                        => reduce 2 tokens to simple_expression 113.1
   COMMA                              => reduce 2 tokens to simple_expression 113.1
   DOT_DOT                            => reduce 2 tokens to simple_expression 113.1
   EQUAL                              => reduce 2 tokens to simple_expression 113.1
   GREATER                            => reduce 2 tokens to simple_expression 113.1
   GREATER_EQUAL                      => reduce 2 tokens to simple_expression 113.1
   LESS                               => reduce 2 tokens to simple_expression 113.1
   LESS_EQUAL                         => reduce 2 tokens to simple_expression 113.1
   SEMICOLON                          => reduce 2 tokens to simple_expression 113.1
   SLASH_EQUAL                        => reduce 2 tokens to simple_expression 113.1
   default                            => ERROR

   Minimal_Complete_Action => (simple_expression)

State 139:
    158.1:nonterminal_035_list_opt <= nonterminal_034_list ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL
    159.1:nonterminal_034_list <= nonterminal_034_list ^ nonterminal_036, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 1 tokens to nonterminal_035_list_opt 158.1
   IS                                 => reduce 1 tokens to nonterminal_035_list_opt 158.1
   LOOP                               => reduce 1 tokens to nonterminal_035_list_opt 158.1
   OR                                 => reduce 1 tokens to nonterminal_035_list_opt 158.1
   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_035_list_opt 158.1
   THEN                               => reduce 1 tokens to nonterminal_035_list_opt 158.1
   XOR                                => reduce 1 tokens to nonterminal_035_list_opt 158.1
   AMPERSAND                          => shift and goto state 133
   COLON_EQUAL                        => reduce 1 tokens to nonterminal_035_list_opt 158.1
   COMMA                              => reduce 1 tokens to nonterminal_035_list_opt 158.1
   DOT_DOT                            => reduce 1 tokens to nonterminal_035_list_opt 158.1
   EQUAL                              => reduce 1 tokens to nonterminal_035_list_opt 158.1
   GREATER                            => reduce 1 tokens to nonterminal_035_list_opt 158.1
   GREATER_EQUAL                      => reduce 1 tokens to nonterminal_035_list_opt 158.1
   LESS                               => reduce 1 tokens to nonterminal_035_list_opt 158.1
   LESS_EQUAL                         => reduce 1 tokens to nonterminal_035_list_opt 158.1
   MINUS                              => shift and goto state 134
   PLUS                               => shift and goto state 135
   SEMICOLON                          => reduce 1 tokens to nonterminal_035_list_opt 158.1
   SLASH_EQUAL                        => reduce 1 tokens to nonterminal_035_list_opt 158.1
   default                            => ERROR

   binary_adding_operator             goto state 136
   nonterminal_036                    goto state 199

   Minimal_Complete_Action => (nonterminal_035_list_opt)

State 140:
    113.0:simple_expression <= unary_adding_operator term ^ nonterminal_035_list_opt, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 0 tokens to nonterminal_035_list_opt 158.0
   IS                                 => reduce 0 tokens to nonterminal_035_list_opt 158.0
   LOOP                               => reduce 0 tokens to nonterminal_035_list_opt 158.0
   OR                                 => reduce 0 tokens to nonterminal_035_list_opt 158.0
   RIGHT_PAREN                        => reduce 0 tokens to nonterminal_035_list_opt 158.0
   THEN                               => reduce 0 tokens to nonterminal_035_list_opt 158.0
   XOR                                => reduce 0 tokens to nonterminal_035_list_opt 158.0
   AMPERSAND                          => shift and goto state 133
   COLON_EQUAL                        => reduce 0 tokens to nonterminal_035_list_opt 158.0
   COMMA                              => reduce 0 tokens to nonterminal_035_list_opt 158.0
   DOT_DOT                            => reduce 0 tokens to nonterminal_035_list_opt 158.0
   EQUAL                              => reduce 0 tokens to nonterminal_035_list_opt 158.0
   GREATER                            => reduce 0 tokens to nonterminal_035_list_opt 158.0
   GREATER_EQUAL                      => reduce 0 tokens to nonterminal_035_list_opt 158.0
   LESS                               => reduce 0 tokens to nonterminal_035_list_opt 158.0
   LESS_EQUAL                         => reduce 0 tokens to nonterminal_035_list_opt 158.0
   MINUS                              => shift and goto state 134
   PLUS                               => shift and goto state 135
   SEMICOLON                          => reduce 0 tokens to nonterminal_035_list_opt 158.0
   SLASH_EQUAL                        => reduce 0 tokens to nonterminal_035_list_opt 158.0
   default                            => ERROR

   binary_adding_operator             goto state 136
   nonterminal_036                    goto state 137
   nonterminal_035_list_opt           goto state 200
   nonterminal_034_list               goto state 139

   Minimal_Complete_Action => (nonterminal_035_list_opt)

State 141:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, IS/LEFT_PAREN/WITH/DOT/SEMICOLON
     95.1:name <= name ^ actual_parameter_part, IS/LEFT_PAREN/WITH/DOT/SEMICOLON
    105.0:procedure_specification <= PROCEDURE name ^ parameter_profile, IS/WITH/SEMICOLON
    111.0:selected_component <= name ^ DOT IDENTIFIER, IS/LEFT_PAREN/WITH/DOT/SEMICOLON

   IS                                 => reduce 0 tokens to parameter_profile 100.1
   LEFT_PAREN                         => shift and goto state 151
   WITH                               => reduce 0 tokens to parameter_profile 100.1
   DOT                                => shift and goto state 99
   SEMICOLON                          => reduce 0 tokens to parameter_profile 100.1
   default                            => ERROR

   actual_parameter_part              goto state 101
   formal_part                        goto state 161
   parameter_profile                  goto state 162

   Minimal_Complete_Action => (parameter_profile)

State 142:
     85.0:full_type_declaration <= TYPE IDENTIFIER ^ IS type_definition SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   IS                                 => shift and goto state 201
   default                            => ERROR

   Minimal_Complete_Action => (IS)

State 143:
     97.0:object_declaration <= IDENTIFIER COLON ^ subtype_indication nonterminal_043 SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
     97.1:object_declaration <= IDENTIFIER COLON ^ subtype_indication SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   name                               goto state 202
   selected_component                 goto state 30
   subtype_indication                 goto state 203

   Minimal_Complete_Action => (IDENTIFIER)

State 144:
    117.1:subprogram_body <= subprogram_specification IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    118.0:subprogram_body_stub <= subprogram_specification IS ^ SEPARATE SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 0 tokens to nonterminal_011_list_opt 134.0
   FUNCTION                           => shift and goto state 5
   PACKAGE                            => shift and goto state 55
   PROCEDURE                          => shift and goto state 56
   SEPARATE                           => shift and goto state 204
   TYPE                               => shift and goto state 57
   IDENTIFIER                         => shift and goto state 58
   default                            => ERROR

   body_g                             goto state 59
   body_stub                          goto state 60
   declaration                        goto state 61
   declarative_part                   goto state 181
   full_type_declaration              goto state 63
   function_specification             goto state 21
   object_declaration                 goto state 64
   package_body                       goto state 65
   procedure_specification            goto state 29
   proper_body                        goto state 66
   subprogram_body                    goto state 67
   subprogram_body_stub               goto state 68
   subprogram_declaration             goto state 69
   subprogram_specification           goto state 70
   type_declaration                   goto state 71
   nonterminal_012                    goto state 72
   nonterminal_011_list_opt           goto state 73
   nonterminal_010_list               goto state 74

   Minimal_Complete_Action => (SEPARATE)

State 145:
    135.1:nonterminal_010_list <= nonterminal_010_list nonterminal_012 ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 2 tokens to nonterminal_010_list 135.1
   END                                => reduce 2 tokens to nonterminal_010_list 135.1
   FUNCTION                           => reduce 2 tokens to nonterminal_010_list 135.1
   PACKAGE                            => reduce 2 tokens to nonterminal_010_list 135.1
   PROCEDURE                          => reduce 2 tokens to nonterminal_010_list 135.1
   TYPE                               => reduce 2 tokens to nonterminal_010_list 135.1
   IDENTIFIER                         => reduce 2 tokens to nonterminal_010_list 135.1
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_010_list)

State 146:
    169.0:nonterminal_046 <= WHEN expression ^, SEMICOLON

   SEMICOLON                          => reduce 2 tokens to nonterminal_046 169.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_046)

State 147:
     79.2:exit_statement <= EXIT IDENTIFIER SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 3 tokens to exit_statement 79.2
   CASE                               => reduce 3 tokens to exit_statement 79.2
   DECLARE                            => reduce 3 tokens to exit_statement 79.2
   ELSE                               => reduce 3 tokens to exit_statement 79.2
   ELSIF                              => reduce 3 tokens to exit_statement 79.2
   END                                => reduce 3 tokens to exit_statement 79.2
   EXIT                               => reduce 3 tokens to exit_statement 79.2
   EXCEPTION                          => reduce 3 tokens to exit_statement 79.2
   FOR                                => reduce 3 tokens to exit_statement 79.2
   FUNCTION                           => reduce 3 tokens to exit_statement 79.2
   IF                                 => reduce 3 tokens to exit_statement 79.2
   LOOP                               => reduce 3 tokens to exit_statement 79.2
   PACKAGE                            => reduce 3 tokens to exit_statement 79.2
   PROCEDURE                          => reduce 3 tokens to exit_statement 79.2
   RETURN                             => reduce 3 tokens to exit_statement 79.2
   WHEN                               => reduce 3 tokens to exit_statement 79.2
   IDENTIFIER                         => reduce 3 tokens to exit_statement 79.2
   Wisi_EOI                           => reduce 3 tokens to exit_statement 79.2
   default                            => ERROR

   Minimal_Complete_Action => (exit_statement)

State 148:
     79.0:exit_statement <= EXIT IDENTIFIER nonterminal_046 ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 205
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 149:
     79.1:exit_statement <= EXIT nonterminal_046 SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 3 tokens to exit_statement 79.1
   CASE                               => reduce 3 tokens to exit_statement 79.1
   DECLARE                            => reduce 3 tokens to exit_statement 79.1
   ELSE                               => reduce 3 tokens to exit_statement 79.1
   ELSIF                              => reduce 3 tokens to exit_statement 79.1
   END                                => reduce 3 tokens to exit_statement 79.1
   EXIT                               => reduce 3 tokens to exit_statement 79.1
   EXCEPTION                          => reduce 3 tokens to exit_statement 79.1
   FOR                                => reduce 3 tokens to exit_statement 79.1
   FUNCTION                           => reduce 3 tokens to exit_statement 79.1
   IF                                 => reduce 3 tokens to exit_statement 79.1
   LOOP                               => reduce 3 tokens to exit_statement 79.1
   PACKAGE                            => reduce 3 tokens to exit_statement 79.1
   PROCEDURE                          => reduce 3 tokens to exit_statement 79.1
   RETURN                             => reduce 3 tokens to exit_statement 79.1
   WHEN                               => reduce 3 tokens to exit_statement 79.1
   IDENTIFIER                         => reduce 3 tokens to exit_statement 79.1
   Wisi_EOI                           => reduce 3 tokens to exit_statement 79.1
   default                            => ERROR

   Minimal_Complete_Action => (exit_statement)

State 150:
     92.0:iteration_scheme <= FOR IDENTIFIER IN ^ discrete_subtype_definition, LOOP

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   discrete_subtype_definition        goto state 206
   factor                             goto state 47
   name                               goto state 207
   paren_expression                   goto state 49
   primary                            goto state 50
   range_g                            goto state 208
   selected_component                 goto state 30
   simple_expression                  goto state 209
   subtype_indication                 goto state 210
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (IDENTIFIER)

State 151:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN, IS/LEFT_PAREN/RETURN/WITH/DOT/SEMICOLON
     84.0:formal_part <= LEFT_PAREN ^ parameter_specification nonterminal_023_list_opt RIGHT_PAREN, IS/RETURN/WITH/SEMICOLON
     95.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN, IS/LEFT_PAREN/RETURN/WITH/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 211
   default                            => ERROR

   association                        goto state 172
   association_list                   goto state 173
   expression                         goto state 174
   factor                             goto state 47
   name                               goto state 48
   parameter_specification            goto state 212
   paren_expression                   goto state 49
   primary                            goto state 50
   range_g                            goto state 175
   range_list                         goto state 176
   relation                           goto state 51
   selected_component                 goto state 30
   simple_expression                  goto state 177
   term                               goto state 53
   unary_adding_operator              goto state 54
   nonterminal_048                    goto state 178

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 152:
     99.1:parameter_and_result_profile <= RETURN ^ IDENTIFIER, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 213
   default                            => ERROR

   Minimal_Complete_Action => (IDENTIFIER)

State 153:
     99.0:parameter_and_result_profile <= formal_part ^ RETURN IDENTIFIER, IS/WITH/SEMICOLON

   RETURN                             => shift and goto state 214
   default                            => ERROR

   Minimal_Complete_Action => (RETURN)

State 154:
     86.0:function_specification <= FUNCTION name parameter_and_result_profile ^, IS/WITH/SEMICOLON

   IS                                 => reduce 3 tokens to function_specification 86.0
   WITH                               => reduce 3 tokens to function_specification 86.0
   SEMICOLON                          => reduce 3 tokens to function_specification 86.0
   default                            => ERROR

   Minimal_Complete_Action => (function_specification)

State 155:
     90.0:if_statement <= IF expression THEN ^ sequence_of_statements nonterminal_029_list_opt nonterminal_044 END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.1:if_statement <= IF expression THEN ^ sequence_of_statements nonterminal_029_list_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   ELSE                               => reduce 0 tokens to nonterminal_032_list_opt 155.0
   ELSIF                              => reduce 0 tokens to nonterminal_032_list_opt 155.0
   END                                => reduce 0 tokens to nonterminal_032_list_opt 155.0
   EXIT                               => shift and goto state 3
   FOR                                => shift and goto state 4
   IF                                 => shift and goto state 6
   LOOP                               => shift and goto state 7
   RETURN                             => shift and goto state 10
   IDENTIFIER                         => shift and goto state 11
   default                            => ERROR

   assignment_statement               goto state 12
   block_label_opt                    goto state 13
   block_statement                    goto state 14
   case_statement                     goto state 15
   compound_statement                 goto state 18
   exit_statement                     goto state 19
   extended_return_statement          goto state 20
   if_statement                       goto state 23
   iteration_scheme                   goto state 24
   loop_statement                     goto state 25
   name                               goto state 26
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements             goto state 215
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 83
   nonterminal_033                    goto state 84
   nonterminal_032_list_opt           goto state 85
   nonterminal_031_list               goto state 86

   Minimal_Complete_Action => (sequence_of_statements)

State 156:
     93.1:loop_statement <= LOOP sequence_of_statements END ^ LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LOOP                               => shift and goto state 216
   default                            => ERROR

   Minimal_Complete_Action => (LOOP)

State 157:
    156.1:nonterminal_031_list <= nonterminal_031_list nonterminal_033 ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 2 tokens to nonterminal_031_list 156.1
   CASE                               => reduce 2 tokens to nonterminal_031_list 156.1
   DECLARE                            => reduce 2 tokens to nonterminal_031_list 156.1
   ELSE                               => reduce 2 tokens to nonterminal_031_list 156.1
   ELSIF                              => reduce 2 tokens to nonterminal_031_list 156.1
   END                                => reduce 2 tokens to nonterminal_031_list 156.1
   EXIT                               => reduce 2 tokens to nonterminal_031_list 156.1
   EXCEPTION                          => reduce 2 tokens to nonterminal_031_list 156.1
   FOR                                => reduce 2 tokens to nonterminal_031_list 156.1
   IF                                 => reduce 2 tokens to nonterminal_031_list 156.1
   LOOP                               => reduce 2 tokens to nonterminal_031_list 156.1
   RETURN                             => reduce 2 tokens to nonterminal_031_list 156.1
   WHEN                               => reduce 2 tokens to nonterminal_031_list 156.1
   IDENTIFIER                         => reduce 2 tokens to nonterminal_031_list 156.1
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_031_list)

State 158:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, IS/LEFT_PAREN/WITH/DOT
     95.1:name <= name ^ actual_parameter_part, IS/LEFT_PAREN/WITH/DOT
     98.0:package_body <= PACKAGE BODY name ^ aspect_specification IS declarative_part nonterminal_042 END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.1:package_body <= PACKAGE BODY name ^ IS declarative_part nonterminal_042 END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.2:package_body <= PACKAGE BODY name ^ aspect_specification IS declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.3:package_body <= PACKAGE BODY name ^ IS declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
    111.0:selected_component <= name ^ DOT IDENTIFIER, IS/LEFT_PAREN/WITH/DOT

   IS                                 => shift and goto state 217
   LEFT_PAREN                         => shift and goto state 97
   WITH                               => shift and goto state 103
   DOT                                => shift and goto state 99
   default                            => ERROR

   actual_parameter_part              goto state 101
   aspect_specification               goto state 218

   Minimal_Complete_Action => (IS)

State 159:
     87.0:generic_instantiation <= PACKAGE name IS ^ NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   NEW                                => shift and goto state 219
   default                            => ERROR

   Minimal_Complete_Action => (NEW)

State 160:
     87.1:generic_instantiation <= PROCEDURE name IS ^ NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   NEW                                => shift and goto state 220
   default                            => ERROR

   Minimal_Complete_Action => (NEW)

State 161:
    100.0:parameter_profile <= formal_part ^, IS/WITH/SEMICOLON

   IS                                 => reduce 1 tokens to parameter_profile 100.0
   WITH                               => reduce 1 tokens to parameter_profile 100.0
   SEMICOLON                          => reduce 1 tokens to parameter_profile 100.0
   default                            => ERROR

   Minimal_Complete_Action => (parameter_profile)

State 162:
    105.0:procedure_specification <= PROCEDURE name parameter_profile ^, IS/WITH/SEMICOLON

   IS                                 => reduce 3 tokens to procedure_specification 105.0
   WITH                               => reduce 3 tokens to procedure_specification 105.0
   SEMICOLON                          => reduce 3 tokens to procedure_specification 105.0
   default                            => ERROR

   Minimal_Complete_Action => (procedure_specification)

State 163:
     81.0:extended_return_object_declaration <= IDENTIFIER COLON ^ subtype_indication, SEMICOLON

   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   name                               goto state 202
   selected_component                 goto state 30
   subtype_indication                 goto state 221

   Minimal_Complete_Action => (IDENTIFIER)

State 164:
    114.0:simple_return_statement <= RETURN expression SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 3 tokens to simple_return_statement 114.0
   CASE                               => reduce 3 tokens to simple_return_statement 114.0
   DECLARE                            => reduce 3 tokens to simple_return_statement 114.0
   ELSE                               => reduce 3 tokens to simple_return_statement 114.0
   ELSIF                              => reduce 3 tokens to simple_return_statement 114.0
   END                                => reduce 3 tokens to simple_return_statement 114.0
   EXIT                               => reduce 3 tokens to simple_return_statement 114.0
   EXCEPTION                          => reduce 3 tokens to simple_return_statement 114.0
   FOR                                => reduce 3 tokens to simple_return_statement 114.0
   FUNCTION                           => reduce 3 tokens to simple_return_statement 114.0
   IF                                 => reduce 3 tokens to simple_return_statement 114.0
   LOOP                               => reduce 3 tokens to simple_return_statement 114.0
   PACKAGE                            => reduce 3 tokens to simple_return_statement 114.0
   PROCEDURE                          => reduce 3 tokens to simple_return_statement 114.0
   RETURN                             => reduce 3 tokens to simple_return_statement 114.0
   WHEN                               => reduce 3 tokens to simple_return_statement 114.0
   IDENTIFIER                         => reduce 3 tokens to simple_return_statement 114.0
   Wisi_EOI                           => reduce 3 tokens to simple_return_statement 114.0
   default                            => ERROR

   Minimal_Complete_Action => (simple_return_statement)

State 165:
     82.0:extended_return_statement <= RETURN extended_return_object_declaration SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 3 tokens to extended_return_statement 82.0
   CASE                               => reduce 3 tokens to extended_return_statement 82.0
   DECLARE                            => reduce 3 tokens to extended_return_statement 82.0
   ELSE                               => reduce 3 tokens to extended_return_statement 82.0
   ELSIF                              => reduce 3 tokens to extended_return_statement 82.0
   END                                => reduce 3 tokens to extended_return_statement 82.0
   EXIT                               => reduce 3 tokens to extended_return_statement 82.0
   EXCEPTION                          => reduce 3 tokens to extended_return_statement 82.0
   FOR                                => reduce 3 tokens to extended_return_statement 82.0
   FUNCTION                           => reduce 3 tokens to extended_return_statement 82.0
   IF                                 => reduce 3 tokens to extended_return_statement 82.0
   LOOP                               => reduce 3 tokens to extended_return_statement 82.0
   PACKAGE                            => reduce 3 tokens to extended_return_statement 82.0
   PROCEDURE                          => reduce 3 tokens to extended_return_statement 82.0
   RETURN                             => reduce 3 tokens to extended_return_statement 82.0
   WHEN                               => reduce 3 tokens to extended_return_statement 82.0
   IDENTIFIER                         => reduce 3 tokens to extended_return_statement 82.0
   Wisi_EOI                           => reduce 3 tokens to extended_return_statement 82.0
   default                            => ERROR

   Minimal_Complete_Action => (extended_return_statement)

State 166:
    168.0:nonterminal_045 <= EXCEPTION ^ nonterminal_026_list_opt, END

   END                                => reduce 0 tokens to nonterminal_026_list_opt 149.0
   WHEN                               => shift and goto state 222
   default                            => ERROR

   exception_handler                  goto state 223
   nonterminal_027                    goto state 224
   nonterminal_026_list_opt           goto state 225
   nonterminal_025_list               goto state 226

   Minimal_Complete_Action => (nonterminal_026_list_opt)

State 167:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements ^ END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 227
   default                            => ERROR

   Minimal_Complete_Action => (END)

State 168:
     88.0:handled_sequence_of_statements <= sequence_of_statements ^ nonterminal_045, END
     88.1:handled_sequence_of_statements <= sequence_of_statements ^, END

   END                                => reduce 1 tokens to handled_sequence_of_statements 88.1
   EXCEPTION                          => shift and goto state 166
   default                            => ERROR

   nonterminal_045                    goto state 228

   Minimal_Complete_Action => (handled_sequence_of_statements)

State 169:
     64.0:block_statement <= block_label_opt nonterminal_047 BEGIN ^ handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to nonterminal_032_list_opt 155.0
   EXIT                               => shift and goto state 3
   EXCEPTION                          => reduce 0 tokens to nonterminal_032_list_opt 155.0
   FOR                                => shift and goto state 4
   IF                                 => shift and goto state 6
   LOOP                               => shift and goto state 7
   RETURN                             => shift and goto state 10
   IDENTIFIER                         => shift and goto state 11
   default                            => ERROR

   assignment_statement               goto state 12
   block_label_opt                    goto state 13
   block_statement                    goto state 14
   case_statement                     goto state 15
   compound_statement                 goto state 18
   exit_statement                     goto state 19
   extended_return_statement          goto state 20
   handled_sequence_of_statements     goto state 229
   if_statement                       goto state 23
   iteration_scheme                   goto state 24
   loop_statement                     goto state 25
   name                               goto state 26
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements             goto state 168
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 83
   nonterminal_033                    goto state 84
   nonterminal_032_list_opt           goto state 85
   nonterminal_031_list               goto state 86

   Minimal_Complete_Action => (handled_sequence_of_statements)

State 170:
     93.0:loop_statement <= iteration_scheme LOOP sequence_of_statements ^ END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 230
   default                            => ERROR

   Minimal_Complete_Action => (END)

State 171:
     95.2:name <= IDENTIFIER ^, AND/IS/LEFT_PAREN/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    171.0:nonterminal_048 <= IDENTIFIER ^ EQUAL_GREATER, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   AND                                => reduce 1 tokens to name 95.2
   IS                                 => reduce 1 tokens to name 95.2
   LEFT_PAREN                         => reduce 1 tokens to name 95.2
   OR                                 => reduce 1 tokens to name 95.2
   RANGE                              => reduce 1 tokens to name 95.2
   RIGHT_PAREN                        => reduce 1 tokens to name 95.2
   XOR                                => reduce 1 tokens to name 95.2
   AMPERSAND                          => reduce 1 tokens to name 95.2
   COMMA                              => reduce 1 tokens to name 95.2
   DOT                                => reduce 1 tokens to name 95.2
   DOT_DOT                            => reduce 1 tokens to name 95.2
   EQUAL                              => reduce 1 tokens to name 95.2
   EQUAL_GREATER                      => shift and goto state 231
   GREATER                            => reduce 1 tokens to name 95.2
   GREATER_EQUAL                      => reduce 1 tokens to name 95.2
   LESS                               => reduce 1 tokens to name 95.2
   LESS_EQUAL                         => reduce 1 tokens to name 95.2
   MINUS                              => reduce 1 tokens to name 95.2
   PLUS                               => reduce 1 tokens to name 95.2
   SLASH                              => reduce 1 tokens to name 95.2
   SLASH_EQUAL                        => reduce 1 tokens to name 95.2
   STAR                               => reduce 1 tokens to name 95.2
   default                            => ERROR

   Minimal_Complete_Action => (name)

State 172:
     61.0:association_list <= association ^ nonterminal_004_list_opt, IS/RIGHT_PAREN

   IS                                 => reduce 0 tokens to nonterminal_004_list_opt 127.0
   RIGHT_PAREN                        => reduce 0 tokens to nonterminal_004_list_opt 127.0
   COMMA                              => shift and goto state 232
   default                            => ERROR

   nonterminal_005                    goto state 233
   nonterminal_004_list_opt           goto state 234
   nonterminal_003_list               goto state 235

   Minimal_Complete_Action => (nonterminal_004_list_opt)

State 173:
     57.0:actual_parameter_part <= LEFT_PAREN association_list ^ RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   RIGHT_PAREN                        => shift and goto state 236
   default                            => ERROR

   Minimal_Complete_Action => (RIGHT_PAREN)

State 174:
     60.1:association <= expression ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 1 tokens to association 60.1
   RIGHT_PAREN                        => reduce 1 tokens to association 60.1
   COMMA                              => reduce 1 tokens to association 60.1
   default                            => ERROR

   Minimal_Complete_Action => (association)

State 175:
    108.1:range_list <= range_g ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 1 tokens to range_list 108.1
   COMMA                              => reduce 1 tokens to range_list 108.1
   default                            => ERROR

   Minimal_Complete_Action => (range_list)

State 176:
     95.0:name <= name LEFT_PAREN range_list ^ RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    108.0:range_list <= range_list ^ COMMA range_g, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => shift and goto state 237
   COMMA                              => shift and goto state 238
   default                            => ERROR

   Minimal_Complete_Action => (RIGHT_PAREN)

State 177:
    107.0:range_g <= simple_expression ^ DOT_DOT simple_expression, RIGHT_PAREN/COMMA
    109.0:relation <= simple_expression ^ nonterminal_040, AND/OR/RIGHT_PAREN/XOR/COMMA
    109.1:relation <= simple_expression ^, AND/OR/RIGHT_PAREN/XOR/COMMA

   AND                                => reduce 1 tokens to relation 109.1
   OR                                 => reduce 1 tokens to relation 109.1
   RIGHT_PAREN                        => reduce 1 tokens to relation 109.1
   XOR                                => reduce 1 tokens to relation 109.1
   COMMA                              => reduce 1 tokens to relation 109.1
   DOT_DOT                            => shift and goto state 239
   EQUAL                              => shift and goto state 125
   GREATER                            => shift and goto state 126
   GREATER_EQUAL                      => shift and goto state 127
   LESS                               => shift and goto state 128
   LESS_EQUAL                         => shift and goto state 129
   SLASH_EQUAL                        => shift and goto state 130
   default                            => ERROR

   relational_operator                goto state 131
   nonterminal_040                    goto state 132

   Minimal_Complete_Action => (relation)

State 178:
     60.0:association <= nonterminal_048 ^ expression, IS/RIGHT_PAREN/COMMA

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   expression                         goto state 240
   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   relation                           goto state 51
   selected_component                 goto state 30
   simple_expression                  goto state 52
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 179:
     59.0:assignment_statement <= name COLON_EQUAL expression ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 241
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 180:
    111.0:selected_component <= name DOT IDENTIFIER ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 3 tokens to selected_component 111.0
   IS                                 => reduce 3 tokens to selected_component 111.0
   LEFT_PAREN                         => reduce 3 tokens to selected_component 111.0
   LOOP                               => reduce 3 tokens to selected_component 111.0
   OR                                 => reduce 3 tokens to selected_component 111.0
   RANGE                              => reduce 3 tokens to selected_component 111.0
   RETURN                             => reduce 3 tokens to selected_component 111.0
   RIGHT_PAREN                        => reduce 3 tokens to selected_component 111.0
   THEN                               => reduce 3 tokens to selected_component 111.0
   WITH                               => reduce 3 tokens to selected_component 111.0
   XOR                                => reduce 3 tokens to selected_component 111.0
   AMPERSAND                          => reduce 3 tokens to selected_component 111.0
   COLON_EQUAL                        => reduce 3 tokens to selected_component 111.0
   COMMA                              => reduce 3 tokens to selected_component 111.0
   DOT                                => reduce 3 tokens to selected_component 111.0
   DOT_DOT                            => reduce 3 tokens to selected_component 111.0
   EQUAL                              => reduce 3 tokens to selected_component 111.0
   EQUAL_GREATER                      => reduce 3 tokens to selected_component 111.0
   GREATER                            => reduce 3 tokens to selected_component 111.0
   GREATER_EQUAL                      => reduce 3 tokens to selected_component 111.0
   LESS                               => reduce 3 tokens to selected_component 111.0
   LESS_EQUAL                         => reduce 3 tokens to selected_component 111.0
   MINUS                              => reduce 3 tokens to selected_component 111.0
   PLUS                               => reduce 3 tokens to selected_component 111.0
   SEMICOLON                          => reduce 3 tokens to selected_component 111.0
   SLASH                              => reduce 3 tokens to selected_component 111.0
   SLASH_EQUAL                        => reduce 3 tokens to selected_component 111.0
   STAR                               => reduce 3 tokens to selected_component 111.0
   default                            => ERROR

   Minimal_Complete_Action => (selected_component)

State 181:
    117.1:subprogram_body <= subprogram_specification IS declarative_part ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 242
   default                            => ERROR

   Minimal_Complete_Action => (BEGIN)

State 182:
     58.0:aspect_specification <= WITH association_list ^, IS

   IS                                 => reduce 2 tokens to aspect_specification 58.0
   default                            => ERROR

   Minimal_Complete_Action => (aspect_specification)

State 183:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to nonterminal_011_list_opt 134.0
   FUNCTION                           => shift and goto state 5
   PACKAGE                            => shift and goto state 55
   PROCEDURE                          => shift and goto state 56
   TYPE                               => shift and goto state 57
   IDENTIFIER                         => shift and goto state 58
   default                            => ERROR

   body_g                             goto state 59
   body_stub                          goto state 60
   declaration                        goto state 61
   declarative_part                   goto state 243
   full_type_declaration              goto state 63
   function_specification             goto state 21
   object_declaration                 goto state 64
   package_body                       goto state 65
   procedure_specification            goto state 29
   proper_body                        goto state 66
   subprogram_body                    goto state 67
   subprogram_body_stub               goto state 68
   subprogram_declaration             goto state 69
   subprogram_specification           goto state 70
   type_declaration                   goto state 71
   nonterminal_012                    goto state 72
   nonterminal_011_list_opt           goto state 73
   nonterminal_010_list               goto state 74

   Minimal_Complete_Action => (declarative_part)

State 184:
    102.0:paren_expression <= LEFT_PAREN expression RIGHT_PAREN ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 3 tokens to paren_expression 102.0
   IS                                 => reduce 3 tokens to paren_expression 102.0
   LOOP                               => reduce 3 tokens to paren_expression 102.0
   OR                                 => reduce 3 tokens to paren_expression 102.0
   RIGHT_PAREN                        => reduce 3 tokens to paren_expression 102.0
   THEN                               => reduce 3 tokens to paren_expression 102.0
   XOR                                => reduce 3 tokens to paren_expression 102.0
   AMPERSAND                          => reduce 3 tokens to paren_expression 102.0
   COLON_EQUAL                        => reduce 3 tokens to paren_expression 102.0
   COMMA                              => reduce 3 tokens to paren_expression 102.0
   DOT_DOT                            => reduce 3 tokens to paren_expression 102.0
   EQUAL                              => reduce 3 tokens to paren_expression 102.0
   GREATER                            => reduce 3 tokens to paren_expression 102.0
   GREATER_EQUAL                      => reduce 3 tokens to paren_expression 102.0
   LESS                               => reduce 3 tokens to paren_expression 102.0
   LESS_EQUAL                         => reduce 3 tokens to paren_expression 102.0
   MINUS                              => reduce 3 tokens to paren_expression 102.0
   PLUS                               => reduce 3 tokens to paren_expression 102.0
   SEMICOLON                          => reduce 3 tokens to paren_expression 102.0
   SLASH                              => reduce 3 tokens to paren_expression 102.0
   SLASH_EQUAL                        => reduce 3 tokens to paren_expression 102.0
   STAR                               => reduce 3 tokens to paren_expression 102.0
   default                            => ERROR

   Minimal_Complete_Action => (paren_expression)

State 185:
     68.0:case_statement_alternative <= WHEN ^ NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements, END/WHEN

   NUMERIC_LITERAL                    => shift and goto state 244
   default                            => ERROR

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 186:
    129.0:nonterminal_007 <= case_statement_alternative ^, END/WHEN

   END                                => reduce 1 tokens to nonterminal_007 129.0
   WHEN                               => reduce 1 tokens to nonterminal_007 129.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_007)

State 187:
    130.0:nonterminal_006_list <= nonterminal_007 ^, END/WHEN

   END                                => reduce 1 tokens to nonterminal_006_list 130.0
   WHEN                               => reduce 1 tokens to nonterminal_006_list 130.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_006_list)

State 188:
     67.0:case_statement <= CASE expression IS nonterminal_006_list ^ END CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
    130.1:nonterminal_006_list <= nonterminal_006_list ^ nonterminal_007, END/WHEN

   END                                => shift and goto state 245
   WHEN                               => shift and goto state 185
   default                            => ERROR

   case_statement_alternative         goto state 186
   nonterminal_007                    goto state 246

   Minimal_Complete_Action => (END)

State 189:
    160.0:nonterminal_039 <= multiplying_operator factor ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 2 tokens to nonterminal_039 160.0
   IS                                 => reduce 2 tokens to nonterminal_039 160.0
   LOOP                               => reduce 2 tokens to nonterminal_039 160.0
   OR                                 => reduce 2 tokens to nonterminal_039 160.0
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_039 160.0
   THEN                               => reduce 2 tokens to nonterminal_039 160.0
   XOR                                => reduce 2 tokens to nonterminal_039 160.0
   AMPERSAND                          => reduce 2 tokens to nonterminal_039 160.0
   COLON_EQUAL                        => reduce 2 tokens to nonterminal_039 160.0
   COMMA                              => reduce 2 tokens to nonterminal_039 160.0
   DOT_DOT                            => reduce 2 tokens to nonterminal_039 160.0
   EQUAL                              => reduce 2 tokens to nonterminal_039 160.0
   GREATER                            => reduce 2 tokens to nonterminal_039 160.0
   GREATER_EQUAL                      => reduce 2 tokens to nonterminal_039 160.0
   LESS                               => reduce 2 tokens to nonterminal_039 160.0
   LESS_EQUAL                         => reduce 2 tokens to nonterminal_039 160.0
   MINUS                              => reduce 2 tokens to nonterminal_039 160.0
   PLUS                               => reduce 2 tokens to nonterminal_039 160.0
   SEMICOLON                          => reduce 2 tokens to nonterminal_039 160.0
   SLASH                              => reduce 2 tokens to nonterminal_039 160.0
   SLASH_EQUAL                        => reduce 2 tokens to nonterminal_039 160.0
   STAR                               => reduce 2 tokens to nonterminal_039 160.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_039)

State 190:
    162.1:nonterminal_037_list <= nonterminal_037_list nonterminal_039 ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 2 tokens to nonterminal_037_list 162.1
   IS                                 => reduce 2 tokens to nonterminal_037_list 162.1
   LOOP                               => reduce 2 tokens to nonterminal_037_list 162.1
   OR                                 => reduce 2 tokens to nonterminal_037_list 162.1
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_037_list 162.1
   THEN                               => reduce 2 tokens to nonterminal_037_list 162.1
   XOR                                => reduce 2 tokens to nonterminal_037_list 162.1
   AMPERSAND                          => reduce 2 tokens to nonterminal_037_list 162.1
   COLON_EQUAL                        => reduce 2 tokens to nonterminal_037_list 162.1
   COMMA                              => reduce 2 tokens to nonterminal_037_list 162.1
   DOT_DOT                            => reduce 2 tokens to nonterminal_037_list 162.1
   EQUAL                              => reduce 2 tokens to nonterminal_037_list 162.1
   GREATER                            => reduce 2 tokens to nonterminal_037_list 162.1
   GREATER_EQUAL                      => reduce 2 tokens to nonterminal_037_list 162.1
   LESS                               => reduce 2 tokens to nonterminal_037_list 162.1
   LESS_EQUAL                         => reduce 2 tokens to nonterminal_037_list 162.1
   MINUS                              => reduce 2 tokens to nonterminal_037_list 162.1
   PLUS                               => reduce 2 tokens to nonterminal_037_list 162.1
   SEMICOLON                          => reduce 2 tokens to nonterminal_037_list 162.1
   SLASH                              => reduce 2 tokens to nonterminal_037_list 162.1
   SLASH_EQUAL                        => reduce 2 tokens to nonterminal_037_list 162.1
   STAR                               => reduce 2 tokens to nonterminal_037_list 162.1
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_037_list)

State 191:
    139.0:nonterminal_017 <= AND relation ^, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   AND                                => reduce 2 tokens to nonterminal_017 139.0
   IS                                 => reduce 2 tokens to nonterminal_017 139.0
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_017 139.0
   THEN                               => reduce 2 tokens to nonterminal_017 139.0
   COMMA                              => reduce 2 tokens to nonterminal_017 139.0
   SEMICOLON                          => reduce 2 tokens to nonterminal_017 139.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_017)

State 192:
    141.0:nonterminal_019 <= OR relation ^, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   IS                                 => reduce 2 tokens to nonterminal_019 141.0
   OR                                 => reduce 2 tokens to nonterminal_019 141.0
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_019 141.0
   THEN                               => reduce 2 tokens to nonterminal_019 141.0
   COMMA                              => reduce 2 tokens to nonterminal_019 141.0
   SEMICOLON                          => reduce 2 tokens to nonterminal_019 141.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_019)

State 193:
    143.0:nonterminal_021 <= XOR relation ^, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   IS                                 => reduce 2 tokens to nonterminal_021 143.0
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_021 143.0
   THEN                               => reduce 2 tokens to nonterminal_021 143.0
   XOR                                => reduce 2 tokens to nonterminal_021 143.0
   COMMA                              => reduce 2 tokens to nonterminal_021 143.0
   SEMICOLON                          => reduce 2 tokens to nonterminal_021 143.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_021)

State 194:
    140.1:nonterminal_016_list <= nonterminal_016_list nonterminal_017 ^, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   AND                                => reduce 2 tokens to nonterminal_016_list 140.1
   IS                                 => reduce 2 tokens to nonterminal_016_list 140.1
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_016_list 140.1
   THEN                               => reduce 2 tokens to nonterminal_016_list 140.1
   COMMA                              => reduce 2 tokens to nonterminal_016_list 140.1
   SEMICOLON                          => reduce 2 tokens to nonterminal_016_list 140.1
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_016_list)

State 195:
    142.1:nonterminal_018_list <= nonterminal_018_list nonterminal_019 ^, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   IS                                 => reduce 2 tokens to nonterminal_018_list 142.1
   OR                                 => reduce 2 tokens to nonterminal_018_list 142.1
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_018_list 142.1
   THEN                               => reduce 2 tokens to nonterminal_018_list 142.1
   COMMA                              => reduce 2 tokens to nonterminal_018_list 142.1
   SEMICOLON                          => reduce 2 tokens to nonterminal_018_list 142.1
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_018_list)

State 196:
    144.1:nonterminal_020_list <= nonterminal_020_list nonterminal_021 ^, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   IS                                 => reduce 2 tokens to nonterminal_020_list 144.1
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_020_list 144.1
   THEN                               => reduce 2 tokens to nonterminal_020_list 144.1
   XOR                                => reduce 2 tokens to nonterminal_020_list 144.1
   COMMA                              => reduce 2 tokens to nonterminal_020_list 144.1
   SEMICOLON                          => reduce 2 tokens to nonterminal_020_list 144.1
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_020_list)

State 197:
    163.0:nonterminal_040 <= relational_operator simple_expression ^, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   AND                                => reduce 2 tokens to nonterminal_040 163.0
   IS                                 => reduce 2 tokens to nonterminal_040 163.0
   OR                                 => reduce 2 tokens to nonterminal_040 163.0
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_040 163.0
   THEN                               => reduce 2 tokens to nonterminal_040 163.0
   XOR                                => reduce 2 tokens to nonterminal_040 163.0
   COMMA                              => reduce 2 tokens to nonterminal_040 163.0
   SEMICOLON                          => reduce 2 tokens to nonterminal_040 163.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_040)

State 198:
    157.0:nonterminal_036 <= binary_adding_operator term ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 2 tokens to nonterminal_036 157.0
   IS                                 => reduce 2 tokens to nonterminal_036 157.0
   LOOP                               => reduce 2 tokens to nonterminal_036 157.0
   OR                                 => reduce 2 tokens to nonterminal_036 157.0
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_036 157.0
   THEN                               => reduce 2 tokens to nonterminal_036 157.0
   XOR                                => reduce 2 tokens to nonterminal_036 157.0
   AMPERSAND                          => reduce 2 tokens to nonterminal_036 157.0
   COLON_EQUAL                        => reduce 2 tokens to nonterminal_036 157.0
   COMMA                              => reduce 2 tokens to nonterminal_036 157.0
   DOT_DOT                            => reduce 2 tokens to nonterminal_036 157.0
   EQUAL                              => reduce 2 tokens to nonterminal_036 157.0
   GREATER                            => reduce 2 tokens to nonterminal_036 157.0
   GREATER_EQUAL                      => reduce 2 tokens to nonterminal_036 157.0
   LESS                               => reduce 2 tokens to nonterminal_036 157.0
   LESS_EQUAL                         => reduce 2 tokens to nonterminal_036 157.0
   MINUS                              => reduce 2 tokens to nonterminal_036 157.0
   PLUS                               => reduce 2 tokens to nonterminal_036 157.0
   SEMICOLON                          => reduce 2 tokens to nonterminal_036 157.0
   SLASH_EQUAL                        => reduce 2 tokens to nonterminal_036 157.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_036)

State 199:
    159.1:nonterminal_034_list <= nonterminal_034_list nonterminal_036 ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 2 tokens to nonterminal_034_list 159.1
   IS                                 => reduce 2 tokens to nonterminal_034_list 159.1
   LOOP                               => reduce 2 tokens to nonterminal_034_list 159.1
   OR                                 => reduce 2 tokens to nonterminal_034_list 159.1
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_034_list 159.1
   THEN                               => reduce 2 tokens to nonterminal_034_list 159.1
   XOR                                => reduce 2 tokens to nonterminal_034_list 159.1
   AMPERSAND                          => reduce 2 tokens to nonterminal_034_list 159.1
   COLON_EQUAL                        => reduce 2 tokens to nonterminal_034_list 159.1
   COMMA                              => reduce 2 tokens to nonterminal_034_list 159.1
   DOT_DOT                            => reduce 2 tokens to nonterminal_034_list 159.1
   EQUAL                              => reduce 2 tokens to nonterminal_034_list 159.1
   GREATER                            => reduce 2 tokens to nonterminal_034_list 159.1
   GREATER_EQUAL                      => reduce 2 tokens to nonterminal_034_list 159.1
   LESS                               => reduce 2 tokens to nonterminal_034_list 159.1
   LESS_EQUAL                         => reduce 2 tokens to nonterminal_034_list 159.1
   MINUS                              => reduce 2 tokens to nonterminal_034_list 159.1
   PLUS                               => reduce 2 tokens to nonterminal_034_list 159.1
   SEMICOLON                          => reduce 2 tokens to nonterminal_034_list 159.1
   SLASH_EQUAL                        => reduce 2 tokens to nonterminal_034_list 159.1
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_034_list)

State 200:
    113.0:simple_expression <= unary_adding_operator term nonterminal_035_list_opt ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 3 tokens to simple_expression 113.0
   IS                                 => reduce 3 tokens to simple_expression 113.0
   LOOP                               => reduce 3 tokens to simple_expression 113.0
   OR                                 => reduce 3 tokens to simple_expression 113.0
   RIGHT_PAREN                        => reduce 3 tokens to simple_expression 113.0
   THEN                               => reduce 3 tokens to simple_expression 113.0
   XOR                                => reduce 3 tokens to simple_expression 113.0
   COLON_EQUAL                        => reduce 3 tokens to simple_expression 113.0
   COMMA                              => reduce 3 tokens to simple_expression 113.0
   DOT_DOT                            => reduce 3 tokens to simple_expression 113.0
   EQUAL                              => reduce 3 tokens to simple_expression 113.0
   GREATER                            => reduce 3 tokens to simple_expression 113.0
   GREATER_EQUAL                      => reduce 3 tokens to simple_expression 113.0
   LESS                               => reduce 3 tokens to simple_expression 113.0
   LESS_EQUAL                         => reduce 3 tokens to simple_expression 113.0
   SEMICOLON                          => reduce 3 tokens to simple_expression 113.0
   SLASH_EQUAL                        => reduce 3 tokens to simple_expression 113.0
   default                            => ERROR

   Minimal_Complete_Action => (simple_expression)

State 201:
     85.0:full_type_declaration <= TYPE IDENTIFIER IS ^ type_definition SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   LEFT_PAREN                         => shift and goto state 247
   default                            => ERROR

   enumeration_type_definition        goto state 248
   type_definition                    goto state 249

   Minimal_Complete_Action => (LEFT_PAREN)

State 202:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/RANGE/COLON_EQUAL/DOT/SEMICOLON
     95.1:name <= name ^ actual_parameter_part, LEFT_PAREN/RANGE/COLON_EQUAL/DOT/SEMICOLON
    111.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/RANGE/COLON_EQUAL/DOT/SEMICOLON
    121.0:subtype_indication <= name ^ constraint, COLON_EQUAL/SEMICOLON
    121.1:subtype_indication <= name ^, COLON_EQUAL/SEMICOLON

   LEFT_PAREN                         => shift and goto state 250
   RANGE                              => shift and goto state 251
   COLON_EQUAL                        => reduce 1 tokens to subtype_indication 121.1
   DOT                                => shift and goto state 99
   SEMICOLON                          => reduce 1 tokens to subtype_indication 121.1
   default                            => ERROR

   actual_parameter_part              goto state 101
   constraint                         goto state 252
   index_constraint                   goto state 253

   Minimal_Complete_Action => (subtype_indication)

State 203:
     97.0:object_declaration <= IDENTIFIER COLON subtype_indication ^ nonterminal_043 SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
     97.1:object_declaration <= IDENTIFIER COLON subtype_indication ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   COLON_EQUAL                        => shift and goto state 254
   SEMICOLON                          => shift and goto state 255
   default                            => ERROR

   nonterminal_043                    goto state 256

   Minimal_Complete_Action => (SEMICOLON)

State 204:
    118.0:subprogram_body_stub <= subprogram_specification IS SEPARATE ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   SEMICOLON                          => shift and goto state 257
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 205:
     79.0:exit_statement <= EXIT IDENTIFIER nonterminal_046 SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 4 tokens to exit_statement 79.0
   CASE                               => reduce 4 tokens to exit_statement 79.0
   DECLARE                            => reduce 4 tokens to exit_statement 79.0
   ELSE                               => reduce 4 tokens to exit_statement 79.0
   ELSIF                              => reduce 4 tokens to exit_statement 79.0
   END                                => reduce 4 tokens to exit_statement 79.0
   EXIT                               => reduce 4 tokens to exit_statement 79.0
   EXCEPTION                          => reduce 4 tokens to exit_statement 79.0
   FOR                                => reduce 4 tokens to exit_statement 79.0
   FUNCTION                           => reduce 4 tokens to exit_statement 79.0
   IF                                 => reduce 4 tokens to exit_statement 79.0
   LOOP                               => reduce 4 tokens to exit_statement 79.0
   PACKAGE                            => reduce 4 tokens to exit_statement 79.0
   PROCEDURE                          => reduce 4 tokens to exit_statement 79.0
   RETURN                             => reduce 4 tokens to exit_statement 79.0
   WHEN                               => reduce 4 tokens to exit_statement 79.0
   IDENTIFIER                         => reduce 4 tokens to exit_statement 79.0
   Wisi_EOI                           => reduce 4 tokens to exit_statement 79.0
   default                            => ERROR

   Minimal_Complete_Action => (exit_statement)

State 206:
     92.0:iteration_scheme <= FOR IDENTIFIER IN discrete_subtype_definition ^, LOOP

   LOOP                               => reduce 4 tokens to iteration_scheme 92.0
   default                            => ERROR

   Minimal_Complete_Action => (iteration_scheme)

State 207:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
     95.1:name <= name ^ actual_parameter_part, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    103.2:primary <= name ^, AND/OR/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    111.0:selected_component <= name ^ DOT IDENTIFIER, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    121.0:subtype_indication <= name ^ constraint, LOOP/RIGHT_PAREN
    121.1:subtype_indication <= name ^, LOOP/RIGHT_PAREN

   AND                                => reduce 1 tokens to primary 103.2
   LEFT_PAREN                         => shift and goto state 250
   LOOP                               => reduce 1 tokens to subtype_indication 121.1
   OR                                 => reduce 1 tokens to primary 103.2
   RANGE                              => shift and goto state 251
   RIGHT_PAREN                        => reduce 1 tokens to primary 103.2,
                                         reduce 1 tokens to subtype_indication 121.1
   XOR                                => reduce 1 tokens to primary 103.2
   AMPERSAND                          => reduce 1 tokens to primary 103.2
   COMMA                              => reduce 1 tokens to primary 103.2
   DOT                                => shift and goto state 99
   DOT_DOT                            => reduce 1 tokens to primary 103.2
   EQUAL                              => reduce 1 tokens to primary 103.2
   GREATER                            => reduce 1 tokens to primary 103.2
   GREATER_EQUAL                      => reduce 1 tokens to primary 103.2
   LESS                               => reduce 1 tokens to primary 103.2
   LESS_EQUAL                         => reduce 1 tokens to primary 103.2
   MINUS                              => reduce 1 tokens to primary 103.2
   PLUS                               => reduce 1 tokens to primary 103.2
   SLASH                              => reduce 1 tokens to primary 103.2
   SLASH_EQUAL                        => reduce 1 tokens to primary 103.2
   STAR                               => reduce 1 tokens to primary 103.2
   default                            => ERROR

   actual_parameter_part              goto state 101
   constraint                         goto state 252
   index_constraint                   goto state 253

   Minimal_Complete_Action => (primary)

State 208:
     75.1:discrete_subtype_definition <= range_g ^, LOOP

   LOOP                               => reduce 1 tokens to discrete_subtype_definition 75.1
   default                            => ERROR

   Minimal_Complete_Action => (discrete_subtype_definition)

State 209:
    107.0:range_g <= simple_expression ^ DOT_DOT simple_expression, LOOP/RIGHT_PAREN/COLON_EQUAL/COMMA/SEMICOLON

   DOT_DOT                            => shift and goto state 239
   default                            => ERROR

   Minimal_Complete_Action => (DOT_DOT)

State 210:
     75.0:discrete_subtype_definition <= subtype_indication ^, LOOP/RIGHT_PAREN

   LOOP                               => reduce 1 tokens to discrete_subtype_definition 75.0
   RIGHT_PAREN                        => reduce 1 tokens to discrete_subtype_definition 75.0
   default                            => ERROR

   Minimal_Complete_Action => (discrete_subtype_definition)

State 211:
     95.2:name <= IDENTIFIER ^, AND/LEFT_PAREN/OR/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    101.0:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER nonterminal_041, RIGHT_PAREN/SEMICOLON
    101.1:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER, RIGHT_PAREN/SEMICOLON
    171.0:nonterminal_048 <= IDENTIFIER ^ EQUAL_GREATER, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   AND                                => reduce 1 tokens to name 95.2
   LEFT_PAREN                         => reduce 1 tokens to name 95.2
   OR                                 => reduce 1 tokens to name 95.2
   RIGHT_PAREN                        => reduce 1 tokens to name 95.2
   XOR                                => reduce 1 tokens to name 95.2
   AMPERSAND                          => reduce 1 tokens to name 95.2
   COLON                              => shift and goto state 258
   COMMA                              => reduce 1 tokens to name 95.2
   DOT                                => reduce 1 tokens to name 95.2
   DOT_DOT                            => reduce 1 tokens to name 95.2
   EQUAL                              => reduce 1 tokens to name 95.2
   EQUAL_GREATER                      => shift and goto state 231
   GREATER                            => reduce 1 tokens to name 95.2
   GREATER_EQUAL                      => reduce 1 tokens to name 95.2
   LESS                               => reduce 1 tokens to name 95.2
   LESS_EQUAL                         => reduce 1 tokens to name 95.2
   MINUS                              => reduce 1 tokens to name 95.2
   PLUS                               => reduce 1 tokens to name 95.2
   SLASH                              => reduce 1 tokens to name 95.2
   SLASH_EQUAL                        => reduce 1 tokens to name 95.2
   STAR                               => reduce 1 tokens to name 95.2
   default                            => ERROR

   Minimal_Complete_Action => (name)

State 212:
     84.0:formal_part <= LEFT_PAREN parameter_specification ^ nonterminal_023_list_opt RIGHT_PAREN, IS/RETURN/WITH/SEMICOLON

   RIGHT_PAREN                        => reduce 0 tokens to nonterminal_023_list_opt 146.0
   SEMICOLON                          => shift and goto state 259
   default                            => ERROR

   nonterminal_024                    goto state 260
   nonterminal_023_list_opt           goto state 261
   nonterminal_022_list               goto state 262

   Minimal_Complete_Action => (nonterminal_023_list_opt)

State 213:
     99.1:parameter_and_result_profile <= RETURN IDENTIFIER ^, IS/WITH/SEMICOLON

   IS                                 => reduce 2 tokens to parameter_and_result_profile 99.1
   WITH                               => reduce 2 tokens to parameter_and_result_profile 99.1
   SEMICOLON                          => reduce 2 tokens to parameter_and_result_profile 99.1
   default                            => ERROR

   Minimal_Complete_Action => (parameter_and_result_profile)

State 214:
     99.0:parameter_and_result_profile <= formal_part RETURN ^ IDENTIFIER, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 263
   default                            => ERROR

   Minimal_Complete_Action => (IDENTIFIER)

State 215:
     90.0:if_statement <= IF expression THEN sequence_of_statements ^ nonterminal_029_list_opt nonterminal_044 END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.1:if_statement <= IF expression THEN sequence_of_statements ^ nonterminal_029_list_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   ELSE                               => reduce 0 tokens to nonterminal_029_list_opt 152.0
   ELSIF                              => shift and goto state 264
   END                                => reduce 0 tokens to nonterminal_029_list_opt 152.0
   default                            => ERROR

   nonterminal_030                    goto state 265
   nonterminal_029_list_opt           goto state 266
   nonterminal_028_list               goto state 267

   Minimal_Complete_Action => (nonterminal_029_list_opt)

State 216:
     93.1:loop_statement <= LOOP sequence_of_statements END LOOP ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to identifier_opt 89.1
   IDENTIFIER                         => shift and goto state 268
   default                            => ERROR

   identifier_opt                     goto state 269

   Minimal_Complete_Action => (identifier_opt)

State 217:
     98.1:package_body <= PACKAGE BODY name IS ^ declarative_part nonterminal_042 END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.3:package_body <= PACKAGE BODY name IS ^ declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to nonterminal_011_list_opt 134.0
   END                                => reduce 0 tokens to nonterminal_011_list_opt 134.0
   FUNCTION                           => shift and goto state 5
   PACKAGE                            => shift and goto state 55
   PROCEDURE                          => shift and goto state 56
   TYPE                               => shift and goto state 57
   IDENTIFIER                         => shift and goto state 58
   default                            => ERROR

   body_g                             goto state 59
   body_stub                          goto state 60
   declaration                        goto state 61
   declarative_part                   goto state 270
   full_type_declaration              goto state 63
   function_specification             goto state 21
   object_declaration                 goto state 64
   package_body                       goto state 65
   procedure_specification            goto state 29
   proper_body                        goto state 66
   subprogram_body                    goto state 67
   subprogram_body_stub               goto state 68
   subprogram_declaration             goto state 69
   subprogram_specification           goto state 70
   type_declaration                   goto state 71
   nonterminal_012                    goto state 72
   nonterminal_011_list_opt           goto state 73
   nonterminal_010_list               goto state 74

   Minimal_Complete_Action => (declarative_part)

State 218:
     98.0:package_body <= PACKAGE BODY name aspect_specification ^ IS declarative_part nonterminal_042 END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.2:package_body <= PACKAGE BODY name aspect_specification ^ IS declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   IS                                 => shift and goto state 271
   default                            => ERROR

   Minimal_Complete_Action => (IS)

State 219:
     87.0:generic_instantiation <= PACKAGE name IS NEW ^ name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   name                               goto state 272
   selected_component                 goto state 30

   Minimal_Complete_Action => (IDENTIFIER)

State 220:
     87.1:generic_instantiation <= PROCEDURE name IS NEW ^ name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   name                               goto state 273
   selected_component                 goto state 30

   Minimal_Complete_Action => (IDENTIFIER)

State 221:
     81.0:extended_return_object_declaration <= IDENTIFIER COLON subtype_indication ^, SEMICOLON

   SEMICOLON                          => reduce 3 tokens to extended_return_object_declaration 81.0
   default                            => ERROR

   Minimal_Complete_Action => (extended_return_object_declaration)

State 222:
     78.0:exception_handler <= WHEN ^ exception_choice EQUAL_GREATER sequence_of_statements, END/WHEN

   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   exception_choice                   goto state 274
   name                               goto state 275
   selected_component                 goto state 30

   Minimal_Complete_Action => (IDENTIFIER)

State 223:
    148.0:nonterminal_027 <= exception_handler ^, END/WHEN

   END                                => reduce 1 tokens to nonterminal_027 148.0
   WHEN                               => reduce 1 tokens to nonterminal_027 148.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_027)

State 224:
    150.0:nonterminal_025_list <= nonterminal_027 ^, END/WHEN

   END                                => reduce 1 tokens to nonterminal_025_list 150.0
   WHEN                               => reduce 1 tokens to nonterminal_025_list 150.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_025_list)

State 225:
    168.0:nonterminal_045 <= EXCEPTION nonterminal_026_list_opt ^, END

   END                                => reduce 2 tokens to nonterminal_045 168.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_045)

State 226:
    149.1:nonterminal_026_list_opt <= nonterminal_025_list ^, END
    150.1:nonterminal_025_list <= nonterminal_025_list ^ nonterminal_027, END/WHEN

   END                                => reduce 1 tokens to nonterminal_026_list_opt 149.1
   WHEN                               => shift and goto state 222
   default                            => ERROR

   exception_handler                  goto state 223
   nonterminal_027                    goto state 276

   Minimal_Complete_Action => (nonterminal_026_list_opt)

State 227:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to identifier_opt 89.1
   IDENTIFIER                         => shift and goto state 268
   default                            => ERROR

   identifier_opt                     goto state 277

   Minimal_Complete_Action => (identifier_opt)

State 228:
     88.0:handled_sequence_of_statements <= sequence_of_statements nonterminal_045 ^, END

   END                                => reduce 2 tokens to handled_sequence_of_statements 88.0
   default                            => ERROR

   Minimal_Complete_Action => (handled_sequence_of_statements)

State 229:
     64.0:block_statement <= block_label_opt nonterminal_047 BEGIN handled_sequence_of_statements ^ END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 278
   default                            => ERROR

   Minimal_Complete_Action => (END)

State 230:
     93.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END ^ LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LOOP                               => shift and goto state 279
   default                            => ERROR

   Minimal_Complete_Action => (LOOP)

State 231:
    171.0:nonterminal_048 <= IDENTIFIER EQUAL_GREATER ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 2 tokens to nonterminal_048 171.0
   NOT                                => reduce 2 tokens to nonterminal_048 171.0
   MINUS                              => reduce 2 tokens to nonterminal_048 171.0
   PLUS                               => reduce 2 tokens to nonterminal_048 171.0
   STRING_LITERAL                     => reduce 2 tokens to nonterminal_048 171.0
   NUMERIC_LITERAL                    => reduce 2 tokens to nonterminal_048 171.0
   IDENTIFIER                         => reduce 2 tokens to nonterminal_048 171.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_048)

State 232:
    126.0:nonterminal_005 <= COMMA ^ association, IS/RIGHT_PAREN/COMMA

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 171
   default                            => ERROR

   association                        goto state 280
   expression                         goto state 174
   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   relation                           goto state 51
   selected_component                 goto state 30
   simple_expression                  goto state 52
   term                               goto state 53
   unary_adding_operator              goto state 54
   nonterminal_048                    goto state 178

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 233:
    128.0:nonterminal_003_list <= nonterminal_005 ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 1 tokens to nonterminal_003_list 128.0
   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_003_list 128.0
   COMMA                              => reduce 1 tokens to nonterminal_003_list 128.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_003_list)

State 234:
     61.0:association_list <= association nonterminal_004_list_opt ^, IS/RIGHT_PAREN

   IS                                 => reduce 2 tokens to association_list 61.0
   RIGHT_PAREN                        => reduce 2 tokens to association_list 61.0
   default                            => ERROR

   Minimal_Complete_Action => (association_list)

State 235:
    127.1:nonterminal_004_list_opt <= nonterminal_003_list ^, IS/RIGHT_PAREN
    128.1:nonterminal_003_list <= nonterminal_003_list ^ nonterminal_005, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 1 tokens to nonterminal_004_list_opt 127.1
   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_004_list_opt 127.1
   COMMA                              => shift and goto state 232
   default                            => ERROR

   nonterminal_005                    goto state 281

   Minimal_Complete_Action => (nonterminal_004_list_opt)

State 236:
     57.0:actual_parameter_part <= LEFT_PAREN association_list RIGHT_PAREN ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 3 tokens to actual_parameter_part 57.0
   IS                                 => reduce 3 tokens to actual_parameter_part 57.0
   LEFT_PAREN                         => reduce 3 tokens to actual_parameter_part 57.0
   LOOP                               => reduce 3 tokens to actual_parameter_part 57.0
   OR                                 => reduce 3 tokens to actual_parameter_part 57.0
   RANGE                              => reduce 3 tokens to actual_parameter_part 57.0
   RETURN                             => reduce 3 tokens to actual_parameter_part 57.0
   RIGHT_PAREN                        => reduce 3 tokens to actual_parameter_part 57.0
   THEN                               => reduce 3 tokens to actual_parameter_part 57.0
   WITH                               => reduce 3 tokens to actual_parameter_part 57.0
   XOR                                => reduce 3 tokens to actual_parameter_part 57.0
   AMPERSAND                          => reduce 3 tokens to actual_parameter_part 57.0
   COLON_EQUAL                        => reduce 3 tokens to actual_parameter_part 57.0
   COMMA                              => reduce 3 tokens to actual_parameter_part 57.0
   DOT                                => reduce 3 tokens to actual_parameter_part 57.0
   DOT_DOT                            => reduce 3 tokens to actual_parameter_part 57.0
   EQUAL                              => reduce 3 tokens to actual_parameter_part 57.0
   EQUAL_GREATER                      => reduce 3 tokens to actual_parameter_part 57.0
   GREATER                            => reduce 3 tokens to actual_parameter_part 57.0
   GREATER_EQUAL                      => reduce 3 tokens to actual_parameter_part 57.0
   LESS                               => reduce 3 tokens to actual_parameter_part 57.0
   LESS_EQUAL                         => reduce 3 tokens to actual_parameter_part 57.0
   MINUS                              => reduce 3 tokens to actual_parameter_part 57.0
   PLUS                               => reduce 3 tokens to actual_parameter_part 57.0
   SEMICOLON                          => reduce 3 tokens to actual_parameter_part 57.0
   SLASH                              => reduce 3 tokens to actual_parameter_part 57.0
   SLASH_EQUAL                        => reduce 3 tokens to actual_parameter_part 57.0
   STAR                               => reduce 3 tokens to actual_parameter_part 57.0
   default                            => ERROR

   Minimal_Complete_Action => (actual_parameter_part)

State 237:
     95.0:name <= name LEFT_PAREN range_list RIGHT_PAREN ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 4 tokens to name 95.0
   IS                                 => reduce 4 tokens to name 95.0
   LEFT_PAREN                         => reduce 4 tokens to name 95.0
   LOOP                               => reduce 4 tokens to name 95.0
   OR                                 => reduce 4 tokens to name 95.0
   RANGE                              => reduce 4 tokens to name 95.0
   RETURN                             => reduce 4 tokens to name 95.0
   RIGHT_PAREN                        => reduce 4 tokens to name 95.0
   THEN                               => reduce 4 tokens to name 95.0
   WITH                               => reduce 4 tokens to name 95.0
   XOR                                => reduce 4 tokens to name 95.0
   AMPERSAND                          => reduce 4 tokens to name 95.0
   COLON_EQUAL                        => reduce 4 tokens to name 95.0
   COMMA                              => reduce 4 tokens to name 95.0
   DOT                                => reduce 4 tokens to name 95.0
   DOT_DOT                            => reduce 4 tokens to name 95.0
   EQUAL                              => reduce 4 tokens to name 95.0
   EQUAL_GREATER                      => reduce 4 tokens to name 95.0
   GREATER                            => reduce 4 tokens to name 95.0
   GREATER_EQUAL                      => reduce 4 tokens to name 95.0
   LESS                               => reduce 4 tokens to name 95.0
   LESS_EQUAL                         => reduce 4 tokens to name 95.0
   MINUS                              => reduce 4 tokens to name 95.0
   PLUS                               => reduce 4 tokens to name 95.0
   SEMICOLON                          => reduce 4 tokens to name 95.0
   SLASH                              => reduce 4 tokens to name 95.0
   SLASH_EQUAL                        => reduce 4 tokens to name 95.0
   STAR                               => reduce 4 tokens to name 95.0
   default                            => ERROR

   Minimal_Complete_Action => (name)

State 238:
    108.0:range_list <= range_list COMMA ^ range_g, RIGHT_PAREN/COMMA

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   range_g                            goto state 282
   selected_component                 goto state 30
   simple_expression                  goto state 209
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 239:
    107.0:range_g <= simple_expression DOT_DOT ^ simple_expression, LOOP/RIGHT_PAREN/COLON_EQUAL/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   selected_component                 goto state 30
   simple_expression                  goto state 283
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 240:
     60.0:association <= nonterminal_048 expression ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 2 tokens to association 60.0
   RIGHT_PAREN                        => reduce 2 tokens to association 60.0
   COMMA                              => reduce 2 tokens to association 60.0
   default                            => ERROR

   Minimal_Complete_Action => (association)

State 241:
     59.0:assignment_statement <= name COLON_EQUAL expression SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 4 tokens to assignment_statement 59.0
   CASE                               => reduce 4 tokens to assignment_statement 59.0
   DECLARE                            => reduce 4 tokens to assignment_statement 59.0
   ELSE                               => reduce 4 tokens to assignment_statement 59.0
   ELSIF                              => reduce 4 tokens to assignment_statement 59.0
   END                                => reduce 4 tokens to assignment_statement 59.0
   EXIT                               => reduce 4 tokens to assignment_statement 59.0
   EXCEPTION                          => reduce 4 tokens to assignment_statement 59.0
   FOR                                => reduce 4 tokens to assignment_statement 59.0
   FUNCTION                           => reduce 4 tokens to assignment_statement 59.0
   IF                                 => reduce 4 tokens to assignment_statement 59.0
   LOOP                               => reduce 4 tokens to assignment_statement 59.0
   PACKAGE                            => reduce 4 tokens to assignment_statement 59.0
   PROCEDURE                          => reduce 4 tokens to assignment_statement 59.0
   RETURN                             => reduce 4 tokens to assignment_statement 59.0
   WHEN                               => reduce 4 tokens to assignment_statement 59.0
   IDENTIFIER                         => reduce 4 tokens to assignment_statement 59.0
   Wisi_EOI                           => reduce 4 tokens to assignment_statement 59.0
   default                            => ERROR

   Minimal_Complete_Action => (assignment_statement)

State 242:
    117.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to nonterminal_032_list_opt 155.0
   EXIT                               => shift and goto state 3
   EXCEPTION                          => reduce 0 tokens to nonterminal_032_list_opt 155.0
   FOR                                => shift and goto state 4
   IF                                 => shift and goto state 6
   LOOP                               => shift and goto state 7
   RETURN                             => shift and goto state 10
   IDENTIFIER                         => shift and goto state 11
   default                            => ERROR

   assignment_statement               goto state 12
   block_label_opt                    goto state 13
   block_statement                    goto state 14
   case_statement                     goto state 15
   compound_statement                 goto state 18
   exit_statement                     goto state 19
   extended_return_statement          goto state 20
   handled_sequence_of_statements     goto state 284
   if_statement                       goto state 23
   iteration_scheme                   goto state 24
   loop_statement                     goto state 25
   name                               goto state 26
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements             goto state 168
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 83
   nonterminal_033                    goto state 84
   nonterminal_032_list_opt           goto state 85
   nonterminal_031_list               goto state 86

   Minimal_Complete_Action => (handled_sequence_of_statements)

State 243:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 285
   default                            => ERROR

   Minimal_Complete_Action => (BEGIN)

State 244:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL ^ EQUAL_GREATER sequence_of_statements, END/WHEN

   EQUAL_GREATER                      => shift and goto state 286
   default                            => ERROR

   Minimal_Complete_Action => (EQUAL_GREATER)

State 245:
     67.0:case_statement <= CASE expression IS nonterminal_006_list END ^ CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   CASE                               => shift and goto state 287
   default                            => ERROR

   Minimal_Complete_Action => (CASE)

State 246:
    130.1:nonterminal_006_list <= nonterminal_006_list nonterminal_007 ^, END/WHEN

   END                                => reduce 2 tokens to nonterminal_006_list 130.1
   WHEN                               => reduce 2 tokens to nonterminal_006_list 130.1
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_006_list)

State 247:
     76.0:enumeration_type_definition <= LEFT_PAREN ^ IDENTIFIER nonterminal_014_list_opt RIGHT_PAREN, SEMICOLON

   IDENTIFIER                         => shift and goto state 288
   default                            => ERROR

   Minimal_Complete_Action => (IDENTIFIER)

State 248:
    124.0:type_definition <= enumeration_type_definition ^, SEMICOLON

   SEMICOLON                          => reduce 1 tokens to type_definition 124.0
   default                            => ERROR

   Minimal_Complete_Action => (type_definition)

State 249:
     85.0:full_type_declaration <= TYPE IDENTIFIER IS type_definition ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   SEMICOLON                          => shift and goto state 289
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 250:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
     91.0:index_constraint <= LEFT_PAREN ^ discrete_subtype_definition RIGHT_PAREN, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON
     95.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 171
   default                            => ERROR

   association                        goto state 172
   association_list                   goto state 173
   discrete_subtype_definition        goto state 290
   expression                         goto state 174
   factor                             goto state 47
   name                               goto state 207
   paren_expression                   goto state 49
   primary                            goto state 50
   range_g                            goto state 291
   range_list                         goto state 176
   relation                           goto state 51
   selected_component                 goto state 30
   simple_expression                  goto state 177
   subtype_indication                 goto state 210
   term                               goto state 53
   unary_adding_operator              goto state 54
   nonterminal_048                    goto state 178

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 251:
     72.0:constraint <= RANGE ^ range_g, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   range_g                            goto state 292
   selected_component                 goto state 30
   simple_expression                  goto state 209
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 252:
    121.0:subtype_indication <= name constraint ^, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LOOP                               => reduce 2 tokens to subtype_indication 121.0
   RIGHT_PAREN                        => reduce 2 tokens to subtype_indication 121.0
   COLON_EQUAL                        => reduce 2 tokens to subtype_indication 121.0
   SEMICOLON                          => reduce 2 tokens to subtype_indication 121.0
   default                            => ERROR

   Minimal_Complete_Action => (subtype_indication)

State 253:
     72.1:constraint <= index_constraint ^, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LOOP                               => reduce 1 tokens to constraint 72.1
   RIGHT_PAREN                        => reduce 1 tokens to constraint 72.1
   COLON_EQUAL                        => reduce 1 tokens to constraint 72.1
   SEMICOLON                          => reduce 1 tokens to constraint 72.1
   default                            => ERROR

   Minimal_Complete_Action => (constraint)

State 254:
    166.0:nonterminal_043 <= COLON_EQUAL ^ expression, SEMICOLON

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   expression                         goto state 293
   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   relation                           goto state 51
   selected_component                 goto state 30
   simple_expression                  goto state 52
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 255:
     97.1:object_declaration <= IDENTIFIER COLON subtype_indication SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 4 tokens to object_declaration 97.1
   END                                => reduce 4 tokens to object_declaration 97.1
   FUNCTION                           => reduce 4 tokens to object_declaration 97.1
   PACKAGE                            => reduce 4 tokens to object_declaration 97.1
   PROCEDURE                          => reduce 4 tokens to object_declaration 97.1
   TYPE                               => reduce 4 tokens to object_declaration 97.1
   IDENTIFIER                         => reduce 4 tokens to object_declaration 97.1
   default                            => ERROR

   Minimal_Complete_Action => (object_declaration)

State 256:
     97.0:object_declaration <= IDENTIFIER COLON subtype_indication nonterminal_043 ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   SEMICOLON                          => shift and goto state 294
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 257:
    118.0:subprogram_body_stub <= subprogram_specification IS SEPARATE SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 4 tokens to subprogram_body_stub 118.0
   END                                => reduce 4 tokens to subprogram_body_stub 118.0
   FUNCTION                           => reduce 4 tokens to subprogram_body_stub 118.0
   PACKAGE                            => reduce 4 tokens to subprogram_body_stub 118.0
   PROCEDURE                          => reduce 4 tokens to subprogram_body_stub 118.0
   TYPE                               => reduce 4 tokens to subprogram_body_stub 118.0
   IDENTIFIER                         => reduce 4 tokens to subprogram_body_stub 118.0
   default                            => ERROR

   Minimal_Complete_Action => (subprogram_body_stub)

State 258:
    101.0:parameter_specification <= IDENTIFIER COLON ^ IDENTIFIER nonterminal_041, RIGHT_PAREN/SEMICOLON
    101.1:parameter_specification <= IDENTIFIER COLON ^ IDENTIFIER, RIGHT_PAREN/SEMICOLON

   IDENTIFIER                         => shift and goto state 295
   default                            => ERROR

   Minimal_Complete_Action => (IDENTIFIER)

State 259:
    145.0:nonterminal_024 <= SEMICOLON ^ parameter_specification, RIGHT_PAREN/SEMICOLON

   IDENTIFIER                         => shift and goto state 296
   default                            => ERROR

   parameter_specification            goto state 297

   Minimal_Complete_Action => (IDENTIFIER)

State 260:
    147.0:nonterminal_022_list <= nonterminal_024 ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_022_list 147.0
   SEMICOLON                          => reduce 1 tokens to nonterminal_022_list 147.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_022_list)

State 261:
     84.0:formal_part <= LEFT_PAREN parameter_specification nonterminal_023_list_opt ^ RIGHT_PAREN, IS/RETURN/WITH/SEMICOLON

   RIGHT_PAREN                        => shift and goto state 298
   default                            => ERROR

   Minimal_Complete_Action => (RIGHT_PAREN)

State 262:
    146.1:nonterminal_023_list_opt <= nonterminal_022_list ^, RIGHT_PAREN
    147.1:nonterminal_022_list <= nonterminal_022_list ^ nonterminal_024, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_023_list_opt 146.1
   SEMICOLON                          => shift and goto state 259
   default                            => ERROR

   nonterminal_024                    goto state 299

   Minimal_Complete_Action => (nonterminal_023_list_opt)

State 263:
     99.0:parameter_and_result_profile <= formal_part RETURN IDENTIFIER ^, IS/WITH/SEMICOLON

   IS                                 => reduce 3 tokens to parameter_and_result_profile 99.0
   WITH                               => reduce 3 tokens to parameter_and_result_profile 99.0
   SEMICOLON                          => reduce 3 tokens to parameter_and_result_profile 99.0
   default                            => ERROR

   Minimal_Complete_Action => (parameter_and_result_profile)

State 264:
    151.0:nonterminal_030 <= ELSIF ^ expression THEN sequence_of_statements, ELSE/ELSIF/END

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   expression                         goto state 300
   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   relation                           goto state 51
   selected_component                 goto state 30
   simple_expression                  goto state 52
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 265:
    153.0:nonterminal_028_list <= nonterminal_030 ^, ELSE/ELSIF/END

   ELSE                               => reduce 1 tokens to nonterminal_028_list 153.0
   ELSIF                              => reduce 1 tokens to nonterminal_028_list 153.0
   END                                => reduce 1 tokens to nonterminal_028_list 153.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_028_list)

State 266:
     90.0:if_statement <= IF expression THEN sequence_of_statements nonterminal_029_list_opt ^ nonterminal_044 END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.1:if_statement <= IF expression THEN sequence_of_statements nonterminal_029_list_opt ^ END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   ELSE                               => shift and goto state 301
   END                                => shift and goto state 302
   default                            => ERROR

   nonterminal_044                    goto state 303

   Minimal_Complete_Action => (END)

State 267:
    152.1:nonterminal_029_list_opt <= nonterminal_028_list ^, ELSE/END
    153.1:nonterminal_028_list <= nonterminal_028_list ^ nonterminal_030, ELSE/ELSIF/END

   ELSE                               => reduce 1 tokens to nonterminal_029_list_opt 152.1
   ELSIF                              => shift and goto state 264
   END                                => reduce 1 tokens to nonterminal_029_list_opt 152.1
   default                            => ERROR

   nonterminal_030                    goto state 304

   Minimal_Complete_Action => (nonterminal_029_list_opt)

State 268:
     89.0:identifier_opt <= IDENTIFIER ^, SEMICOLON

   SEMICOLON                          => reduce 1 tokens to identifier_opt 89.0
   default                            => ERROR

   Minimal_Complete_Action => (identifier_opt)

State 269:
     93.1:loop_statement <= LOOP sequence_of_statements END LOOP identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 305
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 270:
     98.1:package_body <= PACKAGE BODY name IS declarative_part ^ nonterminal_042 END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.3:package_body <= PACKAGE BODY name IS declarative_part ^ END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 306
   END                                => shift and goto state 307
   default                            => ERROR

   nonterminal_042                    goto state 308

   Minimal_Complete_Action => (END)

State 271:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS ^ declarative_part nonterminal_042 END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.2:package_body <= PACKAGE BODY name aspect_specification IS ^ declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to nonterminal_011_list_opt 134.0
   END                                => reduce 0 tokens to nonterminal_011_list_opt 134.0
   FUNCTION                           => shift and goto state 5
   PACKAGE                            => shift and goto state 55
   PROCEDURE                          => shift and goto state 56
   TYPE                               => shift and goto state 57
   IDENTIFIER                         => shift and goto state 58
   default                            => ERROR

   body_g                             goto state 59
   body_stub                          goto state 60
   declaration                        goto state 61
   declarative_part                   goto state 309
   full_type_declaration              goto state 63
   function_specification             goto state 21
   object_declaration                 goto state 64
   package_body                       goto state 65
   procedure_specification            goto state 29
   proper_body                        goto state 66
   subprogram_body                    goto state 67
   subprogram_body_stub               goto state 68
   subprogram_declaration             goto state 69
   subprogram_specification           goto state 70
   type_declaration                   goto state 71
   nonterminal_012                    goto state 72
   nonterminal_011_list_opt           goto state 73
   nonterminal_010_list               goto state 74

   Minimal_Complete_Action => (declarative_part)

State 272:
     87.0:generic_instantiation <= PACKAGE name IS NEW name ^ SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/DOT/SEMICOLON
     95.1:name <= name ^ actual_parameter_part, LEFT_PAREN/DOT/SEMICOLON
    111.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 97
   DOT                                => shift and goto state 99
   SEMICOLON                          => shift and goto state 310
   default                            => ERROR

   actual_parameter_part              goto state 101

   Minimal_Complete_Action => (SEMICOLON)

State 273:
     87.1:generic_instantiation <= PROCEDURE name IS NEW name ^ SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/DOT/SEMICOLON
     95.1:name <= name ^ actual_parameter_part, LEFT_PAREN/DOT/SEMICOLON
    111.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 97
   DOT                                => shift and goto state 99
   SEMICOLON                          => shift and goto state 311
   default                            => ERROR

   actual_parameter_part              goto state 101

   Minimal_Complete_Action => (SEMICOLON)

State 274:
     78.0:exception_handler <= WHEN exception_choice ^ EQUAL_GREATER sequence_of_statements, END/WHEN

   EQUAL_GREATER                      => shift and goto state 312
   default                            => ERROR

   Minimal_Complete_Action => (EQUAL_GREATER)

State 275:
     77.0:exception_choice <= name ^, EQUAL_GREATER
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/DOT/EQUAL_GREATER
     95.1:name <= name ^ actual_parameter_part, LEFT_PAREN/DOT/EQUAL_GREATER
    111.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/DOT/EQUAL_GREATER

   LEFT_PAREN                         => shift and goto state 97
   DOT                                => shift and goto state 99
   EQUAL_GREATER                      => reduce 1 tokens to exception_choice 77.0
   default                            => ERROR

   actual_parameter_part              goto state 101

   Minimal_Complete_Action => (exception_choice)

State 276:
    150.1:nonterminal_025_list <= nonterminal_025_list nonterminal_027 ^, END/WHEN

   END                                => reduce 2 tokens to nonterminal_025_list 150.1
   WHEN                               => reduce 2 tokens to nonterminal_025_list 150.1
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_025_list)

State 277:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 313
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 278:
     64.0:block_statement <= block_label_opt nonterminal_047 BEGIN handled_sequence_of_statements END ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to identifier_opt 89.1
   IDENTIFIER                         => shift and goto state 268
   default                            => ERROR

   identifier_opt                     goto state 314

   Minimal_Complete_Action => (identifier_opt)

State 279:
     93.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to identifier_opt 89.1
   IDENTIFIER                         => shift and goto state 268
   default                            => ERROR

   identifier_opt                     goto state 315

   Minimal_Complete_Action => (identifier_opt)

State 280:
    126.0:nonterminal_005 <= COMMA association ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 2 tokens to nonterminal_005 126.0
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_005 126.0
   COMMA                              => reduce 2 tokens to nonterminal_005 126.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_005)

State 281:
    128.1:nonterminal_003_list <= nonterminal_003_list nonterminal_005 ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 2 tokens to nonterminal_003_list 128.1
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_003_list 128.1
   COMMA                              => reduce 2 tokens to nonterminal_003_list 128.1
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_003_list)

State 282:
    108.0:range_list <= range_list COMMA range_g ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 3 tokens to range_list 108.0
   COMMA                              => reduce 3 tokens to range_list 108.0
   default                            => ERROR

   Minimal_Complete_Action => (range_list)

State 283:
    107.0:range_g <= simple_expression DOT_DOT simple_expression ^, LOOP/RIGHT_PAREN/COLON_EQUAL/COMMA/SEMICOLON

   LOOP                               => reduce 3 tokens to range_g 107.0
   RIGHT_PAREN                        => reduce 3 tokens to range_g 107.0
   COLON_EQUAL                        => reduce 3 tokens to range_g 107.0
   COMMA                              => reduce 3 tokens to range_g 107.0
   SEMICOLON                          => reduce 3 tokens to range_g 107.0
   default                            => ERROR

   Minimal_Complete_Action => (range_g)

State 284:
    117.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 316
   default                            => ERROR

   Minimal_Complete_Action => (END)

State 285:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to nonterminal_032_list_opt 155.0
   EXIT                               => shift and goto state 3
   EXCEPTION                          => reduce 0 tokens to nonterminal_032_list_opt 155.0
   FOR                                => shift and goto state 4
   IF                                 => shift and goto state 6
   LOOP                               => shift and goto state 7
   RETURN                             => shift and goto state 10
   IDENTIFIER                         => shift and goto state 11
   default                            => ERROR

   assignment_statement               goto state 12
   block_label_opt                    goto state 13
   block_statement                    goto state 14
   case_statement                     goto state 15
   compound_statement                 goto state 18
   exit_statement                     goto state 19
   extended_return_statement          goto state 20
   handled_sequence_of_statements     goto state 317
   if_statement                       goto state 23
   iteration_scheme                   goto state 24
   loop_statement                     goto state 25
   name                               goto state 26
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements             goto state 168
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 83
   nonterminal_033                    goto state 84
   nonterminal_032_list_opt           goto state 85
   nonterminal_031_list               goto state 86

   Minimal_Complete_Action => (handled_sequence_of_statements)

State 286:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER ^ sequence_of_statements, END/WHEN

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to nonterminal_032_list_opt 155.0
   EXIT                               => shift and goto state 3
   FOR                                => shift and goto state 4
   IF                                 => shift and goto state 6
   LOOP                               => shift and goto state 7
   RETURN                             => shift and goto state 10
   WHEN                               => reduce 0 tokens to nonterminal_032_list_opt 155.0
   IDENTIFIER                         => shift and goto state 11
   default                            => ERROR

   assignment_statement               goto state 12
   block_label_opt                    goto state 13
   block_statement                    goto state 14
   case_statement                     goto state 15
   compound_statement                 goto state 18
   exit_statement                     goto state 19
   extended_return_statement          goto state 20
   if_statement                       goto state 23
   iteration_scheme                   goto state 24
   loop_statement                     goto state 25
   name                               goto state 26
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements             goto state 318
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 83
   nonterminal_033                    goto state 84
   nonterminal_032_list_opt           goto state 85
   nonterminal_031_list               goto state 86

   Minimal_Complete_Action => (sequence_of_statements)

State 287:
     67.0:case_statement <= CASE expression IS nonterminal_006_list END CASE ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 319
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 288:
     76.0:enumeration_type_definition <= LEFT_PAREN IDENTIFIER ^ nonterminal_014_list_opt RIGHT_PAREN, SEMICOLON

   RIGHT_PAREN                        => reduce 0 tokens to nonterminal_014_list_opt 137.0
   COMMA                              => shift and goto state 320
   default                            => ERROR

   nonterminal_015                    goto state 321
   nonterminal_014_list_opt           goto state 322
   nonterminal_013_list               goto state 323

   Minimal_Complete_Action => (nonterminal_014_list_opt)

State 289:
     85.0:full_type_declaration <= TYPE IDENTIFIER IS type_definition SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 5 tokens to full_type_declaration 85.0
   END                                => reduce 5 tokens to full_type_declaration 85.0
   FUNCTION                           => reduce 5 tokens to full_type_declaration 85.0
   PACKAGE                            => reduce 5 tokens to full_type_declaration 85.0
   PROCEDURE                          => reduce 5 tokens to full_type_declaration 85.0
   TYPE                               => reduce 5 tokens to full_type_declaration 85.0
   IDENTIFIER                         => reduce 5 tokens to full_type_declaration 85.0
   default                            => ERROR

   Minimal_Complete_Action => (full_type_declaration)

State 290:
     91.0:index_constraint <= LEFT_PAREN discrete_subtype_definition ^ RIGHT_PAREN, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   RIGHT_PAREN                        => shift and goto state 324
   default                            => ERROR

   Minimal_Complete_Action => (RIGHT_PAREN)

State 291:
     75.1:discrete_subtype_definition <= range_g ^, RIGHT_PAREN
    108.1:range_list <= range_g ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 1 tokens to discrete_subtype_definition 75.1,
                                         reduce 1 tokens to range_list 108.1
   COMMA                              => reduce 1 tokens to range_list 108.1
   default                            => ERROR

   Minimal_Complete_Action => (discrete_subtype_definition)

State 292:
     72.0:constraint <= RANGE range_g ^, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LOOP                               => reduce 2 tokens to constraint 72.0
   RIGHT_PAREN                        => reduce 2 tokens to constraint 72.0
   COLON_EQUAL                        => reduce 2 tokens to constraint 72.0
   SEMICOLON                          => reduce 2 tokens to constraint 72.0
   default                            => ERROR

   Minimal_Complete_Action => (constraint)

State 293:
    166.0:nonterminal_043 <= COLON_EQUAL expression ^, SEMICOLON

   SEMICOLON                          => reduce 2 tokens to nonterminal_043 166.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_043)

State 294:
     97.0:object_declaration <= IDENTIFIER COLON subtype_indication nonterminal_043 SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 5 tokens to object_declaration 97.0
   END                                => reduce 5 tokens to object_declaration 97.0
   FUNCTION                           => reduce 5 tokens to object_declaration 97.0
   PACKAGE                            => reduce 5 tokens to object_declaration 97.0
   PROCEDURE                          => reduce 5 tokens to object_declaration 97.0
   TYPE                               => reduce 5 tokens to object_declaration 97.0
   IDENTIFIER                         => reduce 5 tokens to object_declaration 97.0
   default                            => ERROR

   Minimal_Complete_Action => (object_declaration)

State 295:
    101.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER ^ nonterminal_041, RIGHT_PAREN/SEMICOLON
    101.1:parameter_specification <= IDENTIFIER COLON IDENTIFIER ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 3 tokens to parameter_specification 101.1
   COLON_EQUAL                        => shift and goto state 325
   SEMICOLON                          => reduce 3 tokens to parameter_specification 101.1
   default                            => ERROR

   nonterminal_041                    goto state 326

   Minimal_Complete_Action => (parameter_specification)

State 296:
    101.0:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER nonterminal_041, RIGHT_PAREN/SEMICOLON
    101.1:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER, RIGHT_PAREN/SEMICOLON

   COLON                              => shift and goto state 258
   default                            => ERROR

   Minimal_Complete_Action => (COLON)

State 297:
    145.0:nonterminal_024 <= SEMICOLON parameter_specification ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_024 145.0
   SEMICOLON                          => reduce 2 tokens to nonterminal_024 145.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_024)

State 298:
     84.0:formal_part <= LEFT_PAREN parameter_specification nonterminal_023_list_opt RIGHT_PAREN ^, IS/RETURN/WITH/SEMICOLON

   IS                                 => reduce 4 tokens to formal_part 84.0
   RETURN                             => reduce 4 tokens to formal_part 84.0
   WITH                               => reduce 4 tokens to formal_part 84.0
   SEMICOLON                          => reduce 4 tokens to formal_part 84.0
   default                            => ERROR

   Minimal_Complete_Action => (formal_part)

State 299:
    147.1:nonterminal_022_list <= nonterminal_022_list nonterminal_024 ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_022_list 147.1
   SEMICOLON                          => reduce 2 tokens to nonterminal_022_list 147.1
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_022_list)

State 300:
    151.0:nonterminal_030 <= ELSIF expression ^ THEN sequence_of_statements, ELSE/ELSIF/END

   THEN                               => shift and goto state 327
   default                            => ERROR

   Minimal_Complete_Action => (THEN)

State 301:
    167.0:nonterminal_044 <= ELSE ^ sequence_of_statements, END

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to nonterminal_032_list_opt 155.0
   EXIT                               => shift and goto state 3
   FOR                                => shift and goto state 4
   IF                                 => shift and goto state 6
   LOOP                               => shift and goto state 7
   RETURN                             => shift and goto state 10
   IDENTIFIER                         => shift and goto state 11
   default                            => ERROR

   assignment_statement               goto state 12
   block_label_opt                    goto state 13
   block_statement                    goto state 14
   case_statement                     goto state 15
   compound_statement                 goto state 18
   exit_statement                     goto state 19
   extended_return_statement          goto state 20
   if_statement                       goto state 23
   iteration_scheme                   goto state 24
   loop_statement                     goto state 25
   name                               goto state 26
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements             goto state 328
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 83
   nonterminal_033                    goto state 84
   nonterminal_032_list_opt           goto state 85
   nonterminal_031_list               goto state 86

   Minimal_Complete_Action => (sequence_of_statements)

State 302:
     90.1:if_statement <= IF expression THEN sequence_of_statements nonterminal_029_list_opt END ^ IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   IF                                 => shift and goto state 329
   default                            => ERROR

   Minimal_Complete_Action => (IF)

State 303:
     90.0:if_statement <= IF expression THEN sequence_of_statements nonterminal_029_list_opt nonterminal_044 ^ END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 330
   default                            => ERROR

   Minimal_Complete_Action => (END)

State 304:
    153.1:nonterminal_028_list <= nonterminal_028_list nonterminal_030 ^, ELSE/ELSIF/END

   ELSE                               => reduce 2 tokens to nonterminal_028_list 153.1
   ELSIF                              => reduce 2 tokens to nonterminal_028_list 153.1
   END                                => reduce 2 tokens to nonterminal_028_list 153.1
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_028_list)

State 305:
     93.1:loop_statement <= LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 6 tokens to loop_statement 93.1
   CASE                               => reduce 6 tokens to loop_statement 93.1
   DECLARE                            => reduce 6 tokens to loop_statement 93.1
   ELSE                               => reduce 6 tokens to loop_statement 93.1
   ELSIF                              => reduce 6 tokens to loop_statement 93.1
   END                                => reduce 6 tokens to loop_statement 93.1
   EXIT                               => reduce 6 tokens to loop_statement 93.1
   EXCEPTION                          => reduce 6 tokens to loop_statement 93.1
   FOR                                => reduce 6 tokens to loop_statement 93.1
   FUNCTION                           => reduce 6 tokens to loop_statement 93.1
   IF                                 => reduce 6 tokens to loop_statement 93.1
   LOOP                               => reduce 6 tokens to loop_statement 93.1
   PACKAGE                            => reduce 6 tokens to loop_statement 93.1
   PROCEDURE                          => reduce 6 tokens to loop_statement 93.1
   RETURN                             => reduce 6 tokens to loop_statement 93.1
   WHEN                               => reduce 6 tokens to loop_statement 93.1
   IDENTIFIER                         => reduce 6 tokens to loop_statement 93.1
   Wisi_EOI                           => reduce 6 tokens to loop_statement 93.1
   default                            => ERROR

   Minimal_Complete_Action => (loop_statement)

State 306:
    165.0:nonterminal_042 <= BEGIN ^ handled_sequence_of_statements, END

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to nonterminal_032_list_opt 155.0
   EXIT                               => shift and goto state 3
   EXCEPTION                          => reduce 0 tokens to nonterminal_032_list_opt 155.0
   FOR                                => shift and goto state 4
   IF                                 => shift and goto state 6
   LOOP                               => shift and goto state 7
   RETURN                             => shift and goto state 10
   IDENTIFIER                         => shift and goto state 11
   default                            => ERROR

   assignment_statement               goto state 12
   block_label_opt                    goto state 13
   block_statement                    goto state 14
   case_statement                     goto state 15
   compound_statement                 goto state 18
   exit_statement                     goto state 19
   extended_return_statement          goto state 20
   handled_sequence_of_statements     goto state 331
   if_statement                       goto state 23
   iteration_scheme                   goto state 24
   loop_statement                     goto state 25
   name                               goto state 26
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements             goto state 168
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 83
   nonterminal_033                    goto state 84
   nonterminal_032_list_opt           goto state 85
   nonterminal_031_list               goto state 86

   Minimal_Complete_Action => (handled_sequence_of_statements)

State 307:
     98.3:package_body <= PACKAGE BODY name IS declarative_part END ^ name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   name                               goto state 332
   name_opt                           goto state 333
   selected_component                 goto state 30

   Minimal_Complete_Action => (name_opt)

State 308:
     98.1:package_body <= PACKAGE BODY name IS declarative_part nonterminal_042 ^ END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 334
   default                            => ERROR

   Minimal_Complete_Action => (END)

State 309:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part ^ nonterminal_042 END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.2:package_body <= PACKAGE BODY name aspect_specification IS declarative_part ^ END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 306
   END                                => shift and goto state 335
   default                            => ERROR

   nonterminal_042                    goto state 336

   Minimal_Complete_Action => (END)

State 310:
     87.0:generic_instantiation <= PACKAGE name IS NEW name SEMICOLON ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 6 tokens to generic_instantiation 87.0
   CASE                               => reduce 6 tokens to generic_instantiation 87.0
   DECLARE                            => reduce 6 tokens to generic_instantiation 87.0
   EXIT                               => reduce 6 tokens to generic_instantiation 87.0
   FOR                                => reduce 6 tokens to generic_instantiation 87.0
   FUNCTION                           => reduce 6 tokens to generic_instantiation 87.0
   IF                                 => reduce 6 tokens to generic_instantiation 87.0
   LOOP                               => reduce 6 tokens to generic_instantiation 87.0
   PACKAGE                            => reduce 6 tokens to generic_instantiation 87.0
   PROCEDURE                          => reduce 6 tokens to generic_instantiation 87.0
   RETURN                             => reduce 6 tokens to generic_instantiation 87.0
   IDENTIFIER                         => reduce 6 tokens to generic_instantiation 87.0
   Wisi_EOI                           => reduce 6 tokens to generic_instantiation 87.0
   default                            => ERROR

   Minimal_Complete_Action => (generic_instantiation)

State 311:
     87.1:generic_instantiation <= PROCEDURE name IS NEW name SEMICOLON ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 6 tokens to generic_instantiation 87.1
   CASE                               => reduce 6 tokens to generic_instantiation 87.1
   DECLARE                            => reduce 6 tokens to generic_instantiation 87.1
   EXIT                               => reduce 6 tokens to generic_instantiation 87.1
   FOR                                => reduce 6 tokens to generic_instantiation 87.1
   FUNCTION                           => reduce 6 tokens to generic_instantiation 87.1
   IF                                 => reduce 6 tokens to generic_instantiation 87.1
   LOOP                               => reduce 6 tokens to generic_instantiation 87.1
   PACKAGE                            => reduce 6 tokens to generic_instantiation 87.1
   PROCEDURE                          => reduce 6 tokens to generic_instantiation 87.1
   RETURN                             => reduce 6 tokens to generic_instantiation 87.1
   IDENTIFIER                         => reduce 6 tokens to generic_instantiation 87.1
   Wisi_EOI                           => reduce 6 tokens to generic_instantiation 87.1
   default                            => ERROR

   Minimal_Complete_Action => (generic_instantiation)

State 312:
     78.0:exception_handler <= WHEN exception_choice EQUAL_GREATER ^ sequence_of_statements, END/WHEN

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to nonterminal_032_list_opt 155.0
   EXIT                               => shift and goto state 3
   FOR                                => shift and goto state 4
   IF                                 => shift and goto state 6
   LOOP                               => shift and goto state 7
   RETURN                             => shift and goto state 10
   WHEN                               => reduce 0 tokens to nonterminal_032_list_opt 155.0
   IDENTIFIER                         => shift and goto state 11
   default                            => ERROR

   assignment_statement               goto state 12
   block_label_opt                    goto state 13
   block_statement                    goto state 14
   case_statement                     goto state 15
   compound_statement                 goto state 18
   exit_statement                     goto state 19
   extended_return_statement          goto state 20
   if_statement                       goto state 23
   iteration_scheme                   goto state 24
   loop_statement                     goto state 25
   name                               goto state 26
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements             goto state 337
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 83
   nonterminal_033                    goto state 84
   nonterminal_032_list_opt           goto state 85
   nonterminal_031_list               goto state 86

   Minimal_Complete_Action => (sequence_of_statements)

State 313:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 6 tokens to block_statement 64.1
   CASE                               => reduce 6 tokens to block_statement 64.1
   DECLARE                            => reduce 6 tokens to block_statement 64.1
   ELSE                               => reduce 6 tokens to block_statement 64.1
   ELSIF                              => reduce 6 tokens to block_statement 64.1
   END                                => reduce 6 tokens to block_statement 64.1
   EXIT                               => reduce 6 tokens to block_statement 64.1
   EXCEPTION                          => reduce 6 tokens to block_statement 64.1
   FOR                                => reduce 6 tokens to block_statement 64.1
   FUNCTION                           => reduce 6 tokens to block_statement 64.1
   IF                                 => reduce 6 tokens to block_statement 64.1
   LOOP                               => reduce 6 tokens to block_statement 64.1
   PACKAGE                            => reduce 6 tokens to block_statement 64.1
   PROCEDURE                          => reduce 6 tokens to block_statement 64.1
   RETURN                             => reduce 6 tokens to block_statement 64.1
   WHEN                               => reduce 6 tokens to block_statement 64.1
   IDENTIFIER                         => reduce 6 tokens to block_statement 64.1
   Wisi_EOI                           => reduce 6 tokens to block_statement 64.1
   default                            => ERROR

   Minimal_Complete_Action => (block_statement)

State 314:
     64.0:block_statement <= block_label_opt nonterminal_047 BEGIN handled_sequence_of_statements END identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 338
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 315:
     93.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 339
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 316:
    117.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   name                               goto state 332
   name_opt                           goto state 340
   selected_component                 goto state 30

   Minimal_Complete_Action => (name_opt)

State 317:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 341
   default                            => ERROR

   Minimal_Complete_Action => (END)

State 318:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements ^, END/WHEN

   END                                => reduce 4 tokens to case_statement_alternative 68.0
   WHEN                               => reduce 4 tokens to case_statement_alternative 68.0
   default                            => ERROR

   Minimal_Complete_Action => (case_statement_alternative)

State 319:
     67.0:case_statement <= CASE expression IS nonterminal_006_list END CASE SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 7 tokens to case_statement 67.0
   CASE                               => reduce 7 tokens to case_statement 67.0
   DECLARE                            => reduce 7 tokens to case_statement 67.0
   ELSE                               => reduce 7 tokens to case_statement 67.0
   ELSIF                              => reduce 7 tokens to case_statement 67.0
   END                                => reduce 7 tokens to case_statement 67.0
   EXIT                               => reduce 7 tokens to case_statement 67.0
   EXCEPTION                          => reduce 7 tokens to case_statement 67.0
   FOR                                => reduce 7 tokens to case_statement 67.0
   FUNCTION                           => reduce 7 tokens to case_statement 67.0
   IF                                 => reduce 7 tokens to case_statement 67.0
   LOOP                               => reduce 7 tokens to case_statement 67.0
   PACKAGE                            => reduce 7 tokens to case_statement 67.0
   PROCEDURE                          => reduce 7 tokens to case_statement 67.0
   RETURN                             => reduce 7 tokens to case_statement 67.0
   WHEN                               => reduce 7 tokens to case_statement 67.0
   IDENTIFIER                         => reduce 7 tokens to case_statement 67.0
   Wisi_EOI                           => reduce 7 tokens to case_statement 67.0
   default                            => ERROR

   Minimal_Complete_Action => (case_statement)

State 320:
    136.0:nonterminal_015 <= COMMA ^ IDENTIFIER, RIGHT_PAREN/COMMA

   IDENTIFIER                         => shift and goto state 342
   default                            => ERROR

   Minimal_Complete_Action => (IDENTIFIER)

State 321:
    138.0:nonterminal_013_list <= nonterminal_015 ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_013_list 138.0
   COMMA                              => reduce 1 tokens to nonterminal_013_list 138.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_013_list)

State 322:
     76.0:enumeration_type_definition <= LEFT_PAREN IDENTIFIER nonterminal_014_list_opt ^ RIGHT_PAREN, SEMICOLON

   RIGHT_PAREN                        => shift and goto state 343
   default                            => ERROR

   Minimal_Complete_Action => (RIGHT_PAREN)

State 323:
    137.1:nonterminal_014_list_opt <= nonterminal_013_list ^, RIGHT_PAREN
    138.1:nonterminal_013_list <= nonterminal_013_list ^ nonterminal_015, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_014_list_opt 137.1
   COMMA                              => shift and goto state 320
   default                            => ERROR

   nonterminal_015                    goto state 344

   Minimal_Complete_Action => (nonterminal_014_list_opt)

State 324:
     91.0:index_constraint <= LEFT_PAREN discrete_subtype_definition RIGHT_PAREN ^, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LOOP                               => reduce 3 tokens to index_constraint 91.0
   RIGHT_PAREN                        => reduce 3 tokens to index_constraint 91.0
   COLON_EQUAL                        => reduce 3 tokens to index_constraint 91.0
   SEMICOLON                          => reduce 3 tokens to index_constraint 91.0
   default                            => ERROR

   Minimal_Complete_Action => (index_constraint)

State 325:
    164.0:nonterminal_041 <= COLON_EQUAL ^ expression, RIGHT_PAREN/SEMICOLON

   LEFT_PAREN                         => shift and goto state 39
   NOT                                => shift and goto state 40
   MINUS                              => shift and goto state 41
   PLUS                               => shift and goto state 42
   STRING_LITERAL                     => shift and goto state 43
   NUMERIC_LITERAL                    => shift and goto state 44
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   expression                         goto state 345
   factor                             goto state 47
   name                               goto state 48
   paren_expression                   goto state 49
   primary                            goto state 50
   relation                           goto state 51
   selected_component                 goto state 30
   simple_expression                  goto state 52
   term                               goto state 53
   unary_adding_operator              goto state 54

   Minimal_Complete_Action => (NUMERIC_LITERAL)

State 326:
    101.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER nonterminal_041 ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 4 tokens to parameter_specification 101.0
   SEMICOLON                          => reduce 4 tokens to parameter_specification 101.0
   default                            => ERROR

   Minimal_Complete_Action => (parameter_specification)

State 327:
    151.0:nonterminal_030 <= ELSIF expression THEN ^ sequence_of_statements, ELSE/ELSIF/END

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   ELSE                               => reduce 0 tokens to nonterminal_032_list_opt 155.0
   ELSIF                              => reduce 0 tokens to nonterminal_032_list_opt 155.0
   END                                => reduce 0 tokens to nonterminal_032_list_opt 155.0
   EXIT                               => shift and goto state 3
   FOR                                => shift and goto state 4
   IF                                 => shift and goto state 6
   LOOP                               => shift and goto state 7
   RETURN                             => shift and goto state 10
   IDENTIFIER                         => shift and goto state 11
   default                            => ERROR

   assignment_statement               goto state 12
   block_label_opt                    goto state 13
   block_statement                    goto state 14
   case_statement                     goto state 15
   compound_statement                 goto state 18
   exit_statement                     goto state 19
   extended_return_statement          goto state 20
   if_statement                       goto state 23
   iteration_scheme                   goto state 24
   loop_statement                     goto state 25
   name                               goto state 26
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements             goto state 346
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 83
   nonterminal_033                    goto state 84
   nonterminal_032_list_opt           goto state 85
   nonterminal_031_list               goto state 86

   Minimal_Complete_Action => (sequence_of_statements)

State 328:
    167.0:nonterminal_044 <= ELSE sequence_of_statements ^, END

   END                                => reduce 2 tokens to nonterminal_044 167.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_044)

State 329:
     90.1:if_statement <= IF expression THEN sequence_of_statements nonterminal_029_list_opt END IF ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 347
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 330:
     90.0:if_statement <= IF expression THEN sequence_of_statements nonterminal_029_list_opt nonterminal_044 END ^ IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   IF                                 => shift and goto state 348
   default                            => ERROR

   Minimal_Complete_Action => (IF)

State 331:
    165.0:nonterminal_042 <= BEGIN handled_sequence_of_statements ^, END

   END                                => reduce 2 tokens to nonterminal_042 165.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_042)

State 332:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/DOT/SEMICOLON
     95.1:name <= name ^ actual_parameter_part, LEFT_PAREN/DOT/SEMICOLON
     96.0:name_opt <= name ^, SEMICOLON
    111.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 97
   DOT                                => shift and goto state 99
   SEMICOLON                          => reduce 1 tokens to name_opt 96.0
   default                            => ERROR

   actual_parameter_part              goto state 101

   Minimal_Complete_Action => (name_opt)

State 333:
     98.3:package_body <= PACKAGE BODY name IS declarative_part END name_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 349
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 334:
     98.1:package_body <= PACKAGE BODY name IS declarative_part nonterminal_042 END ^ name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   name                               goto state 332
   name_opt                           goto state 350
   selected_component                 goto state 30

   Minimal_Complete_Action => (name_opt)

State 335:
     98.2:package_body <= PACKAGE BODY name aspect_specification IS declarative_part END ^ name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   name                               goto state 332
   name_opt                           goto state 351
   selected_component                 goto state 30

   Minimal_Complete_Action => (name_opt)

State 336:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part nonterminal_042 ^ END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 352
   default                            => ERROR

   Minimal_Complete_Action => (END)

State 337:
     78.0:exception_handler <= WHEN exception_choice EQUAL_GREATER sequence_of_statements ^, END/WHEN

   END                                => reduce 4 tokens to exception_handler 78.0
   WHEN                               => reduce 4 tokens to exception_handler 78.0
   default                            => ERROR

   Minimal_Complete_Action => (exception_handler)

State 338:
     64.0:block_statement <= block_label_opt nonterminal_047 BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 7 tokens to block_statement 64.0
   CASE                               => reduce 7 tokens to block_statement 64.0
   DECLARE                            => reduce 7 tokens to block_statement 64.0
   ELSE                               => reduce 7 tokens to block_statement 64.0
   ELSIF                              => reduce 7 tokens to block_statement 64.0
   END                                => reduce 7 tokens to block_statement 64.0
   EXIT                               => reduce 7 tokens to block_statement 64.0
   EXCEPTION                          => reduce 7 tokens to block_statement 64.0
   FOR                                => reduce 7 tokens to block_statement 64.0
   FUNCTION                           => reduce 7 tokens to block_statement 64.0
   IF                                 => reduce 7 tokens to block_statement 64.0
   LOOP                               => reduce 7 tokens to block_statement 64.0
   PACKAGE                            => reduce 7 tokens to block_statement 64.0
   PROCEDURE                          => reduce 7 tokens to block_statement 64.0
   RETURN                             => reduce 7 tokens to block_statement 64.0
   WHEN                               => reduce 7 tokens to block_statement 64.0
   IDENTIFIER                         => reduce 7 tokens to block_statement 64.0
   Wisi_EOI                           => reduce 7 tokens to block_statement 64.0
   default                            => ERROR

   Minimal_Complete_Action => (block_statement)

State 339:
     93.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 7 tokens to loop_statement 93.0
   CASE                               => reduce 7 tokens to loop_statement 93.0
   DECLARE                            => reduce 7 tokens to loop_statement 93.0
   ELSE                               => reduce 7 tokens to loop_statement 93.0
   ELSIF                              => reduce 7 tokens to loop_statement 93.0
   END                                => reduce 7 tokens to loop_statement 93.0
   EXIT                               => reduce 7 tokens to loop_statement 93.0
   EXCEPTION                          => reduce 7 tokens to loop_statement 93.0
   FOR                                => reduce 7 tokens to loop_statement 93.0
   FUNCTION                           => reduce 7 tokens to loop_statement 93.0
   IF                                 => reduce 7 tokens to loop_statement 93.0
   LOOP                               => reduce 7 tokens to loop_statement 93.0
   PACKAGE                            => reduce 7 tokens to loop_statement 93.0
   PROCEDURE                          => reduce 7 tokens to loop_statement 93.0
   RETURN                             => reduce 7 tokens to loop_statement 93.0
   WHEN                               => reduce 7 tokens to loop_statement 93.0
   IDENTIFIER                         => reduce 7 tokens to loop_statement 93.0
   Wisi_EOI                           => reduce 7 tokens to loop_statement 93.0
   default                            => ERROR

   Minimal_Complete_Action => (loop_statement)

State 340:
    117.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 353
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 341:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   name                               goto state 332
   name_opt                           goto state 354
   selected_component                 goto state 30

   Minimal_Complete_Action => (name_opt)

State 342:
    136.0:nonterminal_015 <= COMMA IDENTIFIER ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_015 136.0
   COMMA                              => reduce 2 tokens to nonterminal_015 136.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_015)

State 343:
     76.0:enumeration_type_definition <= LEFT_PAREN IDENTIFIER nonterminal_014_list_opt RIGHT_PAREN ^, SEMICOLON

   SEMICOLON                          => reduce 4 tokens to enumeration_type_definition 76.0
   default                            => ERROR

   Minimal_Complete_Action => (enumeration_type_definition)

State 344:
    138.1:nonterminal_013_list <= nonterminal_013_list nonterminal_015 ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_013_list 138.1
   COMMA                              => reduce 2 tokens to nonterminal_013_list 138.1
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_013_list)

State 345:
    164.0:nonterminal_041 <= COLON_EQUAL expression ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_041 164.0
   SEMICOLON                          => reduce 2 tokens to nonterminal_041 164.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_041)

State 346:
    151.0:nonterminal_030 <= ELSIF expression THEN sequence_of_statements ^, ELSE/ELSIF/END

   ELSE                               => reduce 4 tokens to nonterminal_030 151.0
   ELSIF                              => reduce 4 tokens to nonterminal_030 151.0
   END                                => reduce 4 tokens to nonterminal_030 151.0
   default                            => ERROR

   Minimal_Complete_Action => (nonterminal_030)

State 347:
     90.1:if_statement <= IF expression THEN sequence_of_statements nonterminal_029_list_opt END IF SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 8 tokens to if_statement 90.1
   CASE                               => reduce 8 tokens to if_statement 90.1
   DECLARE                            => reduce 8 tokens to if_statement 90.1
   ELSE                               => reduce 8 tokens to if_statement 90.1
   ELSIF                              => reduce 8 tokens to if_statement 90.1
   END                                => reduce 8 tokens to if_statement 90.1
   EXIT                               => reduce 8 tokens to if_statement 90.1
   EXCEPTION                          => reduce 8 tokens to if_statement 90.1
   FOR                                => reduce 8 tokens to if_statement 90.1
   FUNCTION                           => reduce 8 tokens to if_statement 90.1
   IF                                 => reduce 8 tokens to if_statement 90.1
   LOOP                               => reduce 8 tokens to if_statement 90.1
   PACKAGE                            => reduce 8 tokens to if_statement 90.1
   PROCEDURE                          => reduce 8 tokens to if_statement 90.1
   RETURN                             => reduce 8 tokens to if_statement 90.1
   WHEN                               => reduce 8 tokens to if_statement 90.1
   IDENTIFIER                         => reduce 8 tokens to if_statement 90.1
   Wisi_EOI                           => reduce 8 tokens to if_statement 90.1
   default                            => ERROR

   Minimal_Complete_Action => (if_statement)

State 348:
     90.0:if_statement <= IF expression THEN sequence_of_statements nonterminal_029_list_opt nonterminal_044 END IF ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 355
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 349:
     98.3:package_body <= PACKAGE BODY name IS declarative_part END name_opt SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 8 tokens to package_body 98.3
   CASE                               => reduce 8 tokens to package_body 98.3
   DECLARE                            => reduce 8 tokens to package_body 98.3
   END                                => reduce 8 tokens to package_body 98.3
   EXIT                               => reduce 8 tokens to package_body 98.3
   FOR                                => reduce 8 tokens to package_body 98.3
   FUNCTION                           => reduce 8 tokens to package_body 98.3
   IF                                 => reduce 8 tokens to package_body 98.3
   LOOP                               => reduce 8 tokens to package_body 98.3
   PACKAGE                            => reduce 8 tokens to package_body 98.3
   PROCEDURE                          => reduce 8 tokens to package_body 98.3
   RETURN                             => reduce 8 tokens to package_body 98.3
   TYPE                               => reduce 8 tokens to package_body 98.3
   IDENTIFIER                         => reduce 8 tokens to package_body 98.3
   Wisi_EOI                           => reduce 8 tokens to package_body 98.3
   default                            => ERROR

   Minimal_Complete_Action => (package_body)

State 350:
     98.1:package_body <= PACKAGE BODY name IS declarative_part nonterminal_042 END name_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 356
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 351:
     98.2:package_body <= PACKAGE BODY name aspect_specification IS declarative_part END name_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 357
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 352:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part nonterminal_042 END ^ name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                         => shift and goto state 45
   default                            => ERROR

   name                               goto state 332
   name_opt                           goto state 358
   selected_component                 goto state 30

   Minimal_Complete_Action => (name_opt)

State 353:
    117.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 8 tokens to subprogram_body 117.1
   CASE                               => reduce 8 tokens to subprogram_body 117.1
   DECLARE                            => reduce 8 tokens to subprogram_body 117.1
   END                                => reduce 8 tokens to subprogram_body 117.1
   EXIT                               => reduce 8 tokens to subprogram_body 117.1
   FOR                                => reduce 8 tokens to subprogram_body 117.1
   FUNCTION                           => reduce 8 tokens to subprogram_body 117.1
   IF                                 => reduce 8 tokens to subprogram_body 117.1
   LOOP                               => reduce 8 tokens to subprogram_body 117.1
   PACKAGE                            => reduce 8 tokens to subprogram_body 117.1
   PROCEDURE                          => reduce 8 tokens to subprogram_body 117.1
   RETURN                             => reduce 8 tokens to subprogram_body 117.1
   TYPE                               => reduce 8 tokens to subprogram_body 117.1
   IDENTIFIER                         => reduce 8 tokens to subprogram_body 117.1
   Wisi_EOI                           => reduce 8 tokens to subprogram_body 117.1
   default                            => ERROR

   Minimal_Complete_Action => (subprogram_body)

State 354:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 359
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 355:
     90.0:if_statement <= IF expression THEN sequence_of_statements nonterminal_029_list_opt nonterminal_044 END IF SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 9 tokens to if_statement 90.0
   CASE                               => reduce 9 tokens to if_statement 90.0
   DECLARE                            => reduce 9 tokens to if_statement 90.0
   ELSE                               => reduce 9 tokens to if_statement 90.0
   ELSIF                              => reduce 9 tokens to if_statement 90.0
   END                                => reduce 9 tokens to if_statement 90.0
   EXIT                               => reduce 9 tokens to if_statement 90.0
   EXCEPTION                          => reduce 9 tokens to if_statement 90.0
   FOR                                => reduce 9 tokens to if_statement 90.0
   FUNCTION                           => reduce 9 tokens to if_statement 90.0
   IF                                 => reduce 9 tokens to if_statement 90.0
   LOOP                               => reduce 9 tokens to if_statement 90.0
   PACKAGE                            => reduce 9 tokens to if_statement 90.0
   PROCEDURE                          => reduce 9 tokens to if_statement 90.0
   RETURN                             => reduce 9 tokens to if_statement 90.0
   WHEN                               => reduce 9 tokens to if_statement 90.0
   IDENTIFIER                         => reduce 9 tokens to if_statement 90.0
   Wisi_EOI                           => reduce 9 tokens to if_statement 90.0
   default                            => ERROR

   Minimal_Complete_Action => (if_statement)

State 356:
     98.1:package_body <= PACKAGE BODY name IS declarative_part nonterminal_042 END name_opt SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 9 tokens to package_body 98.1
   CASE                               => reduce 9 tokens to package_body 98.1
   DECLARE                            => reduce 9 tokens to package_body 98.1
   END                                => reduce 9 tokens to package_body 98.1
   EXIT                               => reduce 9 tokens to package_body 98.1
   FOR                                => reduce 9 tokens to package_body 98.1
   FUNCTION                           => reduce 9 tokens to package_body 98.1
   IF                                 => reduce 9 tokens to package_body 98.1
   LOOP                               => reduce 9 tokens to package_body 98.1
   PACKAGE                            => reduce 9 tokens to package_body 98.1
   PROCEDURE                          => reduce 9 tokens to package_body 98.1
   RETURN                             => reduce 9 tokens to package_body 98.1
   TYPE                               => reduce 9 tokens to package_body 98.1
   IDENTIFIER                         => reduce 9 tokens to package_body 98.1
   Wisi_EOI                           => reduce 9 tokens to package_body 98.1
   default                            => ERROR

   Minimal_Complete_Action => (package_body)

State 357:
     98.2:package_body <= PACKAGE BODY name aspect_specification IS declarative_part END name_opt SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 9 tokens to package_body 98.2
   CASE                               => reduce 9 tokens to package_body 98.2
   DECLARE                            => reduce 9 tokens to package_body 98.2
   END                                => reduce 9 tokens to package_body 98.2
   EXIT                               => reduce 9 tokens to package_body 98.2
   FOR                                => reduce 9 tokens to package_body 98.2
   FUNCTION                           => reduce 9 tokens to package_body 98.2
   IF                                 => reduce 9 tokens to package_body 98.2
   LOOP                               => reduce 9 tokens to package_body 98.2
   PACKAGE                            => reduce 9 tokens to package_body 98.2
   PROCEDURE                          => reduce 9 tokens to package_body 98.2
   RETURN                             => reduce 9 tokens to package_body 98.2
   TYPE                               => reduce 9 tokens to package_body 98.2
   IDENTIFIER                         => reduce 9 tokens to package_body 98.2
   Wisi_EOI                           => reduce 9 tokens to package_body 98.2
   default                            => ERROR

   Minimal_Complete_Action => (package_body)

State 358:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part nonterminal_042 END name_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 360
   default                            => ERROR

   Minimal_Complete_Action => (SEMICOLON)

State 359:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 9 tokens to subprogram_body 117.0
   CASE                               => reduce 9 tokens to subprogram_body 117.0
   DECLARE                            => reduce 9 tokens to subprogram_body 117.0
   END                                => reduce 9 tokens to subprogram_body 117.0
   EXIT                               => reduce 9 tokens to subprogram_body 117.0
   FOR                                => reduce 9 tokens to subprogram_body 117.0
   FUNCTION                           => reduce 9 tokens to subprogram_body 117.0
   IF                                 => reduce 9 tokens to subprogram_body 117.0
   LOOP                               => reduce 9 tokens to subprogram_body 117.0
   PACKAGE                            => reduce 9 tokens to subprogram_body 117.0
   PROCEDURE                          => reduce 9 tokens to subprogram_body 117.0
   RETURN                             => reduce 9 tokens to subprogram_body 117.0
   TYPE                               => reduce 9 tokens to subprogram_body 117.0
   IDENTIFIER                         => reduce 9 tokens to subprogram_body 117.0
   Wisi_EOI                           => reduce 9 tokens to subprogram_body 117.0
   default                            => ERROR

   Minimal_Complete_Action => (subprogram_body)

State 360:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part nonterminal_042 END name_opt SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 10 tokens to package_body 98.0
   CASE                               => reduce 10 tokens to package_body 98.0
   DECLARE                            => reduce 10 tokens to package_body 98.0
   END                                => reduce 10 tokens to package_body 98.0
   EXIT                               => reduce 10 tokens to package_body 98.0
   FOR                                => reduce 10 tokens to package_body 98.0
   FUNCTION                           => reduce 10 tokens to package_body 98.0
   IF                                 => reduce 10 tokens to package_body 98.0
   LOOP                               => reduce 10 tokens to package_body 98.0
   PACKAGE                            => reduce 10 tokens to package_body 98.0
   PROCEDURE                          => reduce 10 tokens to package_body 98.0
   RETURN                             => reduce 10 tokens to package_body 98.0
   TYPE                               => reduce 10 tokens to package_body 98.0
   IDENTIFIER                         => reduce 10 tokens to package_body 98.0
   Wisi_EOI                           => reduce 10 tokens to package_body 98.0
   default                            => ERROR

   Minimal_Complete_Action => (package_body)
States with conflicts: 89 207 291

 115 rules, 18 user actions, 19 checks, 361 states, 2856 parse actions
 0 accept/reduce conflicts, 1 shift/reduce conflicts, 2 reduce/reduce conflicts
