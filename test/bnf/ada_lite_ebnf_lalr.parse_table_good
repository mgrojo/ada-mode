Tokens:
 0 => WHITESPACE
 1 => NEW_LINE
 2 => COMMENT
 3 => AND
 4 => BEGIN
 5 => BODY
 6 => CASE
 7 => DECLARE
 8 => ELSE
 9 => ELSIF
 10 => END
 11 => EXIT
 12 => EXCEPTION
 13 => FOR
 14 => FUNCTION
 15 => IF
 16 => IN
 17 => IS
 18 => LEFT_PAREN
 19 => LOOP
 20 => NEW
 21 => NOT
 22 => OR
 23 => PACKAGE
 24 => PROCEDURE
 25 => RANGE
 26 => RETURN
 27 => RIGHT_PAREN
 28 => SEPARATE
 29 => THEN
 30 => TYPE
 31 => WHEN
 32 => WITH
 33 => XOR
 34 => AMPERSAND
 35 => COLON
 36 => COLON_EQUAL
 37 => COMMA
 38 => DOT
 39 => DOT_DOT
 40 => EQUAL
 41 => EQUAL_GREATER
 42 => GREATER
 43 => GREATER_EQUAL
 44 => LESS
 45 => LESS_EQUAL
 46 => MINUS
 47 => PLUS
 48 => SEMICOLON
 49 => SLASH
 50 => SLASH_EQUAL
 51 => STAR
 52 => STRING_LITERAL
 53 => NUMERIC_LITERAL
 54 => IDENTIFIER
 55 => Wisi_EOI
 56 => wisitoken_accept
 57 => actual_parameter_part
 58 => aspect_specification
 59 => assignment_statement
 60 => association
 61 => association_list
 62 => binary_adding_operator
 63 => block_label_opt
 64 => block_statement
 65 => body_g
 66 => body_stub
 67 => case_statement
 68 => case_statement_alternative
 69 => compilation_unit
 70 => compilation_unit_list
 71 => compound_statement
 72 => constraint
 73 => declaration
 74 => declarative_part
 75 => discrete_subtype_definition
 76 => enumeration_type_definition
 77 => exception_choice
 78 => exception_handler
 79 => exit_statement
 80 => expression
 81 => extended_return_object_declaration
 82 => extended_return_statement
 83 => factor
 84 => formal_part
 85 => full_type_declaration
 86 => function_specification
 87 => generic_instantiation
 88 => handled_sequence_of_statements
 89 => identifier_opt
 90 => if_statement
 91 => index_constraint
 92 => iteration_scheme
 93 => loop_statement
 94 => multiplying_operator
 95 => name
 96 => name_opt
 97 => object_declaration
 98 => package_body
 99 => parameter_and_result_profile
 100 => parameter_profile
 101 => parameter_specification
 102 => paren_expression
 103 => primary
 104 => procedure_call_statement
 105 => procedure_specification
 106 => proper_body
 107 => range_g
 108 => range_list
 109 => relation
 110 => relational_operator
 111 => selected_component
 112 => sequence_of_statements
 113 => simple_expression
 114 => simple_return_statement
 115 => simple_statement
 116 => statement
 117 => subprogram_body
 118 => subprogram_body_stub
 119 => subprogram_declaration
 120 => subprogram_specification
 121 => subtype_indication
 122 => term
 123 => type_declaration
 124 => type_definition
 125 => unary_adding_operator
 126 => nonterminal_004_list
 127 => nonterminal_005_list
 128 => nonterminal_006_list
 129 => nonterminal_008
 130 => nonterminal_007_list
 131 => nonterminal_010
 132 => nonterminal_009_list
 133 => nonterminal_012
 134 => nonterminal_011_list
 135 => nonterminal_014
 136 => nonterminal_013_list
 137 => nonterminal_016
 138 => nonterminal_015_list
 139 => nonterminal_017_list
 140 => nonterminal_018
 141 => nonterminal_020
 142 => nonterminal_019_list
 143 => nonterminal_021_list
 144 => nonterminal_023
 145 => nonterminal_022_list

Productions:
56.0: wisitoken_accept <= compilation_unit_list Wisi_EOI
57.0: actual_parameter_part <= LEFT_PAREN association_list RIGHT_PAREN ; (1, 2, 3, 4, 5, 6, 7, 8) MIDDLE
58.0: aspect_specification <= WITH association_list
59.0: assignment_statement <= name COLON_EQUAL expression SEMICOLON
60.0: association <= IDENTIFIER EQUAL_GREATER expression ; (1, 2, 3, 4, 5, 6, 7, 8) MIDDLE
60.1: association <= expression ; (1, 2, 3, 4, 5, 6, 7, 8) MIDDLE
61.0: association_list <= association ; (1, 2, 3, 4, 5, 6, 7, 8) MIDDLE
61.1: association_list <= association_list COMMA association ; (1, 2, 3, 4, 5, 6, 7, 8, 9) LEFT
62.0: binary_adding_operator <= PLUS
62.1: binary_adding_operator <= MINUS
62.2: binary_adding_operator <= AMPERSAND
63.0: block_label_opt <= IDENTIFIER COLON
63.1: block_label_opt <=
64.0: block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ; (10, 11, 12, 13, 14, 15) MIDDLE
64.1: block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ; (14, 15) MIDDLE
65.0: body_g <= proper_body ; (10, 11, 12, 13, 16, 17) MIDDLE
65.1: body_g <= body_stub
66.0: body_stub <= subprogram_body_stub
67.0: case_statement <= CASE expression IS nonterminal_004_list END CASE SEMICOLON ; (18) MIDDLE
68.0: case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements ; (18) MIDDLE
69.0: compilation_unit <= package_body
69.1: compilation_unit <= subprogram_declaration
69.2: compilation_unit <= subprogram_body
69.3: compilation_unit <= generic_instantiation
69.4: compilation_unit <= statement
70.0: compilation_unit_list <= nonterminal_005_list
71.0: compound_statement <= if_statement ; (19, 20) MIDDLE
71.1: compound_statement <= case_statement ; (18) MIDDLE
71.2: compound_statement <= loop_statement ; (21) MIDDLE
71.3: compound_statement <= block_statement ; (10, 11, 12, 13, 14, 15) MIDDLE
71.4: compound_statement <= extended_return_statement
72.0: constraint <= RANGE range_g
72.1: constraint <= index_constraint ; (22) MIDDLE
73.0: declaration <= body_g ; (10, 11, 12, 13, 16, 17) MIDDLE
73.1: declaration <= object_declaration
73.2: declaration <= subprogram_declaration
73.3: declaration <= type_declaration
74.0: declarative_part <= nonterminal_006_list ; (10, 11, 12, 13, 16, 17) MIDDLE
74.1: declarative_part <=
75.0: discrete_subtype_definition <= subtype_indication ; (22) MIDDLE
75.1: discrete_subtype_definition <= range_g
76.0: enumeration_type_definition <= LEFT_PAREN IDENTIFIER nonterminal_007_list RIGHT_PAREN
76.1: enumeration_type_definition <= LEFT_PAREN IDENTIFIER RIGHT_PAREN
77.0: exception_choice <= name
78.0: exception_handler <= WHEN exception_choice EQUAL_GREATER sequence_of_statements ; (11, 13, 15) MIDDLE
79.0: exit_statement <= EXIT IDENTIFIER WHEN expression SEMICOLON
79.1: exit_statement <= EXIT IDENTIFIER SEMICOLON
79.2: exit_statement <= EXIT WHEN expression SEMICOLON
79.3: exit_statement <= EXIT SEMICOLON
80.0: expression <= relation ; (1, 2, 23, 24) MIDDLE
80.1: expression <= relation nonterminal_009_list ; (1, 2, 3, 4, 23, 24, 25, 26) MIDDLE
80.2: expression <= relation nonterminal_011_list ; (1, 2, 5, 6, 23, 24, 27, 28) MIDDLE
80.3: expression <= relation nonterminal_013_list ; (1, 2, 7, 8, 23, 24, 29, 30) MIDDLE
81.0: extended_return_object_declaration <= IDENTIFIER COLON subtype_indication
82.0: extended_return_statement <= RETURN extended_return_object_declaration SEMICOLON
83.0: factor <= primary ; (1, 2, 3, 4, 5, 6, 7, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32) MIDDLE
83.1: factor <= NOT primary ; (1, 2, 3, 4, 5, 6, 7, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32) MIDDLE
84.0: formal_part <= LEFT_PAREN parameter_specification nonterminal_015_list RIGHT_PAREN
84.1: formal_part <= LEFT_PAREN parameter_specification RIGHT_PAREN
85.0: full_type_declaration <= TYPE IDENTIFIER IS type_definition SEMICOLON
86.0: function_specification <= FUNCTION name parameter_and_result_profile
87.0: generic_instantiation <= PACKAGE name IS NEW name SEMICOLON
87.1: generic_instantiation <= PROCEDURE name IS NEW name SEMICOLON
88.0: handled_sequence_of_statements <= sequence_of_statements nonterminal_018 ; (10, 11, 12, 13, 14, 15) MIDDLE
88.1: handled_sequence_of_statements <= sequence_of_statements ; (10, 12, 14) MIDDLE
89.0: identifier_opt <= IDENTIFIER
89.1: identifier_opt <=
90.0: if_statement <= IF expression THEN sequence_of_statements nonterminal_019_list ELSE sequence_of_statements END IF SEMICOLON ; (19, 19, 20) MIDDLE
90.1: if_statement <= IF expression THEN sequence_of_statements nonterminal_019_list END IF SEMICOLON ; (19, 20) MIDDLE
90.2: if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON ; (19, 19) MIDDLE
90.3: if_statement <= IF expression THEN sequence_of_statements END IF SEMICOLON ; (19) MIDDLE
91.0: index_constraint <= LEFT_PAREN discrete_subtype_definition RIGHT_PAREN ; (22) MIDDLE
92.0: iteration_scheme <= FOR IDENTIFIER IN discrete_subtype_definition
93.0: loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ; (21) MIDDLE
93.1: loop_statement <= LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ; (21) MIDDLE
94.0: multiplying_operator <= STAR
94.1: multiplying_operator <= SLASH
95.0: name <= name LEFT_PAREN range_list RIGHT_PAREN ; (31, 32, 33) LEFT
95.1: name <= name actual_parameter_part ; (1, 2, 3, 4, 5, 6, 7, 8, 33) LEFT
95.2: name <= IDENTIFIER
95.3: name <= selected_component ; (34) LEFT
96.0: name_opt <= name
96.1: name_opt <=
97.0: object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression SEMICOLON
97.1: object_declaration <= IDENTIFIER COLON subtype_indication SEMICOLON
98.0: package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ; (10, 11, 16) MIDDLE
98.1: package_body <= PACKAGE BODY name aspect_specification IS declarative_part END name_opt SEMICOLON ; (16) MIDDLE
98.2: package_body <= PACKAGE BODY name IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ; (10, 11, 16) MIDDLE
98.3: package_body <= PACKAGE BODY name IS declarative_part END name_opt SEMICOLON ; (16) MIDDLE
99.0: parameter_and_result_profile <= formal_part RETURN IDENTIFIER
99.1: parameter_and_result_profile <= RETURN IDENTIFIER
100.0: parameter_profile <= formal_part
100.1: parameter_profile <=
101.0: parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL expression
101.1: parameter_specification <= IDENTIFIER COLON IDENTIFIER
102.0: paren_expression <= LEFT_PAREN expression RIGHT_PAREN ; (23, 24, 25, 26, 27, 28, 29, 30) MIDDLE
103.0: primary <= NUMERIC_LITERAL
103.1: primary <= STRING_LITERAL
103.2: primary <= name ; (1, 2, 3, 4, 5, 6, 7, 8, 31, 32) MIDDLE
103.3: primary <= paren_expression ; (23, 24, 25, 26, 27, 28, 29, 30) MIDDLE
104.0: procedure_call_statement <= name SEMICOLON
105.0: procedure_specification <= PROCEDURE name parameter_profile
106.0: proper_body <= package_body ; (10, 11, 16) MIDDLE
106.1: proper_body <= subprogram_body ; (12, 13, 17) MIDDLE
107.0: range_g <= simple_expression DOT_DOT simple_expression ; (31, 31, 32, 32) MIDDLE
108.0: range_list <= range_list COMMA range_g ; (31, 32, 35) LEFT
108.1: range_list <= range_g ; (31, 32) MIDDLE
109.0: relation <= simple_expression relational_operator simple_expression ; (1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30) MIDDLE
109.1: relation <= simple_expression ; (1, 2, 3, 4, 5, 6, 7, 8, 23, 24, 25, 26, 27, 28, 29, 30) MIDDLE
110.0: relational_operator <= EQUAL
110.1: relational_operator <= SLASH_EQUAL
110.2: relational_operator <= LESS
110.3: relational_operator <= LESS_EQUAL
110.4: relational_operator <= GREATER
110.5: relational_operator <= GREATER_EQUAL
111.0: selected_component <= name DOT IDENTIFIER ; (34) LEFT
112.0: sequence_of_statements <= nonterminal_021_list ; (10, 11, 12, 13, 14, 15, 18, 19, 20, 21) MIDDLE
112.1: sequence_of_statements <=
113.0: simple_expression <= unary_adding_operator term nonterminal_022_list ; (1, 2, 3, 4, 5, 6, 7, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32) MIDDLE
113.1: simple_expression <= unary_adding_operator term ; (1, 3, 5, 7, 23, 25, 27, 29, 31) MIDDLE
113.2: simple_expression <= term nonterminal_022_list ; (1, 2, 3, 4, 5, 6, 7, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32) MIDDLE
113.3: simple_expression <= term ; (1, 3, 5, 7, 23, 25, 27, 29, 31) MIDDLE
114.0: simple_return_statement <= RETURN expression SEMICOLON
115.0: simple_statement <= assignment_statement
115.1: simple_statement <= exit_statement
115.2: simple_statement <= procedure_call_statement
115.3: simple_statement <= simple_return_statement
116.0: statement <= simple_statement
116.1: statement <= compound_statement ; (10, 11, 12, 13, 14, 15, 18, 19, 20, 21) MIDDLE
117.0: subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ; (12, 13, 17) MIDDLE
117.1: subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ; (12, 13, 17) MIDDLE
118.0: subprogram_body_stub <= subprogram_specification IS SEPARATE SEMICOLON
119.0: subprogram_declaration <= subprogram_specification SEMICOLON
120.0: subprogram_specification <= procedure_specification
120.1: subprogram_specification <= function_specification
121.0: subtype_indication <= name constraint ; (22) MIDDLE
121.1: subtype_indication <= name
122.0: term <= factor ; (1, 2, 3, 4, 5, 6, 7, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32) MIDDLE
122.1: term <= term multiplying_operator factor ; (1, 2, 3, 4, 5, 6, 7, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36) LEFT
123.0: type_declaration <= full_type_declaration
124.0: type_definition <= enumeration_type_definition
125.0: unary_adding_operator <= PLUS
125.1: unary_adding_operator <= MINUS
126.0: nonterminal_004_list <= case_statement_alternative ; (18) MIDDLE
126.1: nonterminal_004_list <= nonterminal_004_list case_statement_alternative ; (18, 37) LEFT
127.0: nonterminal_005_list <= compilation_unit
127.1: nonterminal_005_list <= nonterminal_005_list compilation_unit ; (38) LEFT
128.0: nonterminal_006_list <= declaration ; (10, 11, 12, 13, 16, 17) MIDDLE
128.1: nonterminal_006_list <= nonterminal_006_list declaration ; (10, 11, 12, 13, 16, 17, 39) LEFT
129.0: nonterminal_008 <= COMMA IDENTIFIER
130.0: nonterminal_007_list <= nonterminal_008
130.1: nonterminal_007_list <= nonterminal_007_list nonterminal_008 ; (40) LEFT
131.0: nonterminal_010 <= AND relation ; (3, 4, 25, 26) MIDDLE
132.0: nonterminal_009_list <= nonterminal_010 ; (3, 4, 25, 26) MIDDLE
132.1: nonterminal_009_list <= nonterminal_009_list nonterminal_010 ; (3, 4, 25, 26, 41) LEFT
133.0: nonterminal_012 <= OR relation ; (5, 6, 27, 28) MIDDLE
134.0: nonterminal_011_list <= nonterminal_012 ; (5, 6, 27, 28) MIDDLE
134.1: nonterminal_011_list <= nonterminal_011_list nonterminal_012 ; (5, 6, 27, 28, 42) LEFT
135.0: nonterminal_014 <= XOR relation ; (7, 8, 29, 30) MIDDLE
136.0: nonterminal_013_list <= nonterminal_014 ; (7, 8, 29, 30) MIDDLE
136.1: nonterminal_013_list <= nonterminal_013_list nonterminal_014 ; (7, 8, 29, 30, 43) LEFT
137.0: nonterminal_016 <= SEMICOLON parameter_specification
138.0: nonterminal_015_list <= nonterminal_016
138.1: nonterminal_015_list <= nonterminal_015_list nonterminal_016 ; (44) LEFT
139.0: nonterminal_017_list <= exception_handler ; (11, 13, 15) MIDDLE
139.1: nonterminal_017_list <= nonterminal_017_list exception_handler ; (11, 13, 15, 45) LEFT
140.0: nonterminal_018 <= EXCEPTION nonterminal_017_list ; (11, 13, 15) MIDDLE
140.1: nonterminal_018 <= EXCEPTION
141.0: nonterminal_020 <= ELSIF expression THEN sequence_of_statements ; (20) MIDDLE
142.0: nonterminal_019_list <= nonterminal_020 ; (20) MIDDLE
142.1: nonterminal_019_list <= nonterminal_019_list nonterminal_020 ; (20, 46) LEFT
143.0: nonterminal_021_list <= statement ; (10, 11, 12, 13, 14, 15, 18, 19, 20, 21) MIDDLE
143.1: nonterminal_021_list <= nonterminal_021_list statement ; (10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 47) LEFT
144.0: nonterminal_023 <= binary_adding_operator term ; (2, 4, 6, 8, 24, 26, 28, 30, 32) MIDDLE
145.0: nonterminal_022_list <= nonterminal_023 ; (2, 4, 6, 8, 24, 26, 28, 30, 32) MIDDLE
145.1: nonterminal_022_list <= nonterminal_022_list nonterminal_023 ; (2, 4, 6, 8, 24, 26, 28, 30, 32, 48) LEFT

Recursions:
1 => (57 (0 MIDDLE) -> 61 (0 SINGLE, 1 RIGHT) -> 60 (0 RIGHT, 1 SINGLE) -> 80 (0 SINGLE, 1 LEFT, 2 LEFT, 3 LEFT) -> 109 (0 LEFT, 0 RIGHT, 1 SINGLE) -> 113 (0 MIDDLE, 1 RIGHT, 2 LEFT, 3 SINGLE) -> 122 (0 SINGLE, 1 RIGHT) -> 83 (0 SINGLE, 1 RIGHT) -> 103 (2 SINGLE) -> 95 (1 RIGHT) -> )
2 => (57 (0 MIDDLE) -> 61 (0 SINGLE, 1 RIGHT) -> 60 (0 RIGHT, 1 SINGLE) -> 80 (0 SINGLE, 1 LEFT, 2 LEFT, 3 LEFT) -> 109 (0 LEFT, 0 RIGHT, 1 SINGLE) -> 113 (0 RIGHT, 2 RIGHT) -> 145 (0 SINGLE, 1 RIGHT) -> 144 (0 RIGHT) -> 122 (0 SINGLE, 1 RIGHT) -> 83 (0 SINGLE, 1 RIGHT) -> 103 (2 SINGLE) -> 95 (1 RIGHT) -> )
3 => (57 (0 MIDDLE) -> 61 (0 SINGLE, 1 RIGHT) -> 60 (0 RIGHT, 1 SINGLE) -> 80 (1 RIGHT) -> 132 (0 SINGLE, 1 RIGHT) -> 131 (0 RIGHT) -> 109 (0 LEFT, 0 RIGHT, 1 SINGLE) -> 113 (0 MIDDLE, 1 RIGHT, 2 LEFT, 3 SINGLE) -> 122 (0 SINGLE, 1 RIGHT) -> 83 (0 SINGLE, 1 RIGHT) -> 103 (2 SINGLE) -> 95 (1 RIGHT) -> )
4 => (57 (0 MIDDLE) -> 61 (0 SINGLE, 1 RIGHT) -> 60 (0 RIGHT, 1 SINGLE) -> 80 (1 RIGHT) -> 132 (0 SINGLE, 1 RIGHT) -> 131 (0 RIGHT) -> 109 (0 LEFT, 0 RIGHT, 1 SINGLE) -> 113 (0 RIGHT, 2 RIGHT) -> 145 (0 SINGLE, 1 RIGHT) -> 144 (0 RIGHT) -> 122 (0 SINGLE, 1 RIGHT) -> 83 (0 SINGLE, 1 RIGHT) -> 103 (2 SINGLE) -> 95 (1 RIGHT) -> )
5 => (57 (0 MIDDLE) -> 61 (0 SINGLE, 1 RIGHT) -> 60 (0 RIGHT, 1 SINGLE) -> 80 (2 RIGHT) -> 134 (0 SINGLE, 1 RIGHT) -> 133 (0 RIGHT) -> 109 (0 LEFT, 0 RIGHT, 1 SINGLE) -> 113 (0 MIDDLE, 1 RIGHT, 2 LEFT, 3 SINGLE) -> 122 (0 SINGLE, 1 RIGHT) -> 83 (0 SINGLE, 1 RIGHT) -> 103 (2 SINGLE) -> 95 (1 RIGHT) -> )
6 => (57 (0 MIDDLE) -> 61 (0 SINGLE, 1 RIGHT) -> 60 (0 RIGHT, 1 SINGLE) -> 80 (2 RIGHT) -> 134 (0 SINGLE, 1 RIGHT) -> 133 (0 RIGHT) -> 109 (0 LEFT, 0 RIGHT, 1 SINGLE) -> 113 (0 RIGHT, 2 RIGHT) -> 145 (0 SINGLE, 1 RIGHT) -> 144 (0 RIGHT) -> 122 (0 SINGLE, 1 RIGHT) -> 83 (0 SINGLE, 1 RIGHT) -> 103 (2 SINGLE) -> 95 (1 RIGHT) -> )
7 => (57 (0 MIDDLE) -> 61 (0 SINGLE, 1 RIGHT) -> 60 (0 RIGHT, 1 SINGLE) -> 80 (3 RIGHT) -> 136 (0 SINGLE, 1 RIGHT) -> 135 (0 RIGHT) -> 109 (0 LEFT, 0 RIGHT, 1 SINGLE) -> 113 (0 MIDDLE, 1 RIGHT, 2 LEFT, 3 SINGLE) -> 122 (0 SINGLE, 1 RIGHT) -> 83 (0 SINGLE, 1 RIGHT) -> 103 (2 SINGLE) -> 95 (1 RIGHT) -> )
8 => (57 (0 MIDDLE) -> 61 (0 SINGLE, 1 RIGHT) -> 60 (0 RIGHT, 1 SINGLE) -> 80 (3 RIGHT) -> 136 (0 SINGLE, 1 RIGHT) -> 135 (0 RIGHT) -> 109 (0 LEFT, 0 RIGHT, 1 SINGLE) -> 113 (0 RIGHT, 2 RIGHT) -> 145 (0 SINGLE, 1 RIGHT) -> 144 (0 RIGHT) -> 122 (0 SINGLE, 1 RIGHT) -> 83 (0 SINGLE, 1 RIGHT) -> 103 (2 SINGLE) -> 95 (1 RIGHT) -> )
9 => (61 (1 LEFT) -> )
10 => (64 (0 MIDDLE) -> 74 (0 SINGLE) -> 128 (0 SINGLE, 1 RIGHT) -> 73 (0 SINGLE) -> 65 (0 SINGLE) -> 106 (0 SINGLE) -> 98 (0 MIDDLE, 2 MIDDLE) -> 88 (0 LEFT, 1 SINGLE) -> 112 (0 SINGLE) -> 143 (0 SINGLE, 1 RIGHT) -> 116 (1 SINGLE) -> 71 (3 SINGLE) -> )
11 => (64 (0 MIDDLE) -> 74 (0 SINGLE) -> 128 (0 SINGLE, 1 RIGHT) -> 73 (0 SINGLE) -> 65 (0 SINGLE) -> 106 (0 SINGLE) -> 98 (0 MIDDLE, 2 MIDDLE) -> 88 (0 RIGHT) -> 140 (0 RIGHT) -> 139 (0 SINGLE, 1 RIGHT) -> 78 (0 RIGHT) -> 112 (0 SINGLE) -> 143 (0 SINGLE, 1 RIGHT) -> 116 (1 SINGLE) -> 71 (3 SINGLE) -> )
12 => (64 (0 MIDDLE) -> 74 (0 SINGLE) -> 128 (0 SINGLE, 1 RIGHT) -> 73 (0 SINGLE) -> 65 (0 SINGLE) -> 106 (1 SINGLE) -> 117 (0 MIDDLE, 1 MIDDLE) -> 88 (0 LEFT, 1 SINGLE) -> 112 (0 SINGLE) -> 143 (0 SINGLE, 1 RIGHT) -> 116 (1 SINGLE) -> 71 (3 SINGLE) -> )
13 => (64 (0 MIDDLE) -> 74 (0 SINGLE) -> 128 (0 SINGLE, 1 RIGHT) -> 73 (0 SINGLE) -> 65 (0 SINGLE) -> 106 (1 SINGLE) -> 117 (0 MIDDLE, 1 MIDDLE) -> 88 (0 RIGHT) -> 140 (0 RIGHT) -> 139 (0 SINGLE, 1 RIGHT) -> 78 (0 RIGHT) -> 112 (0 SINGLE) -> 143 (0 SINGLE, 1 RIGHT) -> 116 (1 SINGLE) -> 71 (3 SINGLE) -> )
14 => (64 (0 MIDDLE, 1 MIDDLE) -> 88 (0 LEFT, 1 SINGLE) -> 112 (0 SINGLE) -> 143 (0 SINGLE, 1 RIGHT) -> 116 (1 SINGLE) -> 71 (3 SINGLE) -> )
15 => (64 (0 MIDDLE, 1 MIDDLE) -> 88 (0 RIGHT) -> 140 (0 RIGHT) -> 139 (0 SINGLE, 1 RIGHT) -> 78 (0 RIGHT) -> 112 (0 SINGLE) -> 143 (0 SINGLE, 1 RIGHT) -> 116 (1 SINGLE) -> 71 (3 SINGLE) -> )
16 => (65 (0 SINGLE) -> 106 (0 SINGLE) -> 98 (0 MIDDLE, 1 MIDDLE, 2 MIDDLE, 3 MIDDLE) -> 74 (0 SINGLE) -> 128 (0 SINGLE, 1 RIGHT) -> 73 (0 SINGLE) -> )
17 => (65 (0 SINGLE) -> 106 (1 SINGLE) -> 117 (0 MIDDLE, 1 MIDDLE) -> 74 (0 SINGLE) -> 128 (0 SINGLE, 1 RIGHT) -> 73 (0 SINGLE) -> )
18 => (67 (0 MIDDLE) -> 126 (0 SINGLE, 1 RIGHT) -> 68 (0 RIGHT) -> 112 (0 SINGLE) -> 143 (0 SINGLE, 1 RIGHT) -> 116 (1 SINGLE) -> 71 (1 SINGLE) -> )
19 => (71 (0 SINGLE) -> 90 (0 MIDDLE, 0 MIDDLE, 1 MIDDLE, 2 MIDDLE, 2 MIDDLE, 3 MIDDLE) -> 112 (0 SINGLE) -> 143 (0 SINGLE, 1 RIGHT) -> 116 (1 SINGLE) -> )
20 => (71 (0 SINGLE) -> 90 (0 MIDDLE, 1 MIDDLE) -> 142 (0 SINGLE, 1 RIGHT) -> 141 (0 RIGHT) -> 112 (0 SINGLE) -> 143 (0 SINGLE, 1 RIGHT) -> 116 (1 SINGLE) -> )
21 => (71 (2 SINGLE) -> 93 (0 MIDDLE, 1 MIDDLE) -> 112 (0 SINGLE) -> 143 (0 SINGLE, 1 RIGHT) -> 116 (1 SINGLE) -> )
22 => (72 (1 SINGLE) -> 91 (0 MIDDLE) -> 75 (0 SINGLE) -> 121 (0 RIGHT) -> )
23 => (80 (0 SINGLE, 1 LEFT, 2 LEFT, 3 LEFT) -> 109 (0 LEFT, 0 RIGHT, 1 SINGLE) -> 113 (0 MIDDLE, 1 RIGHT, 2 LEFT, 3 SINGLE) -> 122 (0 SINGLE, 1 RIGHT) -> 83 (0 SINGLE, 1 RIGHT) -> 103 (3 SINGLE) -> 102 (0 MIDDLE) -> )
24 => (80 (0 SINGLE, 1 LEFT, 2 LEFT, 3 LEFT) -> 109 (0 LEFT, 0 RIGHT, 1 SINGLE) -> 113 (0 RIGHT, 2 RIGHT) -> 145 (0 SINGLE, 1 RIGHT) -> 144 (0 RIGHT) -> 122 (0 SINGLE, 1 RIGHT) -> 83 (0 SINGLE, 1 RIGHT) -> 103 (3 SINGLE) -> 102 (0 MIDDLE) -> )
25 => (80 (1 RIGHT) -> 132 (0 SINGLE, 1 RIGHT) -> 131 (0 RIGHT) -> 109 (0 LEFT, 0 RIGHT, 1 SINGLE) -> 113 (0 MIDDLE, 1 RIGHT, 2 LEFT, 3 SINGLE) -> 122 (0 SINGLE, 1 RIGHT) -> 83 (0 SINGLE, 1 RIGHT) -> 103 (3 SINGLE) -> 102 (0 MIDDLE) -> )
26 => (80 (1 RIGHT) -> 132 (0 SINGLE, 1 RIGHT) -> 131 (0 RIGHT) -> 109 (0 LEFT, 0 RIGHT, 1 SINGLE) -> 113 (0 RIGHT, 2 RIGHT) -> 145 (0 SINGLE, 1 RIGHT) -> 144 (0 RIGHT) -> 122 (0 SINGLE, 1 RIGHT) -> 83 (0 SINGLE, 1 RIGHT) -> 103 (3 SINGLE) -> 102 (0 MIDDLE) -> )
27 => (80 (2 RIGHT) -> 134 (0 SINGLE, 1 RIGHT) -> 133 (0 RIGHT) -> 109 (0 LEFT, 0 RIGHT, 1 SINGLE) -> 113 (0 MIDDLE, 1 RIGHT, 2 LEFT, 3 SINGLE) -> 122 (0 SINGLE, 1 RIGHT) -> 83 (0 SINGLE, 1 RIGHT) -> 103 (3 SINGLE) -> 102 (0 MIDDLE) -> )
28 => (80 (2 RIGHT) -> 134 (0 SINGLE, 1 RIGHT) -> 133 (0 RIGHT) -> 109 (0 LEFT, 0 RIGHT, 1 SINGLE) -> 113 (0 RIGHT, 2 RIGHT) -> 145 (0 SINGLE, 1 RIGHT) -> 144 (0 RIGHT) -> 122 (0 SINGLE, 1 RIGHT) -> 83 (0 SINGLE, 1 RIGHT) -> 103 (3 SINGLE) -> 102 (0 MIDDLE) -> )
29 => (80 (3 RIGHT) -> 136 (0 SINGLE, 1 RIGHT) -> 135 (0 RIGHT) -> 109 (0 LEFT, 0 RIGHT, 1 SINGLE) -> 113 (0 MIDDLE, 1 RIGHT, 2 LEFT, 3 SINGLE) -> 122 (0 SINGLE, 1 RIGHT) -> 83 (0 SINGLE, 1 RIGHT) -> 103 (3 SINGLE) -> 102 (0 MIDDLE) -> )
30 => (80 (3 RIGHT) -> 136 (0 SINGLE, 1 RIGHT) -> 135 (0 RIGHT) -> 109 (0 LEFT, 0 RIGHT, 1 SINGLE) -> 113 (0 RIGHT, 2 RIGHT) -> 145 (0 SINGLE, 1 RIGHT) -> 144 (0 RIGHT) -> 122 (0 SINGLE, 1 RIGHT) -> 83 (0 SINGLE, 1 RIGHT) -> 103 (3 SINGLE) -> 102 (0 MIDDLE) -> )
31 => (83 (0 SINGLE, 1 RIGHT) -> 103 (2 SINGLE) -> 95 (0 MIDDLE) -> 108 (0 RIGHT, 1 SINGLE) -> 107 (0 LEFT, 0 RIGHT) -> 113 (0 MIDDLE, 1 RIGHT, 2 LEFT, 3 SINGLE) -> 122 (0 SINGLE, 1 RIGHT) -> )
32 => (83 (0 SINGLE, 1 RIGHT) -> 103 (2 SINGLE) -> 95 (0 MIDDLE) -> 108 (0 RIGHT, 1 SINGLE) -> 107 (0 LEFT, 0 RIGHT) -> 113 (0 RIGHT, 2 RIGHT) -> 145 (0 SINGLE, 1 RIGHT) -> 144 (0 RIGHT) -> 122 (0 SINGLE, 1 RIGHT) -> )
33 => (95 (0 LEFT, 1 LEFT) -> )
34 => (95 (3 SINGLE) -> 111 (0 LEFT) -> )
35 => (108 (0 LEFT) -> )
36 => (122 (1 LEFT) -> )
37 => (126 (1 LEFT) -> )
38 => (127 (1 LEFT) -> )
39 => (128 (1 LEFT) -> )
40 => (130 (1 LEFT) -> )
41 => (132 (1 LEFT) -> )
42 => (134 (1 LEFT) -> )
43 => (136 (1 LEFT) -> )
44 => (138 (1 LEFT) -> )
45 => (139 (1 LEFT) -> )
46 => (142 (1 LEFT) -> )
47 => (143 (1 LEFT) -> )
48 => (145 (1 LEFT) -> )

McKenzie:
(Insert =>
 AND             => 4,
 BEGIN           => 3,
 BODY            => 4,
 CASE            => 3,
 DECLARE         => 3,
 ELSE            => 3,
 ELSIF           => 3,
 END             => 1,
 EXIT            => 3,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 3,
 IF              => 2,
 IN              => 4,
 IS              => 3,
 LEFT_PAREN      => 4,
 LOOP            => 2,
 NEW             => 3,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 3,
 RANGE           => 4,
 RETURN          => 3,
 RIGHT_PAREN     => 3,
 SEPARATE        => 4,
 THEN            => 3,
 TYPE            => 4,
 WHEN            => 3,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 1,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 4,
 NUMERIC_LITERAL => 4,
 IDENTIFIER      => 3,
 Wisi_EOI        => 4)
(Delete =>
 AND             => 4,
 BEGIN           => 1,
 BODY            => 4,
 CASE            => 4,
 DECLARE         => 4,
 ELSE            => 4,
 ELSIF           => 4,
 END             => 1,
 EXIT            => 4,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 4,
 IF              => 4,
 IN              => 4,
 IS              => 4,
 LEFT_PAREN      => 4,
 LOOP            => 4,
 NEW             => 4,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 4,
 RANGE           => 4,
 RETURN          => 4,
 RIGHT_PAREN     => 4,
 SEPARATE        => 4,
 THEN            => 4,
 TYPE            => 4,
 WHEN            => 4,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 2,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 2,
 NUMERIC_LITERAL => 4,
 IDENTIFIER      => 4,
 Wisi_EOI        => 4)
(Push_Back =>
 AND             => 4,
 BEGIN           => 1,
 BODY            => 4,
 CASE            => 4,
 DECLARE         => 4,
 ELSE            => 4,
 ELSIF           => 4,
 END             => 1,
 EXIT            => 4,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 4,
 IF              => 4,
 IN              => 4,
 IS              => 4,
 LEFT_PAREN      => 4,
 LOOP            => 4,
 NEW             => 4,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 4,
 RANGE           => 4,
 RETURN          => 4,
 RIGHT_PAREN     => 4,
 SEPARATE        => 4,
 THEN            => 4,
 TYPE            => 4,
 WHEN            => 4,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 4,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 4,
 NUMERIC_LITERAL => 4,
 IDENTIFIER      => 4,
 Wisi_EOI        => 4,
 wisitoken_accept                   => 4,
 actual_parameter_part              => 4,
 aspect_specification               => 4,
 assignment_statement               => 4,
 association                        => 4,
 association_list                   => 4,
 binary_adding_operator             => 4,
 block_label_opt                    => 4,
 block_statement                    => 4,
 body_g                             => 4,
 body_stub                          => 4,
 case_statement                     => 4,
 case_statement_alternative         => 4,
 compilation_unit                   => 4,
 compilation_unit_list              => 4,
 compound_statement                 => 4,
 constraint                         => 4,
 declaration                        => 4,
 declarative_part                   => 1,
 discrete_subtype_definition        => 4,
 enumeration_type_definition        => 4,
 exception_choice                   => 4,
 exception_handler                  => 4,
 exit_statement                     => 4,
 expression                         => 4,
 extended_return_object_declaration => 4,
 extended_return_statement          => 4,
 factor                             => 4,
 formal_part                        => 4,
 full_type_declaration              => 4,
 function_specification             => 4,
 generic_instantiation              => 4,
 handled_sequence_of_statements     => 4,
 identifier_opt                     => 4,
 if_statement                       => 4,
 index_constraint                   => 4,
 iteration_scheme                   => 4,
 loop_statement                     => 4,
 multiplying_operator               => 4,
 name                               => 4,
 name_opt                           => 4,
 object_declaration                 => 4,
 package_body                       => 4,
 parameter_and_result_profile       => 4,
 parameter_profile                  => 4,
 parameter_specification            => 4,
 paren_expression                   => 4,
 primary                            => 4,
 procedure_call_statement           => 4,
 procedure_specification            => 4,
 proper_body                        => 4,
 range_g                            => 4,
 range_list                         => 4,
 relation                           => 4,
 relational_operator                => 4,
 selected_component                 => 4,
 sequence_of_statements             => 4,
 simple_expression                  => 4,
 simple_return_statement            => 4,
 simple_statement                   => 4,
 statement                          => 4,
 subprogram_body                    => 4,
 subprogram_body_stub               => 4,
 subprogram_declaration             => 4,
 subprogram_specification           => 4,
 subtype_indication                 => 4,
 term                               => 4,
 type_declaration                   => 4,
 type_definition                    => 4,
 unary_adding_operator              => 4,
 nonterminal_004_list               => 4,
 nonterminal_005_list               => 4,
 nonterminal_006_list               => 4,
 nonterminal_008                    => 4,
 nonterminal_007_list               => 4,
 nonterminal_010                    => 4,
 nonterminal_009_list               => 4,
 nonterminal_012                    => 4,
 nonterminal_011_list               => 4,
 nonterminal_014                    => 4,
 nonterminal_013_list               => 4,
 nonterminal_016                    => 4,
 nonterminal_015_list               => 4,
 nonterminal_017_list               => 4,
 nonterminal_018                    => 4,
 nonterminal_020                    => 4,
 nonterminal_019_list               => 4,
 nonterminal_021_list               => 4,
 nonterminal_023                    => 4,
 nonterminal_022_list               => 4)
(Undo_Reduce =>
 wisitoken_accept                   => 4,
 actual_parameter_part              => 4,
 aspect_specification               => 4,
 assignment_statement               => 4,
 association                        => 4,
 association_list                   => 4,
 binary_adding_operator             => 4,
 block_label_opt                    => 4,
 block_statement                    => 4,
 body_g                             => 4,
 body_stub                          => 4,
 case_statement                     => 4,
 case_statement_alternative         => 4,
 compilation_unit                   => 4,
 compilation_unit_list              => 4,
 compound_statement                 => 4,
 constraint                         => 4,
 declaration                        => 4,
 declarative_part                   => 4,
 discrete_subtype_definition        => 4,
 enumeration_type_definition        => 4,
 exception_choice                   => 4,
 exception_handler                  => 4,
 exit_statement                     => 4,
 expression                         => 4,
 extended_return_object_declaration => 4,
 extended_return_statement          => 4,
 factor                             => 4,
 formal_part                        => 4,
 full_type_declaration              => 4,
 function_specification             => 4,
 generic_instantiation              => 4,
 handled_sequence_of_statements     => 4,
 identifier_opt                     => 4,
 if_statement                       => 4,
 index_constraint                   => 4,
 iteration_scheme                   => 4,
 loop_statement                     => 4,
 multiplying_operator               => 4,
 name                               => 4,
 name_opt                           => 4,
 object_declaration                 => 4,
 package_body                       => 4,
 parameter_and_result_profile       => 4,
 parameter_profile                  => 4,
 parameter_specification            => 4,
 paren_expression                   => 4,
 primary                            => 4,
 procedure_call_statement           => 4,
 procedure_specification            => 4,
 proper_body                        => 4,
 range_g                            => 4,
 range_list                         => 4,
 relation                           => 4,
 relational_operator                => 4,
 selected_component                 => 4,
 sequence_of_statements             => 4,
 simple_expression                  => 4,
 simple_return_statement            => 4,
 simple_statement                   => 4,
 statement                          => 4,
 subprogram_body                    => 4,
 subprogram_body_stub               => 4,
 subprogram_declaration             => 4,
 subprogram_specification           => 4,
 subtype_indication                 => 4,
 term                               => 4,
 type_declaration                   => 4,
 type_definition                    => 4,
 unary_adding_operator              => 4,
 nonterminal_004_list               => 4,
 nonterminal_005_list               => 4,
 nonterminal_006_list               => 4,
 nonterminal_008                    => 4,
 nonterminal_007_list               => 4,
 nonterminal_010                    => 4,
 nonterminal_009_list               => 4,
 nonterminal_012                    => 4,
 nonterminal_011_list               => 4,
 nonterminal_014                    => 4,
 nonterminal_013_list               => 4,
 nonterminal_016                    => 4,
 nonterminal_015_list               => 4,
 nonterminal_017_list               => 4,
 nonterminal_018                    => 4,
 nonterminal_020                    => 4,
 nonterminal_019_list               => 4,
 nonterminal_021_list               => 4,
 nonterminal_023                    => 4,
 nonterminal_022_list               => 4)
Minimal_Complete_Cost_Delta => -1
Fast_Forward      =>  0
Matching_Begin    =>  0
Ignore_Check_Fail => 4
Task_Count        => 0
Check_Limit       => 3
Check_Delta_Limit => 2147483647
Enqueue_Limit     => 2147483647

LALR Parse Table:
State 0:
     56.0:wisitoken_accept <= ^ compilation_unit_list Wisi_EOI, 

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   FUNCTION                           => shift and goto state 4
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   PACKAGE                            => shift and goto state 7
   PROCEDURE                          => shift and goto state 8
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compilation_unit                   goto state 15
   compilation_unit_list              goto state 16
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   function_specification             goto state 20
   generic_instantiation              goto state 21
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   package_body                       goto state 26
   procedure_call_statement           goto state 27
   procedure_specification            goto state 28
   selected_component                 goto state 29
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 32
   subprogram_body                    goto state 33
   subprogram_declaration             goto state 34
   subprogram_specification           goto state 35
   nonterminal_005_list               goto state 36

   Minimal_Complete_Action => EXIT

State 1:
     67.0:case_statement <= CASE ^ expression IS nonterminal_004_list END CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   expression                         goto state 44
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 49
   selected_component                 goto state 29
   simple_expression                  goto state 50
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 2:
     79.0:exit_statement <= EXIT ^ IDENTIFIER WHEN expression SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     79.1:exit_statement <= EXIT ^ IDENTIFIER SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     79.2:exit_statement <= EXIT ^ WHEN expression SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     79.3:exit_statement <= EXIT ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   WHEN                               => shift and goto state 53
   SEMICOLON                          => shift and goto state 54
   IDENTIFIER                         => shift and goto state 55
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 3:
     92.0:iteration_scheme <= FOR ^ IDENTIFIER IN discrete_subtype_definition, LOOP

   IDENTIFIER                         => shift and goto state 56
   default                            => ERROR

   Minimal_Complete_Action => IDENTIFIER

State 4:
     86.0:function_specification <= FUNCTION ^ name parameter_and_result_profile, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   name                               goto state 57
   selected_component                 goto state 29

   Minimal_Complete_Action => IDENTIFIER

State 5:
     90.0:if_statement <= IF ^ expression THEN sequence_of_statements nonterminal_019_list ELSE sequence_of_statements END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.1:if_statement <= IF ^ expression THEN sequence_of_statements nonterminal_019_list END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.2:if_statement <= IF ^ expression THEN sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.3:if_statement <= IF ^ expression THEN sequence_of_statements END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   expression                         goto state 58
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 49
   selected_component                 goto state 29
   simple_expression                  goto state 50
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 6:
     93.1:loop_statement <= LOOP ^ sequence_of_statements END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 59
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 60
   nonterminal_021_list               goto state 61

   Minimal_Complete_Action => sequence_of_statements

State 7:
     87.0:generic_instantiation <= PACKAGE ^ name IS NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
     98.0:package_body <= PACKAGE ^ BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
     98.1:package_body <= PACKAGE ^ BODY name aspect_specification IS declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
     98.2:package_body <= PACKAGE ^ BODY name IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
     98.3:package_body <= PACKAGE ^ BODY name IS declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BODY                               => shift and goto state 62
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   name                               goto state 63
   selected_component                 goto state 29

   Minimal_Complete_Action => (IDENTIFIER, BODY)

State 8:
     87.1:generic_instantiation <= PROCEDURE ^ name IS NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
    105.0:procedure_specification <= PROCEDURE ^ name parameter_profile, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   name                               goto state 64
   selected_component                 goto state 29

   Minimal_Complete_Action => IDENTIFIER

State 9:
     82.0:extended_return_statement <= RETURN ^ extended_return_object_declaration SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
    114.0:simple_return_statement <= RETURN ^ expression SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 65
   default                            => ERROR

   expression                         goto state 66
   extended_return_object_declaration goto state 67
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 49
   selected_component                 goto state 29
   simple_expression                  goto state 50
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 10:
     63.0:block_label_opt <= IDENTIFIER ^ COLON, BEGIN/DECLARE
     95.2:name <= IDENTIFIER ^, LEFT_PAREN/COLON_EQUAL/DOT/SEMICOLON

   LEFT_PAREN                         => reduce 1 tokens to name 95.2
   COLON                              => shift and goto state 68
   COLON_EQUAL                        => reduce 1 tokens to name 95.2
   DOT                                => reduce 1 tokens to name 95.2
   SEMICOLON                          => reduce 1 tokens to name 95.2
   default                            => ERROR

   Minimal_Complete_Action => name

State 11:
    115.0:simple_statement <= assignment_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to simple_statement 115.0
   CASE                               => reduce 1 tokens to simple_statement 115.0
   DECLARE                            => reduce 1 tokens to simple_statement 115.0
   ELSE                               => reduce 1 tokens to simple_statement 115.0
   ELSIF                              => reduce 1 tokens to simple_statement 115.0
   END                                => reduce 1 tokens to simple_statement 115.0
   EXIT                               => reduce 1 tokens to simple_statement 115.0
   EXCEPTION                          => reduce 1 tokens to simple_statement 115.0
   FOR                                => reduce 1 tokens to simple_statement 115.0
   FUNCTION                           => reduce 1 tokens to simple_statement 115.0
   IF                                 => reduce 1 tokens to simple_statement 115.0
   LOOP                               => reduce 1 tokens to simple_statement 115.0
   PACKAGE                            => reduce 1 tokens to simple_statement 115.0
   PROCEDURE                          => reduce 1 tokens to simple_statement 115.0
   RETURN                             => reduce 1 tokens to simple_statement 115.0
   WHEN                               => reduce 1 tokens to simple_statement 115.0
   IDENTIFIER                         => reduce 1 tokens to simple_statement 115.0
   Wisi_EOI                           => reduce 1 tokens to simple_statement 115.0
   default                            => ERROR

   Minimal_Complete_Action => simple_statement

State 12:
     64.0:block_statement <= block_label_opt ^ DECLARE declarative_part BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     64.1:block_statement <= block_label_opt ^ BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 69
   DECLARE                            => shift and goto state 70
   default                            => ERROR

   Minimal_Complete_Action => BEGIN

State 13:
     71.3:compound_statement <= block_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compound_statement 71.3
   CASE                               => reduce 1 tokens to compound_statement 71.3
   DECLARE                            => reduce 1 tokens to compound_statement 71.3
   ELSE                               => reduce 1 tokens to compound_statement 71.3
   ELSIF                              => reduce 1 tokens to compound_statement 71.3
   END                                => reduce 1 tokens to compound_statement 71.3
   EXIT                               => reduce 1 tokens to compound_statement 71.3
   EXCEPTION                          => reduce 1 tokens to compound_statement 71.3
   FOR                                => reduce 1 tokens to compound_statement 71.3
   FUNCTION                           => reduce 1 tokens to compound_statement 71.3
   IF                                 => reduce 1 tokens to compound_statement 71.3
   LOOP                               => reduce 1 tokens to compound_statement 71.3
   PACKAGE                            => reduce 1 tokens to compound_statement 71.3
   PROCEDURE                          => reduce 1 tokens to compound_statement 71.3
   RETURN                             => reduce 1 tokens to compound_statement 71.3
   WHEN                               => reduce 1 tokens to compound_statement 71.3
   IDENTIFIER                         => reduce 1 tokens to compound_statement 71.3
   Wisi_EOI                           => reduce 1 tokens to compound_statement 71.3
   default                            => ERROR

   Minimal_Complete_Action => compound_statement

State 14:
     71.1:compound_statement <= case_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compound_statement 71.1
   CASE                               => reduce 1 tokens to compound_statement 71.1
   DECLARE                            => reduce 1 tokens to compound_statement 71.1
   ELSE                               => reduce 1 tokens to compound_statement 71.1
   ELSIF                              => reduce 1 tokens to compound_statement 71.1
   END                                => reduce 1 tokens to compound_statement 71.1
   EXIT                               => reduce 1 tokens to compound_statement 71.1
   EXCEPTION                          => reduce 1 tokens to compound_statement 71.1
   FOR                                => reduce 1 tokens to compound_statement 71.1
   FUNCTION                           => reduce 1 tokens to compound_statement 71.1
   IF                                 => reduce 1 tokens to compound_statement 71.1
   LOOP                               => reduce 1 tokens to compound_statement 71.1
   PACKAGE                            => reduce 1 tokens to compound_statement 71.1
   PROCEDURE                          => reduce 1 tokens to compound_statement 71.1
   RETURN                             => reduce 1 tokens to compound_statement 71.1
   WHEN                               => reduce 1 tokens to compound_statement 71.1
   IDENTIFIER                         => reduce 1 tokens to compound_statement 71.1
   Wisi_EOI                           => reduce 1 tokens to compound_statement 71.1
   default                            => ERROR

   Minimal_Complete_Action => compound_statement

State 15:
    127.0:nonterminal_005_list <= compilation_unit ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to nonterminal_005_list 127.0
   CASE                               => reduce 1 tokens to nonterminal_005_list 127.0
   DECLARE                            => reduce 1 tokens to nonterminal_005_list 127.0
   EXIT                               => reduce 1 tokens to nonterminal_005_list 127.0
   FOR                                => reduce 1 tokens to nonterminal_005_list 127.0
   FUNCTION                           => reduce 1 tokens to nonterminal_005_list 127.0
   IF                                 => reduce 1 tokens to nonterminal_005_list 127.0
   LOOP                               => reduce 1 tokens to nonterminal_005_list 127.0
   PACKAGE                            => reduce 1 tokens to nonterminal_005_list 127.0
   PROCEDURE                          => reduce 1 tokens to nonterminal_005_list 127.0
   RETURN                             => reduce 1 tokens to nonterminal_005_list 127.0
   IDENTIFIER                         => reduce 1 tokens to nonterminal_005_list 127.0
   Wisi_EOI                           => reduce 1 tokens to nonterminal_005_list 127.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_005_list

State 16:
     56.0:wisitoken_accept <= compilation_unit_list ^ Wisi_EOI, 

   Wisi_EOI                           => accept it 56.0
   default                            => ERROR

   Minimal_Complete_Action => 

State 17:
    116.1:statement <= compound_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to statement 116.1
   CASE                               => reduce 1 tokens to statement 116.1
   DECLARE                            => reduce 1 tokens to statement 116.1
   ELSE                               => reduce 1 tokens to statement 116.1
   ELSIF                              => reduce 1 tokens to statement 116.1
   END                                => reduce 1 tokens to statement 116.1
   EXIT                               => reduce 1 tokens to statement 116.1
   EXCEPTION                          => reduce 1 tokens to statement 116.1
   FOR                                => reduce 1 tokens to statement 116.1
   FUNCTION                           => reduce 1 tokens to statement 116.1
   IF                                 => reduce 1 tokens to statement 116.1
   LOOP                               => reduce 1 tokens to statement 116.1
   PACKAGE                            => reduce 1 tokens to statement 116.1
   PROCEDURE                          => reduce 1 tokens to statement 116.1
   RETURN                             => reduce 1 tokens to statement 116.1
   WHEN                               => reduce 1 tokens to statement 116.1
   IDENTIFIER                         => reduce 1 tokens to statement 116.1
   Wisi_EOI                           => reduce 1 tokens to statement 116.1
   default                            => ERROR

   Minimal_Complete_Action => statement

State 18:
    115.1:simple_statement <= exit_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to simple_statement 115.1
   CASE                               => reduce 1 tokens to simple_statement 115.1
   DECLARE                            => reduce 1 tokens to simple_statement 115.1
   ELSE                               => reduce 1 tokens to simple_statement 115.1
   ELSIF                              => reduce 1 tokens to simple_statement 115.1
   END                                => reduce 1 tokens to simple_statement 115.1
   EXIT                               => reduce 1 tokens to simple_statement 115.1
   EXCEPTION                          => reduce 1 tokens to simple_statement 115.1
   FOR                                => reduce 1 tokens to simple_statement 115.1
   FUNCTION                           => reduce 1 tokens to simple_statement 115.1
   IF                                 => reduce 1 tokens to simple_statement 115.1
   LOOP                               => reduce 1 tokens to simple_statement 115.1
   PACKAGE                            => reduce 1 tokens to simple_statement 115.1
   PROCEDURE                          => reduce 1 tokens to simple_statement 115.1
   RETURN                             => reduce 1 tokens to simple_statement 115.1
   WHEN                               => reduce 1 tokens to simple_statement 115.1
   IDENTIFIER                         => reduce 1 tokens to simple_statement 115.1
   Wisi_EOI                           => reduce 1 tokens to simple_statement 115.1
   default                            => ERROR

   Minimal_Complete_Action => simple_statement

State 19:
     71.4:compound_statement <= extended_return_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compound_statement 71.4
   CASE                               => reduce 1 tokens to compound_statement 71.4
   DECLARE                            => reduce 1 tokens to compound_statement 71.4
   ELSE                               => reduce 1 tokens to compound_statement 71.4
   ELSIF                              => reduce 1 tokens to compound_statement 71.4
   END                                => reduce 1 tokens to compound_statement 71.4
   EXIT                               => reduce 1 tokens to compound_statement 71.4
   EXCEPTION                          => reduce 1 tokens to compound_statement 71.4
   FOR                                => reduce 1 tokens to compound_statement 71.4
   FUNCTION                           => reduce 1 tokens to compound_statement 71.4
   IF                                 => reduce 1 tokens to compound_statement 71.4
   LOOP                               => reduce 1 tokens to compound_statement 71.4
   PACKAGE                            => reduce 1 tokens to compound_statement 71.4
   PROCEDURE                          => reduce 1 tokens to compound_statement 71.4
   RETURN                             => reduce 1 tokens to compound_statement 71.4
   WHEN                               => reduce 1 tokens to compound_statement 71.4
   IDENTIFIER                         => reduce 1 tokens to compound_statement 71.4
   Wisi_EOI                           => reduce 1 tokens to compound_statement 71.4
   default                            => ERROR

   Minimal_Complete_Action => compound_statement

State 20:
    120.1:subprogram_specification <= function_specification ^, IS/WITH/SEMICOLON

   IS                                 => reduce 1 tokens to subprogram_specification 120.1
   WITH                               => reduce 1 tokens to subprogram_specification 120.1
   SEMICOLON                          => reduce 1 tokens to subprogram_specification 120.1
   default                            => ERROR

   Minimal_Complete_Action => subprogram_specification

State 21:
     69.3:compilation_unit <= generic_instantiation ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compilation_unit 69.3
   CASE                               => reduce 1 tokens to compilation_unit 69.3
   DECLARE                            => reduce 1 tokens to compilation_unit 69.3
   EXIT                               => reduce 1 tokens to compilation_unit 69.3
   FOR                                => reduce 1 tokens to compilation_unit 69.3
   FUNCTION                           => reduce 1 tokens to compilation_unit 69.3
   IF                                 => reduce 1 tokens to compilation_unit 69.3
   LOOP                               => reduce 1 tokens to compilation_unit 69.3
   PACKAGE                            => reduce 1 tokens to compilation_unit 69.3
   PROCEDURE                          => reduce 1 tokens to compilation_unit 69.3
   RETURN                             => reduce 1 tokens to compilation_unit 69.3
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 69.3
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 69.3
   default                            => ERROR

   Minimal_Complete_Action => compilation_unit

State 22:
     71.0:compound_statement <= if_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compound_statement 71.0
   CASE                               => reduce 1 tokens to compound_statement 71.0
   DECLARE                            => reduce 1 tokens to compound_statement 71.0
   ELSE                               => reduce 1 tokens to compound_statement 71.0
   ELSIF                              => reduce 1 tokens to compound_statement 71.0
   END                                => reduce 1 tokens to compound_statement 71.0
   EXIT                               => reduce 1 tokens to compound_statement 71.0
   EXCEPTION                          => reduce 1 tokens to compound_statement 71.0
   FOR                                => reduce 1 tokens to compound_statement 71.0
   FUNCTION                           => reduce 1 tokens to compound_statement 71.0
   IF                                 => reduce 1 tokens to compound_statement 71.0
   LOOP                               => reduce 1 tokens to compound_statement 71.0
   PACKAGE                            => reduce 1 tokens to compound_statement 71.0
   PROCEDURE                          => reduce 1 tokens to compound_statement 71.0
   RETURN                             => reduce 1 tokens to compound_statement 71.0
   WHEN                               => reduce 1 tokens to compound_statement 71.0
   IDENTIFIER                         => reduce 1 tokens to compound_statement 71.0
   Wisi_EOI                           => reduce 1 tokens to compound_statement 71.0
   default                            => ERROR

   Minimal_Complete_Action => compound_statement

State 23:
     93.0:loop_statement <= iteration_scheme ^ LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LOOP                               => shift and goto state 71
   default                            => ERROR

   Minimal_Complete_Action => LOOP

State 24:
     71.2:compound_statement <= loop_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compound_statement 71.2
   CASE                               => reduce 1 tokens to compound_statement 71.2
   DECLARE                            => reduce 1 tokens to compound_statement 71.2
   ELSE                               => reduce 1 tokens to compound_statement 71.2
   ELSIF                              => reduce 1 tokens to compound_statement 71.2
   END                                => reduce 1 tokens to compound_statement 71.2
   EXIT                               => reduce 1 tokens to compound_statement 71.2
   EXCEPTION                          => reduce 1 tokens to compound_statement 71.2
   FOR                                => reduce 1 tokens to compound_statement 71.2
   FUNCTION                           => reduce 1 tokens to compound_statement 71.2
   IF                                 => reduce 1 tokens to compound_statement 71.2
   LOOP                               => reduce 1 tokens to compound_statement 71.2
   PACKAGE                            => reduce 1 tokens to compound_statement 71.2
   PROCEDURE                          => reduce 1 tokens to compound_statement 71.2
   RETURN                             => reduce 1 tokens to compound_statement 71.2
   WHEN                               => reduce 1 tokens to compound_statement 71.2
   IDENTIFIER                         => reduce 1 tokens to compound_statement 71.2
   Wisi_EOI                           => reduce 1 tokens to compound_statement 71.2
   default                            => ERROR

   Minimal_Complete_Action => compound_statement

State 25:
     59.0:assignment_statement <= name ^ COLON_EQUAL expression SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/COLON_EQUAL/DOT/SEMICOLON
     95.1:name <= name ^ actual_parameter_part, LEFT_PAREN/COLON_EQUAL/DOT/SEMICOLON
    104.0:procedure_call_statement <= name ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
    111.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/COLON_EQUAL/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 72
   COLON_EQUAL                        => shift and goto state 73
   DOT                                => shift and goto state 74
   SEMICOLON                          => shift and goto state 75
   default                            => ERROR

   actual_parameter_part              goto state 76

   Minimal_Complete_Action => SEMICOLON

State 26:
     69.0:compilation_unit <= package_body ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compilation_unit 69.0
   CASE                               => reduce 1 tokens to compilation_unit 69.0
   DECLARE                            => reduce 1 tokens to compilation_unit 69.0
   EXIT                               => reduce 1 tokens to compilation_unit 69.0
   FOR                                => reduce 1 tokens to compilation_unit 69.0
   FUNCTION                           => reduce 1 tokens to compilation_unit 69.0
   IF                                 => reduce 1 tokens to compilation_unit 69.0
   LOOP                               => reduce 1 tokens to compilation_unit 69.0
   PACKAGE                            => reduce 1 tokens to compilation_unit 69.0
   PROCEDURE                          => reduce 1 tokens to compilation_unit 69.0
   RETURN                             => reduce 1 tokens to compilation_unit 69.0
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 69.0
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 69.0
   default                            => ERROR

   Minimal_Complete_Action => compilation_unit

State 27:
    115.2:simple_statement <= procedure_call_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to simple_statement 115.2
   CASE                               => reduce 1 tokens to simple_statement 115.2
   DECLARE                            => reduce 1 tokens to simple_statement 115.2
   ELSE                               => reduce 1 tokens to simple_statement 115.2
   ELSIF                              => reduce 1 tokens to simple_statement 115.2
   END                                => reduce 1 tokens to simple_statement 115.2
   EXIT                               => reduce 1 tokens to simple_statement 115.2
   EXCEPTION                          => reduce 1 tokens to simple_statement 115.2
   FOR                                => reduce 1 tokens to simple_statement 115.2
   FUNCTION                           => reduce 1 tokens to simple_statement 115.2
   IF                                 => reduce 1 tokens to simple_statement 115.2
   LOOP                               => reduce 1 tokens to simple_statement 115.2
   PACKAGE                            => reduce 1 tokens to simple_statement 115.2
   PROCEDURE                          => reduce 1 tokens to simple_statement 115.2
   RETURN                             => reduce 1 tokens to simple_statement 115.2
   WHEN                               => reduce 1 tokens to simple_statement 115.2
   IDENTIFIER                         => reduce 1 tokens to simple_statement 115.2
   Wisi_EOI                           => reduce 1 tokens to simple_statement 115.2
   default                            => ERROR

   Minimal_Complete_Action => simple_statement

State 28:
    120.0:subprogram_specification <= procedure_specification ^, IS/WITH/SEMICOLON

   IS                                 => reduce 1 tokens to subprogram_specification 120.0
   WITH                               => reduce 1 tokens to subprogram_specification 120.0
   SEMICOLON                          => reduce 1 tokens to subprogram_specification 120.0
   default                            => ERROR

   Minimal_Complete_Action => subprogram_specification

State 29:
     95.3:name <= selected_component ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to name 95.3
   IS                                 => reduce 1 tokens to name 95.3
   LEFT_PAREN                         => reduce 1 tokens to name 95.3
   LOOP                               => reduce 1 tokens to name 95.3
   OR                                 => reduce 1 tokens to name 95.3
   RANGE                              => reduce 1 tokens to name 95.3
   RETURN                             => reduce 1 tokens to name 95.3
   RIGHT_PAREN                        => reduce 1 tokens to name 95.3
   THEN                               => reduce 1 tokens to name 95.3
   WITH                               => reduce 1 tokens to name 95.3
   XOR                                => reduce 1 tokens to name 95.3
   AMPERSAND                          => reduce 1 tokens to name 95.3
   COLON_EQUAL                        => reduce 1 tokens to name 95.3
   COMMA                              => reduce 1 tokens to name 95.3
   DOT                                => reduce 1 tokens to name 95.3
   DOT_DOT                            => reduce 1 tokens to name 95.3
   EQUAL                              => reduce 1 tokens to name 95.3
   EQUAL_GREATER                      => reduce 1 tokens to name 95.3
   GREATER                            => reduce 1 tokens to name 95.3
   GREATER_EQUAL                      => reduce 1 tokens to name 95.3
   LESS                               => reduce 1 tokens to name 95.3
   LESS_EQUAL                         => reduce 1 tokens to name 95.3
   MINUS                              => reduce 1 tokens to name 95.3
   PLUS                               => reduce 1 tokens to name 95.3
   SEMICOLON                          => reduce 1 tokens to name 95.3
   SLASH                              => reduce 1 tokens to name 95.3
   SLASH_EQUAL                        => reduce 1 tokens to name 95.3
   STAR                               => reduce 1 tokens to name 95.3
   default                            => ERROR

   Minimal_Complete_Action => name recursive

State 30:
    115.3:simple_statement <= simple_return_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to simple_statement 115.3
   CASE                               => reduce 1 tokens to simple_statement 115.3
   DECLARE                            => reduce 1 tokens to simple_statement 115.3
   ELSE                               => reduce 1 tokens to simple_statement 115.3
   ELSIF                              => reduce 1 tokens to simple_statement 115.3
   END                                => reduce 1 tokens to simple_statement 115.3
   EXIT                               => reduce 1 tokens to simple_statement 115.3
   EXCEPTION                          => reduce 1 tokens to simple_statement 115.3
   FOR                                => reduce 1 tokens to simple_statement 115.3
   FUNCTION                           => reduce 1 tokens to simple_statement 115.3
   IF                                 => reduce 1 tokens to simple_statement 115.3
   LOOP                               => reduce 1 tokens to simple_statement 115.3
   PACKAGE                            => reduce 1 tokens to simple_statement 115.3
   PROCEDURE                          => reduce 1 tokens to simple_statement 115.3
   RETURN                             => reduce 1 tokens to simple_statement 115.3
   WHEN                               => reduce 1 tokens to simple_statement 115.3
   IDENTIFIER                         => reduce 1 tokens to simple_statement 115.3
   Wisi_EOI                           => reduce 1 tokens to simple_statement 115.3
   default                            => ERROR

   Minimal_Complete_Action => simple_statement

State 31:
    116.0:statement <= simple_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to statement 116.0
   CASE                               => reduce 1 tokens to statement 116.0
   DECLARE                            => reduce 1 tokens to statement 116.0
   ELSE                               => reduce 1 tokens to statement 116.0
   ELSIF                              => reduce 1 tokens to statement 116.0
   END                                => reduce 1 tokens to statement 116.0
   EXIT                               => reduce 1 tokens to statement 116.0
   EXCEPTION                          => reduce 1 tokens to statement 116.0
   FOR                                => reduce 1 tokens to statement 116.0
   FUNCTION                           => reduce 1 tokens to statement 116.0
   IF                                 => reduce 1 tokens to statement 116.0
   LOOP                               => reduce 1 tokens to statement 116.0
   PACKAGE                            => reduce 1 tokens to statement 116.0
   PROCEDURE                          => reduce 1 tokens to statement 116.0
   RETURN                             => reduce 1 tokens to statement 116.0
   WHEN                               => reduce 1 tokens to statement 116.0
   IDENTIFIER                         => reduce 1 tokens to statement 116.0
   Wisi_EOI                           => reduce 1 tokens to statement 116.0
   default                            => ERROR

   Minimal_Complete_Action => statement

State 32:
     69.4:compilation_unit <= statement ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compilation_unit 69.4
   CASE                               => reduce 1 tokens to compilation_unit 69.4
   DECLARE                            => reduce 1 tokens to compilation_unit 69.4
   EXIT                               => reduce 1 tokens to compilation_unit 69.4
   FOR                                => reduce 1 tokens to compilation_unit 69.4
   FUNCTION                           => reduce 1 tokens to compilation_unit 69.4
   IF                                 => reduce 1 tokens to compilation_unit 69.4
   LOOP                               => reduce 1 tokens to compilation_unit 69.4
   PACKAGE                            => reduce 1 tokens to compilation_unit 69.4
   PROCEDURE                          => reduce 1 tokens to compilation_unit 69.4
   RETURN                             => reduce 1 tokens to compilation_unit 69.4
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 69.4
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 69.4
   default                            => ERROR

   Minimal_Complete_Action => compilation_unit

State 33:
     69.2:compilation_unit <= subprogram_body ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compilation_unit 69.2
   CASE                               => reduce 1 tokens to compilation_unit 69.2
   DECLARE                            => reduce 1 tokens to compilation_unit 69.2
   EXIT                               => reduce 1 tokens to compilation_unit 69.2
   FOR                                => reduce 1 tokens to compilation_unit 69.2
   FUNCTION                           => reduce 1 tokens to compilation_unit 69.2
   IF                                 => reduce 1 tokens to compilation_unit 69.2
   LOOP                               => reduce 1 tokens to compilation_unit 69.2
   PACKAGE                            => reduce 1 tokens to compilation_unit 69.2
   PROCEDURE                          => reduce 1 tokens to compilation_unit 69.2
   RETURN                             => reduce 1 tokens to compilation_unit 69.2
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 69.2
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 69.2
   default                            => ERROR

   Minimal_Complete_Action => compilation_unit

State 34:
     69.1:compilation_unit <= subprogram_declaration ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compilation_unit 69.1
   CASE                               => reduce 1 tokens to compilation_unit 69.1
   DECLARE                            => reduce 1 tokens to compilation_unit 69.1
   EXIT                               => reduce 1 tokens to compilation_unit 69.1
   FOR                                => reduce 1 tokens to compilation_unit 69.1
   FUNCTION                           => reduce 1 tokens to compilation_unit 69.1
   IF                                 => reduce 1 tokens to compilation_unit 69.1
   LOOP                               => reduce 1 tokens to compilation_unit 69.1
   PACKAGE                            => reduce 1 tokens to compilation_unit 69.1
   PROCEDURE                          => reduce 1 tokens to compilation_unit 69.1
   RETURN                             => reduce 1 tokens to compilation_unit 69.1
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 69.1
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 69.1
   default                            => ERROR

   Minimal_Complete_Action => compilation_unit

State 35:
    117.0:subprogram_body <= subprogram_specification ^ aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
    117.1:subprogram_body <= subprogram_specification ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
    119.0:subprogram_declaration <= subprogram_specification ^ SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   IS                                 => shift and goto state 77
   WITH                               => shift and goto state 78
   SEMICOLON                          => shift and goto state 79
   default                            => ERROR

   aspect_specification               goto state 80

   Minimal_Complete_Action => SEMICOLON

State 36:
     70.0:compilation_unit_list <= nonterminal_005_list ^, Wisi_EOI
    127.1:nonterminal_005_list <= nonterminal_005_list ^ compilation_unit, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   FUNCTION                           => shift and goto state 4
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   PACKAGE                            => shift and goto state 7
   PROCEDURE                          => shift and goto state 8
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   Wisi_EOI                           => reduce 1 tokens to compilation_unit_list 70.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compilation_unit                   goto state 81
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   function_specification             goto state 20
   generic_instantiation              goto state 21
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   package_body                       goto state 26
   procedure_call_statement           goto state 27
   procedure_specification            goto state 28
   selected_component                 goto state 29
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 32
   subprogram_body                    goto state 33
   subprogram_declaration             goto state 34
   subprogram_specification           goto state 35

   Minimal_Complete_Action => compilation_unit_list

State 37:
    102.0:paren_expression <= LEFT_PAREN ^ expression RIGHT_PAREN, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   expression                         goto state 82
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 49
   selected_component                 goto state 29
   simple_expression                  goto state 50
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 38:
     83.1:factor <= NOT ^ primary, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 37
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 83
   selected_component                 goto state 29

   Minimal_Complete_Action => NUMERIC_LITERAL

State 39:
    125.1:unary_adding_operator <= MINUS ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to unary_adding_operator 125.1
   NOT                                => reduce 1 tokens to unary_adding_operator 125.1
   STRING_LITERAL                     => reduce 1 tokens to unary_adding_operator 125.1
   NUMERIC_LITERAL                    => reduce 1 tokens to unary_adding_operator 125.1
   IDENTIFIER                         => reduce 1 tokens to unary_adding_operator 125.1
   default                            => ERROR

   Minimal_Complete_Action => unary_adding_operator

State 40:
    125.0:unary_adding_operator <= PLUS ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to unary_adding_operator 125.0
   NOT                                => reduce 1 tokens to unary_adding_operator 125.0
   STRING_LITERAL                     => reduce 1 tokens to unary_adding_operator 125.0
   NUMERIC_LITERAL                    => reduce 1 tokens to unary_adding_operator 125.0
   IDENTIFIER                         => reduce 1 tokens to unary_adding_operator 125.0
   default                            => ERROR

   Minimal_Complete_Action => unary_adding_operator

State 41:
    103.1:primary <= STRING_LITERAL ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to primary 103.1
   IS                                 => reduce 1 tokens to primary 103.1
   LOOP                               => reduce 1 tokens to primary 103.1
   OR                                 => reduce 1 tokens to primary 103.1
   RIGHT_PAREN                        => reduce 1 tokens to primary 103.1
   THEN                               => reduce 1 tokens to primary 103.1
   XOR                                => reduce 1 tokens to primary 103.1
   AMPERSAND                          => reduce 1 tokens to primary 103.1
   COLON_EQUAL                        => reduce 1 tokens to primary 103.1
   COMMA                              => reduce 1 tokens to primary 103.1
   DOT_DOT                            => reduce 1 tokens to primary 103.1
   EQUAL                              => reduce 1 tokens to primary 103.1
   GREATER                            => reduce 1 tokens to primary 103.1
   GREATER_EQUAL                      => reduce 1 tokens to primary 103.1
   LESS                               => reduce 1 tokens to primary 103.1
   LESS_EQUAL                         => reduce 1 tokens to primary 103.1
   MINUS                              => reduce 1 tokens to primary 103.1
   PLUS                               => reduce 1 tokens to primary 103.1
   SEMICOLON                          => reduce 1 tokens to primary 103.1
   SLASH                              => reduce 1 tokens to primary 103.1
   SLASH_EQUAL                        => reduce 1 tokens to primary 103.1
   STAR                               => reduce 1 tokens to primary 103.1
   default                            => ERROR

   Minimal_Complete_Action => primary

State 42:
    103.0:primary <= NUMERIC_LITERAL ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to primary 103.0
   IS                                 => reduce 1 tokens to primary 103.0
   LOOP                               => reduce 1 tokens to primary 103.0
   OR                                 => reduce 1 tokens to primary 103.0
   RIGHT_PAREN                        => reduce 1 tokens to primary 103.0
   THEN                               => reduce 1 tokens to primary 103.0
   XOR                                => reduce 1 tokens to primary 103.0
   AMPERSAND                          => reduce 1 tokens to primary 103.0
   COLON_EQUAL                        => reduce 1 tokens to primary 103.0
   COMMA                              => reduce 1 tokens to primary 103.0
   DOT_DOT                            => reduce 1 tokens to primary 103.0
   EQUAL                              => reduce 1 tokens to primary 103.0
   GREATER                            => reduce 1 tokens to primary 103.0
   GREATER_EQUAL                      => reduce 1 tokens to primary 103.0
   LESS                               => reduce 1 tokens to primary 103.0
   LESS_EQUAL                         => reduce 1 tokens to primary 103.0
   MINUS                              => reduce 1 tokens to primary 103.0
   PLUS                               => reduce 1 tokens to primary 103.0
   SEMICOLON                          => reduce 1 tokens to primary 103.0
   SLASH                              => reduce 1 tokens to primary 103.0
   SLASH_EQUAL                        => reduce 1 tokens to primary 103.0
   STAR                               => reduce 1 tokens to primary 103.0
   default                            => ERROR

   Minimal_Complete_Action => primary

State 43:
     95.2:name <= IDENTIFIER ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to name 95.2
   IS                                 => reduce 1 tokens to name 95.2
   LEFT_PAREN                         => reduce 1 tokens to name 95.2
   LOOP                               => reduce 1 tokens to name 95.2
   OR                                 => reduce 1 tokens to name 95.2
   RANGE                              => reduce 1 tokens to name 95.2
   RETURN                             => reduce 1 tokens to name 95.2
   RIGHT_PAREN                        => reduce 1 tokens to name 95.2
   THEN                               => reduce 1 tokens to name 95.2
   WITH                               => reduce 1 tokens to name 95.2
   XOR                                => reduce 1 tokens to name 95.2
   AMPERSAND                          => reduce 1 tokens to name 95.2
   COLON_EQUAL                        => reduce 1 tokens to name 95.2
   COMMA                              => reduce 1 tokens to name 95.2
   DOT                                => reduce 1 tokens to name 95.2
   DOT_DOT                            => reduce 1 tokens to name 95.2
   EQUAL                              => reduce 1 tokens to name 95.2
   EQUAL_GREATER                      => reduce 1 tokens to name 95.2
   GREATER                            => reduce 1 tokens to name 95.2
   GREATER_EQUAL                      => reduce 1 tokens to name 95.2
   LESS                               => reduce 1 tokens to name 95.2
   LESS_EQUAL                         => reduce 1 tokens to name 95.2
   MINUS                              => reduce 1 tokens to name 95.2
   PLUS                               => reduce 1 tokens to name 95.2
   SEMICOLON                          => reduce 1 tokens to name 95.2
   SLASH                              => reduce 1 tokens to name 95.2
   SLASH_EQUAL                        => reduce 1 tokens to name 95.2
   STAR                               => reduce 1 tokens to name 95.2
   default                            => ERROR

   Minimal_Complete_Action => name

State 44:
     67.0:case_statement <= CASE expression ^ IS nonterminal_004_list END CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   IS                                 => shift and goto state 84
   default                            => ERROR

   Minimal_Complete_Action => IS

State 45:
    122.0:term <= factor ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to term 122.0
   IS                                 => reduce 1 tokens to term 122.0
   LOOP                               => reduce 1 tokens to term 122.0
   OR                                 => reduce 1 tokens to term 122.0
   RIGHT_PAREN                        => reduce 1 tokens to term 122.0
   THEN                               => reduce 1 tokens to term 122.0
   XOR                                => reduce 1 tokens to term 122.0
   AMPERSAND                          => reduce 1 tokens to term 122.0
   COLON_EQUAL                        => reduce 1 tokens to term 122.0
   COMMA                              => reduce 1 tokens to term 122.0
   DOT_DOT                            => reduce 1 tokens to term 122.0
   EQUAL                              => reduce 1 tokens to term 122.0
   GREATER                            => reduce 1 tokens to term 122.0
   GREATER_EQUAL                      => reduce 1 tokens to term 122.0
   LESS                               => reduce 1 tokens to term 122.0
   LESS_EQUAL                         => reduce 1 tokens to term 122.0
   MINUS                              => reduce 1 tokens to term 122.0
   PLUS                               => reduce 1 tokens to term 122.0
   SEMICOLON                          => reduce 1 tokens to term 122.0
   SLASH                              => reduce 1 tokens to term 122.0
   SLASH_EQUAL                        => reduce 1 tokens to term 122.0
   STAR                               => reduce 1 tokens to term 122.0
   default                            => ERROR

   Minimal_Complete_Action => term

State 46:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
     95.1:name <= name ^ actual_parameter_part, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    103.2:primary <= name ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    111.0:selected_component <= name ^ DOT IDENTIFIER, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to primary 103.2
   IS                                 => reduce 1 tokens to primary 103.2
   LEFT_PAREN                         => shift and goto state 72
   LOOP                               => reduce 1 tokens to primary 103.2
   OR                                 => reduce 1 tokens to primary 103.2
   RIGHT_PAREN                        => reduce 1 tokens to primary 103.2
   THEN                               => reduce 1 tokens to primary 103.2
   XOR                                => reduce 1 tokens to primary 103.2
   AMPERSAND                          => reduce 1 tokens to primary 103.2
   COLON_EQUAL                        => reduce 1 tokens to primary 103.2
   COMMA                              => reduce 1 tokens to primary 103.2
   DOT                                => shift and goto state 74
   DOT_DOT                            => reduce 1 tokens to primary 103.2
   EQUAL                              => reduce 1 tokens to primary 103.2
   GREATER                            => reduce 1 tokens to primary 103.2
   GREATER_EQUAL                      => reduce 1 tokens to primary 103.2
   LESS                               => reduce 1 tokens to primary 103.2
   LESS_EQUAL                         => reduce 1 tokens to primary 103.2
   MINUS                              => reduce 1 tokens to primary 103.2
   PLUS                               => reduce 1 tokens to primary 103.2
   SEMICOLON                          => reduce 1 tokens to primary 103.2
   SLASH                              => reduce 1 tokens to primary 103.2
   SLASH_EQUAL                        => reduce 1 tokens to primary 103.2
   STAR                               => reduce 1 tokens to primary 103.2
   default                            => ERROR

   actual_parameter_part              goto state 76

   Minimal_Complete_Action => primary

State 47:
    103.3:primary <= paren_expression ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to primary 103.3
   IS                                 => reduce 1 tokens to primary 103.3
   LOOP                               => reduce 1 tokens to primary 103.3
   OR                                 => reduce 1 tokens to primary 103.3
   RIGHT_PAREN                        => reduce 1 tokens to primary 103.3
   THEN                               => reduce 1 tokens to primary 103.3
   XOR                                => reduce 1 tokens to primary 103.3
   AMPERSAND                          => reduce 1 tokens to primary 103.3
   COLON_EQUAL                        => reduce 1 tokens to primary 103.3
   COMMA                              => reduce 1 tokens to primary 103.3
   DOT_DOT                            => reduce 1 tokens to primary 103.3
   EQUAL                              => reduce 1 tokens to primary 103.3
   GREATER                            => reduce 1 tokens to primary 103.3
   GREATER_EQUAL                      => reduce 1 tokens to primary 103.3
   LESS                               => reduce 1 tokens to primary 103.3
   LESS_EQUAL                         => reduce 1 tokens to primary 103.3
   MINUS                              => reduce 1 tokens to primary 103.3
   PLUS                               => reduce 1 tokens to primary 103.3
   SEMICOLON                          => reduce 1 tokens to primary 103.3
   SLASH                              => reduce 1 tokens to primary 103.3
   SLASH_EQUAL                        => reduce 1 tokens to primary 103.3
   STAR                               => reduce 1 tokens to primary 103.3
   default                            => ERROR

   Minimal_Complete_Action => primary

State 48:
     83.0:factor <= primary ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to factor 83.0
   IS                                 => reduce 1 tokens to factor 83.0
   LOOP                               => reduce 1 tokens to factor 83.0
   OR                                 => reduce 1 tokens to factor 83.0
   RIGHT_PAREN                        => reduce 1 tokens to factor 83.0
   THEN                               => reduce 1 tokens to factor 83.0
   XOR                                => reduce 1 tokens to factor 83.0
   AMPERSAND                          => reduce 1 tokens to factor 83.0
   COLON_EQUAL                        => reduce 1 tokens to factor 83.0
   COMMA                              => reduce 1 tokens to factor 83.0
   DOT_DOT                            => reduce 1 tokens to factor 83.0
   EQUAL                              => reduce 1 tokens to factor 83.0
   GREATER                            => reduce 1 tokens to factor 83.0
   GREATER_EQUAL                      => reduce 1 tokens to factor 83.0
   LESS                               => reduce 1 tokens to factor 83.0
   LESS_EQUAL                         => reduce 1 tokens to factor 83.0
   MINUS                              => reduce 1 tokens to factor 83.0
   PLUS                               => reduce 1 tokens to factor 83.0
   SEMICOLON                          => reduce 1 tokens to factor 83.0
   SLASH                              => reduce 1 tokens to factor 83.0
   SLASH_EQUAL                        => reduce 1 tokens to factor 83.0
   STAR                               => reduce 1 tokens to factor 83.0
   default                            => ERROR

   Minimal_Complete_Action => factor

State 49:
     80.0:expression <= relation ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
     80.1:expression <= relation ^ nonterminal_009_list, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
     80.2:expression <= relation ^ nonterminal_011_list, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
     80.3:expression <= relation ^ nonterminal_013_list, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   AND                                => shift and goto state 85
   IS                                 => reduce 1 tokens to expression 80.0
   OR                                 => shift and goto state 86
   RIGHT_PAREN                        => reduce 1 tokens to expression 80.0
   THEN                               => reduce 1 tokens to expression 80.0
   XOR                                => shift and goto state 87
   COMMA                              => reduce 1 tokens to expression 80.0
   SEMICOLON                          => reduce 1 tokens to expression 80.0
   default                            => ERROR

   nonterminal_010                    goto state 88
   nonterminal_009_list               goto state 89
   nonterminal_012                    goto state 90
   nonterminal_011_list               goto state 91
   nonterminal_014                    goto state 92
   nonterminal_013_list               goto state 93

   Minimal_Complete_Action => expression

State 50:
    109.0:relation <= simple_expression ^ relational_operator simple_expression, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON
    109.1:relation <= simple_expression ^, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   AND                                => reduce 1 tokens to relation 109.1
   IS                                 => reduce 1 tokens to relation 109.1
   OR                                 => reduce 1 tokens to relation 109.1
   RIGHT_PAREN                        => reduce 1 tokens to relation 109.1
   THEN                               => reduce 1 tokens to relation 109.1
   XOR                                => reduce 1 tokens to relation 109.1
   COMMA                              => reduce 1 tokens to relation 109.1
   EQUAL                              => shift and goto state 94
   GREATER                            => shift and goto state 95
   GREATER_EQUAL                      => shift and goto state 96
   LESS                               => shift and goto state 97
   LESS_EQUAL                         => shift and goto state 98
   SEMICOLON                          => reduce 1 tokens to relation 109.1
   SLASH_EQUAL                        => shift and goto state 99
   default                            => ERROR

   relational_operator                goto state 100

   Minimal_Complete_Action => relation

State 51:
    113.2:simple_expression <= term ^ nonterminal_022_list, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL
    113.3:simple_expression <= term ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL
    122.1:term <= term ^ multiplying_operator factor, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to simple_expression 113.3
   IS                                 => reduce 1 tokens to simple_expression 113.3
   LOOP                               => reduce 1 tokens to simple_expression 113.3
   OR                                 => reduce 1 tokens to simple_expression 113.3
   RIGHT_PAREN                        => reduce 1 tokens to simple_expression 113.3
   THEN                               => reduce 1 tokens to simple_expression 113.3
   XOR                                => reduce 1 tokens to simple_expression 113.3
   AMPERSAND                          => shift and goto state 101
   COLON_EQUAL                        => reduce 1 tokens to simple_expression 113.3
   COMMA                              => reduce 1 tokens to simple_expression 113.3
   DOT_DOT                            => reduce 1 tokens to simple_expression 113.3
   EQUAL                              => reduce 1 tokens to simple_expression 113.3
   GREATER                            => reduce 1 tokens to simple_expression 113.3
   GREATER_EQUAL                      => reduce 1 tokens to simple_expression 113.3
   LESS                               => reduce 1 tokens to simple_expression 113.3
   LESS_EQUAL                         => reduce 1 tokens to simple_expression 113.3
   MINUS                              => shift and goto state 102
   PLUS                               => shift and goto state 103
   SEMICOLON                          => reduce 1 tokens to simple_expression 113.3
   SLASH                              => shift and goto state 104
   SLASH_EQUAL                        => reduce 1 tokens to simple_expression 113.3
   STAR                               => shift and goto state 105
   default                            => ERROR

   binary_adding_operator             goto state 106
   multiplying_operator               goto state 107
   nonterminal_023                    goto state 108
   nonterminal_022_list               goto state 109

   Minimal_Complete_Action => simple_expression

State 52:
    113.0:simple_expression <= unary_adding_operator ^ term nonterminal_022_list, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL
    113.1:simple_expression <= unary_adding_operator ^ term, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   selected_component                 goto state 29
   term                               goto state 110

   Minimal_Complete_Action => NUMERIC_LITERAL

State 53:
     79.2:exit_statement <= EXIT WHEN ^ expression SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   expression                         goto state 111
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 49
   selected_component                 goto state 29
   simple_expression                  goto state 50
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 54:
     79.3:exit_statement <= EXIT SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 2 tokens to exit_statement 79.3
   CASE                               => reduce 2 tokens to exit_statement 79.3
   DECLARE                            => reduce 2 tokens to exit_statement 79.3
   ELSE                               => reduce 2 tokens to exit_statement 79.3
   ELSIF                              => reduce 2 tokens to exit_statement 79.3
   END                                => reduce 2 tokens to exit_statement 79.3
   EXIT                               => reduce 2 tokens to exit_statement 79.3
   EXCEPTION                          => reduce 2 tokens to exit_statement 79.3
   FOR                                => reduce 2 tokens to exit_statement 79.3
   FUNCTION                           => reduce 2 tokens to exit_statement 79.3
   IF                                 => reduce 2 tokens to exit_statement 79.3
   LOOP                               => reduce 2 tokens to exit_statement 79.3
   PACKAGE                            => reduce 2 tokens to exit_statement 79.3
   PROCEDURE                          => reduce 2 tokens to exit_statement 79.3
   RETURN                             => reduce 2 tokens to exit_statement 79.3
   WHEN                               => reduce 2 tokens to exit_statement 79.3
   IDENTIFIER                         => reduce 2 tokens to exit_statement 79.3
   Wisi_EOI                           => reduce 2 tokens to exit_statement 79.3
   default                            => ERROR

   Minimal_Complete_Action => exit_statement

State 55:
     79.0:exit_statement <= EXIT IDENTIFIER ^ WHEN expression SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     79.1:exit_statement <= EXIT IDENTIFIER ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   WHEN                               => shift and goto state 112
   SEMICOLON                          => shift and goto state 113
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 56:
     92.0:iteration_scheme <= FOR IDENTIFIER ^ IN discrete_subtype_definition, LOOP

   IN                                 => shift and goto state 114
   default                            => ERROR

   Minimal_Complete_Action => IN

State 57:
     86.0:function_specification <= FUNCTION name ^ parameter_and_result_profile, IS/WITH/SEMICOLON
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/RETURN/DOT
     95.1:name <= name ^ actual_parameter_part, LEFT_PAREN/RETURN/DOT
    111.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/RETURN/DOT

   LEFT_PAREN                         => shift and goto state 115
   RETURN                             => shift and goto state 116
   DOT                                => shift and goto state 74
   default                            => ERROR

   actual_parameter_part              goto state 76
   formal_part                        goto state 117
   parameter_and_result_profile       goto state 118

   Minimal_Complete_Action => RETURN

State 58:
     90.0:if_statement <= IF expression ^ THEN sequence_of_statements nonterminal_019_list ELSE sequence_of_statements END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.1:if_statement <= IF expression ^ THEN sequence_of_statements nonterminal_019_list END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.2:if_statement <= IF expression ^ THEN sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.3:if_statement <= IF expression ^ THEN sequence_of_statements END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   THEN                               => shift and goto state 119
   default                            => ERROR

   Minimal_Complete_Action => THEN

State 59:
     93.1:loop_statement <= LOOP sequence_of_statements ^ END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 120
   default                            => ERROR

   Minimal_Complete_Action => END

State 60:
    143.0:nonterminal_021_list <= statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 1 tokens to nonterminal_021_list 143.0
   CASE                               => reduce 1 tokens to nonterminal_021_list 143.0
   DECLARE                            => reduce 1 tokens to nonterminal_021_list 143.0
   ELSE                               => reduce 1 tokens to nonterminal_021_list 143.0
   ELSIF                              => reduce 1 tokens to nonterminal_021_list 143.0
   END                                => reduce 1 tokens to nonterminal_021_list 143.0
   EXIT                               => reduce 1 tokens to nonterminal_021_list 143.0
   EXCEPTION                          => reduce 1 tokens to nonterminal_021_list 143.0
   FOR                                => reduce 1 tokens to nonterminal_021_list 143.0
   IF                                 => reduce 1 tokens to nonterminal_021_list 143.0
   LOOP                               => reduce 1 tokens to nonterminal_021_list 143.0
   RETURN                             => reduce 1 tokens to nonterminal_021_list 143.0
   WHEN                               => reduce 1 tokens to nonterminal_021_list 143.0
   IDENTIFIER                         => reduce 1 tokens to nonterminal_021_list 143.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_021_list

State 61:
    112.0:sequence_of_statements <= nonterminal_021_list ^, ELSE/ELSIF/END/EXCEPTION/WHEN
    143.1:nonterminal_021_list <= nonterminal_021_list ^ statement, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   ELSE                               => reduce 1 tokens to sequence_of_statements 112.0
   ELSIF                              => reduce 1 tokens to sequence_of_statements 112.0
   END                                => reduce 1 tokens to sequence_of_statements 112.0
   EXIT                               => shift and goto state 2
   EXCEPTION                          => reduce 1 tokens to sequence_of_statements 112.0
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   WHEN                               => reduce 1 tokens to sequence_of_statements 112.0
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 121

   Minimal_Complete_Action => sequence_of_statements

State 62:
     98.0:package_body <= PACKAGE BODY ^ name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.1:package_body <= PACKAGE BODY ^ name aspect_specification IS declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.2:package_body <= PACKAGE BODY ^ name IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.3:package_body <= PACKAGE BODY ^ name IS declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   name                               goto state 122
   selected_component                 goto state 29

   Minimal_Complete_Action => IDENTIFIER

State 63:
     87.0:generic_instantiation <= PACKAGE name ^ IS NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, IS/LEFT_PAREN/DOT
     95.1:name <= name ^ actual_parameter_part, IS/LEFT_PAREN/DOT
    111.0:selected_component <= name ^ DOT IDENTIFIER, IS/LEFT_PAREN/DOT

   IS                                 => shift and goto state 123
   LEFT_PAREN                         => shift and goto state 72
   DOT                                => shift and goto state 74
   default                            => ERROR

   actual_parameter_part              goto state 76

   Minimal_Complete_Action => IS

State 64:
     87.1:generic_instantiation <= PROCEDURE name ^ IS NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, IS/LEFT_PAREN/WITH/DOT/SEMICOLON
     95.1:name <= name ^ actual_parameter_part, IS/LEFT_PAREN/WITH/DOT/SEMICOLON
    105.0:procedure_specification <= PROCEDURE name ^ parameter_profile, IS/WITH/SEMICOLON
    111.0:selected_component <= name ^ DOT IDENTIFIER, IS/LEFT_PAREN/WITH/DOT/SEMICOLON

   IS                                 => shift and goto state 124,
                                         reduce 0 tokens to parameter_profile 100.1
   LEFT_PAREN                         => shift and goto state 115
   WITH                               => reduce 0 tokens to parameter_profile 100.1
   DOT                                => shift and goto state 74
   SEMICOLON                          => reduce 0 tokens to parameter_profile 100.1
   default                            => ERROR

   actual_parameter_part              goto state 76
   formal_part                        goto state 125
   parameter_profile                  goto state 126

   Minimal_Complete_Action => parameter_profile

State 65:
     81.0:extended_return_object_declaration <= IDENTIFIER ^ COLON subtype_indication, SEMICOLON
     95.2:name <= IDENTIFIER ^, AND/LEFT_PAREN/OR/XOR/AMPERSAND/DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to name 95.2
   LEFT_PAREN                         => reduce 1 tokens to name 95.2
   OR                                 => reduce 1 tokens to name 95.2
   XOR                                => reduce 1 tokens to name 95.2
   AMPERSAND                          => reduce 1 tokens to name 95.2
   COLON                              => shift and goto state 127
   DOT                                => reduce 1 tokens to name 95.2
   EQUAL                              => reduce 1 tokens to name 95.2
   GREATER                            => reduce 1 tokens to name 95.2
   GREATER_EQUAL                      => reduce 1 tokens to name 95.2
   LESS                               => reduce 1 tokens to name 95.2
   LESS_EQUAL                         => reduce 1 tokens to name 95.2
   MINUS                              => reduce 1 tokens to name 95.2
   PLUS                               => reduce 1 tokens to name 95.2
   SEMICOLON                          => reduce 1 tokens to name 95.2
   SLASH                              => reduce 1 tokens to name 95.2
   SLASH_EQUAL                        => reduce 1 tokens to name 95.2
   STAR                               => reduce 1 tokens to name 95.2
   default                            => ERROR

   Minimal_Complete_Action => name

State 66:
    114.0:simple_return_statement <= RETURN expression ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 128
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 67:
     82.0:extended_return_statement <= RETURN extended_return_object_declaration ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 129
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 68:
     63.0:block_label_opt <= IDENTIFIER COLON ^, BEGIN/DECLARE

   BEGIN                              => reduce 2 tokens to block_label_opt 63.0
   DECLARE                            => reduce 2 tokens to block_label_opt 63.0
   default                            => ERROR

   Minimal_Complete_Action => block_label_opt

State 69:
     64.1:block_statement <= block_label_opt BEGIN ^ handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                               => shift and goto state 2
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements 112.1
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   handled_sequence_of_statements     goto state 131
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 132
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 60
   nonterminal_021_list               goto state 61

   Minimal_Complete_Action => handled_sequence_of_statements

State 70:
     64.0:block_statement <= block_label_opt DECLARE ^ declarative_part BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to declarative_part 74.1
   FUNCTION                           => shift and goto state 4
   PACKAGE                            => shift and goto state 133
   PROCEDURE                          => shift and goto state 134
   TYPE                               => shift and goto state 135
   IDENTIFIER                         => shift and goto state 136
   default                            => ERROR

   body_g                             goto state 137
   body_stub                          goto state 138
   declaration                        goto state 139
   declarative_part                   goto state 140
   full_type_declaration              goto state 141
   function_specification             goto state 20
   object_declaration                 goto state 142
   package_body                       goto state 143
   procedure_specification            goto state 28
   proper_body                        goto state 144
   subprogram_body                    goto state 145
   subprogram_body_stub               goto state 146
   subprogram_declaration             goto state 147
   subprogram_specification           goto state 148
   type_declaration                   goto state 149
   nonterminal_006_list               goto state 150

   Minimal_Complete_Action => declarative_part

State 71:
     93.0:loop_statement <= iteration_scheme LOOP ^ sequence_of_statements END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 151
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 60
   nonterminal_021_list               goto state 61

   Minimal_Complete_Action => sequence_of_statements

State 72:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
     95.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 152
   default                            => ERROR

   association                        goto state 153
   association_list                   goto state 154
   expression                         goto state 155
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 156
   range_list                         goto state 157
   relation                           goto state 49
   selected_component                 goto state 29
   simple_expression                  goto state 158
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL recursive

State 73:
     59.0:assignment_statement <= name COLON_EQUAL ^ expression SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   expression                         goto state 159
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 49
   selected_component                 goto state 29
   simple_expression                  goto state 50
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 74:
    111.0:selected_component <= name DOT ^ IDENTIFIER, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   IDENTIFIER                         => shift and goto state 160
   default                            => ERROR

   Minimal_Complete_Action => IDENTIFIER recursive

State 75:
    104.0:procedure_call_statement <= name SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 2 tokens to procedure_call_statement 104.0
   CASE                               => reduce 2 tokens to procedure_call_statement 104.0
   DECLARE                            => reduce 2 tokens to procedure_call_statement 104.0
   ELSE                               => reduce 2 tokens to procedure_call_statement 104.0
   ELSIF                              => reduce 2 tokens to procedure_call_statement 104.0
   END                                => reduce 2 tokens to procedure_call_statement 104.0
   EXIT                               => reduce 2 tokens to procedure_call_statement 104.0
   EXCEPTION                          => reduce 2 tokens to procedure_call_statement 104.0
   FOR                                => reduce 2 tokens to procedure_call_statement 104.0
   FUNCTION                           => reduce 2 tokens to procedure_call_statement 104.0
   IF                                 => reduce 2 tokens to procedure_call_statement 104.0
   LOOP                               => reduce 2 tokens to procedure_call_statement 104.0
   PACKAGE                            => reduce 2 tokens to procedure_call_statement 104.0
   PROCEDURE                          => reduce 2 tokens to procedure_call_statement 104.0
   RETURN                             => reduce 2 tokens to procedure_call_statement 104.0
   WHEN                               => reduce 2 tokens to procedure_call_statement 104.0
   IDENTIFIER                         => reduce 2 tokens to procedure_call_statement 104.0
   Wisi_EOI                           => reduce 2 tokens to procedure_call_statement 104.0
   default                            => ERROR

   Minimal_Complete_Action => procedure_call_statement

State 76:
     95.1:name <= name actual_parameter_part ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 2 tokens to name 95.1
   IS                                 => reduce 2 tokens to name 95.1
   LEFT_PAREN                         => reduce 2 tokens to name 95.1
   LOOP                               => reduce 2 tokens to name 95.1
   OR                                 => reduce 2 tokens to name 95.1
   RANGE                              => reduce 2 tokens to name 95.1
   RETURN                             => reduce 2 tokens to name 95.1
   RIGHT_PAREN                        => reduce 2 tokens to name 95.1
   THEN                               => reduce 2 tokens to name 95.1
   WITH                               => reduce 2 tokens to name 95.1
   XOR                                => reduce 2 tokens to name 95.1
   AMPERSAND                          => reduce 2 tokens to name 95.1
   COLON_EQUAL                        => reduce 2 tokens to name 95.1
   COMMA                              => reduce 2 tokens to name 95.1
   DOT                                => reduce 2 tokens to name 95.1
   DOT_DOT                            => reduce 2 tokens to name 95.1
   EQUAL                              => reduce 2 tokens to name 95.1
   EQUAL_GREATER                      => reduce 2 tokens to name 95.1
   GREATER                            => reduce 2 tokens to name 95.1
   GREATER_EQUAL                      => reduce 2 tokens to name 95.1
   LESS                               => reduce 2 tokens to name 95.1
   LESS_EQUAL                         => reduce 2 tokens to name 95.1
   MINUS                              => reduce 2 tokens to name 95.1
   PLUS                               => reduce 2 tokens to name 95.1
   SEMICOLON                          => reduce 2 tokens to name 95.1
   SLASH                              => reduce 2 tokens to name 95.1
   SLASH_EQUAL                        => reduce 2 tokens to name 95.1
   STAR                               => reduce 2 tokens to name 95.1
   default                            => ERROR

   Minimal_Complete_Action => name recursive

State 77:
    117.1:subprogram_body <= subprogram_specification IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to declarative_part 74.1
   FUNCTION                           => shift and goto state 4
   PACKAGE                            => shift and goto state 133
   PROCEDURE                          => shift and goto state 134
   TYPE                               => shift and goto state 135
   IDENTIFIER                         => shift and goto state 136
   default                            => ERROR

   body_g                             goto state 137
   body_stub                          goto state 138
   declaration                        goto state 139
   declarative_part                   goto state 161
   full_type_declaration              goto state 141
   function_specification             goto state 20
   object_declaration                 goto state 142
   package_body                       goto state 143
   procedure_specification            goto state 28
   proper_body                        goto state 144
   subprogram_body                    goto state 145
   subprogram_body_stub               goto state 146
   subprogram_declaration             goto state 147
   subprogram_specification           goto state 148
   type_declaration                   goto state 149
   nonterminal_006_list               goto state 150

   Minimal_Complete_Action => declarative_part

State 78:
     58.0:aspect_specification <= WITH ^ association_list, IS

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 152
   default                            => ERROR

   association                        goto state 153
   association_list                   goto state 162
   expression                         goto state 155
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 49
   selected_component                 goto state 29
   simple_expression                  goto state 50
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 79:
    119.0:subprogram_declaration <= subprogram_specification SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 2 tokens to subprogram_declaration 119.0
   CASE                               => reduce 2 tokens to subprogram_declaration 119.0
   DECLARE                            => reduce 2 tokens to subprogram_declaration 119.0
   END                                => reduce 2 tokens to subprogram_declaration 119.0
   EXIT                               => reduce 2 tokens to subprogram_declaration 119.0
   FOR                                => reduce 2 tokens to subprogram_declaration 119.0
   FUNCTION                           => reduce 2 tokens to subprogram_declaration 119.0
   IF                                 => reduce 2 tokens to subprogram_declaration 119.0
   LOOP                               => reduce 2 tokens to subprogram_declaration 119.0
   PACKAGE                            => reduce 2 tokens to subprogram_declaration 119.0
   PROCEDURE                          => reduce 2 tokens to subprogram_declaration 119.0
   RETURN                             => reduce 2 tokens to subprogram_declaration 119.0
   TYPE                               => reduce 2 tokens to subprogram_declaration 119.0
   IDENTIFIER                         => reduce 2 tokens to subprogram_declaration 119.0
   Wisi_EOI                           => reduce 2 tokens to subprogram_declaration 119.0
   default                            => ERROR

   Minimal_Complete_Action => subprogram_declaration

State 80:
    117.0:subprogram_body <= subprogram_specification aspect_specification ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   IS                                 => shift and goto state 163
   default                            => ERROR

   Minimal_Complete_Action => IS

State 81:
    127.1:nonterminal_005_list <= nonterminal_005_list compilation_unit ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 2 tokens to nonterminal_005_list 127.1
   CASE                               => reduce 2 tokens to nonterminal_005_list 127.1
   DECLARE                            => reduce 2 tokens to nonterminal_005_list 127.1
   EXIT                               => reduce 2 tokens to nonterminal_005_list 127.1
   FOR                                => reduce 2 tokens to nonterminal_005_list 127.1
   FUNCTION                           => reduce 2 tokens to nonterminal_005_list 127.1
   IF                                 => reduce 2 tokens to nonterminal_005_list 127.1
   LOOP                               => reduce 2 tokens to nonterminal_005_list 127.1
   PACKAGE                            => reduce 2 tokens to nonterminal_005_list 127.1
   PROCEDURE                          => reduce 2 tokens to nonterminal_005_list 127.1
   RETURN                             => reduce 2 tokens to nonterminal_005_list 127.1
   IDENTIFIER                         => reduce 2 tokens to nonterminal_005_list 127.1
   Wisi_EOI                           => reduce 2 tokens to nonterminal_005_list 127.1
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_005_list recursive

State 82:
    102.0:paren_expression <= LEFT_PAREN expression ^ RIGHT_PAREN, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   RIGHT_PAREN                        => shift and goto state 164
   default                            => ERROR

   Minimal_Complete_Action => RIGHT_PAREN

State 83:
     83.1:factor <= NOT primary ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 2 tokens to factor 83.1
   IS                                 => reduce 2 tokens to factor 83.1
   LOOP                               => reduce 2 tokens to factor 83.1
   OR                                 => reduce 2 tokens to factor 83.1
   RIGHT_PAREN                        => reduce 2 tokens to factor 83.1
   THEN                               => reduce 2 tokens to factor 83.1
   XOR                                => reduce 2 tokens to factor 83.1
   AMPERSAND                          => reduce 2 tokens to factor 83.1
   COLON_EQUAL                        => reduce 2 tokens to factor 83.1
   COMMA                              => reduce 2 tokens to factor 83.1
   DOT_DOT                            => reduce 2 tokens to factor 83.1
   EQUAL                              => reduce 2 tokens to factor 83.1
   GREATER                            => reduce 2 tokens to factor 83.1
   GREATER_EQUAL                      => reduce 2 tokens to factor 83.1
   LESS                               => reduce 2 tokens to factor 83.1
   LESS_EQUAL                         => reduce 2 tokens to factor 83.1
   MINUS                              => reduce 2 tokens to factor 83.1
   PLUS                               => reduce 2 tokens to factor 83.1
   SEMICOLON                          => reduce 2 tokens to factor 83.1
   SLASH                              => reduce 2 tokens to factor 83.1
   SLASH_EQUAL                        => reduce 2 tokens to factor 83.1
   STAR                               => reduce 2 tokens to factor 83.1
   default                            => ERROR

   Minimal_Complete_Action => factor

State 84:
     67.0:case_statement <= CASE expression IS ^ nonterminal_004_list END CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   WHEN                               => shift and goto state 165
   default                            => ERROR

   case_statement_alternative         goto state 166
   nonterminal_004_list               goto state 167

   Minimal_Complete_Action => WHEN

State 85:
    131.0:nonterminal_010 <= AND ^ relation, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 168
   selected_component                 goto state 29
   simple_expression                  goto state 50
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 86:
    133.0:nonterminal_012 <= OR ^ relation, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 169
   selected_component                 goto state 29
   simple_expression                  goto state 50
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 87:
    135.0:nonterminal_014 <= XOR ^ relation, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 170
   selected_component                 goto state 29
   simple_expression                  goto state 50
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 88:
    132.0:nonterminal_009_list <= nonterminal_010 ^, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   AND                                => reduce 1 tokens to nonterminal_009_list 132.0
   IS                                 => reduce 1 tokens to nonterminal_009_list 132.0
   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_009_list 132.0
   THEN                               => reduce 1 tokens to nonterminal_009_list 132.0
   COMMA                              => reduce 1 tokens to nonterminal_009_list 132.0
   SEMICOLON                          => reduce 1 tokens to nonterminal_009_list 132.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_009_list

State 89:
     80.1:expression <= relation nonterminal_009_list ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    132.1:nonterminal_009_list <= nonterminal_009_list ^ nonterminal_010, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   AND                                => shift and goto state 85
   IS                                 => reduce 2 tokens to expression 80.1
   RIGHT_PAREN                        => reduce 2 tokens to expression 80.1
   THEN                               => reduce 2 tokens to expression 80.1
   COMMA                              => reduce 2 tokens to expression 80.1
   SEMICOLON                          => reduce 2 tokens to expression 80.1
   default                            => ERROR

   nonterminal_010                    goto state 171

   Minimal_Complete_Action => expression

State 90:
    134.0:nonterminal_011_list <= nonterminal_012 ^, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   IS                                 => reduce 1 tokens to nonterminal_011_list 134.0
   OR                                 => reduce 1 tokens to nonterminal_011_list 134.0
   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_011_list 134.0
   THEN                               => reduce 1 tokens to nonterminal_011_list 134.0
   COMMA                              => reduce 1 tokens to nonterminal_011_list 134.0
   SEMICOLON                          => reduce 1 tokens to nonterminal_011_list 134.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_011_list

State 91:
     80.2:expression <= relation nonterminal_011_list ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    134.1:nonterminal_011_list <= nonterminal_011_list ^ nonterminal_012, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   IS                                 => reduce 2 tokens to expression 80.2
   OR                                 => shift and goto state 86
   RIGHT_PAREN                        => reduce 2 tokens to expression 80.2
   THEN                               => reduce 2 tokens to expression 80.2
   COMMA                              => reduce 2 tokens to expression 80.2
   SEMICOLON                          => reduce 2 tokens to expression 80.2
   default                            => ERROR

   nonterminal_012                    goto state 172

   Minimal_Complete_Action => expression

State 92:
    136.0:nonterminal_013_list <= nonterminal_014 ^, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   IS                                 => reduce 1 tokens to nonterminal_013_list 136.0
   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_013_list 136.0
   THEN                               => reduce 1 tokens to nonterminal_013_list 136.0
   XOR                                => reduce 1 tokens to nonterminal_013_list 136.0
   COMMA                              => reduce 1 tokens to nonterminal_013_list 136.0
   SEMICOLON                          => reduce 1 tokens to nonterminal_013_list 136.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_013_list

State 93:
     80.3:expression <= relation nonterminal_013_list ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    136.1:nonterminal_013_list <= nonterminal_013_list ^ nonterminal_014, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   IS                                 => reduce 2 tokens to expression 80.3
   RIGHT_PAREN                        => reduce 2 tokens to expression 80.3
   THEN                               => reduce 2 tokens to expression 80.3
   XOR                                => shift and goto state 87
   COMMA                              => reduce 2 tokens to expression 80.3
   SEMICOLON                          => reduce 2 tokens to expression 80.3
   default                            => ERROR

   nonterminal_014                    goto state 173

   Minimal_Complete_Action => expression

State 94:
    110.0:relational_operator <= EQUAL ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 110.0
   NOT                                => reduce 1 tokens to relational_operator 110.0
   MINUS                              => reduce 1 tokens to relational_operator 110.0
   PLUS                               => reduce 1 tokens to relational_operator 110.0
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 110.0
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 110.0
   IDENTIFIER                         => reduce 1 tokens to relational_operator 110.0
   default                            => ERROR

   Minimal_Complete_Action => relational_operator

State 95:
    110.4:relational_operator <= GREATER ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 110.4
   NOT                                => reduce 1 tokens to relational_operator 110.4
   MINUS                              => reduce 1 tokens to relational_operator 110.4
   PLUS                               => reduce 1 tokens to relational_operator 110.4
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 110.4
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 110.4
   IDENTIFIER                         => reduce 1 tokens to relational_operator 110.4
   default                            => ERROR

   Minimal_Complete_Action => relational_operator

State 96:
    110.5:relational_operator <= GREATER_EQUAL ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 110.5
   NOT                                => reduce 1 tokens to relational_operator 110.5
   MINUS                              => reduce 1 tokens to relational_operator 110.5
   PLUS                               => reduce 1 tokens to relational_operator 110.5
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 110.5
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 110.5
   IDENTIFIER                         => reduce 1 tokens to relational_operator 110.5
   default                            => ERROR

   Minimal_Complete_Action => relational_operator

State 97:
    110.2:relational_operator <= LESS ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 110.2
   NOT                                => reduce 1 tokens to relational_operator 110.2
   MINUS                              => reduce 1 tokens to relational_operator 110.2
   PLUS                               => reduce 1 tokens to relational_operator 110.2
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 110.2
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 110.2
   IDENTIFIER                         => reduce 1 tokens to relational_operator 110.2
   default                            => ERROR

   Minimal_Complete_Action => relational_operator

State 98:
    110.3:relational_operator <= LESS_EQUAL ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 110.3
   NOT                                => reduce 1 tokens to relational_operator 110.3
   MINUS                              => reduce 1 tokens to relational_operator 110.3
   PLUS                               => reduce 1 tokens to relational_operator 110.3
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 110.3
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 110.3
   IDENTIFIER                         => reduce 1 tokens to relational_operator 110.3
   default                            => ERROR

   Minimal_Complete_Action => relational_operator

State 99:
    110.1:relational_operator <= SLASH_EQUAL ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 110.1
   NOT                                => reduce 1 tokens to relational_operator 110.1
   MINUS                              => reduce 1 tokens to relational_operator 110.1
   PLUS                               => reduce 1 tokens to relational_operator 110.1
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 110.1
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 110.1
   IDENTIFIER                         => reduce 1 tokens to relational_operator 110.1
   default                            => ERROR

   Minimal_Complete_Action => relational_operator

State 100:
    109.0:relation <= simple_expression relational_operator ^ simple_expression, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   selected_component                 goto state 29
   simple_expression                  goto state 174
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 101:
     62.2:binary_adding_operator <= AMPERSAND ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to binary_adding_operator 62.2
   NOT                                => reduce 1 tokens to binary_adding_operator 62.2
   STRING_LITERAL                     => reduce 1 tokens to binary_adding_operator 62.2
   NUMERIC_LITERAL                    => reduce 1 tokens to binary_adding_operator 62.2
   IDENTIFIER                         => reduce 1 tokens to binary_adding_operator 62.2
   default                            => ERROR

   Minimal_Complete_Action => binary_adding_operator

State 102:
     62.1:binary_adding_operator <= MINUS ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to binary_adding_operator 62.1
   NOT                                => reduce 1 tokens to binary_adding_operator 62.1
   STRING_LITERAL                     => reduce 1 tokens to binary_adding_operator 62.1
   NUMERIC_LITERAL                    => reduce 1 tokens to binary_adding_operator 62.1
   IDENTIFIER                         => reduce 1 tokens to binary_adding_operator 62.1
   default                            => ERROR

   Minimal_Complete_Action => binary_adding_operator

State 103:
     62.0:binary_adding_operator <= PLUS ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to binary_adding_operator 62.0
   NOT                                => reduce 1 tokens to binary_adding_operator 62.0
   STRING_LITERAL                     => reduce 1 tokens to binary_adding_operator 62.0
   NUMERIC_LITERAL                    => reduce 1 tokens to binary_adding_operator 62.0
   IDENTIFIER                         => reduce 1 tokens to binary_adding_operator 62.0
   default                            => ERROR

   Minimal_Complete_Action => binary_adding_operator

State 104:
     94.1:multiplying_operator <= SLASH ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to multiplying_operator 94.1
   NOT                                => reduce 1 tokens to multiplying_operator 94.1
   STRING_LITERAL                     => reduce 1 tokens to multiplying_operator 94.1
   NUMERIC_LITERAL                    => reduce 1 tokens to multiplying_operator 94.1
   IDENTIFIER                         => reduce 1 tokens to multiplying_operator 94.1
   default                            => ERROR

   Minimal_Complete_Action => multiplying_operator

State 105:
     94.0:multiplying_operator <= STAR ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to multiplying_operator 94.0
   NOT                                => reduce 1 tokens to multiplying_operator 94.0
   STRING_LITERAL                     => reduce 1 tokens to multiplying_operator 94.0
   NUMERIC_LITERAL                    => reduce 1 tokens to multiplying_operator 94.0
   IDENTIFIER                         => reduce 1 tokens to multiplying_operator 94.0
   default                            => ERROR

   Minimal_Complete_Action => multiplying_operator

State 106:
    144.0:nonterminal_023 <= binary_adding_operator ^ term, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   selected_component                 goto state 29
   term                               goto state 175

   Minimal_Complete_Action => NUMERIC_LITERAL

State 107:
    122.1:term <= term multiplying_operator ^ factor, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   factor                             goto state 176
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   selected_component                 goto state 29

   Minimal_Complete_Action => NUMERIC_LITERAL recursive

State 108:
    145.0:nonterminal_022_list <= nonterminal_023 ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 1 tokens to nonterminal_022_list 145.0
   IS                                 => reduce 1 tokens to nonterminal_022_list 145.0
   LOOP                               => reduce 1 tokens to nonterminal_022_list 145.0
   OR                                 => reduce 1 tokens to nonterminal_022_list 145.0
   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_022_list 145.0
   THEN                               => reduce 1 tokens to nonterminal_022_list 145.0
   XOR                                => reduce 1 tokens to nonterminal_022_list 145.0
   AMPERSAND                          => reduce 1 tokens to nonterminal_022_list 145.0
   COLON_EQUAL                        => reduce 1 tokens to nonterminal_022_list 145.0
   COMMA                              => reduce 1 tokens to nonterminal_022_list 145.0
   DOT_DOT                            => reduce 1 tokens to nonterminal_022_list 145.0
   EQUAL                              => reduce 1 tokens to nonterminal_022_list 145.0
   GREATER                            => reduce 1 tokens to nonterminal_022_list 145.0
   GREATER_EQUAL                      => reduce 1 tokens to nonterminal_022_list 145.0
   LESS                               => reduce 1 tokens to nonterminal_022_list 145.0
   LESS_EQUAL                         => reduce 1 tokens to nonterminal_022_list 145.0
   MINUS                              => reduce 1 tokens to nonterminal_022_list 145.0
   PLUS                               => reduce 1 tokens to nonterminal_022_list 145.0
   SEMICOLON                          => reduce 1 tokens to nonterminal_022_list 145.0
   SLASH_EQUAL                        => reduce 1 tokens to nonterminal_022_list 145.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_022_list

State 109:
    113.2:simple_expression <= term nonterminal_022_list ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL
    145.1:nonterminal_022_list <= nonterminal_022_list ^ nonterminal_023, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 2 tokens to simple_expression 113.2
   IS                                 => reduce 2 tokens to simple_expression 113.2
   LOOP                               => reduce 2 tokens to simple_expression 113.2
   OR                                 => reduce 2 tokens to simple_expression 113.2
   RIGHT_PAREN                        => reduce 2 tokens to simple_expression 113.2
   THEN                               => reduce 2 tokens to simple_expression 113.2
   XOR                                => reduce 2 tokens to simple_expression 113.2
   AMPERSAND                          => shift and goto state 101
   COLON_EQUAL                        => reduce 2 tokens to simple_expression 113.2
   COMMA                              => reduce 2 tokens to simple_expression 113.2
   DOT_DOT                            => reduce 2 tokens to simple_expression 113.2
   EQUAL                              => reduce 2 tokens to simple_expression 113.2
   GREATER                            => reduce 2 tokens to simple_expression 113.2
   GREATER_EQUAL                      => reduce 2 tokens to simple_expression 113.2
   LESS                               => reduce 2 tokens to simple_expression 113.2
   LESS_EQUAL                         => reduce 2 tokens to simple_expression 113.2
   MINUS                              => shift and goto state 102
   PLUS                               => shift and goto state 103
   SEMICOLON                          => reduce 2 tokens to simple_expression 113.2
   SLASH_EQUAL                        => reduce 2 tokens to simple_expression 113.2
   default                            => ERROR

   binary_adding_operator             goto state 106
   nonterminal_023                    goto state 177

   Minimal_Complete_Action => simple_expression

State 110:
    113.0:simple_expression <= unary_adding_operator term ^ nonterminal_022_list, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL
    113.1:simple_expression <= unary_adding_operator term ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL
    122.1:term <= term ^ multiplying_operator factor, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 2 tokens to simple_expression 113.1
   IS                                 => reduce 2 tokens to simple_expression 113.1
   LOOP                               => reduce 2 tokens to simple_expression 113.1
   OR                                 => reduce 2 tokens to simple_expression 113.1
   RIGHT_PAREN                        => reduce 2 tokens to simple_expression 113.1
   THEN                               => reduce 2 tokens to simple_expression 113.1
   XOR                                => reduce 2 tokens to simple_expression 113.1
   AMPERSAND                          => shift and goto state 101
   COLON_EQUAL                        => reduce 2 tokens to simple_expression 113.1
   COMMA                              => reduce 2 tokens to simple_expression 113.1
   DOT_DOT                            => reduce 2 tokens to simple_expression 113.1
   EQUAL                              => reduce 2 tokens to simple_expression 113.1
   GREATER                            => reduce 2 tokens to simple_expression 113.1
   GREATER_EQUAL                      => reduce 2 tokens to simple_expression 113.1
   LESS                               => reduce 2 tokens to simple_expression 113.1
   LESS_EQUAL                         => reduce 2 tokens to simple_expression 113.1
   MINUS                              => shift and goto state 102
   PLUS                               => shift and goto state 103
   SEMICOLON                          => reduce 2 tokens to simple_expression 113.1
   SLASH                              => shift and goto state 104
   SLASH_EQUAL                        => reduce 2 tokens to simple_expression 113.1
   STAR                               => shift and goto state 105
   default                            => ERROR

   binary_adding_operator             goto state 106
   multiplying_operator               goto state 107
   nonterminal_023                    goto state 108
   nonterminal_022_list               goto state 178

   Minimal_Complete_Action => simple_expression

State 111:
     79.2:exit_statement <= EXIT WHEN expression ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 179
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 112:
     79.0:exit_statement <= EXIT IDENTIFIER WHEN ^ expression SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   expression                         goto state 180
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 49
   selected_component                 goto state 29
   simple_expression                  goto state 50
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 113:
     79.1:exit_statement <= EXIT IDENTIFIER SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 3 tokens to exit_statement 79.1
   CASE                               => reduce 3 tokens to exit_statement 79.1
   DECLARE                            => reduce 3 tokens to exit_statement 79.1
   ELSE                               => reduce 3 tokens to exit_statement 79.1
   ELSIF                              => reduce 3 tokens to exit_statement 79.1
   END                                => reduce 3 tokens to exit_statement 79.1
   EXIT                               => reduce 3 tokens to exit_statement 79.1
   EXCEPTION                          => reduce 3 tokens to exit_statement 79.1
   FOR                                => reduce 3 tokens to exit_statement 79.1
   FUNCTION                           => reduce 3 tokens to exit_statement 79.1
   IF                                 => reduce 3 tokens to exit_statement 79.1
   LOOP                               => reduce 3 tokens to exit_statement 79.1
   PACKAGE                            => reduce 3 tokens to exit_statement 79.1
   PROCEDURE                          => reduce 3 tokens to exit_statement 79.1
   RETURN                             => reduce 3 tokens to exit_statement 79.1
   WHEN                               => reduce 3 tokens to exit_statement 79.1
   IDENTIFIER                         => reduce 3 tokens to exit_statement 79.1
   Wisi_EOI                           => reduce 3 tokens to exit_statement 79.1
   default                            => ERROR

   Minimal_Complete_Action => exit_statement

State 114:
     92.0:iteration_scheme <= FOR IDENTIFIER IN ^ discrete_subtype_definition, LOOP

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   discrete_subtype_definition        goto state 181
   factor                             goto state 45
   name                               goto state 182
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 183
   selected_component                 goto state 29
   simple_expression                  goto state 184
   subtype_indication                 goto state 185
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => IDENTIFIER

State 115:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN, IS/LEFT_PAREN/RETURN/WITH/DOT/SEMICOLON
     84.0:formal_part <= LEFT_PAREN ^ parameter_specification nonterminal_015_list RIGHT_PAREN, IS/RETURN/WITH/SEMICOLON
     84.1:formal_part <= LEFT_PAREN ^ parameter_specification RIGHT_PAREN, IS/RETURN/WITH/SEMICOLON
     95.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN, IS/LEFT_PAREN/RETURN/WITH/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 186
   default                            => ERROR

   association                        goto state 153
   association_list                   goto state 154
   expression                         goto state 155
   factor                             goto state 45
   name                               goto state 46
   parameter_specification            goto state 187
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 156
   range_list                         goto state 157
   relation                           goto state 49
   selected_component                 goto state 29
   simple_expression                  goto state 158
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL recursive

State 116:
     99.1:parameter_and_result_profile <= RETURN ^ IDENTIFIER, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 188
   default                            => ERROR

   Minimal_Complete_Action => IDENTIFIER

State 117:
     99.0:parameter_and_result_profile <= formal_part ^ RETURN IDENTIFIER, IS/WITH/SEMICOLON

   RETURN                             => shift and goto state 189
   default                            => ERROR

   Minimal_Complete_Action => RETURN

State 118:
     86.0:function_specification <= FUNCTION name parameter_and_result_profile ^, IS/WITH/SEMICOLON

   IS                                 => reduce 3 tokens to function_specification 86.0
   WITH                               => reduce 3 tokens to function_specification 86.0
   SEMICOLON                          => reduce 3 tokens to function_specification 86.0
   default                            => ERROR

   Minimal_Complete_Action => function_specification

State 119:
     90.0:if_statement <= IF expression THEN ^ sequence_of_statements nonterminal_019_list ELSE sequence_of_statements END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.1:if_statement <= IF expression THEN ^ sequence_of_statements nonterminal_019_list END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.2:if_statement <= IF expression THEN ^ sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.3:if_statement <= IF expression THEN ^ sequence_of_statements END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   ELSE                               => reduce 0 tokens to sequence_of_statements 112.1
   ELSIF                              => reduce 0 tokens to sequence_of_statements 112.1
   END                                => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 190
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 60
   nonterminal_021_list               goto state 61

   Minimal_Complete_Action => sequence_of_statements

State 120:
     93.1:loop_statement <= LOOP sequence_of_statements END ^ LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LOOP                               => shift and goto state 191
   default                            => ERROR

   Minimal_Complete_Action => LOOP

State 121:
    143.1:nonterminal_021_list <= nonterminal_021_list statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 2 tokens to nonterminal_021_list 143.1
   CASE                               => reduce 2 tokens to nonterminal_021_list 143.1
   DECLARE                            => reduce 2 tokens to nonterminal_021_list 143.1
   ELSE                               => reduce 2 tokens to nonterminal_021_list 143.1
   ELSIF                              => reduce 2 tokens to nonterminal_021_list 143.1
   END                                => reduce 2 tokens to nonterminal_021_list 143.1
   EXIT                               => reduce 2 tokens to nonterminal_021_list 143.1
   EXCEPTION                          => reduce 2 tokens to nonterminal_021_list 143.1
   FOR                                => reduce 2 tokens to nonterminal_021_list 143.1
   IF                                 => reduce 2 tokens to nonterminal_021_list 143.1
   LOOP                               => reduce 2 tokens to nonterminal_021_list 143.1
   RETURN                             => reduce 2 tokens to nonterminal_021_list 143.1
   WHEN                               => reduce 2 tokens to nonterminal_021_list 143.1
   IDENTIFIER                         => reduce 2 tokens to nonterminal_021_list 143.1
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_021_list recursive

State 122:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, IS/LEFT_PAREN/WITH/DOT
     95.1:name <= name ^ actual_parameter_part, IS/LEFT_PAREN/WITH/DOT
     98.0:package_body <= PACKAGE BODY name ^ aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.1:package_body <= PACKAGE BODY name ^ aspect_specification IS declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.2:package_body <= PACKAGE BODY name ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.3:package_body <= PACKAGE BODY name ^ IS declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
    111.0:selected_component <= name ^ DOT IDENTIFIER, IS/LEFT_PAREN/WITH/DOT

   IS                                 => shift and goto state 192
   LEFT_PAREN                         => shift and goto state 72
   WITH                               => shift and goto state 78
   DOT                                => shift and goto state 74
   default                            => ERROR

   actual_parameter_part              goto state 76
   aspect_specification               goto state 193

   Minimal_Complete_Action => IS

State 123:
     87.0:generic_instantiation <= PACKAGE name IS ^ NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   NEW                                => shift and goto state 194
   default                            => ERROR

   Minimal_Complete_Action => NEW

State 124:
     87.1:generic_instantiation <= PROCEDURE name IS ^ NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   NEW                                => shift and goto state 195
   default                            => ERROR

   Minimal_Complete_Action => NEW

State 125:
    100.0:parameter_profile <= formal_part ^, IS/WITH/SEMICOLON

   IS                                 => reduce 1 tokens to parameter_profile 100.0
   WITH                               => reduce 1 tokens to parameter_profile 100.0
   SEMICOLON                          => reduce 1 tokens to parameter_profile 100.0
   default                            => ERROR

   Minimal_Complete_Action => parameter_profile

State 126:
    105.0:procedure_specification <= PROCEDURE name parameter_profile ^, IS/WITH/SEMICOLON

   IS                                 => reduce 3 tokens to procedure_specification 105.0
   WITH                               => reduce 3 tokens to procedure_specification 105.0
   SEMICOLON                          => reduce 3 tokens to procedure_specification 105.0
   default                            => ERROR

   Minimal_Complete_Action => procedure_specification

State 127:
     81.0:extended_return_object_declaration <= IDENTIFIER COLON ^ subtype_indication, SEMICOLON

   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   name                               goto state 196
   selected_component                 goto state 29
   subtype_indication                 goto state 197

   Minimal_Complete_Action => IDENTIFIER

State 128:
    114.0:simple_return_statement <= RETURN expression SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 3 tokens to simple_return_statement 114.0
   CASE                               => reduce 3 tokens to simple_return_statement 114.0
   DECLARE                            => reduce 3 tokens to simple_return_statement 114.0
   ELSE                               => reduce 3 tokens to simple_return_statement 114.0
   ELSIF                              => reduce 3 tokens to simple_return_statement 114.0
   END                                => reduce 3 tokens to simple_return_statement 114.0
   EXIT                               => reduce 3 tokens to simple_return_statement 114.0
   EXCEPTION                          => reduce 3 tokens to simple_return_statement 114.0
   FOR                                => reduce 3 tokens to simple_return_statement 114.0
   FUNCTION                           => reduce 3 tokens to simple_return_statement 114.0
   IF                                 => reduce 3 tokens to simple_return_statement 114.0
   LOOP                               => reduce 3 tokens to simple_return_statement 114.0
   PACKAGE                            => reduce 3 tokens to simple_return_statement 114.0
   PROCEDURE                          => reduce 3 tokens to simple_return_statement 114.0
   RETURN                             => reduce 3 tokens to simple_return_statement 114.0
   WHEN                               => reduce 3 tokens to simple_return_statement 114.0
   IDENTIFIER                         => reduce 3 tokens to simple_return_statement 114.0
   Wisi_EOI                           => reduce 3 tokens to simple_return_statement 114.0
   default                            => ERROR

   Minimal_Complete_Action => simple_return_statement

State 129:
     82.0:extended_return_statement <= RETURN extended_return_object_declaration SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 3 tokens to extended_return_statement 82.0
   CASE                               => reduce 3 tokens to extended_return_statement 82.0
   DECLARE                            => reduce 3 tokens to extended_return_statement 82.0
   ELSE                               => reduce 3 tokens to extended_return_statement 82.0
   ELSIF                              => reduce 3 tokens to extended_return_statement 82.0
   END                                => reduce 3 tokens to extended_return_statement 82.0
   EXIT                               => reduce 3 tokens to extended_return_statement 82.0
   EXCEPTION                          => reduce 3 tokens to extended_return_statement 82.0
   FOR                                => reduce 3 tokens to extended_return_statement 82.0
   FUNCTION                           => reduce 3 tokens to extended_return_statement 82.0
   IF                                 => reduce 3 tokens to extended_return_statement 82.0
   LOOP                               => reduce 3 tokens to extended_return_statement 82.0
   PACKAGE                            => reduce 3 tokens to extended_return_statement 82.0
   PROCEDURE                          => reduce 3 tokens to extended_return_statement 82.0
   RETURN                             => reduce 3 tokens to extended_return_statement 82.0
   WHEN                               => reduce 3 tokens to extended_return_statement 82.0
   IDENTIFIER                         => reduce 3 tokens to extended_return_statement 82.0
   Wisi_EOI                           => reduce 3 tokens to extended_return_statement 82.0
   default                            => ERROR

   Minimal_Complete_Action => extended_return_statement

State 130:
    140.0:nonterminal_018 <= EXCEPTION ^ nonterminal_017_list, END
    140.1:nonterminal_018 <= EXCEPTION ^, END

   END                                => reduce 1 tokens to nonterminal_018 140.1
   WHEN                               => shift and goto state 198
   default                            => ERROR

   exception_handler                  goto state 199
   nonterminal_017_list               goto state 200

   Minimal_Complete_Action => nonterminal_018

State 131:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements ^ END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 201
   default                            => ERROR

   Minimal_Complete_Action => END

State 132:
     88.0:handled_sequence_of_statements <= sequence_of_statements ^ nonterminal_018, END
     88.1:handled_sequence_of_statements <= sequence_of_statements ^, END

   END                                => reduce 1 tokens to handled_sequence_of_statements 88.1
   EXCEPTION                          => shift and goto state 130
   default                            => ERROR

   nonterminal_018                    goto state 202

   Minimal_Complete_Action => handled_sequence_of_statements

State 133:
     98.0:package_body <= PACKAGE ^ BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
     98.1:package_body <= PACKAGE ^ BODY name aspect_specification IS declarative_part END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
     98.2:package_body <= PACKAGE ^ BODY name IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
     98.3:package_body <= PACKAGE ^ BODY name IS declarative_part END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BODY                               => shift and goto state 62
   default                            => ERROR

   Minimal_Complete_Action => BODY

State 134:
    105.0:procedure_specification <= PROCEDURE ^ name parameter_profile, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   name                               goto state 203
   selected_component                 goto state 29

   Minimal_Complete_Action => IDENTIFIER

State 135:
     85.0:full_type_declaration <= TYPE ^ IDENTIFIER IS type_definition SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   IDENTIFIER                         => shift and goto state 204
   default                            => ERROR

   Minimal_Complete_Action => IDENTIFIER

State 136:
     97.0:object_declaration <= IDENTIFIER ^ COLON subtype_indication COLON_EQUAL expression SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
     97.1:object_declaration <= IDENTIFIER ^ COLON subtype_indication SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   COLON                              => shift and goto state 205
   default                            => ERROR

   Minimal_Complete_Action => COLON

State 137:
     73.0:declaration <= body_g ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declaration 73.0
   END                                => reduce 1 tokens to declaration 73.0
   FUNCTION                           => reduce 1 tokens to declaration 73.0
   PACKAGE                            => reduce 1 tokens to declaration 73.0
   PROCEDURE                          => reduce 1 tokens to declaration 73.0
   TYPE                               => reduce 1 tokens to declaration 73.0
   IDENTIFIER                         => reduce 1 tokens to declaration 73.0
   default                            => ERROR

   Minimal_Complete_Action => declaration

State 138:
     65.1:body_g <= body_stub ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to body_g 65.1
   END                                => reduce 1 tokens to body_g 65.1
   FUNCTION                           => reduce 1 tokens to body_g 65.1
   PACKAGE                            => reduce 1 tokens to body_g 65.1
   PROCEDURE                          => reduce 1 tokens to body_g 65.1
   TYPE                               => reduce 1 tokens to body_g 65.1
   IDENTIFIER                         => reduce 1 tokens to body_g 65.1
   default                            => ERROR

   Minimal_Complete_Action => body_g

State 139:
    128.0:nonterminal_006_list <= declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to nonterminal_006_list 128.0
   END                                => reduce 1 tokens to nonterminal_006_list 128.0
   FUNCTION                           => reduce 1 tokens to nonterminal_006_list 128.0
   PACKAGE                            => reduce 1 tokens to nonterminal_006_list 128.0
   PROCEDURE                          => reduce 1 tokens to nonterminal_006_list 128.0
   TYPE                               => reduce 1 tokens to nonterminal_006_list 128.0
   IDENTIFIER                         => reduce 1 tokens to nonterminal_006_list 128.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_006_list

State 140:
     64.0:block_statement <= block_label_opt DECLARE declarative_part ^ BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 206
   default                            => ERROR

   Minimal_Complete_Action => BEGIN

State 141:
    123.0:type_declaration <= full_type_declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to type_declaration 123.0
   END                                => reduce 1 tokens to type_declaration 123.0
   FUNCTION                           => reduce 1 tokens to type_declaration 123.0
   PACKAGE                            => reduce 1 tokens to type_declaration 123.0
   PROCEDURE                          => reduce 1 tokens to type_declaration 123.0
   TYPE                               => reduce 1 tokens to type_declaration 123.0
   IDENTIFIER                         => reduce 1 tokens to type_declaration 123.0
   default                            => ERROR

   Minimal_Complete_Action => type_declaration

State 142:
     73.1:declaration <= object_declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declaration 73.1
   END                                => reduce 1 tokens to declaration 73.1
   FUNCTION                           => reduce 1 tokens to declaration 73.1
   PACKAGE                            => reduce 1 tokens to declaration 73.1
   PROCEDURE                          => reduce 1 tokens to declaration 73.1
   TYPE                               => reduce 1 tokens to declaration 73.1
   IDENTIFIER                         => reduce 1 tokens to declaration 73.1
   default                            => ERROR

   Minimal_Complete_Action => declaration

State 143:
    106.0:proper_body <= package_body ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to proper_body 106.0
   END                                => reduce 1 tokens to proper_body 106.0
   FUNCTION                           => reduce 1 tokens to proper_body 106.0
   PACKAGE                            => reduce 1 tokens to proper_body 106.0
   PROCEDURE                          => reduce 1 tokens to proper_body 106.0
   TYPE                               => reduce 1 tokens to proper_body 106.0
   IDENTIFIER                         => reduce 1 tokens to proper_body 106.0
   default                            => ERROR

   Minimal_Complete_Action => proper_body

State 144:
     65.0:body_g <= proper_body ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to body_g 65.0
   END                                => reduce 1 tokens to body_g 65.0
   FUNCTION                           => reduce 1 tokens to body_g 65.0
   PACKAGE                            => reduce 1 tokens to body_g 65.0
   PROCEDURE                          => reduce 1 tokens to body_g 65.0
   TYPE                               => reduce 1 tokens to body_g 65.0
   IDENTIFIER                         => reduce 1 tokens to body_g 65.0
   default                            => ERROR

   Minimal_Complete_Action => body_g

State 145:
    106.1:proper_body <= subprogram_body ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to proper_body 106.1
   END                                => reduce 1 tokens to proper_body 106.1
   FUNCTION                           => reduce 1 tokens to proper_body 106.1
   PACKAGE                            => reduce 1 tokens to proper_body 106.1
   PROCEDURE                          => reduce 1 tokens to proper_body 106.1
   TYPE                               => reduce 1 tokens to proper_body 106.1
   IDENTIFIER                         => reduce 1 tokens to proper_body 106.1
   default                            => ERROR

   Minimal_Complete_Action => proper_body

State 146:
     66.0:body_stub <= subprogram_body_stub ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to body_stub 66.0
   END                                => reduce 1 tokens to body_stub 66.0
   FUNCTION                           => reduce 1 tokens to body_stub 66.0
   PACKAGE                            => reduce 1 tokens to body_stub 66.0
   PROCEDURE                          => reduce 1 tokens to body_stub 66.0
   TYPE                               => reduce 1 tokens to body_stub 66.0
   IDENTIFIER                         => reduce 1 tokens to body_stub 66.0
   default                            => ERROR

   Minimal_Complete_Action => body_stub

State 147:
     73.2:declaration <= subprogram_declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declaration 73.2
   END                                => reduce 1 tokens to declaration 73.2
   FUNCTION                           => reduce 1 tokens to declaration 73.2
   PACKAGE                            => reduce 1 tokens to declaration 73.2
   PROCEDURE                          => reduce 1 tokens to declaration 73.2
   TYPE                               => reduce 1 tokens to declaration 73.2
   IDENTIFIER                         => reduce 1 tokens to declaration 73.2
   default                            => ERROR

   Minimal_Complete_Action => declaration

State 148:
    117.0:subprogram_body <= subprogram_specification ^ aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    117.1:subprogram_body <= subprogram_specification ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    118.0:subprogram_body_stub <= subprogram_specification ^ IS SEPARATE SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    119.0:subprogram_declaration <= subprogram_specification ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   IS                                 => shift and goto state 207
   WITH                               => shift and goto state 78
   SEMICOLON                          => shift and goto state 79
   default                            => ERROR

   aspect_specification               goto state 80

   Minimal_Complete_Action => SEMICOLON

State 149:
     73.3:declaration <= type_declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declaration 73.3
   END                                => reduce 1 tokens to declaration 73.3
   FUNCTION                           => reduce 1 tokens to declaration 73.3
   PACKAGE                            => reduce 1 tokens to declaration 73.3
   PROCEDURE                          => reduce 1 tokens to declaration 73.3
   TYPE                               => reduce 1 tokens to declaration 73.3
   IDENTIFIER                         => reduce 1 tokens to declaration 73.3
   default                            => ERROR

   Minimal_Complete_Action => declaration

State 150:
     74.0:declarative_part <= nonterminal_006_list ^, BEGIN/END
    128.1:nonterminal_006_list <= nonterminal_006_list ^ declaration, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declarative_part 74.0
   END                                => reduce 1 tokens to declarative_part 74.0
   FUNCTION                           => shift and goto state 4
   PACKAGE                            => shift and goto state 133
   PROCEDURE                          => shift and goto state 134
   TYPE                               => shift and goto state 135
   IDENTIFIER                         => shift and goto state 136
   default                            => ERROR

   body_g                             goto state 137
   body_stub                          goto state 138
   declaration                        goto state 208
   full_type_declaration              goto state 141
   function_specification             goto state 20
   object_declaration                 goto state 142
   package_body                       goto state 143
   procedure_specification            goto state 28
   proper_body                        goto state 144
   subprogram_body                    goto state 145
   subprogram_body_stub               goto state 146
   subprogram_declaration             goto state 147
   subprogram_specification           goto state 148
   type_declaration                   goto state 149

   Minimal_Complete_Action => declarative_part

State 151:
     93.0:loop_statement <= iteration_scheme LOOP sequence_of_statements ^ END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 209
   default                            => ERROR

   Minimal_Complete_Action => END

State 152:
     60.0:association <= IDENTIFIER ^ EQUAL_GREATER expression, IS/RIGHT_PAREN/COMMA
     95.2:name <= IDENTIFIER ^, AND/IS/LEFT_PAREN/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to name 95.2
   IS                                 => reduce 1 tokens to name 95.2
   LEFT_PAREN                         => reduce 1 tokens to name 95.2
   OR                                 => reduce 1 tokens to name 95.2
   RANGE                              => reduce 1 tokens to name 95.2
   RIGHT_PAREN                        => reduce 1 tokens to name 95.2
   XOR                                => reduce 1 tokens to name 95.2
   AMPERSAND                          => reduce 1 tokens to name 95.2
   COMMA                              => reduce 1 tokens to name 95.2
   DOT                                => reduce 1 tokens to name 95.2
   DOT_DOT                            => reduce 1 tokens to name 95.2
   EQUAL                              => reduce 1 tokens to name 95.2
   EQUAL_GREATER                      => shift and goto state 210
   GREATER                            => reduce 1 tokens to name 95.2
   GREATER_EQUAL                      => reduce 1 tokens to name 95.2
   LESS                               => reduce 1 tokens to name 95.2
   LESS_EQUAL                         => reduce 1 tokens to name 95.2
   MINUS                              => reduce 1 tokens to name 95.2
   PLUS                               => reduce 1 tokens to name 95.2
   SLASH                              => reduce 1 tokens to name 95.2
   SLASH_EQUAL                        => reduce 1 tokens to name 95.2
   STAR                               => reduce 1 tokens to name 95.2
   default                            => ERROR

   Minimal_Complete_Action => name

State 153:
     61.0:association_list <= association ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 1 tokens to association_list 61.0
   RIGHT_PAREN                        => reduce 1 tokens to association_list 61.0
   COMMA                              => reduce 1 tokens to association_list 61.0
   default                            => ERROR

   Minimal_Complete_Action => association_list

State 154:
     57.0:actual_parameter_part <= LEFT_PAREN association_list ^ RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
     61.1:association_list <= association_list ^ COMMA association, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => shift and goto state 211
   COMMA                              => shift and goto state 212
   default                            => ERROR

   Minimal_Complete_Action => RIGHT_PAREN

State 155:
     60.1:association <= expression ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 1 tokens to association 60.1
   RIGHT_PAREN                        => reduce 1 tokens to association 60.1
   COMMA                              => reduce 1 tokens to association 60.1
   default                            => ERROR

   Minimal_Complete_Action => association

State 156:
    108.1:range_list <= range_g ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 1 tokens to range_list 108.1
   COMMA                              => reduce 1 tokens to range_list 108.1
   default                            => ERROR

   Minimal_Complete_Action => range_list

State 157:
     95.0:name <= name LEFT_PAREN range_list ^ RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    108.0:range_list <= range_list ^ COMMA range_g, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => shift and goto state 213
   COMMA                              => shift and goto state 214
   default                            => ERROR

   Minimal_Complete_Action => RIGHT_PAREN recursive

State 158:
    107.0:range_g <= simple_expression ^ DOT_DOT simple_expression, RIGHT_PAREN/COMMA
    109.0:relation <= simple_expression ^ relational_operator simple_expression, AND/OR/RIGHT_PAREN/XOR/COMMA
    109.1:relation <= simple_expression ^, AND/OR/RIGHT_PAREN/XOR/COMMA

   AND                                => reduce 1 tokens to relation 109.1
   OR                                 => reduce 1 tokens to relation 109.1
   RIGHT_PAREN                        => reduce 1 tokens to relation 109.1
   XOR                                => reduce 1 tokens to relation 109.1
   COMMA                              => reduce 1 tokens to relation 109.1
   DOT_DOT                            => shift and goto state 215
   EQUAL                              => shift and goto state 94
   GREATER                            => shift and goto state 95
   GREATER_EQUAL                      => shift and goto state 96
   LESS                               => shift and goto state 97
   LESS_EQUAL                         => shift and goto state 98
   SLASH_EQUAL                        => shift and goto state 99
   default                            => ERROR

   relational_operator                goto state 100

   Minimal_Complete_Action => relation

State 159:
     59.0:assignment_statement <= name COLON_EQUAL expression ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 216
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 160:
    111.0:selected_component <= name DOT IDENTIFIER ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 3 tokens to selected_component 111.0
   IS                                 => reduce 3 tokens to selected_component 111.0
   LEFT_PAREN                         => reduce 3 tokens to selected_component 111.0
   LOOP                               => reduce 3 tokens to selected_component 111.0
   OR                                 => reduce 3 tokens to selected_component 111.0
   RANGE                              => reduce 3 tokens to selected_component 111.0
   RETURN                             => reduce 3 tokens to selected_component 111.0
   RIGHT_PAREN                        => reduce 3 tokens to selected_component 111.0
   THEN                               => reduce 3 tokens to selected_component 111.0
   WITH                               => reduce 3 tokens to selected_component 111.0
   XOR                                => reduce 3 tokens to selected_component 111.0
   AMPERSAND                          => reduce 3 tokens to selected_component 111.0
   COLON_EQUAL                        => reduce 3 tokens to selected_component 111.0
   COMMA                              => reduce 3 tokens to selected_component 111.0
   DOT                                => reduce 3 tokens to selected_component 111.0
   DOT_DOT                            => reduce 3 tokens to selected_component 111.0
   EQUAL                              => reduce 3 tokens to selected_component 111.0
   EQUAL_GREATER                      => reduce 3 tokens to selected_component 111.0
   GREATER                            => reduce 3 tokens to selected_component 111.0
   GREATER_EQUAL                      => reduce 3 tokens to selected_component 111.0
   LESS                               => reduce 3 tokens to selected_component 111.0
   LESS_EQUAL                         => reduce 3 tokens to selected_component 111.0
   MINUS                              => reduce 3 tokens to selected_component 111.0
   PLUS                               => reduce 3 tokens to selected_component 111.0
   SEMICOLON                          => reduce 3 tokens to selected_component 111.0
   SLASH                              => reduce 3 tokens to selected_component 111.0
   SLASH_EQUAL                        => reduce 3 tokens to selected_component 111.0
   STAR                               => reduce 3 tokens to selected_component 111.0
   default                            => ERROR

   Minimal_Complete_Action => selected_component recursive

State 161:
    117.1:subprogram_body <= subprogram_specification IS declarative_part ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 217
   default                            => ERROR

   Minimal_Complete_Action => BEGIN

State 162:
     58.0:aspect_specification <= WITH association_list ^, IS
     61.1:association_list <= association_list ^ COMMA association, IS/COMMA

   IS                                 => reduce 2 tokens to aspect_specification 58.0
   COMMA                              => shift and goto state 212
   default                            => ERROR

   Minimal_Complete_Action => aspect_specification

State 163:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to declarative_part 74.1
   FUNCTION                           => shift and goto state 4
   PACKAGE                            => shift and goto state 133
   PROCEDURE                          => shift and goto state 134
   TYPE                               => shift and goto state 135
   IDENTIFIER                         => shift and goto state 136
   default                            => ERROR

   body_g                             goto state 137
   body_stub                          goto state 138
   declaration                        goto state 139
   declarative_part                   goto state 218
   full_type_declaration              goto state 141
   function_specification             goto state 20
   object_declaration                 goto state 142
   package_body                       goto state 143
   procedure_specification            goto state 28
   proper_body                        goto state 144
   subprogram_body                    goto state 145
   subprogram_body_stub               goto state 146
   subprogram_declaration             goto state 147
   subprogram_specification           goto state 148
   type_declaration                   goto state 149
   nonterminal_006_list               goto state 150

   Minimal_Complete_Action => declarative_part

State 164:
    102.0:paren_expression <= LEFT_PAREN expression RIGHT_PAREN ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 3 tokens to paren_expression 102.0
   IS                                 => reduce 3 tokens to paren_expression 102.0
   LOOP                               => reduce 3 tokens to paren_expression 102.0
   OR                                 => reduce 3 tokens to paren_expression 102.0
   RIGHT_PAREN                        => reduce 3 tokens to paren_expression 102.0
   THEN                               => reduce 3 tokens to paren_expression 102.0
   XOR                                => reduce 3 tokens to paren_expression 102.0
   AMPERSAND                          => reduce 3 tokens to paren_expression 102.0
   COLON_EQUAL                        => reduce 3 tokens to paren_expression 102.0
   COMMA                              => reduce 3 tokens to paren_expression 102.0
   DOT_DOT                            => reduce 3 tokens to paren_expression 102.0
   EQUAL                              => reduce 3 tokens to paren_expression 102.0
   GREATER                            => reduce 3 tokens to paren_expression 102.0
   GREATER_EQUAL                      => reduce 3 tokens to paren_expression 102.0
   LESS                               => reduce 3 tokens to paren_expression 102.0
   LESS_EQUAL                         => reduce 3 tokens to paren_expression 102.0
   MINUS                              => reduce 3 tokens to paren_expression 102.0
   PLUS                               => reduce 3 tokens to paren_expression 102.0
   SEMICOLON                          => reduce 3 tokens to paren_expression 102.0
   SLASH                              => reduce 3 tokens to paren_expression 102.0
   SLASH_EQUAL                        => reduce 3 tokens to paren_expression 102.0
   STAR                               => reduce 3 tokens to paren_expression 102.0
   default                            => ERROR

   Minimal_Complete_Action => paren_expression

State 165:
     68.0:case_statement_alternative <= WHEN ^ NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements, END/WHEN

   NUMERIC_LITERAL                    => shift and goto state 219
   default                            => ERROR

   Minimal_Complete_Action => NUMERIC_LITERAL

State 166:
    126.0:nonterminal_004_list <= case_statement_alternative ^, END/WHEN

   END                                => reduce 1 tokens to nonterminal_004_list 126.0
   WHEN                               => reduce 1 tokens to nonterminal_004_list 126.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_004_list

State 167:
     67.0:case_statement <= CASE expression IS nonterminal_004_list ^ END CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
    126.1:nonterminal_004_list <= nonterminal_004_list ^ case_statement_alternative, END/WHEN

   END                                => shift and goto state 220
   WHEN                               => shift and goto state 165
   default                            => ERROR

   case_statement_alternative         goto state 221

   Minimal_Complete_Action => END

State 168:
    131.0:nonterminal_010 <= AND relation ^, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   AND                                => reduce 2 tokens to nonterminal_010 131.0
   IS                                 => reduce 2 tokens to nonterminal_010 131.0
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_010 131.0
   THEN                               => reduce 2 tokens to nonterminal_010 131.0
   COMMA                              => reduce 2 tokens to nonterminal_010 131.0
   SEMICOLON                          => reduce 2 tokens to nonterminal_010 131.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_010

State 169:
    133.0:nonterminal_012 <= OR relation ^, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   IS                                 => reduce 2 tokens to nonterminal_012 133.0
   OR                                 => reduce 2 tokens to nonterminal_012 133.0
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_012 133.0
   THEN                               => reduce 2 tokens to nonterminal_012 133.0
   COMMA                              => reduce 2 tokens to nonterminal_012 133.0
   SEMICOLON                          => reduce 2 tokens to nonterminal_012 133.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_012

State 170:
    135.0:nonterminal_014 <= XOR relation ^, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   IS                                 => reduce 2 tokens to nonterminal_014 135.0
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_014 135.0
   THEN                               => reduce 2 tokens to nonterminal_014 135.0
   XOR                                => reduce 2 tokens to nonterminal_014 135.0
   COMMA                              => reduce 2 tokens to nonterminal_014 135.0
   SEMICOLON                          => reduce 2 tokens to nonterminal_014 135.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_014

State 171:
    132.1:nonterminal_009_list <= nonterminal_009_list nonterminal_010 ^, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   AND                                => reduce 2 tokens to nonterminal_009_list 132.1
   IS                                 => reduce 2 tokens to nonterminal_009_list 132.1
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_009_list 132.1
   THEN                               => reduce 2 tokens to nonterminal_009_list 132.1
   COMMA                              => reduce 2 tokens to nonterminal_009_list 132.1
   SEMICOLON                          => reduce 2 tokens to nonterminal_009_list 132.1
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_009_list recursive

State 172:
    134.1:nonterminal_011_list <= nonterminal_011_list nonterminal_012 ^, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   IS                                 => reduce 2 tokens to nonterminal_011_list 134.1
   OR                                 => reduce 2 tokens to nonterminal_011_list 134.1
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_011_list 134.1
   THEN                               => reduce 2 tokens to nonterminal_011_list 134.1
   COMMA                              => reduce 2 tokens to nonterminal_011_list 134.1
   SEMICOLON                          => reduce 2 tokens to nonterminal_011_list 134.1
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_011_list recursive

State 173:
    136.1:nonterminal_013_list <= nonterminal_013_list nonterminal_014 ^, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   IS                                 => reduce 2 tokens to nonterminal_013_list 136.1
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_013_list 136.1
   THEN                               => reduce 2 tokens to nonterminal_013_list 136.1
   XOR                                => reduce 2 tokens to nonterminal_013_list 136.1
   COMMA                              => reduce 2 tokens to nonterminal_013_list 136.1
   SEMICOLON                          => reduce 2 tokens to nonterminal_013_list 136.1
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_013_list recursive

State 174:
    109.0:relation <= simple_expression relational_operator simple_expression ^, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   AND                                => reduce 3 tokens to relation 109.0
   IS                                 => reduce 3 tokens to relation 109.0
   OR                                 => reduce 3 tokens to relation 109.0
   RIGHT_PAREN                        => reduce 3 tokens to relation 109.0
   THEN                               => reduce 3 tokens to relation 109.0
   XOR                                => reduce 3 tokens to relation 109.0
   COMMA                              => reduce 3 tokens to relation 109.0
   SEMICOLON                          => reduce 3 tokens to relation 109.0
   default                            => ERROR

   Minimal_Complete_Action => relation

State 175:
    122.1:term <= term ^ multiplying_operator factor, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    144.0:nonterminal_023 <= binary_adding_operator term ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 2 tokens to nonterminal_023 144.0
   IS                                 => reduce 2 tokens to nonterminal_023 144.0
   LOOP                               => reduce 2 tokens to nonterminal_023 144.0
   OR                                 => reduce 2 tokens to nonterminal_023 144.0
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_023 144.0
   THEN                               => reduce 2 tokens to nonterminal_023 144.0
   XOR                                => reduce 2 tokens to nonterminal_023 144.0
   AMPERSAND                          => reduce 2 tokens to nonterminal_023 144.0
   COLON_EQUAL                        => reduce 2 tokens to nonterminal_023 144.0
   COMMA                              => reduce 2 tokens to nonterminal_023 144.0
   DOT_DOT                            => reduce 2 tokens to nonterminal_023 144.0
   EQUAL                              => reduce 2 tokens to nonterminal_023 144.0
   GREATER                            => reduce 2 tokens to nonterminal_023 144.0
   GREATER_EQUAL                      => reduce 2 tokens to nonterminal_023 144.0
   LESS                               => reduce 2 tokens to nonterminal_023 144.0
   LESS_EQUAL                         => reduce 2 tokens to nonterminal_023 144.0
   MINUS                              => reduce 2 tokens to nonterminal_023 144.0
   PLUS                               => reduce 2 tokens to nonterminal_023 144.0
   SEMICOLON                          => reduce 2 tokens to nonterminal_023 144.0
   SLASH                              => shift and goto state 104
   SLASH_EQUAL                        => reduce 2 tokens to nonterminal_023 144.0
   STAR                               => shift and goto state 105
   default                            => ERROR

   multiplying_operator               goto state 107

   Minimal_Complete_Action => nonterminal_023

State 176:
    122.1:term <= term multiplying_operator factor ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 3 tokens to term 122.1
   IS                                 => reduce 3 tokens to term 122.1
   LOOP                               => reduce 3 tokens to term 122.1
   OR                                 => reduce 3 tokens to term 122.1
   RIGHT_PAREN                        => reduce 3 tokens to term 122.1
   THEN                               => reduce 3 tokens to term 122.1
   XOR                                => reduce 3 tokens to term 122.1
   AMPERSAND                          => reduce 3 tokens to term 122.1
   COLON_EQUAL                        => reduce 3 tokens to term 122.1
   COMMA                              => reduce 3 tokens to term 122.1
   DOT_DOT                            => reduce 3 tokens to term 122.1
   EQUAL                              => reduce 3 tokens to term 122.1
   GREATER                            => reduce 3 tokens to term 122.1
   GREATER_EQUAL                      => reduce 3 tokens to term 122.1
   LESS                               => reduce 3 tokens to term 122.1
   LESS_EQUAL                         => reduce 3 tokens to term 122.1
   MINUS                              => reduce 3 tokens to term 122.1
   PLUS                               => reduce 3 tokens to term 122.1
   SEMICOLON                          => reduce 3 tokens to term 122.1
   SLASH                              => reduce 3 tokens to term 122.1
   SLASH_EQUAL                        => reduce 3 tokens to term 122.1
   STAR                               => reduce 3 tokens to term 122.1
   default                            => ERROR

   Minimal_Complete_Action => term recursive

State 177:
    145.1:nonterminal_022_list <= nonterminal_022_list nonterminal_023 ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 2 tokens to nonterminal_022_list 145.1
   IS                                 => reduce 2 tokens to nonterminal_022_list 145.1
   LOOP                               => reduce 2 tokens to nonterminal_022_list 145.1
   OR                                 => reduce 2 tokens to nonterminal_022_list 145.1
   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_022_list 145.1
   THEN                               => reduce 2 tokens to nonterminal_022_list 145.1
   XOR                                => reduce 2 tokens to nonterminal_022_list 145.1
   AMPERSAND                          => reduce 2 tokens to nonterminal_022_list 145.1
   COLON_EQUAL                        => reduce 2 tokens to nonterminal_022_list 145.1
   COMMA                              => reduce 2 tokens to nonterminal_022_list 145.1
   DOT_DOT                            => reduce 2 tokens to nonterminal_022_list 145.1
   EQUAL                              => reduce 2 tokens to nonterminal_022_list 145.1
   GREATER                            => reduce 2 tokens to nonterminal_022_list 145.1
   GREATER_EQUAL                      => reduce 2 tokens to nonterminal_022_list 145.1
   LESS                               => reduce 2 tokens to nonterminal_022_list 145.1
   LESS_EQUAL                         => reduce 2 tokens to nonterminal_022_list 145.1
   MINUS                              => reduce 2 tokens to nonterminal_022_list 145.1
   PLUS                               => reduce 2 tokens to nonterminal_022_list 145.1
   SEMICOLON                          => reduce 2 tokens to nonterminal_022_list 145.1
   SLASH_EQUAL                        => reduce 2 tokens to nonterminal_022_list 145.1
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_022_list recursive

State 178:
    113.0:simple_expression <= unary_adding_operator term nonterminal_022_list ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL
    145.1:nonterminal_022_list <= nonterminal_022_list ^ nonterminal_023, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 3 tokens to simple_expression 113.0
   IS                                 => reduce 3 tokens to simple_expression 113.0
   LOOP                               => reduce 3 tokens to simple_expression 113.0
   OR                                 => reduce 3 tokens to simple_expression 113.0
   RIGHT_PAREN                        => reduce 3 tokens to simple_expression 113.0
   THEN                               => reduce 3 tokens to simple_expression 113.0
   XOR                                => reduce 3 tokens to simple_expression 113.0
   AMPERSAND                          => shift and goto state 101
   COLON_EQUAL                        => reduce 3 tokens to simple_expression 113.0
   COMMA                              => reduce 3 tokens to simple_expression 113.0
   DOT_DOT                            => reduce 3 tokens to simple_expression 113.0
   EQUAL                              => reduce 3 tokens to simple_expression 113.0
   GREATER                            => reduce 3 tokens to simple_expression 113.0
   GREATER_EQUAL                      => reduce 3 tokens to simple_expression 113.0
   LESS                               => reduce 3 tokens to simple_expression 113.0
   LESS_EQUAL                         => reduce 3 tokens to simple_expression 113.0
   MINUS                              => shift and goto state 102
   PLUS                               => shift and goto state 103
   SEMICOLON                          => reduce 3 tokens to simple_expression 113.0
   SLASH_EQUAL                        => reduce 3 tokens to simple_expression 113.0
   default                            => ERROR

   binary_adding_operator             goto state 106
   nonterminal_023                    goto state 177

   Minimal_Complete_Action => simple_expression

State 179:
     79.2:exit_statement <= EXIT WHEN expression SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 4 tokens to exit_statement 79.2
   CASE                               => reduce 4 tokens to exit_statement 79.2
   DECLARE                            => reduce 4 tokens to exit_statement 79.2
   ELSE                               => reduce 4 tokens to exit_statement 79.2
   ELSIF                              => reduce 4 tokens to exit_statement 79.2
   END                                => reduce 4 tokens to exit_statement 79.2
   EXIT                               => reduce 4 tokens to exit_statement 79.2
   EXCEPTION                          => reduce 4 tokens to exit_statement 79.2
   FOR                                => reduce 4 tokens to exit_statement 79.2
   FUNCTION                           => reduce 4 tokens to exit_statement 79.2
   IF                                 => reduce 4 tokens to exit_statement 79.2
   LOOP                               => reduce 4 tokens to exit_statement 79.2
   PACKAGE                            => reduce 4 tokens to exit_statement 79.2
   PROCEDURE                          => reduce 4 tokens to exit_statement 79.2
   RETURN                             => reduce 4 tokens to exit_statement 79.2
   WHEN                               => reduce 4 tokens to exit_statement 79.2
   IDENTIFIER                         => reduce 4 tokens to exit_statement 79.2
   Wisi_EOI                           => reduce 4 tokens to exit_statement 79.2
   default                            => ERROR

   Minimal_Complete_Action => exit_statement

State 180:
     79.0:exit_statement <= EXIT IDENTIFIER WHEN expression ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 222
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 181:
     92.0:iteration_scheme <= FOR IDENTIFIER IN discrete_subtype_definition ^, LOOP

   LOOP                               => reduce 4 tokens to iteration_scheme 92.0
   default                            => ERROR

   Minimal_Complete_Action => iteration_scheme

State 182:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
     95.1:name <= name ^ actual_parameter_part, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    103.2:primary <= name ^, AND/OR/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    111.0:selected_component <= name ^ DOT IDENTIFIER, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    121.0:subtype_indication <= name ^ constraint, LOOP/RIGHT_PAREN
    121.1:subtype_indication <= name ^, LOOP/RIGHT_PAREN

   AND                                => reduce 1 tokens to primary 103.2
   LEFT_PAREN                         => shift and goto state 223
   LOOP                               => reduce 1 tokens to subtype_indication 121.1
   OR                                 => reduce 1 tokens to primary 103.2
   RANGE                              => shift and goto state 224
   RIGHT_PAREN                        => reduce 1 tokens to primary 103.2,
                                         reduce 1 tokens to subtype_indication 121.1
   XOR                                => reduce 1 tokens to primary 103.2
   AMPERSAND                          => reduce 1 tokens to primary 103.2
   COMMA                              => reduce 1 tokens to primary 103.2
   DOT                                => shift and goto state 74
   DOT_DOT                            => reduce 1 tokens to primary 103.2
   EQUAL                              => reduce 1 tokens to primary 103.2
   GREATER                            => reduce 1 tokens to primary 103.2
   GREATER_EQUAL                      => reduce 1 tokens to primary 103.2
   LESS                               => reduce 1 tokens to primary 103.2
   LESS_EQUAL                         => reduce 1 tokens to primary 103.2
   MINUS                              => reduce 1 tokens to primary 103.2
   PLUS                               => reduce 1 tokens to primary 103.2
   SLASH                              => reduce 1 tokens to primary 103.2
   SLASH_EQUAL                        => reduce 1 tokens to primary 103.2
   STAR                               => reduce 1 tokens to primary 103.2
   default                            => ERROR

   actual_parameter_part              goto state 76
   constraint                         goto state 225
   index_constraint                   goto state 226

   Minimal_Complete_Action => (primary, subtype_indication)

State 183:
     75.1:discrete_subtype_definition <= range_g ^, LOOP

   LOOP                               => reduce 1 tokens to discrete_subtype_definition 75.1
   default                            => ERROR

   Minimal_Complete_Action => discrete_subtype_definition

State 184:
    107.0:range_g <= simple_expression ^ DOT_DOT simple_expression, LOOP/RIGHT_PAREN/COLON_EQUAL/COMMA/SEMICOLON

   DOT_DOT                            => shift and goto state 215
   default                            => ERROR

   Minimal_Complete_Action => DOT_DOT

State 185:
     75.0:discrete_subtype_definition <= subtype_indication ^, LOOP/RIGHT_PAREN

   LOOP                               => reduce 1 tokens to discrete_subtype_definition 75.0
   RIGHT_PAREN                        => reduce 1 tokens to discrete_subtype_definition 75.0
   default                            => ERROR

   Minimal_Complete_Action => discrete_subtype_definition

State 186:
     60.0:association <= IDENTIFIER ^ EQUAL_GREATER expression, RIGHT_PAREN/COMMA
     95.2:name <= IDENTIFIER ^, AND/LEFT_PAREN/OR/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    101.0:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER COLON_EQUAL expression, RIGHT_PAREN/SEMICOLON
    101.1:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER, RIGHT_PAREN/SEMICOLON

   AND                                => reduce 1 tokens to name 95.2
   LEFT_PAREN                         => reduce 1 tokens to name 95.2
   OR                                 => reduce 1 tokens to name 95.2
   RIGHT_PAREN                        => reduce 1 tokens to name 95.2
   XOR                                => reduce 1 tokens to name 95.2
   AMPERSAND                          => reduce 1 tokens to name 95.2
   COLON                              => shift and goto state 227
   COMMA                              => reduce 1 tokens to name 95.2
   DOT                                => reduce 1 tokens to name 95.2
   DOT_DOT                            => reduce 1 tokens to name 95.2
   EQUAL                              => reduce 1 tokens to name 95.2
   EQUAL_GREATER                      => shift and goto state 210
   GREATER                            => reduce 1 tokens to name 95.2
   GREATER_EQUAL                      => reduce 1 tokens to name 95.2
   LESS                               => reduce 1 tokens to name 95.2
   LESS_EQUAL                         => reduce 1 tokens to name 95.2
   MINUS                              => reduce 1 tokens to name 95.2
   PLUS                               => reduce 1 tokens to name 95.2
   SLASH                              => reduce 1 tokens to name 95.2
   SLASH_EQUAL                        => reduce 1 tokens to name 95.2
   STAR                               => reduce 1 tokens to name 95.2
   default                            => ERROR

   Minimal_Complete_Action => name

State 187:
     84.0:formal_part <= LEFT_PAREN parameter_specification ^ nonterminal_015_list RIGHT_PAREN, IS/RETURN/WITH/SEMICOLON
     84.1:formal_part <= LEFT_PAREN parameter_specification ^ RIGHT_PAREN, IS/RETURN/WITH/SEMICOLON

   RIGHT_PAREN                        => shift and goto state 228
   SEMICOLON                          => shift and goto state 229
   default                            => ERROR

   nonterminal_016                    goto state 230
   nonterminal_015_list               goto state 231

   Minimal_Complete_Action => RIGHT_PAREN

State 188:
     99.1:parameter_and_result_profile <= RETURN IDENTIFIER ^, IS/WITH/SEMICOLON

   IS                                 => reduce 2 tokens to parameter_and_result_profile 99.1
   WITH                               => reduce 2 tokens to parameter_and_result_profile 99.1
   SEMICOLON                          => reduce 2 tokens to parameter_and_result_profile 99.1
   default                            => ERROR

   Minimal_Complete_Action => parameter_and_result_profile

State 189:
     99.0:parameter_and_result_profile <= formal_part RETURN ^ IDENTIFIER, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 232
   default                            => ERROR

   Minimal_Complete_Action => IDENTIFIER

State 190:
     90.0:if_statement <= IF expression THEN sequence_of_statements ^ nonterminal_019_list ELSE sequence_of_statements END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.1:if_statement <= IF expression THEN sequence_of_statements ^ nonterminal_019_list END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.2:if_statement <= IF expression THEN sequence_of_statements ^ ELSE sequence_of_statements END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.3:if_statement <= IF expression THEN sequence_of_statements ^ END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   ELSE                               => shift and goto state 233
   ELSIF                              => shift and goto state 234
   END                                => shift and goto state 235
   default                            => ERROR

   nonterminal_020                    goto state 236
   nonterminal_019_list               goto state 237

   Minimal_Complete_Action => END

State 191:
     93.1:loop_statement <= LOOP sequence_of_statements END LOOP ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to identifier_opt 89.1
   IDENTIFIER                         => shift and goto state 238
   default                            => ERROR

   identifier_opt                     goto state 239

   Minimal_Complete_Action => identifier_opt

State 192:
     98.2:package_body <= PACKAGE BODY name IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.3:package_body <= PACKAGE BODY name IS ^ declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to declarative_part 74.1
   END                                => reduce 0 tokens to declarative_part 74.1
   FUNCTION                           => shift and goto state 4
   PACKAGE                            => shift and goto state 133
   PROCEDURE                          => shift and goto state 134
   TYPE                               => shift and goto state 135
   IDENTIFIER                         => shift and goto state 136
   default                            => ERROR

   body_g                             goto state 137
   body_stub                          goto state 138
   declaration                        goto state 139
   declarative_part                   goto state 240
   full_type_declaration              goto state 141
   function_specification             goto state 20
   object_declaration                 goto state 142
   package_body                       goto state 143
   procedure_specification            goto state 28
   proper_body                        goto state 144
   subprogram_body                    goto state 145
   subprogram_body_stub               goto state 146
   subprogram_declaration             goto state 147
   subprogram_specification           goto state 148
   type_declaration                   goto state 149
   nonterminal_006_list               goto state 150

   Minimal_Complete_Action => declarative_part

State 193:
     98.0:package_body <= PACKAGE BODY name aspect_specification ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.1:package_body <= PACKAGE BODY name aspect_specification ^ IS declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   IS                                 => shift and goto state 241
   default                            => ERROR

   Minimal_Complete_Action => IS

State 194:
     87.0:generic_instantiation <= PACKAGE name IS NEW ^ name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   name                               goto state 242
   selected_component                 goto state 29

   Minimal_Complete_Action => IDENTIFIER

State 195:
     87.1:generic_instantiation <= PROCEDURE name IS NEW ^ name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   name                               goto state 243
   selected_component                 goto state 29

   Minimal_Complete_Action => IDENTIFIER

State 196:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/RANGE/COLON_EQUAL/DOT/SEMICOLON
     95.1:name <= name ^ actual_parameter_part, LEFT_PAREN/RANGE/COLON_EQUAL/DOT/SEMICOLON
    111.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/RANGE/COLON_EQUAL/DOT/SEMICOLON
    121.0:subtype_indication <= name ^ constraint, COLON_EQUAL/SEMICOLON
    121.1:subtype_indication <= name ^, COLON_EQUAL/SEMICOLON

   LEFT_PAREN                         => shift and goto state 223
   RANGE                              => shift and goto state 224
   COLON_EQUAL                        => reduce 1 tokens to subtype_indication 121.1
   DOT                                => shift and goto state 74
   SEMICOLON                          => reduce 1 tokens to subtype_indication 121.1
   default                            => ERROR

   actual_parameter_part              goto state 76
   constraint                         goto state 225
   index_constraint                   goto state 226

   Minimal_Complete_Action => subtype_indication

State 197:
     81.0:extended_return_object_declaration <= IDENTIFIER COLON subtype_indication ^, SEMICOLON

   SEMICOLON                          => reduce 3 tokens to extended_return_object_declaration 81.0
   default                            => ERROR

   Minimal_Complete_Action => extended_return_object_declaration

State 198:
     78.0:exception_handler <= WHEN ^ exception_choice EQUAL_GREATER sequence_of_statements, END/WHEN

   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   exception_choice                   goto state 244
   name                               goto state 245
   selected_component                 goto state 29

   Minimal_Complete_Action => IDENTIFIER

State 199:
    139.0:nonterminal_017_list <= exception_handler ^, END/WHEN

   END                                => reduce 1 tokens to nonterminal_017_list 139.0
   WHEN                               => reduce 1 tokens to nonterminal_017_list 139.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_017_list

State 200:
    139.1:nonterminal_017_list <= nonterminal_017_list ^ exception_handler, END/WHEN
    140.0:nonterminal_018 <= EXCEPTION nonterminal_017_list ^, END

   END                                => reduce 2 tokens to nonterminal_018 140.0
   WHEN                               => shift and goto state 198
   default                            => ERROR

   exception_handler                  goto state 246

   Minimal_Complete_Action => nonterminal_018

State 201:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to identifier_opt 89.1
   IDENTIFIER                         => shift and goto state 238
   default                            => ERROR

   identifier_opt                     goto state 247

   Minimal_Complete_Action => identifier_opt

State 202:
     88.0:handled_sequence_of_statements <= sequence_of_statements nonterminal_018 ^, END

   END                                => reduce 2 tokens to handled_sequence_of_statements 88.0
   default                            => ERROR

   Minimal_Complete_Action => handled_sequence_of_statements

State 203:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, IS/LEFT_PAREN/WITH/DOT/SEMICOLON
     95.1:name <= name ^ actual_parameter_part, IS/LEFT_PAREN/WITH/DOT/SEMICOLON
    105.0:procedure_specification <= PROCEDURE name ^ parameter_profile, IS/WITH/SEMICOLON
    111.0:selected_component <= name ^ DOT IDENTIFIER, IS/LEFT_PAREN/WITH/DOT/SEMICOLON

   IS                                 => reduce 0 tokens to parameter_profile 100.1
   LEFT_PAREN                         => shift and goto state 115
   WITH                               => reduce 0 tokens to parameter_profile 100.1
   DOT                                => shift and goto state 74
   SEMICOLON                          => reduce 0 tokens to parameter_profile 100.1
   default                            => ERROR

   actual_parameter_part              goto state 76
   formal_part                        goto state 125
   parameter_profile                  goto state 126

   Minimal_Complete_Action => parameter_profile

State 204:
     85.0:full_type_declaration <= TYPE IDENTIFIER ^ IS type_definition SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   IS                                 => shift and goto state 248
   default                            => ERROR

   Minimal_Complete_Action => IS

State 205:
     97.0:object_declaration <= IDENTIFIER COLON ^ subtype_indication COLON_EQUAL expression SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
     97.1:object_declaration <= IDENTIFIER COLON ^ subtype_indication SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   name                               goto state 196
   selected_component                 goto state 29
   subtype_indication                 goto state 249

   Minimal_Complete_Action => IDENTIFIER

State 206:
     64.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN ^ handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                               => shift and goto state 2
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements 112.1
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   handled_sequence_of_statements     goto state 250
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 132
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 60
   nonterminal_021_list               goto state 61

   Minimal_Complete_Action => handled_sequence_of_statements

State 207:
    117.1:subprogram_body <= subprogram_specification IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    118.0:subprogram_body_stub <= subprogram_specification IS ^ SEPARATE SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 0 tokens to declarative_part 74.1
   FUNCTION                           => shift and goto state 4
   PACKAGE                            => shift and goto state 133
   PROCEDURE                          => shift and goto state 134
   SEPARATE                           => shift and goto state 251
   TYPE                               => shift and goto state 135
   IDENTIFIER                         => shift and goto state 136
   default                            => ERROR

   body_g                             goto state 137
   body_stub                          goto state 138
   declaration                        goto state 139
   declarative_part                   goto state 161
   full_type_declaration              goto state 141
   function_specification             goto state 20
   object_declaration                 goto state 142
   package_body                       goto state 143
   procedure_specification            goto state 28
   proper_body                        goto state 144
   subprogram_body                    goto state 145
   subprogram_body_stub               goto state 146
   subprogram_declaration             goto state 147
   subprogram_specification           goto state 148
   type_declaration                   goto state 149
   nonterminal_006_list               goto state 150

   Minimal_Complete_Action => SEPARATE

State 208:
    128.1:nonterminal_006_list <= nonterminal_006_list declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 2 tokens to nonterminal_006_list 128.1
   END                                => reduce 2 tokens to nonterminal_006_list 128.1
   FUNCTION                           => reduce 2 tokens to nonterminal_006_list 128.1
   PACKAGE                            => reduce 2 tokens to nonterminal_006_list 128.1
   PROCEDURE                          => reduce 2 tokens to nonterminal_006_list 128.1
   TYPE                               => reduce 2 tokens to nonterminal_006_list 128.1
   IDENTIFIER                         => reduce 2 tokens to nonterminal_006_list 128.1
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_006_list recursive

State 209:
     93.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END ^ LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LOOP                               => shift and goto state 252
   default                            => ERROR

   Minimal_Complete_Action => LOOP

State 210:
     60.0:association <= IDENTIFIER EQUAL_GREATER ^ expression, IS/RIGHT_PAREN/COMMA

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   expression                         goto state 253
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 49
   selected_component                 goto state 29
   simple_expression                  goto state 50
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 211:
     57.0:actual_parameter_part <= LEFT_PAREN association_list RIGHT_PAREN ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 3 tokens to actual_parameter_part 57.0
   IS                                 => reduce 3 tokens to actual_parameter_part 57.0
   LEFT_PAREN                         => reduce 3 tokens to actual_parameter_part 57.0
   LOOP                               => reduce 3 tokens to actual_parameter_part 57.0
   OR                                 => reduce 3 tokens to actual_parameter_part 57.0
   RANGE                              => reduce 3 tokens to actual_parameter_part 57.0
   RETURN                             => reduce 3 tokens to actual_parameter_part 57.0
   RIGHT_PAREN                        => reduce 3 tokens to actual_parameter_part 57.0
   THEN                               => reduce 3 tokens to actual_parameter_part 57.0
   WITH                               => reduce 3 tokens to actual_parameter_part 57.0
   XOR                                => reduce 3 tokens to actual_parameter_part 57.0
   AMPERSAND                          => reduce 3 tokens to actual_parameter_part 57.0
   COLON_EQUAL                        => reduce 3 tokens to actual_parameter_part 57.0
   COMMA                              => reduce 3 tokens to actual_parameter_part 57.0
   DOT                                => reduce 3 tokens to actual_parameter_part 57.0
   DOT_DOT                            => reduce 3 tokens to actual_parameter_part 57.0
   EQUAL                              => reduce 3 tokens to actual_parameter_part 57.0
   EQUAL_GREATER                      => reduce 3 tokens to actual_parameter_part 57.0
   GREATER                            => reduce 3 tokens to actual_parameter_part 57.0
   GREATER_EQUAL                      => reduce 3 tokens to actual_parameter_part 57.0
   LESS                               => reduce 3 tokens to actual_parameter_part 57.0
   LESS_EQUAL                         => reduce 3 tokens to actual_parameter_part 57.0
   MINUS                              => reduce 3 tokens to actual_parameter_part 57.0
   PLUS                               => reduce 3 tokens to actual_parameter_part 57.0
   SEMICOLON                          => reduce 3 tokens to actual_parameter_part 57.0
   SLASH                              => reduce 3 tokens to actual_parameter_part 57.0
   SLASH_EQUAL                        => reduce 3 tokens to actual_parameter_part 57.0
   STAR                               => reduce 3 tokens to actual_parameter_part 57.0
   default                            => ERROR

   Minimal_Complete_Action => actual_parameter_part

State 212:
     61.1:association_list <= association_list COMMA ^ association, IS/RIGHT_PAREN/COMMA

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 152
   default                            => ERROR

   association                        goto state 254
   expression                         goto state 155
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 49
   selected_component                 goto state 29
   simple_expression                  goto state 50
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL recursive

State 213:
     95.0:name <= name LEFT_PAREN range_list RIGHT_PAREN ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 4 tokens to name 95.0
   IS                                 => reduce 4 tokens to name 95.0
   LEFT_PAREN                         => reduce 4 tokens to name 95.0
   LOOP                               => reduce 4 tokens to name 95.0
   OR                                 => reduce 4 tokens to name 95.0
   RANGE                              => reduce 4 tokens to name 95.0
   RETURN                             => reduce 4 tokens to name 95.0
   RIGHT_PAREN                        => reduce 4 tokens to name 95.0
   THEN                               => reduce 4 tokens to name 95.0
   WITH                               => reduce 4 tokens to name 95.0
   XOR                                => reduce 4 tokens to name 95.0
   AMPERSAND                          => reduce 4 tokens to name 95.0
   COLON_EQUAL                        => reduce 4 tokens to name 95.0
   COMMA                              => reduce 4 tokens to name 95.0
   DOT                                => reduce 4 tokens to name 95.0
   DOT_DOT                            => reduce 4 tokens to name 95.0
   EQUAL                              => reduce 4 tokens to name 95.0
   EQUAL_GREATER                      => reduce 4 tokens to name 95.0
   GREATER                            => reduce 4 tokens to name 95.0
   GREATER_EQUAL                      => reduce 4 tokens to name 95.0
   LESS                               => reduce 4 tokens to name 95.0
   LESS_EQUAL                         => reduce 4 tokens to name 95.0
   MINUS                              => reduce 4 tokens to name 95.0
   PLUS                               => reduce 4 tokens to name 95.0
   SEMICOLON                          => reduce 4 tokens to name 95.0
   SLASH                              => reduce 4 tokens to name 95.0
   SLASH_EQUAL                        => reduce 4 tokens to name 95.0
   STAR                               => reduce 4 tokens to name 95.0
   default                            => ERROR

   Minimal_Complete_Action => name recursive

State 214:
    108.0:range_list <= range_list COMMA ^ range_g, RIGHT_PAREN/COMMA

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 255
   selected_component                 goto state 29
   simple_expression                  goto state 184
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL recursive

State 215:
    107.0:range_g <= simple_expression DOT_DOT ^ simple_expression, LOOP/RIGHT_PAREN/COLON_EQUAL/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   selected_component                 goto state 29
   simple_expression                  goto state 256
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 216:
     59.0:assignment_statement <= name COLON_EQUAL expression SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 4 tokens to assignment_statement 59.0
   CASE                               => reduce 4 tokens to assignment_statement 59.0
   DECLARE                            => reduce 4 tokens to assignment_statement 59.0
   ELSE                               => reduce 4 tokens to assignment_statement 59.0
   ELSIF                              => reduce 4 tokens to assignment_statement 59.0
   END                                => reduce 4 tokens to assignment_statement 59.0
   EXIT                               => reduce 4 tokens to assignment_statement 59.0
   EXCEPTION                          => reduce 4 tokens to assignment_statement 59.0
   FOR                                => reduce 4 tokens to assignment_statement 59.0
   FUNCTION                           => reduce 4 tokens to assignment_statement 59.0
   IF                                 => reduce 4 tokens to assignment_statement 59.0
   LOOP                               => reduce 4 tokens to assignment_statement 59.0
   PACKAGE                            => reduce 4 tokens to assignment_statement 59.0
   PROCEDURE                          => reduce 4 tokens to assignment_statement 59.0
   RETURN                             => reduce 4 tokens to assignment_statement 59.0
   WHEN                               => reduce 4 tokens to assignment_statement 59.0
   IDENTIFIER                         => reduce 4 tokens to assignment_statement 59.0
   Wisi_EOI                           => reduce 4 tokens to assignment_statement 59.0
   default                            => ERROR

   Minimal_Complete_Action => assignment_statement

State 217:
    117.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                               => shift and goto state 2
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements 112.1
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   handled_sequence_of_statements     goto state 257
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 132
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 60
   nonterminal_021_list               goto state 61

   Minimal_Complete_Action => handled_sequence_of_statements

State 218:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 258
   default                            => ERROR

   Minimal_Complete_Action => BEGIN

State 219:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL ^ EQUAL_GREATER sequence_of_statements, END/WHEN

   EQUAL_GREATER                      => shift and goto state 259
   default                            => ERROR

   Minimal_Complete_Action => EQUAL_GREATER

State 220:
     67.0:case_statement <= CASE expression IS nonterminal_004_list END ^ CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   CASE                               => shift and goto state 260
   default                            => ERROR

   Minimal_Complete_Action => CASE

State 221:
    126.1:nonterminal_004_list <= nonterminal_004_list case_statement_alternative ^, END/WHEN

   END                                => reduce 2 tokens to nonterminal_004_list 126.1
   WHEN                               => reduce 2 tokens to nonterminal_004_list 126.1
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_004_list recursive

State 222:
     79.0:exit_statement <= EXIT IDENTIFIER WHEN expression SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 5 tokens to exit_statement 79.0
   CASE                               => reduce 5 tokens to exit_statement 79.0
   DECLARE                            => reduce 5 tokens to exit_statement 79.0
   ELSE                               => reduce 5 tokens to exit_statement 79.0
   ELSIF                              => reduce 5 tokens to exit_statement 79.0
   END                                => reduce 5 tokens to exit_statement 79.0
   EXIT                               => reduce 5 tokens to exit_statement 79.0
   EXCEPTION                          => reduce 5 tokens to exit_statement 79.0
   FOR                                => reduce 5 tokens to exit_statement 79.0
   FUNCTION                           => reduce 5 tokens to exit_statement 79.0
   IF                                 => reduce 5 tokens to exit_statement 79.0
   LOOP                               => reduce 5 tokens to exit_statement 79.0
   PACKAGE                            => reduce 5 tokens to exit_statement 79.0
   PROCEDURE                          => reduce 5 tokens to exit_statement 79.0
   RETURN                             => reduce 5 tokens to exit_statement 79.0
   WHEN                               => reduce 5 tokens to exit_statement 79.0
   IDENTIFIER                         => reduce 5 tokens to exit_statement 79.0
   Wisi_EOI                           => reduce 5 tokens to exit_statement 79.0
   default                            => ERROR

   Minimal_Complete_Action => exit_statement

State 223:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
     91.0:index_constraint <= LEFT_PAREN ^ discrete_subtype_definition RIGHT_PAREN, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON
     95.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 152
   default                            => ERROR

   association                        goto state 153
   association_list                   goto state 154
   discrete_subtype_definition        goto state 261
   expression                         goto state 155
   factor                             goto state 45
   name                               goto state 182
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 262
   range_list                         goto state 157
   relation                           goto state 49
   selected_component                 goto state 29
   simple_expression                  goto state 158
   subtype_indication                 goto state 185
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => (NUMERIC_LITERAL, IDENTIFIER) recursive

State 224:
     72.0:constraint <= RANGE ^ range_g, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 263
   selected_component                 goto state 29
   simple_expression                  goto state 184
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 225:
    121.0:subtype_indication <= name constraint ^, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LOOP                               => reduce 2 tokens to subtype_indication 121.0
   RIGHT_PAREN                        => reduce 2 tokens to subtype_indication 121.0
   COLON_EQUAL                        => reduce 2 tokens to subtype_indication 121.0
   SEMICOLON                          => reduce 2 tokens to subtype_indication 121.0
   default                            => ERROR

   Minimal_Complete_Action => subtype_indication

State 226:
     72.1:constraint <= index_constraint ^, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LOOP                               => reduce 1 tokens to constraint 72.1
   RIGHT_PAREN                        => reduce 1 tokens to constraint 72.1
   COLON_EQUAL                        => reduce 1 tokens to constraint 72.1
   SEMICOLON                          => reduce 1 tokens to constraint 72.1
   default                            => ERROR

   Minimal_Complete_Action => constraint

State 227:
    101.0:parameter_specification <= IDENTIFIER COLON ^ IDENTIFIER COLON_EQUAL expression, RIGHT_PAREN/SEMICOLON
    101.1:parameter_specification <= IDENTIFIER COLON ^ IDENTIFIER, RIGHT_PAREN/SEMICOLON

   IDENTIFIER                         => shift and goto state 264
   default                            => ERROR

   Minimal_Complete_Action => IDENTIFIER

State 228:
     84.1:formal_part <= LEFT_PAREN parameter_specification RIGHT_PAREN ^, IS/RETURN/WITH/SEMICOLON

   IS                                 => reduce 3 tokens to formal_part 84.1
   RETURN                             => reduce 3 tokens to formal_part 84.1
   WITH                               => reduce 3 tokens to formal_part 84.1
   SEMICOLON                          => reduce 3 tokens to formal_part 84.1
   default                            => ERROR

   Minimal_Complete_Action => formal_part

State 229:
    137.0:nonterminal_016 <= SEMICOLON ^ parameter_specification, RIGHT_PAREN/SEMICOLON

   IDENTIFIER                         => shift and goto state 265
   default                            => ERROR

   parameter_specification            goto state 266

   Minimal_Complete_Action => IDENTIFIER

State 230:
    138.0:nonterminal_015_list <= nonterminal_016 ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_015_list 138.0
   SEMICOLON                          => reduce 1 tokens to nonterminal_015_list 138.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_015_list

State 231:
     84.0:formal_part <= LEFT_PAREN parameter_specification nonterminal_015_list ^ RIGHT_PAREN, IS/RETURN/WITH/SEMICOLON
    138.1:nonterminal_015_list <= nonterminal_015_list ^ nonterminal_016, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => shift and goto state 267
   SEMICOLON                          => shift and goto state 229
   default                            => ERROR

   nonterminal_016                    goto state 268

   Minimal_Complete_Action => RIGHT_PAREN

State 232:
     99.0:parameter_and_result_profile <= formal_part RETURN IDENTIFIER ^, IS/WITH/SEMICOLON

   IS                                 => reduce 3 tokens to parameter_and_result_profile 99.0
   WITH                               => reduce 3 tokens to parameter_and_result_profile 99.0
   SEMICOLON                          => reduce 3 tokens to parameter_and_result_profile 99.0
   default                            => ERROR

   Minimal_Complete_Action => parameter_and_result_profile

State 233:
     90.2:if_statement <= IF expression THEN sequence_of_statements ELSE ^ sequence_of_statements END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 269
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 60
   nonterminal_021_list               goto state 61

   Minimal_Complete_Action => sequence_of_statements

State 234:
    141.0:nonterminal_020 <= ELSIF ^ expression THEN sequence_of_statements, ELSE/ELSIF/END

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   expression                         goto state 270
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 49
   selected_component                 goto state 29
   simple_expression                  goto state 50
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 235:
     90.3:if_statement <= IF expression THEN sequence_of_statements END ^ IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   IF                                 => shift and goto state 271
   default                            => ERROR

   Minimal_Complete_Action => IF

State 236:
    142.0:nonterminal_019_list <= nonterminal_020 ^, ELSE/ELSIF/END

   ELSE                               => reduce 1 tokens to nonterminal_019_list 142.0
   ELSIF                              => reduce 1 tokens to nonterminal_019_list 142.0
   END                                => reduce 1 tokens to nonterminal_019_list 142.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_019_list

State 237:
     90.0:if_statement <= IF expression THEN sequence_of_statements nonterminal_019_list ^ ELSE sequence_of_statements END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     90.1:if_statement <= IF expression THEN sequence_of_statements nonterminal_019_list ^ END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
    142.1:nonterminal_019_list <= nonterminal_019_list ^ nonterminal_020, ELSE/ELSIF/END

   ELSE                               => shift and goto state 272
   ELSIF                              => shift and goto state 234
   END                                => shift and goto state 273
   default                            => ERROR

   nonterminal_020                    goto state 274

   Minimal_Complete_Action => END

State 238:
     89.0:identifier_opt <= IDENTIFIER ^, SEMICOLON

   SEMICOLON                          => reduce 1 tokens to identifier_opt 89.0
   default                            => ERROR

   Minimal_Complete_Action => identifier_opt

State 239:
     93.1:loop_statement <= LOOP sequence_of_statements END LOOP identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 275
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 240:
     98.2:package_body <= PACKAGE BODY name IS declarative_part ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.3:package_body <= PACKAGE BODY name IS declarative_part ^ END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 276
   END                                => shift and goto state 277
   default                            => ERROR

   Minimal_Complete_Action => END

State 241:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.1:package_body <= PACKAGE BODY name aspect_specification IS ^ declarative_part END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to declarative_part 74.1
   END                                => reduce 0 tokens to declarative_part 74.1
   FUNCTION                           => shift and goto state 4
   PACKAGE                            => shift and goto state 133
   PROCEDURE                          => shift and goto state 134
   TYPE                               => shift and goto state 135
   IDENTIFIER                         => shift and goto state 136
   default                            => ERROR

   body_g                             goto state 137
   body_stub                          goto state 138
   declaration                        goto state 139
   declarative_part                   goto state 278
   full_type_declaration              goto state 141
   function_specification             goto state 20
   object_declaration                 goto state 142
   package_body                       goto state 143
   procedure_specification            goto state 28
   proper_body                        goto state 144
   subprogram_body                    goto state 145
   subprogram_body_stub               goto state 146
   subprogram_declaration             goto state 147
   subprogram_specification           goto state 148
   type_declaration                   goto state 149
   nonterminal_006_list               goto state 150

   Minimal_Complete_Action => declarative_part

State 242:
     87.0:generic_instantiation <= PACKAGE name IS NEW name ^ SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/DOT/SEMICOLON
     95.1:name <= name ^ actual_parameter_part, LEFT_PAREN/DOT/SEMICOLON
    111.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 72
   DOT                                => shift and goto state 74
   SEMICOLON                          => shift and goto state 279
   default                            => ERROR

   actual_parameter_part              goto state 76

   Minimal_Complete_Action => SEMICOLON

State 243:
     87.1:generic_instantiation <= PROCEDURE name IS NEW name ^ SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/DOT/SEMICOLON
     95.1:name <= name ^ actual_parameter_part, LEFT_PAREN/DOT/SEMICOLON
    111.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 72
   DOT                                => shift and goto state 74
   SEMICOLON                          => shift and goto state 280
   default                            => ERROR

   actual_parameter_part              goto state 76

   Minimal_Complete_Action => SEMICOLON

State 244:
     78.0:exception_handler <= WHEN exception_choice ^ EQUAL_GREATER sequence_of_statements, END/WHEN

   EQUAL_GREATER                      => shift and goto state 281
   default                            => ERROR

   Minimal_Complete_Action => EQUAL_GREATER

State 245:
     77.0:exception_choice <= name ^, EQUAL_GREATER
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/DOT/EQUAL_GREATER
     95.1:name <= name ^ actual_parameter_part, LEFT_PAREN/DOT/EQUAL_GREATER
    111.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/DOT/EQUAL_GREATER

   LEFT_PAREN                         => shift and goto state 72
   DOT                                => shift and goto state 74
   EQUAL_GREATER                      => reduce 1 tokens to exception_choice 77.0
   default                            => ERROR

   actual_parameter_part              goto state 76

   Minimal_Complete_Action => exception_choice

State 246:
    139.1:nonterminal_017_list <= nonterminal_017_list exception_handler ^, END/WHEN

   END                                => reduce 2 tokens to nonterminal_017_list 139.1
   WHEN                               => reduce 2 tokens to nonterminal_017_list 139.1
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_017_list recursive

State 247:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 282
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 248:
     85.0:full_type_declaration <= TYPE IDENTIFIER IS ^ type_definition SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   LEFT_PAREN                         => shift and goto state 283
   default                            => ERROR

   enumeration_type_definition        goto state 284
   type_definition                    goto state 285

   Minimal_Complete_Action => LEFT_PAREN

State 249:
     97.0:object_declaration <= IDENTIFIER COLON subtype_indication ^ COLON_EQUAL expression SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
     97.1:object_declaration <= IDENTIFIER COLON subtype_indication ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   COLON_EQUAL                        => shift and goto state 286
   SEMICOLON                          => shift and goto state 287
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 250:
     64.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements ^ END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 288
   default                            => ERROR

   Minimal_Complete_Action => END

State 251:
    118.0:subprogram_body_stub <= subprogram_specification IS SEPARATE ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   SEMICOLON                          => shift and goto state 289
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 252:
     93.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to identifier_opt 89.1
   IDENTIFIER                         => shift and goto state 238
   default                            => ERROR

   identifier_opt                     goto state 290

   Minimal_Complete_Action => identifier_opt

State 253:
     60.0:association <= IDENTIFIER EQUAL_GREATER expression ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 3 tokens to association 60.0
   RIGHT_PAREN                        => reduce 3 tokens to association 60.0
   COMMA                              => reduce 3 tokens to association 60.0
   default                            => ERROR

   Minimal_Complete_Action => association

State 254:
     61.1:association_list <= association_list COMMA association ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 3 tokens to association_list 61.1
   RIGHT_PAREN                        => reduce 3 tokens to association_list 61.1
   COMMA                              => reduce 3 tokens to association_list 61.1
   default                            => ERROR

   Minimal_Complete_Action => association_list recursive

State 255:
    108.0:range_list <= range_list COMMA range_g ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 3 tokens to range_list 108.0
   COMMA                              => reduce 3 tokens to range_list 108.0
   default                            => ERROR

   Minimal_Complete_Action => range_list recursive

State 256:
    107.0:range_g <= simple_expression DOT_DOT simple_expression ^, LOOP/RIGHT_PAREN/COLON_EQUAL/COMMA/SEMICOLON

   LOOP                               => reduce 3 tokens to range_g 107.0
   RIGHT_PAREN                        => reduce 3 tokens to range_g 107.0
   COLON_EQUAL                        => reduce 3 tokens to range_g 107.0
   COMMA                              => reduce 3 tokens to range_g 107.0
   SEMICOLON                          => reduce 3 tokens to range_g 107.0
   default                            => ERROR

   Minimal_Complete_Action => range_g

State 257:
    117.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 291
   default                            => ERROR

   Minimal_Complete_Action => END

State 258:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                               => shift and goto state 2
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements 112.1
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   handled_sequence_of_statements     goto state 292
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 132
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 60
   nonterminal_021_list               goto state 61

   Minimal_Complete_Action => handled_sequence_of_statements

State 259:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER ^ sequence_of_statements, END/WHEN

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   WHEN                               => reduce 0 tokens to sequence_of_statements 112.1
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 293
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 60
   nonterminal_021_list               goto state 61

   Minimal_Complete_Action => sequence_of_statements

State 260:
     67.0:case_statement <= CASE expression IS nonterminal_004_list END CASE ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 294
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 261:
     91.0:index_constraint <= LEFT_PAREN discrete_subtype_definition ^ RIGHT_PAREN, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   RIGHT_PAREN                        => shift and goto state 295
   default                            => ERROR

   Minimal_Complete_Action => RIGHT_PAREN

State 262:
     75.1:discrete_subtype_definition <= range_g ^, RIGHT_PAREN
    108.1:range_list <= range_g ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 1 tokens to discrete_subtype_definition 75.1,
                                         reduce 1 tokens to range_list 108.1
   COMMA                              => reduce 1 tokens to range_list 108.1
   default                            => ERROR

   Minimal_Complete_Action => (discrete_subtype_definition, range_list)

State 263:
     72.0:constraint <= RANGE range_g ^, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LOOP                               => reduce 2 tokens to constraint 72.0
   RIGHT_PAREN                        => reduce 2 tokens to constraint 72.0
   COLON_EQUAL                        => reduce 2 tokens to constraint 72.0
   SEMICOLON                          => reduce 2 tokens to constraint 72.0
   default                            => ERROR

   Minimal_Complete_Action => constraint

State 264:
    101.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER ^ COLON_EQUAL expression, RIGHT_PAREN/SEMICOLON
    101.1:parameter_specification <= IDENTIFIER COLON IDENTIFIER ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 3 tokens to parameter_specification 101.1
   COLON_EQUAL                        => shift and goto state 296
   SEMICOLON                          => reduce 3 tokens to parameter_specification 101.1
   default                            => ERROR

   Minimal_Complete_Action => parameter_specification

State 265:
    101.0:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER COLON_EQUAL expression, RIGHT_PAREN/SEMICOLON
    101.1:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER, RIGHT_PAREN/SEMICOLON

   COLON                              => shift and goto state 227
   default                            => ERROR

   Minimal_Complete_Action => COLON

State 266:
    137.0:nonterminal_016 <= SEMICOLON parameter_specification ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_016 137.0
   SEMICOLON                          => reduce 2 tokens to nonterminal_016 137.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_016

State 267:
     84.0:formal_part <= LEFT_PAREN parameter_specification nonterminal_015_list RIGHT_PAREN ^, IS/RETURN/WITH/SEMICOLON

   IS                                 => reduce 4 tokens to formal_part 84.0
   RETURN                             => reduce 4 tokens to formal_part 84.0
   WITH                               => reduce 4 tokens to formal_part 84.0
   SEMICOLON                          => reduce 4 tokens to formal_part 84.0
   default                            => ERROR

   Minimal_Complete_Action => formal_part

State 268:
    138.1:nonterminal_015_list <= nonterminal_015_list nonterminal_016 ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_015_list 138.1
   SEMICOLON                          => reduce 2 tokens to nonterminal_015_list 138.1
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_015_list recursive

State 269:
     90.2:if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements ^ END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 297
   default                            => ERROR

   Minimal_Complete_Action => END

State 270:
    141.0:nonterminal_020 <= ELSIF expression ^ THEN sequence_of_statements, ELSE/ELSIF/END

   THEN                               => shift and goto state 298
   default                            => ERROR

   Minimal_Complete_Action => THEN

State 271:
     90.3:if_statement <= IF expression THEN sequence_of_statements END IF ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 299
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 272:
     90.0:if_statement <= IF expression THEN sequence_of_statements nonterminal_019_list ELSE ^ sequence_of_statements END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 300
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 60
   nonterminal_021_list               goto state 61

   Minimal_Complete_Action => sequence_of_statements

State 273:
     90.1:if_statement <= IF expression THEN sequence_of_statements nonterminal_019_list END ^ IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   IF                                 => shift and goto state 301
   default                            => ERROR

   Minimal_Complete_Action => IF

State 274:
    142.1:nonterminal_019_list <= nonterminal_019_list nonterminal_020 ^, ELSE/ELSIF/END

   ELSE                               => reduce 2 tokens to nonterminal_019_list 142.1
   ELSIF                              => reduce 2 tokens to nonterminal_019_list 142.1
   END                                => reduce 2 tokens to nonterminal_019_list 142.1
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_019_list recursive

State 275:
     93.1:loop_statement <= LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 6 tokens to loop_statement 93.1
   CASE                               => reduce 6 tokens to loop_statement 93.1
   DECLARE                            => reduce 6 tokens to loop_statement 93.1
   ELSE                               => reduce 6 tokens to loop_statement 93.1
   ELSIF                              => reduce 6 tokens to loop_statement 93.1
   END                                => reduce 6 tokens to loop_statement 93.1
   EXIT                               => reduce 6 tokens to loop_statement 93.1
   EXCEPTION                          => reduce 6 tokens to loop_statement 93.1
   FOR                                => reduce 6 tokens to loop_statement 93.1
   FUNCTION                           => reduce 6 tokens to loop_statement 93.1
   IF                                 => reduce 6 tokens to loop_statement 93.1
   LOOP                               => reduce 6 tokens to loop_statement 93.1
   PACKAGE                            => reduce 6 tokens to loop_statement 93.1
   PROCEDURE                          => reduce 6 tokens to loop_statement 93.1
   RETURN                             => reduce 6 tokens to loop_statement 93.1
   WHEN                               => reduce 6 tokens to loop_statement 93.1
   IDENTIFIER                         => reduce 6 tokens to loop_statement 93.1
   Wisi_EOI                           => reduce 6 tokens to loop_statement 93.1
   default                            => ERROR

   Minimal_Complete_Action => loop_statement

State 276:
     98.2:package_body <= PACKAGE BODY name IS declarative_part BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                               => shift and goto state 2
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements 112.1
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   handled_sequence_of_statements     goto state 302
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 132
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 60
   nonterminal_021_list               goto state 61

   Minimal_Complete_Action => handled_sequence_of_statements

State 277:
     98.3:package_body <= PACKAGE BODY name IS declarative_part END ^ name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   name                               goto state 303
   name_opt                           goto state 304
   selected_component                 goto state 29

   Minimal_Complete_Action => name_opt

State 278:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
     98.1:package_body <= PACKAGE BODY name aspect_specification IS declarative_part ^ END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 305
   END                                => shift and goto state 306
   default                            => ERROR

   Minimal_Complete_Action => END

State 279:
     87.0:generic_instantiation <= PACKAGE name IS NEW name SEMICOLON ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 6 tokens to generic_instantiation 87.0
   CASE                               => reduce 6 tokens to generic_instantiation 87.0
   DECLARE                            => reduce 6 tokens to generic_instantiation 87.0
   EXIT                               => reduce 6 tokens to generic_instantiation 87.0
   FOR                                => reduce 6 tokens to generic_instantiation 87.0
   FUNCTION                           => reduce 6 tokens to generic_instantiation 87.0
   IF                                 => reduce 6 tokens to generic_instantiation 87.0
   LOOP                               => reduce 6 tokens to generic_instantiation 87.0
   PACKAGE                            => reduce 6 tokens to generic_instantiation 87.0
   PROCEDURE                          => reduce 6 tokens to generic_instantiation 87.0
   RETURN                             => reduce 6 tokens to generic_instantiation 87.0
   IDENTIFIER                         => reduce 6 tokens to generic_instantiation 87.0
   Wisi_EOI                           => reduce 6 tokens to generic_instantiation 87.0
   default                            => ERROR

   Minimal_Complete_Action => generic_instantiation

State 280:
     87.1:generic_instantiation <= PROCEDURE name IS NEW name SEMICOLON ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 6 tokens to generic_instantiation 87.1
   CASE                               => reduce 6 tokens to generic_instantiation 87.1
   DECLARE                            => reduce 6 tokens to generic_instantiation 87.1
   EXIT                               => reduce 6 tokens to generic_instantiation 87.1
   FOR                                => reduce 6 tokens to generic_instantiation 87.1
   FUNCTION                           => reduce 6 tokens to generic_instantiation 87.1
   IF                                 => reduce 6 tokens to generic_instantiation 87.1
   LOOP                               => reduce 6 tokens to generic_instantiation 87.1
   PACKAGE                            => reduce 6 tokens to generic_instantiation 87.1
   PROCEDURE                          => reduce 6 tokens to generic_instantiation 87.1
   RETURN                             => reduce 6 tokens to generic_instantiation 87.1
   IDENTIFIER                         => reduce 6 tokens to generic_instantiation 87.1
   Wisi_EOI                           => reduce 6 tokens to generic_instantiation 87.1
   default                            => ERROR

   Minimal_Complete_Action => generic_instantiation

State 281:
     78.0:exception_handler <= WHEN exception_choice EQUAL_GREATER ^ sequence_of_statements, END/WHEN

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   WHEN                               => reduce 0 tokens to sequence_of_statements 112.1
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 307
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 60
   nonterminal_021_list               goto state 61

   Minimal_Complete_Action => sequence_of_statements

State 282:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 6 tokens to block_statement 64.1
   CASE                               => reduce 6 tokens to block_statement 64.1
   DECLARE                            => reduce 6 tokens to block_statement 64.1
   ELSE                               => reduce 6 tokens to block_statement 64.1
   ELSIF                              => reduce 6 tokens to block_statement 64.1
   END                                => reduce 6 tokens to block_statement 64.1
   EXIT                               => reduce 6 tokens to block_statement 64.1
   EXCEPTION                          => reduce 6 tokens to block_statement 64.1
   FOR                                => reduce 6 tokens to block_statement 64.1
   FUNCTION                           => reduce 6 tokens to block_statement 64.1
   IF                                 => reduce 6 tokens to block_statement 64.1
   LOOP                               => reduce 6 tokens to block_statement 64.1
   PACKAGE                            => reduce 6 tokens to block_statement 64.1
   PROCEDURE                          => reduce 6 tokens to block_statement 64.1
   RETURN                             => reduce 6 tokens to block_statement 64.1
   WHEN                               => reduce 6 tokens to block_statement 64.1
   IDENTIFIER                         => reduce 6 tokens to block_statement 64.1
   Wisi_EOI                           => reduce 6 tokens to block_statement 64.1
   default                            => ERROR

   Minimal_Complete_Action => block_statement

State 283:
     76.0:enumeration_type_definition <= LEFT_PAREN ^ IDENTIFIER nonterminal_007_list RIGHT_PAREN, SEMICOLON
     76.1:enumeration_type_definition <= LEFT_PAREN ^ IDENTIFIER RIGHT_PAREN, SEMICOLON

   IDENTIFIER                         => shift and goto state 308
   default                            => ERROR

   Minimal_Complete_Action => IDENTIFIER

State 284:
    124.0:type_definition <= enumeration_type_definition ^, SEMICOLON

   SEMICOLON                          => reduce 1 tokens to type_definition 124.0
   default                            => ERROR

   Minimal_Complete_Action => type_definition

State 285:
     85.0:full_type_declaration <= TYPE IDENTIFIER IS type_definition ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   SEMICOLON                          => shift and goto state 309
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 286:
     97.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL ^ expression SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   expression                         goto state 310
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 49
   selected_component                 goto state 29
   simple_expression                  goto state 50
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 287:
     97.1:object_declaration <= IDENTIFIER COLON subtype_indication SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 4 tokens to object_declaration 97.1
   END                                => reduce 4 tokens to object_declaration 97.1
   FUNCTION                           => reduce 4 tokens to object_declaration 97.1
   PACKAGE                            => reduce 4 tokens to object_declaration 97.1
   PROCEDURE                          => reduce 4 tokens to object_declaration 97.1
   TYPE                               => reduce 4 tokens to object_declaration 97.1
   IDENTIFIER                         => reduce 4 tokens to object_declaration 97.1
   default                            => ERROR

   Minimal_Complete_Action => object_declaration

State 288:
     64.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements END ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to identifier_opt 89.1
   IDENTIFIER                         => shift and goto state 238
   default                            => ERROR

   identifier_opt                     goto state 311

   Minimal_Complete_Action => identifier_opt

State 289:
    118.0:subprogram_body_stub <= subprogram_specification IS SEPARATE SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 4 tokens to subprogram_body_stub 118.0
   END                                => reduce 4 tokens to subprogram_body_stub 118.0
   FUNCTION                           => reduce 4 tokens to subprogram_body_stub 118.0
   PACKAGE                            => reduce 4 tokens to subprogram_body_stub 118.0
   PROCEDURE                          => reduce 4 tokens to subprogram_body_stub 118.0
   TYPE                               => reduce 4 tokens to subprogram_body_stub 118.0
   IDENTIFIER                         => reduce 4 tokens to subprogram_body_stub 118.0
   default                            => ERROR

   Minimal_Complete_Action => subprogram_body_stub

State 290:
     93.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 312
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 291:
    117.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   name                               goto state 303
   name_opt                           goto state 313
   selected_component                 goto state 29

   Minimal_Complete_Action => name_opt

State 292:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 314
   default                            => ERROR

   Minimal_Complete_Action => END

State 293:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements ^, END/WHEN

   END                                => reduce 4 tokens to case_statement_alternative 68.0
   WHEN                               => reduce 4 tokens to case_statement_alternative 68.0
   default                            => ERROR

   Minimal_Complete_Action => case_statement_alternative

State 294:
     67.0:case_statement <= CASE expression IS nonterminal_004_list END CASE SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 7 tokens to case_statement 67.0
   CASE                               => reduce 7 tokens to case_statement 67.0
   DECLARE                            => reduce 7 tokens to case_statement 67.0
   ELSE                               => reduce 7 tokens to case_statement 67.0
   ELSIF                              => reduce 7 tokens to case_statement 67.0
   END                                => reduce 7 tokens to case_statement 67.0
   EXIT                               => reduce 7 tokens to case_statement 67.0
   EXCEPTION                          => reduce 7 tokens to case_statement 67.0
   FOR                                => reduce 7 tokens to case_statement 67.0
   FUNCTION                           => reduce 7 tokens to case_statement 67.0
   IF                                 => reduce 7 tokens to case_statement 67.0
   LOOP                               => reduce 7 tokens to case_statement 67.0
   PACKAGE                            => reduce 7 tokens to case_statement 67.0
   PROCEDURE                          => reduce 7 tokens to case_statement 67.0
   RETURN                             => reduce 7 tokens to case_statement 67.0
   WHEN                               => reduce 7 tokens to case_statement 67.0
   IDENTIFIER                         => reduce 7 tokens to case_statement 67.0
   Wisi_EOI                           => reduce 7 tokens to case_statement 67.0
   default                            => ERROR

   Minimal_Complete_Action => case_statement

State 295:
     91.0:index_constraint <= LEFT_PAREN discrete_subtype_definition RIGHT_PAREN ^, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LOOP                               => reduce 3 tokens to index_constraint 91.0
   RIGHT_PAREN                        => reduce 3 tokens to index_constraint 91.0
   COLON_EQUAL                        => reduce 3 tokens to index_constraint 91.0
   SEMICOLON                          => reduce 3 tokens to index_constraint 91.0
   default                            => ERROR

   Minimal_Complete_Action => index_constraint

State 296:
    101.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL ^ expression, RIGHT_PAREN/SEMICOLON

   LEFT_PAREN                         => shift and goto state 37
   NOT                                => shift and goto state 38
   MINUS                              => shift and goto state 39
   PLUS                               => shift and goto state 40
   STRING_LITERAL                     => shift and goto state 41
   NUMERIC_LITERAL                    => shift and goto state 42
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   expression                         goto state 315
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 49
   selected_component                 goto state 29
   simple_expression                  goto state 50
   term                               goto state 51
   unary_adding_operator              goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL

State 297:
     90.2:if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements END ^ IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   IF                                 => shift and goto state 316
   default                            => ERROR

   Minimal_Complete_Action => IF

State 298:
    141.0:nonterminal_020 <= ELSIF expression THEN ^ sequence_of_statements, ELSE/ELSIF/END

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   ELSE                               => reduce 0 tokens to sequence_of_statements 112.1
   ELSIF                              => reduce 0 tokens to sequence_of_statements 112.1
   END                                => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 317
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 60
   nonterminal_021_list               goto state 61

   Minimal_Complete_Action => sequence_of_statements

State 299:
     90.3:if_statement <= IF expression THEN sequence_of_statements END IF SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 7 tokens to if_statement 90.3
   CASE                               => reduce 7 tokens to if_statement 90.3
   DECLARE                            => reduce 7 tokens to if_statement 90.3
   ELSE                               => reduce 7 tokens to if_statement 90.3
   ELSIF                              => reduce 7 tokens to if_statement 90.3
   END                                => reduce 7 tokens to if_statement 90.3
   EXIT                               => reduce 7 tokens to if_statement 90.3
   EXCEPTION                          => reduce 7 tokens to if_statement 90.3
   FOR                                => reduce 7 tokens to if_statement 90.3
   FUNCTION                           => reduce 7 tokens to if_statement 90.3
   IF                                 => reduce 7 tokens to if_statement 90.3
   LOOP                               => reduce 7 tokens to if_statement 90.3
   PACKAGE                            => reduce 7 tokens to if_statement 90.3
   PROCEDURE                          => reduce 7 tokens to if_statement 90.3
   RETURN                             => reduce 7 tokens to if_statement 90.3
   WHEN                               => reduce 7 tokens to if_statement 90.3
   IDENTIFIER                         => reduce 7 tokens to if_statement 90.3
   Wisi_EOI                           => reduce 7 tokens to if_statement 90.3
   default                            => ERROR

   Minimal_Complete_Action => if_statement

State 300:
     90.0:if_statement <= IF expression THEN sequence_of_statements nonterminal_019_list ELSE sequence_of_statements ^ END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 318
   default                            => ERROR

   Minimal_Complete_Action => END

State 301:
     90.1:if_statement <= IF expression THEN sequence_of_statements nonterminal_019_list END IF ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 319
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 302:
     98.2:package_body <= PACKAGE BODY name IS declarative_part BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 320
   default                            => ERROR

   Minimal_Complete_Action => END

State 303:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/DOT/SEMICOLON
     95.1:name <= name ^ actual_parameter_part, LEFT_PAREN/DOT/SEMICOLON
     96.0:name_opt <= name ^, SEMICOLON
    111.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 72
   DOT                                => shift and goto state 74
   SEMICOLON                          => reduce 1 tokens to name_opt 96.0
   default                            => ERROR

   actual_parameter_part              goto state 76

   Minimal_Complete_Action => name_opt

State 304:
     98.3:package_body <= PACKAGE BODY name IS declarative_part END name_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 321
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 305:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                               => shift and goto state 2
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements 112.1
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   handled_sequence_of_statements     goto state 322
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 132
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 60
   nonterminal_021_list               goto state 61

   Minimal_Complete_Action => handled_sequence_of_statements

State 306:
     98.1:package_body <= PACKAGE BODY name aspect_specification IS declarative_part END ^ name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   name                               goto state 303
   name_opt                           goto state 323
   selected_component                 goto state 29

   Minimal_Complete_Action => name_opt

State 307:
     78.0:exception_handler <= WHEN exception_choice EQUAL_GREATER sequence_of_statements ^, END/WHEN

   END                                => reduce 4 tokens to exception_handler 78.0
   WHEN                               => reduce 4 tokens to exception_handler 78.0
   default                            => ERROR

   Minimal_Complete_Action => exception_handler

State 308:
     76.0:enumeration_type_definition <= LEFT_PAREN IDENTIFIER ^ nonterminal_007_list RIGHT_PAREN, SEMICOLON
     76.1:enumeration_type_definition <= LEFT_PAREN IDENTIFIER ^ RIGHT_PAREN, SEMICOLON

   RIGHT_PAREN                        => shift and goto state 324
   COMMA                              => shift and goto state 325
   default                            => ERROR

   nonterminal_008                    goto state 326
   nonterminal_007_list               goto state 327

   Minimal_Complete_Action => RIGHT_PAREN

State 309:
     85.0:full_type_declaration <= TYPE IDENTIFIER IS type_definition SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 5 tokens to full_type_declaration 85.0
   END                                => reduce 5 tokens to full_type_declaration 85.0
   FUNCTION                           => reduce 5 tokens to full_type_declaration 85.0
   PACKAGE                            => reduce 5 tokens to full_type_declaration 85.0
   PROCEDURE                          => reduce 5 tokens to full_type_declaration 85.0
   TYPE                               => reduce 5 tokens to full_type_declaration 85.0
   IDENTIFIER                         => reduce 5 tokens to full_type_declaration 85.0
   default                            => ERROR

   Minimal_Complete_Action => full_type_declaration

State 310:
     97.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   SEMICOLON                          => shift and goto state 328
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 311:
     64.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements END identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 329
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 312:
     93.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 7 tokens to loop_statement 93.0
   CASE                               => reduce 7 tokens to loop_statement 93.0
   DECLARE                            => reduce 7 tokens to loop_statement 93.0
   ELSE                               => reduce 7 tokens to loop_statement 93.0
   ELSIF                              => reduce 7 tokens to loop_statement 93.0
   END                                => reduce 7 tokens to loop_statement 93.0
   EXIT                               => reduce 7 tokens to loop_statement 93.0
   EXCEPTION                          => reduce 7 tokens to loop_statement 93.0
   FOR                                => reduce 7 tokens to loop_statement 93.0
   FUNCTION                           => reduce 7 tokens to loop_statement 93.0
   IF                                 => reduce 7 tokens to loop_statement 93.0
   LOOP                               => reduce 7 tokens to loop_statement 93.0
   PACKAGE                            => reduce 7 tokens to loop_statement 93.0
   PROCEDURE                          => reduce 7 tokens to loop_statement 93.0
   RETURN                             => reduce 7 tokens to loop_statement 93.0
   WHEN                               => reduce 7 tokens to loop_statement 93.0
   IDENTIFIER                         => reduce 7 tokens to loop_statement 93.0
   Wisi_EOI                           => reduce 7 tokens to loop_statement 93.0
   default                            => ERROR

   Minimal_Complete_Action => loop_statement

State 313:
    117.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 330
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 314:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   name                               goto state 303
   name_opt                           goto state 331
   selected_component                 goto state 29

   Minimal_Complete_Action => name_opt

State 315:
    101.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL expression ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 5 tokens to parameter_specification 101.0
   SEMICOLON                          => reduce 5 tokens to parameter_specification 101.0
   default                            => ERROR

   Minimal_Complete_Action => parameter_specification

State 316:
     90.2:if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements END IF ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 332
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 317:
    141.0:nonterminal_020 <= ELSIF expression THEN sequence_of_statements ^, ELSE/ELSIF/END

   ELSE                               => reduce 4 tokens to nonterminal_020 141.0
   ELSIF                              => reduce 4 tokens to nonterminal_020 141.0
   END                                => reduce 4 tokens to nonterminal_020 141.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_020

State 318:
     90.0:if_statement <= IF expression THEN sequence_of_statements nonterminal_019_list ELSE sequence_of_statements END ^ IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   IF                                 => shift and goto state 333
   default                            => ERROR

   Minimal_Complete_Action => IF

State 319:
     90.1:if_statement <= IF expression THEN sequence_of_statements nonterminal_019_list END IF SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 8 tokens to if_statement 90.1
   CASE                               => reduce 8 tokens to if_statement 90.1
   DECLARE                            => reduce 8 tokens to if_statement 90.1
   ELSE                               => reduce 8 tokens to if_statement 90.1
   ELSIF                              => reduce 8 tokens to if_statement 90.1
   END                                => reduce 8 tokens to if_statement 90.1
   EXIT                               => reduce 8 tokens to if_statement 90.1
   EXCEPTION                          => reduce 8 tokens to if_statement 90.1
   FOR                                => reduce 8 tokens to if_statement 90.1
   FUNCTION                           => reduce 8 tokens to if_statement 90.1
   IF                                 => reduce 8 tokens to if_statement 90.1
   LOOP                               => reduce 8 tokens to if_statement 90.1
   PACKAGE                            => reduce 8 tokens to if_statement 90.1
   PROCEDURE                          => reduce 8 tokens to if_statement 90.1
   RETURN                             => reduce 8 tokens to if_statement 90.1
   WHEN                               => reduce 8 tokens to if_statement 90.1
   IDENTIFIER                         => reduce 8 tokens to if_statement 90.1
   Wisi_EOI                           => reduce 8 tokens to if_statement 90.1
   default                            => ERROR

   Minimal_Complete_Action => if_statement

State 320:
     98.2:package_body <= PACKAGE BODY name IS declarative_part BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   name                               goto state 303
   name_opt                           goto state 334
   selected_component                 goto state 29

   Minimal_Complete_Action => name_opt

State 321:
     98.3:package_body <= PACKAGE BODY name IS declarative_part END name_opt SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 8 tokens to package_body 98.3
   CASE                               => reduce 8 tokens to package_body 98.3
   DECLARE                            => reduce 8 tokens to package_body 98.3
   END                                => reduce 8 tokens to package_body 98.3
   EXIT                               => reduce 8 tokens to package_body 98.3
   FOR                                => reduce 8 tokens to package_body 98.3
   FUNCTION                           => reduce 8 tokens to package_body 98.3
   IF                                 => reduce 8 tokens to package_body 98.3
   LOOP                               => reduce 8 tokens to package_body 98.3
   PACKAGE                            => reduce 8 tokens to package_body 98.3
   PROCEDURE                          => reduce 8 tokens to package_body 98.3
   RETURN                             => reduce 8 tokens to package_body 98.3
   TYPE                               => reduce 8 tokens to package_body 98.3
   IDENTIFIER                         => reduce 8 tokens to package_body 98.3
   Wisi_EOI                           => reduce 8 tokens to package_body 98.3
   default                            => ERROR

   Minimal_Complete_Action => package_body

State 322:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 335
   default                            => ERROR

   Minimal_Complete_Action => END

State 323:
     98.1:package_body <= PACKAGE BODY name aspect_specification IS declarative_part END name_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 336
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 324:
     76.1:enumeration_type_definition <= LEFT_PAREN IDENTIFIER RIGHT_PAREN ^, SEMICOLON

   SEMICOLON                          => reduce 3 tokens to enumeration_type_definition 76.1
   default                            => ERROR

   Minimal_Complete_Action => enumeration_type_definition

State 325:
    129.0:nonterminal_008 <= COMMA ^ IDENTIFIER, RIGHT_PAREN/COMMA

   IDENTIFIER                         => shift and goto state 337
   default                            => ERROR

   Minimal_Complete_Action => IDENTIFIER

State 326:
    130.0:nonterminal_007_list <= nonterminal_008 ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 1 tokens to nonterminal_007_list 130.0
   COMMA                              => reduce 1 tokens to nonterminal_007_list 130.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_007_list

State 327:
     76.0:enumeration_type_definition <= LEFT_PAREN IDENTIFIER nonterminal_007_list ^ RIGHT_PAREN, SEMICOLON
    130.1:nonterminal_007_list <= nonterminal_007_list ^ nonterminal_008, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => shift and goto state 338
   COMMA                              => shift and goto state 325
   default                            => ERROR

   nonterminal_008                    goto state 339

   Minimal_Complete_Action => RIGHT_PAREN

State 328:
     97.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 6 tokens to object_declaration 97.0
   END                                => reduce 6 tokens to object_declaration 97.0
   FUNCTION                           => reduce 6 tokens to object_declaration 97.0
   PACKAGE                            => reduce 6 tokens to object_declaration 97.0
   PROCEDURE                          => reduce 6 tokens to object_declaration 97.0
   TYPE                               => reduce 6 tokens to object_declaration 97.0
   IDENTIFIER                         => reduce 6 tokens to object_declaration 97.0
   default                            => ERROR

   Minimal_Complete_Action => object_declaration

State 329:
     64.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 8 tokens to block_statement 64.0
   CASE                               => reduce 8 tokens to block_statement 64.0
   DECLARE                            => reduce 8 tokens to block_statement 64.0
   ELSE                               => reduce 8 tokens to block_statement 64.0
   ELSIF                              => reduce 8 tokens to block_statement 64.0
   END                                => reduce 8 tokens to block_statement 64.0
   EXIT                               => reduce 8 tokens to block_statement 64.0
   EXCEPTION                          => reduce 8 tokens to block_statement 64.0
   FOR                                => reduce 8 tokens to block_statement 64.0
   FUNCTION                           => reduce 8 tokens to block_statement 64.0
   IF                                 => reduce 8 tokens to block_statement 64.0
   LOOP                               => reduce 8 tokens to block_statement 64.0
   PACKAGE                            => reduce 8 tokens to block_statement 64.0
   PROCEDURE                          => reduce 8 tokens to block_statement 64.0
   RETURN                             => reduce 8 tokens to block_statement 64.0
   WHEN                               => reduce 8 tokens to block_statement 64.0
   IDENTIFIER                         => reduce 8 tokens to block_statement 64.0
   Wisi_EOI                           => reduce 8 tokens to block_statement 64.0
   default                            => ERROR

   Minimal_Complete_Action => block_statement

State 330:
    117.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 8 tokens to subprogram_body 117.1
   CASE                               => reduce 8 tokens to subprogram_body 117.1
   DECLARE                            => reduce 8 tokens to subprogram_body 117.1
   END                                => reduce 8 tokens to subprogram_body 117.1
   EXIT                               => reduce 8 tokens to subprogram_body 117.1
   FOR                                => reduce 8 tokens to subprogram_body 117.1
   FUNCTION                           => reduce 8 tokens to subprogram_body 117.1
   IF                                 => reduce 8 tokens to subprogram_body 117.1
   LOOP                               => reduce 8 tokens to subprogram_body 117.1
   PACKAGE                            => reduce 8 tokens to subprogram_body 117.1
   PROCEDURE                          => reduce 8 tokens to subprogram_body 117.1
   RETURN                             => reduce 8 tokens to subprogram_body 117.1
   TYPE                               => reduce 8 tokens to subprogram_body 117.1
   IDENTIFIER                         => reduce 8 tokens to subprogram_body 117.1
   Wisi_EOI                           => reduce 8 tokens to subprogram_body 117.1
   default                            => ERROR

   Minimal_Complete_Action => subprogram_body

State 331:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 340
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 332:
     90.2:if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 9 tokens to if_statement 90.2
   CASE                               => reduce 9 tokens to if_statement 90.2
   DECLARE                            => reduce 9 tokens to if_statement 90.2
   ELSE                               => reduce 9 tokens to if_statement 90.2
   ELSIF                              => reduce 9 tokens to if_statement 90.2
   END                                => reduce 9 tokens to if_statement 90.2
   EXIT                               => reduce 9 tokens to if_statement 90.2
   EXCEPTION                          => reduce 9 tokens to if_statement 90.2
   FOR                                => reduce 9 tokens to if_statement 90.2
   FUNCTION                           => reduce 9 tokens to if_statement 90.2
   IF                                 => reduce 9 tokens to if_statement 90.2
   LOOP                               => reduce 9 tokens to if_statement 90.2
   PACKAGE                            => reduce 9 tokens to if_statement 90.2
   PROCEDURE                          => reduce 9 tokens to if_statement 90.2
   RETURN                             => reduce 9 tokens to if_statement 90.2
   WHEN                               => reduce 9 tokens to if_statement 90.2
   IDENTIFIER                         => reduce 9 tokens to if_statement 90.2
   Wisi_EOI                           => reduce 9 tokens to if_statement 90.2
   default                            => ERROR

   Minimal_Complete_Action => if_statement

State 333:
     90.0:if_statement <= IF expression THEN sequence_of_statements nonterminal_019_list ELSE sequence_of_statements END IF ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 341
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 334:
     98.2:package_body <= PACKAGE BODY name IS declarative_part BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 342
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 335:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                         => shift and goto state 43
   default                            => ERROR

   name                               goto state 303
   name_opt                           goto state 343
   selected_component                 goto state 29

   Minimal_Complete_Action => name_opt

State 336:
     98.1:package_body <= PACKAGE BODY name aspect_specification IS declarative_part END name_opt SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 9 tokens to package_body 98.1
   CASE                               => reduce 9 tokens to package_body 98.1
   DECLARE                            => reduce 9 tokens to package_body 98.1
   END                                => reduce 9 tokens to package_body 98.1
   EXIT                               => reduce 9 tokens to package_body 98.1
   FOR                                => reduce 9 tokens to package_body 98.1
   FUNCTION                           => reduce 9 tokens to package_body 98.1
   IF                                 => reduce 9 tokens to package_body 98.1
   LOOP                               => reduce 9 tokens to package_body 98.1
   PACKAGE                            => reduce 9 tokens to package_body 98.1
   PROCEDURE                          => reduce 9 tokens to package_body 98.1
   RETURN                             => reduce 9 tokens to package_body 98.1
   TYPE                               => reduce 9 tokens to package_body 98.1
   IDENTIFIER                         => reduce 9 tokens to package_body 98.1
   Wisi_EOI                           => reduce 9 tokens to package_body 98.1
   default                            => ERROR

   Minimal_Complete_Action => package_body

State 337:
    129.0:nonterminal_008 <= COMMA IDENTIFIER ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_008 129.0
   COMMA                              => reduce 2 tokens to nonterminal_008 129.0
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_008

State 338:
     76.0:enumeration_type_definition <= LEFT_PAREN IDENTIFIER nonterminal_007_list RIGHT_PAREN ^, SEMICOLON

   SEMICOLON                          => reduce 4 tokens to enumeration_type_definition 76.0
   default                            => ERROR

   Minimal_Complete_Action => enumeration_type_definition

State 339:
    130.1:nonterminal_007_list <= nonterminal_007_list nonterminal_008 ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 2 tokens to nonterminal_007_list 130.1
   COMMA                              => reduce 2 tokens to nonterminal_007_list 130.1
   default                            => ERROR

   Minimal_Complete_Action => nonterminal_007_list recursive

State 340:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 9 tokens to subprogram_body 117.0
   CASE                               => reduce 9 tokens to subprogram_body 117.0
   DECLARE                            => reduce 9 tokens to subprogram_body 117.0
   END                                => reduce 9 tokens to subprogram_body 117.0
   EXIT                               => reduce 9 tokens to subprogram_body 117.0
   FOR                                => reduce 9 tokens to subprogram_body 117.0
   FUNCTION                           => reduce 9 tokens to subprogram_body 117.0
   IF                                 => reduce 9 tokens to subprogram_body 117.0
   LOOP                               => reduce 9 tokens to subprogram_body 117.0
   PACKAGE                            => reduce 9 tokens to subprogram_body 117.0
   PROCEDURE                          => reduce 9 tokens to subprogram_body 117.0
   RETURN                             => reduce 9 tokens to subprogram_body 117.0
   TYPE                               => reduce 9 tokens to subprogram_body 117.0
   IDENTIFIER                         => reduce 9 tokens to subprogram_body 117.0
   Wisi_EOI                           => reduce 9 tokens to subprogram_body 117.0
   default                            => ERROR

   Minimal_Complete_Action => subprogram_body

State 341:
     90.0:if_statement <= IF expression THEN sequence_of_statements nonterminal_019_list ELSE sequence_of_statements END IF SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 10 tokens to if_statement 90.0
   CASE                               => reduce 10 tokens to if_statement 90.0
   DECLARE                            => reduce 10 tokens to if_statement 90.0
   ELSE                               => reduce 10 tokens to if_statement 90.0
   ELSIF                              => reduce 10 tokens to if_statement 90.0
   END                                => reduce 10 tokens to if_statement 90.0
   EXIT                               => reduce 10 tokens to if_statement 90.0
   EXCEPTION                          => reduce 10 tokens to if_statement 90.0
   FOR                                => reduce 10 tokens to if_statement 90.0
   FUNCTION                           => reduce 10 tokens to if_statement 90.0
   IF                                 => reduce 10 tokens to if_statement 90.0
   LOOP                               => reduce 10 tokens to if_statement 90.0
   PACKAGE                            => reduce 10 tokens to if_statement 90.0
   PROCEDURE                          => reduce 10 tokens to if_statement 90.0
   RETURN                             => reduce 10 tokens to if_statement 90.0
   WHEN                               => reduce 10 tokens to if_statement 90.0
   IDENTIFIER                         => reduce 10 tokens to if_statement 90.0
   Wisi_EOI                           => reduce 10 tokens to if_statement 90.0
   default                            => ERROR

   Minimal_Complete_Action => if_statement

State 342:
     98.2:package_body <= PACKAGE BODY name IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 10 tokens to package_body 98.2
   CASE                               => reduce 10 tokens to package_body 98.2
   DECLARE                            => reduce 10 tokens to package_body 98.2
   END                                => reduce 10 tokens to package_body 98.2
   EXIT                               => reduce 10 tokens to package_body 98.2
   FOR                                => reduce 10 tokens to package_body 98.2
   FUNCTION                           => reduce 10 tokens to package_body 98.2
   IF                                 => reduce 10 tokens to package_body 98.2
   LOOP                               => reduce 10 tokens to package_body 98.2
   PACKAGE                            => reduce 10 tokens to package_body 98.2
   PROCEDURE                          => reduce 10 tokens to package_body 98.2
   RETURN                             => reduce 10 tokens to package_body 98.2
   TYPE                               => reduce 10 tokens to package_body 98.2
   IDENTIFIER                         => reduce 10 tokens to package_body 98.2
   Wisi_EOI                           => reduce 10 tokens to package_body 98.2
   default                            => ERROR

   Minimal_Complete_Action => package_body

State 343:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 344
   default                            => ERROR

   Minimal_Complete_Action => SEMICOLON

State 344:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 11 tokens to package_body 98.0
   CASE                               => reduce 11 tokens to package_body 98.0
   DECLARE                            => reduce 11 tokens to package_body 98.0
   END                                => reduce 11 tokens to package_body 98.0
   EXIT                               => reduce 11 tokens to package_body 98.0
   FOR                                => reduce 11 tokens to package_body 98.0
   FUNCTION                           => reduce 11 tokens to package_body 98.0
   IF                                 => reduce 11 tokens to package_body 98.0
   LOOP                               => reduce 11 tokens to package_body 98.0
   PACKAGE                            => reduce 11 tokens to package_body 98.0
   PROCEDURE                          => reduce 11 tokens to package_body 98.0
   RETURN                             => reduce 11 tokens to package_body 98.0
   TYPE                               => reduce 11 tokens to package_body 98.0
   IDENTIFIER                         => reduce 11 tokens to package_body 98.0
   Wisi_EOI                           => reduce 11 tokens to package_body 98.0
   default                            => ERROR

   Minimal_Complete_Action => package_body

States with conflicts: 64 182 262

 0 accept/reduce conflicts, 1 shift/reduce conflicts, 2 reduce/reduce conflicts

 89 rules, 18 user actions, 19 checks, 345 states
