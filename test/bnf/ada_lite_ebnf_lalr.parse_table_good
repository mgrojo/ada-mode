Tokens:
 0 => WHITESPACE
 1 => NEW_LINE
 2 => COMMENT
 3 => AND
 4 => BEGIN
 5 => BODY
 6 => CASE
 7 => DECLARE
 8 => ELSE
 9 => ELSIF
 10 => END
 11 => EXIT
 12 => EXCEPTION
 13 => FOR
 14 => FUNCTION
 15 => IF
 16 => IN
 17 => IS
 18 => LEFT_PAREN
 19 => LOOP
 20 => NEW
 21 => NOT
 22 => OR
 23 => PACKAGE
 24 => PROCEDURE
 25 => RANGE
 26 => RETURN
 27 => RIGHT_PAREN
 28 => SEPARATE
 29 => THEN
 30 => TYPE
 31 => WHEN
 32 => WITH
 33 => XOR
 34 => AMPERSAND
 35 => COLON
 36 => COLON_EQUAL
 37 => COMMA
 38 => DOT
 39 => DOT_DOT
 40 => EQUAL
 41 => EQUAL_GREATER
 42 => GREATER
 43 => GREATER_EQUAL
 44 => LESS
 45 => LESS_EQUAL
 46 => MINUS
 47 => PLUS
 48 => SEMICOLON
 49 => SLASH
 50 => SLASH_EQUAL
 51 => STAR
 52 => STRING_LITERAL
 53 => NUMERIC_LITERAL
 54 => IDENTIFIER
 55 => Wisi_EOI
 56 => wisitoken_accept
 57 => actual_parameter_part
 58 => aspect_specification
 59 => assignment_statement
 60 => association
 61 => association_list
 62 => binary_adding_operator
 63 => block_label_opt
 64 => block_statement
 65 => body_g
 66 => body_stub
 67 => case_statement
 68 => case_statement_alternative
 69 => compilation_unit
 70 => compilation_unit_list
 71 => compound_statement
 72 => constraint
 73 => declaration
 74 => declarative_part
 75 => discrete_subtype_definition
 76 => enumeration_type_definition
 77 => exception_choice
 78 => exception_handler
 79 => exit_statement
 80 => expression
 81 => extended_return_object_declaration
 82 => extended_return_statement
 83 => factor
 84 => formal_part
 85 => full_type_declaration
 86 => function_specification
 87 => generic_instantiation
 88 => handled_sequence_of_statements
 89 => identifier_opt
 90 => if_statement
 91 => index_constraint
 92 => iteration_scheme
 93 => loop_statement
 94 => multiplying_operator
 95 => name
 96 => name_opt
 97 => object_declaration
 98 => package_body
 99 => parameter_and_result_profile
 100 => parameter_profile
 101 => parameter_specification
 102 => paren_expression
 103 => primary
 104 => procedure_call_statement
 105 => procedure_specification
 106 => proper_body
 107 => range_g
 108 => range_list
 109 => relation
 110 => relational_operator
 111 => selected_component
 112 => sequence_of_statements
 113 => simple_expression
 114 => simple_return_statement
 115 => simple_statement
 116 => statement
 117 => subprogram_body
 118 => subprogram_body_stub
 119 => subprogram_declaration
 120 => subprogram_specification
 121 => subtype_indication
 122 => term
 123 => type_declaration
 124 => type_definition
 125 => unary_adding_operator
 126 => case_statement_alternative_list
 127 => declaration_list
 128 => IDENTIFIER_COMMA_list
 129 => AND_relation_list
 130 => OR_relation_list
 131 => XOR_relation_list
 132 => parameter_specification_SEMICOLON_list
 133 => exception_handler_list
 134 => ELSIF_expression_list
 135 => statement_list
 136 => term_binary_adding_operator_list

Productions:
56.0: wisitoken_accept <= compilation_unit_list Wisi_EOI
57.0: actual_parameter_part <= LEFT_PAREN association_list RIGHT_PAREN ; (2 => Other)
58.0: aspect_specification <= WITH association_list
59.0: assignment_statement <= name COLON_EQUAL expression SEMICOLON
60.0: association <= IDENTIFIER EQUAL_GREATER expression ; (3 => Other_Right)
60.1: association <= expression ; (1 => Other_Left)
61.0: association_list <= association ; (1 => Other_Left)
61.1: association_list <= association_list COMMA association ; (1 => Direct_Left, 3 => Other_Right)
62.0: binary_adding_operator <= PLUS
62.1: binary_adding_operator <= MINUS
62.2: binary_adding_operator <= AMPERSAND
63.0: block_label_opt <= IDENTIFIER COLON
63.1: block_label_opt <=
64.0: block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ; (3 => Other, 5 => Other)
64.1: block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ; (3 => Other)
65.0: body_g <= proper_body ; (1 => Other_Left)
65.1: body_g <= body_stub
66.0: body_stub <= subprogram_body_stub
67.0: case_statement <= CASE expression IS case_statement_alternative_list END CASE SEMICOLON ; (4 => Other)
68.0: case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements ; (4 => Other_Right)
69.0: compilation_unit <= package_body
69.1: compilation_unit <= subprogram_declaration
69.2: compilation_unit <= subprogram_body
69.3: compilation_unit <= generic_instantiation
69.4: compilation_unit <= statement
70.0: compilation_unit_list <= compilation_unit
70.1: compilation_unit_list <= compilation_unit_list compilation_unit ; (1 => Direct_Left)
71.0: compound_statement <= if_statement ; (1 => Other_Left)
71.1: compound_statement <= case_statement ; (1 => Other_Left)
71.2: compound_statement <= loop_statement ; (1 => Other_Left)
71.3: compound_statement <= block_statement ; (1 => Other_Left)
71.4: compound_statement <= extended_return_statement
72.0: constraint <= RANGE range_g
72.1: constraint <= index_constraint ; (1 => Other_Left)
73.0: declaration <= body_g ; (1 => Other_Left)
73.1: declaration <= object_declaration
73.2: declaration <= subprogram_declaration
73.3: declaration <= type_declaration
74.0: declarative_part <= declaration_list ; (1 => Other_Left)
74.1: declarative_part <=
75.0: discrete_subtype_definition <= subtype_indication ; (1 => Other_Left)
75.1: discrete_subtype_definition <= range_g
76.0: enumeration_type_definition <= LEFT_PAREN IDENTIFIER_COMMA_list RIGHT_PAREN
77.0: exception_choice <= name
78.0: exception_handler <= WHEN exception_choice EQUAL_GREATER sequence_of_statements ; (4 => Other_Right)
79.0: exit_statement <= EXIT IDENTIFIER WHEN expression SEMICOLON
79.1: exit_statement <= EXIT IDENTIFIER SEMICOLON
79.2: exit_statement <= EXIT WHEN expression SEMICOLON
79.3: exit_statement <= EXIT SEMICOLON
80.0: expression <= relation ; (1 => Other_Left)
80.1: expression <= relation AND_relation_list ; (1 => Other_Left, 2 => Other_Right)
80.2: expression <= relation OR_relation_list ; (1 => Other_Left, 2 => Other_Right)
80.3: expression <= relation XOR_relation_list ; (1 => Other_Left, 2 => Other_Right)
81.0: extended_return_object_declaration <= IDENTIFIER COLON subtype_indication
82.0: extended_return_statement <= RETURN extended_return_object_declaration SEMICOLON
83.0: factor <= primary ; (1 => Other_Left)
83.1: factor <= NOT primary ; (2 => Other_Right)
84.0: formal_part <= LEFT_PAREN parameter_specification_SEMICOLON_list RIGHT_PAREN
85.0: full_type_declaration <= TYPE IDENTIFIER IS type_definition SEMICOLON
86.0: function_specification <= FUNCTION name parameter_and_result_profile
87.0: generic_instantiation <= PACKAGE name IS NEW name SEMICOLON
87.1: generic_instantiation <= PROCEDURE name IS NEW name SEMICOLON
88.0: handled_sequence_of_statements <= sequence_of_statements EXCEPTION exception_handler_list ; (1 => Other_Left, 3 => Other_Right)
88.1: handled_sequence_of_statements <= sequence_of_statements EXCEPTION ; (1 => Other_Left)
88.2: handled_sequence_of_statements <= sequence_of_statements ; (1 => Other_Left)
89.0: identifier_opt <= IDENTIFIER
89.1: identifier_opt <=
90.0: if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list ELSE sequence_of_statements END IF SEMICOLON ; (4 => Other, 5 => Other, 7 => Other)
90.1: if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list END IF SEMICOLON ; (4 => Other, 5 => Other)
90.2: if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON ; (4 => Other, 6 => Other)
90.3: if_statement <= IF expression THEN sequence_of_statements END IF SEMICOLON ; (4 => Other)
91.0: index_constraint <= LEFT_PAREN discrete_subtype_definition RIGHT_PAREN ; (2 => Other)
92.0: iteration_scheme <= FOR IDENTIFIER IN discrete_subtype_definition
93.0: loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ; (3 => Other)
93.1: loop_statement <= LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ; (2 => Other)
94.0: multiplying_operator <= STAR
94.1: multiplying_operator <= SLASH
95.0: name <= name LEFT_PAREN range_list RIGHT_PAREN ; (1 => Direct_Left, 3 => Other)
95.1: name <= name actual_parameter_part ; (1 => Direct_Left, 2 => Other_Right)
95.2: name <= IDENTIFIER
95.3: name <= selected_component ; (1 => Other_Left)
96.0: name_opt <= name
96.1: name_opt <=
97.0: object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression SEMICOLON
97.1: object_declaration <= IDENTIFIER COLON subtype_indication SEMICOLON
98.0: package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ; (6 => Other, 8 => Other)
98.1: package_body <= PACKAGE BODY name aspect_specification IS declarative_part END name_opt SEMICOLON ; (6 => Other)
98.2: package_body <= PACKAGE BODY name IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ; (5 => Other, 7 => Other)
98.3: package_body <= PACKAGE BODY name IS declarative_part END name_opt SEMICOLON ; (5 => Other)
99.0: parameter_and_result_profile <= formal_part RETURN IDENTIFIER
99.1: parameter_and_result_profile <= RETURN IDENTIFIER
100.0: parameter_profile <= formal_part
100.1: parameter_profile <=
101.0: parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL expression
101.1: parameter_specification <= IDENTIFIER COLON IDENTIFIER
102.0: paren_expression <= LEFT_PAREN expression RIGHT_PAREN ; (2 => Other)
103.0: primary <= NUMERIC_LITERAL
103.1: primary <= STRING_LITERAL
103.2: primary <= name ; (1 => Other_Left)
103.3: primary <= paren_expression ; (1 => Other_Left)
104.0: procedure_call_statement <= name SEMICOLON
105.0: procedure_specification <= PROCEDURE name parameter_profile
106.0: proper_body <= package_body ; (1 => Other_Left)
106.1: proper_body <= subprogram_body ; (1 => Other_Left)
107.0: range_g <= simple_expression DOT_DOT simple_expression ; (1 => Other_Left, 3 => Other_Right)
108.0: range_list <= range_list COMMA range_g ; (1 => Direct_Left, 3 => Other_Right)
108.1: range_list <= range_g ; (1 => Other_Left)
109.0: relation <= simple_expression relational_operator simple_expression ; (1 => Other_Left, 3 => Other_Right)
109.1: relation <= simple_expression ; (1 => Other_Left)
110.0: relational_operator <= EQUAL
110.1: relational_operator <= SLASH_EQUAL
110.2: relational_operator <= LESS
110.3: relational_operator <= LESS_EQUAL
110.4: relational_operator <= GREATER
110.5: relational_operator <= GREATER_EQUAL
111.0: selected_component <= name DOT IDENTIFIER ; (1 => Other_Left)
112.0: sequence_of_statements <= statement_list ; (1 => Other_Left)
112.1: sequence_of_statements <=
113.0: simple_expression <= unary_adding_operator term_binary_adding_operator_list ; (2 => Other_Right)
113.1: simple_expression <= term_binary_adding_operator_list ; (1 => Other_Left)
114.0: simple_return_statement <= RETURN expression SEMICOLON
115.0: simple_statement <= assignment_statement
115.1: simple_statement <= exit_statement
115.2: simple_statement <= procedure_call_statement
115.3: simple_statement <= simple_return_statement
116.0: statement <= simple_statement
116.1: statement <= compound_statement ; (1 => Other_Left)
117.0: subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ; (4 => Other, 6 => Other)
117.1: subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ; (3 => Other, 5 => Other)
118.0: subprogram_body_stub <= subprogram_specification IS SEPARATE SEMICOLON
119.0: subprogram_declaration <= subprogram_specification SEMICOLON
120.0: subprogram_specification <= procedure_specification
120.1: subprogram_specification <= function_specification
121.0: subtype_indication <= name constraint ; (2 => Other_Right)
121.1: subtype_indication <= name
122.0: term <= factor ; (1 => Other_Left)
122.1: term <= term multiplying_operator factor ; (1 => Direct_Left, 3 => Other_Right)
123.0: type_declaration <= full_type_declaration
124.0: type_definition <= enumeration_type_definition
125.0: unary_adding_operator <= PLUS
125.1: unary_adding_operator <= MINUS
126.0: case_statement_alternative_list <= case_statement_alternative ; (1 => Other_Left)
126.1: case_statement_alternative_list <= case_statement_alternative_list case_statement_alternative ; (1 => Direct_Left, 2 => Other_Right)
127.0: declaration_list <= declaration ; (1 => Other_Left)
127.1: declaration_list <= declaration_list declaration ; (1 => Direct_Left, 2 => Other_Right)
128.0: IDENTIFIER_COMMA_list <= IDENTIFIER
128.1: IDENTIFIER_COMMA_list <= IDENTIFIER_COMMA_list COMMA IDENTIFIER ; (1 => Direct_Left)
129.0: AND_relation_list <= AND relation ; (2 => Other_Right)
129.1: AND_relation_list <= AND_relation_list AND relation ; (1 => Direct_Left, 3 => Other_Right)
130.0: OR_relation_list <= OR relation ; (2 => Other_Right)
130.1: OR_relation_list <= OR_relation_list OR relation ; (1 => Direct_Left, 3 => Other_Right)
131.0: XOR_relation_list <= XOR relation ; (2 => Other_Right)
131.1: XOR_relation_list <= XOR_relation_list XOR relation ; (1 => Direct_Left, 3 => Other_Right)
132.0: parameter_specification_SEMICOLON_list <= parameter_specification
132.1: parameter_specification_SEMICOLON_list <= parameter_specification_SEMICOLON_list SEMICOLON parameter_specification ; (1 => Direct_Left)
133.0: exception_handler_list <= exception_handler ; (1 => Other_Left)
133.1: exception_handler_list <= exception_handler_list exception_handler ; (1 => Direct_Left, 2 => Other_Right)
134.0: ELSIF_expression_list <= ELSIF expression THEN sequence_of_statements ; (4 => Other_Right)
134.1: ELSIF_expression_list <= ELSIF_expression_list ELSIF expression THEN sequence_of_statements ; (1 => Direct_Left, 5 => Other_Right)
135.0: statement_list <= statement ; (1 => Other_Left)
135.1: statement_list <= statement_list statement ; (1 => Direct_Left, 2 => Other_Right)
136.0: term_binary_adding_operator_list <= term ; (1 => Other_Left)
136.1: term_binary_adding_operator_list <= term_binary_adding_operator_list binary_adding_operator term ; (1 => Direct_Left, 3 => Other_Right)

Recursions:
1 => (57 (0) -> 61 (0, 1) -> 60 (0, 1) -> 80 (0, 1, 2, 3) -> 109 (0, 0, 1) -> 113 (0, 1) -> 136 (0, 1) -> 122 (0, 1) -> 83 (0, 1) -> 103 (2) -> 95 (1) -> )
2 => (57 (0) -> 61 (0, 1) -> 60 (0, 1) -> 80 (1) -> 129 (0, 1) -> 109 (0, 0, 1) -> 113 (0, 1) -> 136 (0, 1) -> 122 (0, 1) -> 83 (0, 1) -> 103 (2) -> 95 (1) -> )
3 => (57 (0) -> 61 (0, 1) -> 60 (0, 1) -> 80 (2) -> 130 (0, 1) -> 109 (0, 0, 1) -> 113 (0, 1) -> 136 (0, 1) -> 122 (0, 1) -> 83 (0, 1) -> 103 (2) -> 95 (1) -> )
4 => (57 (0) -> 61 (0, 1) -> 60 (0, 1) -> 80 (3) -> 131 (0, 1) -> 109 (0, 0, 1) -> 113 (0, 1) -> 136 (0, 1) -> 122 (0, 1) -> 83 (0, 1) -> 103 (2) -> 95 (1) -> )
5 => (61 (1) -> )
6 => (64 (0) -> 74 (0) -> 127 (0, 1) -> 73 (0) -> 65 (0) -> 106 (0) -> 98 (0, 2) -> 88 (0, 1, 2) -> 112 (0) -> 135 (0, 1) -> 116 (1) -> 71 (3) -> )
7 => (64 (0) -> 74 (0) -> 127 (0, 1) -> 73 (0) -> 65 (0) -> 106 (0) -> 98 (0, 2) -> 88 (0) -> 133 (0, 1) -> 78 (0) -> 112 (0) -> 135 (0, 1) -> 116 (1) -> 71 (3) -> )
8 => (64 (0) -> 74 (0) -> 127 (0, 1) -> 73 (0) -> 65 (0) -> 106 (1) -> 117 (0, 1) -> 88 (0, 1, 2) -> 112 (0) -> 135 (0, 1) -> 116 (1) -> 71 (3) -> )
9 => (64 (0) -> 74 (0) -> 127 (0, 1) -> 73 (0) -> 65 (0) -> 106 (1) -> 117 (0, 1) -> 88 (0) -> 133 (0, 1) -> 78 (0) -> 112 (0) -> 135 (0, 1) -> 116 (1) -> 71 (3) -> )
10 => (64 (0, 1) -> 88 (0, 1, 2) -> 112 (0) -> 135 (0, 1) -> 116 (1) -> 71 (3) -> )
11 => (64 (0, 1) -> 88 (0) -> 133 (0, 1) -> 78 (0) -> 112 (0) -> 135 (0, 1) -> 116 (1) -> 71 (3) -> )
12 => (65 (0) -> 106 (0) -> 98 (0, 1, 2, 3) -> 74 (0) -> 127 (0, 1) -> 73 (0) -> )
13 => (65 (0) -> 106 (1) -> 117 (0, 1) -> 74 (0) -> 127 (0, 1) -> 73 (0) -> )
14 => (67 (0) -> 126 (0, 1) -> 68 (0) -> 112 (0) -> 135 (0, 1) -> 116 (1) -> 71 (1) -> )
15 => (70 (1) -> )
16 => (71 (0) -> 90 (0, 0, 1, 2, 2, 3) -> 112 (0) -> 135 (0, 1) -> 116 (1) -> )
17 => (71 (0) -> 90 (0, 1) -> 134 (0, 1) -> 112 (0) -> 135 (0, 1) -> 116 (1) -> )
18 => (71 (2) -> 93 (0, 1) -> 112 (0) -> 135 (0, 1) -> 116 (1) -> )
19 => (72 (1) -> 91 (0) -> 75 (0) -> 121 (0) -> )
20 => (80 (0, 1, 2, 3) -> 109 (0, 0, 1) -> 113 (0, 1) -> 136 (0, 1) -> 122 (0, 1) -> 83 (0, 1) -> 103 (3) -> 102 (0) -> )
21 => (80 (1) -> 129 (0, 1) -> 109 (0, 0, 1) -> 113 (0, 1) -> 136 (0, 1) -> 122 (0, 1) -> 83 (0, 1) -> 103 (3) -> 102 (0) -> )
22 => (80 (2) -> 130 (0, 1) -> 109 (0, 0, 1) -> 113 (0, 1) -> 136 (0, 1) -> 122 (0, 1) -> 83 (0, 1) -> 103 (3) -> 102 (0) -> )
23 => (80 (3) -> 131 (0, 1) -> 109 (0, 0, 1) -> 113 (0, 1) -> 136 (0, 1) -> 122 (0, 1) -> 83 (0, 1) -> 103 (3) -> 102 (0) -> )
24 => (83 (0, 1) -> 103 (2) -> 95 (0) -> 108 (0, 1) -> 107 (0, 0) -> 113 (0, 1) -> 136 (0, 1) -> 122 (0, 1) -> )
25 => (95 (0, 1) -> )
26 => (95 (3) -> 111 (0) -> )
27 => (108 (0) -> )
28 => (122 (1) -> )
29 => (126 (1) -> )
30 => (127 (1) -> )
31 => (128 (1) -> )
32 => (129 (1) -> )
33 => (130 (1) -> )
34 => (131 (1) -> )
35 => (132 (1) -> )
36 => (133 (1) -> )
37 => (134 (1) -> )
38 => (135 (1) -> )
39 => (136 (1) -> )

McKenzie:
(Insert =>
 AND             => 4,
 BEGIN           => 3,
 BODY            => 4,
 CASE            => 3,
 DECLARE         => 3,
 ELSE            => 3,
 ELSIF           => 3,
 END             => 1,
 EXIT            => 3,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 3,
 IF              => 2,
 IN              => 4,
 IS              => 3,
 LEFT_PAREN      => 4,
 LOOP            => 2,
 NEW             => 3,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 3,
 RANGE           => 4,
 RETURN          => 3,
 RIGHT_PAREN     => 3,
 SEPARATE        => 4,
 THEN            => 3,
 TYPE            => 4,
 WHEN            => 3,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 1,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 4,
 NUMERIC_LITERAL => 4,
 IDENTIFIER      => 3,
 Wisi_EOI        => 4)
(Delete =>
 AND             => 4,
 BEGIN           => 1,
 BODY            => 4,
 CASE            => 4,
 DECLARE         => 4,
 ELSE            => 4,
 ELSIF           => 4,
 END             => 1,
 EXIT            => 4,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 4,
 IF              => 4,
 IN              => 4,
 IS              => 4,
 LEFT_PAREN      => 4,
 LOOP            => 4,
 NEW             => 4,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 4,
 RANGE           => 4,
 RETURN          => 4,
 RIGHT_PAREN     => 4,
 SEPARATE        => 4,
 THEN            => 4,
 TYPE            => 4,
 WHEN            => 4,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 2,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 2,
 NUMERIC_LITERAL => 4,
 IDENTIFIER      => 4,
 Wisi_EOI        => 4)
(Push_Back =>
 AND             => 4,
 BEGIN           => 1,
 BODY            => 4,
 CASE            => 4,
 DECLARE         => 4,
 ELSE            => 4,
 ELSIF           => 4,
 END             => 1,
 EXIT            => 4,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 4,
 IF              => 4,
 IN              => 4,
 IS              => 4,
 LEFT_PAREN      => 4,
 LOOP            => 4,
 NEW             => 4,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 4,
 RANGE           => 4,
 RETURN          => 4,
 RIGHT_PAREN     => 4,
 SEPARATE        => 4,
 THEN            => 4,
 TYPE            => 4,
 WHEN            => 4,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 4,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 4,
 NUMERIC_LITERAL => 4,
 IDENTIFIER      => 4,
 Wisi_EOI        => 4,
 wisitoken_accept                       => 4,
 actual_parameter_part                  => 4,
 aspect_specification                   => 4,
 assignment_statement                   => 4,
 association                            => 4,
 association_list                       => 4,
 binary_adding_operator                 => 4,
 block_label_opt                        => 4,
 block_statement                        => 4,
 body_g                                 => 4,
 body_stub                              => 4,
 case_statement                         => 4,
 case_statement_alternative             => 4,
 compilation_unit                       => 4,
 compilation_unit_list                  => 4,
 compound_statement                     => 4,
 constraint                             => 4,
 declaration                            => 4,
 declarative_part                       => 1,
 discrete_subtype_definition            => 4,
 enumeration_type_definition            => 4,
 exception_choice                       => 4,
 exception_handler                      => 4,
 exit_statement                         => 4,
 expression                             => 4,
 extended_return_object_declaration     => 4,
 extended_return_statement              => 4,
 factor                                 => 4,
 formal_part                            => 4,
 full_type_declaration                  => 4,
 function_specification                 => 4,
 generic_instantiation                  => 4,
 handled_sequence_of_statements         => 4,
 identifier_opt                         => 4,
 if_statement                           => 4,
 index_constraint                       => 4,
 iteration_scheme                       => 4,
 loop_statement                         => 4,
 multiplying_operator                   => 4,
 name                                   => 4,
 name_opt                               => 4,
 object_declaration                     => 4,
 package_body                           => 4,
 parameter_and_result_profile           => 4,
 parameter_profile                      => 4,
 parameter_specification                => 4,
 paren_expression                       => 4,
 primary                                => 4,
 procedure_call_statement               => 4,
 procedure_specification                => 4,
 proper_body                            => 4,
 range_g                                => 4,
 range_list                             => 4,
 relation                               => 4,
 relational_operator                    => 4,
 selected_component                     => 4,
 sequence_of_statements                 => 4,
 simple_expression                      => 4,
 simple_return_statement                => 4,
 simple_statement                       => 4,
 statement                              => 4,
 subprogram_body                        => 4,
 subprogram_body_stub                   => 4,
 subprogram_declaration                 => 4,
 subprogram_specification               => 4,
 subtype_indication                     => 4,
 term                                   => 4,
 type_declaration                       => 4,
 type_definition                        => 4,
 unary_adding_operator                  => 4,
 case_statement_alternative_list        => 4,
 declaration_list                       => 4,
 IDENTIFIER_COMMA_list                  => 4,
 AND_relation_list                      => 4,
 OR_relation_list                       => 4,
 XOR_relation_list                      => 4,
 parameter_specification_SEMICOLON_list => 4,
 exception_handler_list                 => 4,
 ELSIF_expression_list                  => 4,
 statement_list                         => 4,
 term_binary_adding_operator_list       => 4)
(Undo_Reduce =>
 wisitoken_accept                       => 4,
 actual_parameter_part                  => 4,
 aspect_specification                   => 4,
 assignment_statement                   => 4,
 association                            => 4,
 association_list                       => 4,
 binary_adding_operator                 => 4,
 block_label_opt                        => 4,
 block_statement                        => 4,
 body_g                                 => 4,
 body_stub                              => 4,
 case_statement                         => 4,
 case_statement_alternative             => 4,
 compilation_unit                       => 4,
 compilation_unit_list                  => 4,
 compound_statement                     => 4,
 constraint                             => 4,
 declaration                            => 4,
 declarative_part                       => 4,
 discrete_subtype_definition            => 4,
 enumeration_type_definition            => 4,
 exception_choice                       => 4,
 exception_handler                      => 4,
 exit_statement                         => 4,
 expression                             => 4,
 extended_return_object_declaration     => 4,
 extended_return_statement              => 4,
 factor                                 => 4,
 formal_part                            => 4,
 full_type_declaration                  => 4,
 function_specification                 => 4,
 generic_instantiation                  => 4,
 handled_sequence_of_statements         => 4,
 identifier_opt                         => 4,
 if_statement                           => 4,
 index_constraint                       => 4,
 iteration_scheme                       => 4,
 loop_statement                         => 4,
 multiplying_operator                   => 4,
 name                                   => 4,
 name_opt                               => 4,
 object_declaration                     => 4,
 package_body                           => 4,
 parameter_and_result_profile           => 4,
 parameter_profile                      => 4,
 parameter_specification                => 4,
 paren_expression                       => 4,
 primary                                => 4,
 procedure_call_statement               => 4,
 procedure_specification                => 4,
 proper_body                            => 4,
 range_g                                => 4,
 range_list                             => 4,
 relation                               => 4,
 relational_operator                    => 4,
 selected_component                     => 4,
 sequence_of_statements                 => 4,
 simple_expression                      => 4,
 simple_return_statement                => 4,
 simple_statement                       => 4,
 statement                              => 4,
 subprogram_body                        => 4,
 subprogram_body_stub                   => 4,
 subprogram_declaration                 => 4,
 subprogram_specification               => 4,
 subtype_indication                     => 4,
 term                                   => 4,
 type_declaration                       => 4,
 type_definition                        => 4,
 unary_adding_operator                  => 4,
 case_statement_alternative_list        => 4,
 declaration_list                       => 4,
 IDENTIFIER_COMMA_list                  => 4,
 AND_relation_list                      => 4,
 OR_relation_list                       => 4,
 XOR_relation_list                      => 4,
 parameter_specification_SEMICOLON_list => 4,
 exception_handler_list                 => 4,
 ELSIF_expression_list                  => 4,
 statement_list                         => 4,
 term_binary_adding_operator_list       => 4)
Minimal_Complete_Cost_Delta => -1
Fast_Forward      =>  0
Matching_Begin    =>  0
Ignore_Check_Fail => 4
Task_Count        => 0
Check_Limit       => 3
Check_Delta_Limit => 2147483647
Enqueue_Limit     => 2147483647

LALR Parse Table:
State 0:
     56.0:wisitoken_accept <= ^ compilation_unit_list Wisi_EOI

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   EXIT                                   => shift and goto state 2 79.0
   FOR                                    => shift and goto state 3 92.0
   FUNCTION                               => shift and goto state 4 86.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   PACKAGE                                => shift and goto state 7 87.0
   PROCEDURE                              => shift and goto state 8 87.1
   RETURN                                 => shift and goto state 9 82.0
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compilation_unit                       goto state 15
   compilation_unit_list                  goto state 16
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   function_specification                 goto state 20
   generic_instantiation                  goto state 21
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   package_body                           goto state 26
   procedure_call_statement               goto state 27
   procedure_specification                goto state 28
   selected_component                     goto state 29
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 32
   subprogram_body                        goto state 33
   subprogram_declaration                 goto state 34
   subprogram_specification               goto state 35

   Minimal_Complete_Action => 

State 1:
     67.0:case_statement <= CASE ^ expression IS case_statement_alternative_list END CASE SEMICOLON

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   expression                             goto state 43
   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 2:
     79.0:exit_statement <= EXIT ^ IDENTIFIER WHEN expression SEMICOLON
     79.1:exit_statement <= EXIT ^ IDENTIFIER SEMICOLON
     79.2:exit_statement <= EXIT ^ WHEN expression SEMICOLON
     79.3:exit_statement <= EXIT ^ SEMICOLON

   WHEN                                   => shift and goto state 53 79.2
   SEMICOLON                              => shift and goto state 54 79.3
   IDENTIFIER                             => shift and goto state 55 79.0
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 79.3

State 3:
     92.0:iteration_scheme <= FOR ^ IDENTIFIER IN discrete_subtype_definition

   IDENTIFIER                             => shift and goto state 56 92.0
   default                                => ERROR

   Minimal_Complete_Action => IDENTIFIER 92.0

State 4:
     86.0:function_specification <= FUNCTION ^ name parameter_and_result_profile

   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   name                                   goto state 57
   selected_component                     goto state 29

   Minimal_Complete_Action => IDENTIFIER 95.2

State 5:
     90.0:if_statement <= IF ^ expression THEN sequence_of_statements ELSIF_expression_list ELSE sequence_of_statements END IF SEMICOLON
     90.1:if_statement <= IF ^ expression THEN sequence_of_statements ELSIF_expression_list END IF SEMICOLON
     90.2:if_statement <= IF ^ expression THEN sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON
     90.3:if_statement <= IF ^ expression THEN sequence_of_statements END IF SEMICOLON

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   expression                             goto state 58
   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 6:
     93.1:loop_statement <= LOOP ^ sequence_of_statements END LOOP identifier_opt SEMICOLON

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   END                                    => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                                   => shift and goto state 2 79.0
   FOR                                    => shift and goto state 3 92.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   RETURN                                 => shift and goto state 9 82.0
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   procedure_call_statement               goto state 27
   selected_component                     goto state 29
   sequence_of_statements                 goto state 59
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 60
   statement_list                         goto state 61

   Minimal_Complete_Action => sequence_of_statements 112.1

State 7:
     87.0:generic_instantiation <= PACKAGE ^ name IS NEW name SEMICOLON
     98.0:package_body <= PACKAGE ^ BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     98.1:package_body <= PACKAGE ^ BODY name aspect_specification IS declarative_part END name_opt SEMICOLON
     98.2:package_body <= PACKAGE ^ BODY name IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     98.3:package_body <= PACKAGE ^ BODY name IS declarative_part END name_opt SEMICOLON

   BODY                                   => shift and goto state 62 98.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   name                                   goto state 63
   selected_component                     goto state 29

   Minimal_Complete_Action => (IDENTIFIER 95.2, BODY 98.0)

State 8:
     87.1:generic_instantiation <= PROCEDURE ^ name IS NEW name SEMICOLON
    105.0:procedure_specification <= PROCEDURE ^ name parameter_profile

   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   name                                   goto state 64
   selected_component                     goto state 29

   Minimal_Complete_Action => IDENTIFIER 95.2

State 9:
     82.0:extended_return_statement <= RETURN ^ extended_return_object_declaration SEMICOLON
    114.0:simple_return_statement <= RETURN ^ expression SEMICOLON

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 65 81.0
   default                                => ERROR

   expression                             goto state 66
   extended_return_object_declaration     goto state 67
   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 10:
     63.0:block_label_opt <= IDENTIFIER ^ COLON
     95.2:name <= IDENTIFIER ^

   LEFT_PAREN                             => reduce 1 tokens to name 95.2
   COLON                                  => shift and goto state 68 63.0
   COLON_EQUAL                            => reduce 1 tokens to name 95.2
   DOT                                    => reduce 1 tokens to name 95.2
   SEMICOLON                              => reduce 1 tokens to name 95.2
   default                                => ERROR

   Minimal_Complete_Action => (COLON 63.0, name 95.2)

State 11:
    115.0:simple_statement <= assignment_statement ^

   BEGIN                                  => reduce 1 tokens to simple_statement 115.0
   CASE                                   => reduce 1 tokens to simple_statement 115.0
   DECLARE                                => reduce 1 tokens to simple_statement 115.0
   ELSE                                   => reduce 1 tokens to simple_statement 115.0
   ELSIF                                  => reduce 1 tokens to simple_statement 115.0
   END                                    => reduce 1 tokens to simple_statement 115.0
   EXIT                                   => reduce 1 tokens to simple_statement 115.0
   EXCEPTION                              => reduce 1 tokens to simple_statement 115.0
   FOR                                    => reduce 1 tokens to simple_statement 115.0
   FUNCTION                               => reduce 1 tokens to simple_statement 115.0
   IF                                     => reduce 1 tokens to simple_statement 115.0
   LOOP                                   => reduce 1 tokens to simple_statement 115.0
   PACKAGE                                => reduce 1 tokens to simple_statement 115.0
   PROCEDURE                              => reduce 1 tokens to simple_statement 115.0
   RETURN                                 => reduce 1 tokens to simple_statement 115.0
   WHEN                                   => reduce 1 tokens to simple_statement 115.0
   IDENTIFIER                             => reduce 1 tokens to simple_statement 115.0
   Wisi_EOI                               => reduce 1 tokens to simple_statement 115.0
   default                                => ERROR

   Minimal_Complete_Action => simple_statement 115.0

State 12:
     64.0:block_statement <= block_label_opt ^ DECLARE declarative_part BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON
     64.1:block_statement <= block_label_opt ^ BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON

   BEGIN                                  => shift and goto state 69 64.1
   DECLARE                                => shift and goto state 70 64.0
   default                                => ERROR

   Minimal_Complete_Action => BEGIN 64.1

State 13:
     71.3:compound_statement <= block_statement ^

   BEGIN                                  => reduce 1 tokens to compound_statement 71.3
   CASE                                   => reduce 1 tokens to compound_statement 71.3
   DECLARE                                => reduce 1 tokens to compound_statement 71.3
   ELSE                                   => reduce 1 tokens to compound_statement 71.3
   ELSIF                                  => reduce 1 tokens to compound_statement 71.3
   END                                    => reduce 1 tokens to compound_statement 71.3
   EXIT                                   => reduce 1 tokens to compound_statement 71.3
   EXCEPTION                              => reduce 1 tokens to compound_statement 71.3
   FOR                                    => reduce 1 tokens to compound_statement 71.3
   FUNCTION                               => reduce 1 tokens to compound_statement 71.3
   IF                                     => reduce 1 tokens to compound_statement 71.3
   LOOP                                   => reduce 1 tokens to compound_statement 71.3
   PACKAGE                                => reduce 1 tokens to compound_statement 71.3
   PROCEDURE                              => reduce 1 tokens to compound_statement 71.3
   RETURN                                 => reduce 1 tokens to compound_statement 71.3
   WHEN                                   => reduce 1 tokens to compound_statement 71.3
   IDENTIFIER                             => reduce 1 tokens to compound_statement 71.3
   Wisi_EOI                               => reduce 1 tokens to compound_statement 71.3
   default                                => ERROR

   Minimal_Complete_Action => compound_statement 71.3

State 14:
     71.1:compound_statement <= case_statement ^

   BEGIN                                  => reduce 1 tokens to compound_statement 71.1
   CASE                                   => reduce 1 tokens to compound_statement 71.1
   DECLARE                                => reduce 1 tokens to compound_statement 71.1
   ELSE                                   => reduce 1 tokens to compound_statement 71.1
   ELSIF                                  => reduce 1 tokens to compound_statement 71.1
   END                                    => reduce 1 tokens to compound_statement 71.1
   EXIT                                   => reduce 1 tokens to compound_statement 71.1
   EXCEPTION                              => reduce 1 tokens to compound_statement 71.1
   FOR                                    => reduce 1 tokens to compound_statement 71.1
   FUNCTION                               => reduce 1 tokens to compound_statement 71.1
   IF                                     => reduce 1 tokens to compound_statement 71.1
   LOOP                                   => reduce 1 tokens to compound_statement 71.1
   PACKAGE                                => reduce 1 tokens to compound_statement 71.1
   PROCEDURE                              => reduce 1 tokens to compound_statement 71.1
   RETURN                                 => reduce 1 tokens to compound_statement 71.1
   WHEN                                   => reduce 1 tokens to compound_statement 71.1
   IDENTIFIER                             => reduce 1 tokens to compound_statement 71.1
   Wisi_EOI                               => reduce 1 tokens to compound_statement 71.1
   default                                => ERROR

   Minimal_Complete_Action => compound_statement 71.1

State 15:
     70.0:compilation_unit_list <= compilation_unit ^

   BEGIN                                  => reduce 1 tokens to compilation_unit_list 70.0
   CASE                                   => reduce 1 tokens to compilation_unit_list 70.0
   DECLARE                                => reduce 1 tokens to compilation_unit_list 70.0
   EXIT                                   => reduce 1 tokens to compilation_unit_list 70.0
   FOR                                    => reduce 1 tokens to compilation_unit_list 70.0
   FUNCTION                               => reduce 1 tokens to compilation_unit_list 70.0
   IF                                     => reduce 1 tokens to compilation_unit_list 70.0
   LOOP                                   => reduce 1 tokens to compilation_unit_list 70.0
   PACKAGE                                => reduce 1 tokens to compilation_unit_list 70.0
   PROCEDURE                              => reduce 1 tokens to compilation_unit_list 70.0
   RETURN                                 => reduce 1 tokens to compilation_unit_list 70.0
   IDENTIFIER                             => reduce 1 tokens to compilation_unit_list 70.0
   Wisi_EOI                               => reduce 1 tokens to compilation_unit_list 70.0
   default                                => ERROR

   Minimal_Complete_Action => compilation_unit_list 70.0

State 16:
     56.0:wisitoken_accept <= compilation_unit_list ^ Wisi_EOI
     70.1:compilation_unit_list <= compilation_unit_list ^ compilation_unit

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   EXIT                                   => shift and goto state 2 79.0
   FOR                                    => shift and goto state 3 92.0
   FUNCTION                               => shift and goto state 4 86.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   PACKAGE                                => shift and goto state 7 87.0
   PROCEDURE                              => shift and goto state 8 87.1
   RETURN                                 => shift and goto state 9 82.0
   IDENTIFIER                             => shift and goto state 10 63.0
   Wisi_EOI                               => accept it 56.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compilation_unit                       goto state 71
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   function_specification                 goto state 20
   generic_instantiation                  goto state 21
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   package_body                           goto state 26
   procedure_call_statement               goto state 27
   procedure_specification                goto state 28
   selected_component                     goto state 29
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 32
   subprogram_body                        goto state 33
   subprogram_declaration                 goto state 34
   subprogram_specification               goto state 35

   Minimal_Complete_Action => 

State 17:
    116.1:statement <= compound_statement ^

   BEGIN                                  => reduce 1 tokens to statement 116.1
   CASE                                   => reduce 1 tokens to statement 116.1
   DECLARE                                => reduce 1 tokens to statement 116.1
   ELSE                                   => reduce 1 tokens to statement 116.1
   ELSIF                                  => reduce 1 tokens to statement 116.1
   END                                    => reduce 1 tokens to statement 116.1
   EXIT                                   => reduce 1 tokens to statement 116.1
   EXCEPTION                              => reduce 1 tokens to statement 116.1
   FOR                                    => reduce 1 tokens to statement 116.1
   FUNCTION                               => reduce 1 tokens to statement 116.1
   IF                                     => reduce 1 tokens to statement 116.1
   LOOP                                   => reduce 1 tokens to statement 116.1
   PACKAGE                                => reduce 1 tokens to statement 116.1
   PROCEDURE                              => reduce 1 tokens to statement 116.1
   RETURN                                 => reduce 1 tokens to statement 116.1
   WHEN                                   => reduce 1 tokens to statement 116.1
   IDENTIFIER                             => reduce 1 tokens to statement 116.1
   Wisi_EOI                               => reduce 1 tokens to statement 116.1
   default                                => ERROR

   Minimal_Complete_Action => statement 116.1

State 18:
    115.1:simple_statement <= exit_statement ^

   BEGIN                                  => reduce 1 tokens to simple_statement 115.1
   CASE                                   => reduce 1 tokens to simple_statement 115.1
   DECLARE                                => reduce 1 tokens to simple_statement 115.1
   ELSE                                   => reduce 1 tokens to simple_statement 115.1
   ELSIF                                  => reduce 1 tokens to simple_statement 115.1
   END                                    => reduce 1 tokens to simple_statement 115.1
   EXIT                                   => reduce 1 tokens to simple_statement 115.1
   EXCEPTION                              => reduce 1 tokens to simple_statement 115.1
   FOR                                    => reduce 1 tokens to simple_statement 115.1
   FUNCTION                               => reduce 1 tokens to simple_statement 115.1
   IF                                     => reduce 1 tokens to simple_statement 115.1
   LOOP                                   => reduce 1 tokens to simple_statement 115.1
   PACKAGE                                => reduce 1 tokens to simple_statement 115.1
   PROCEDURE                              => reduce 1 tokens to simple_statement 115.1
   RETURN                                 => reduce 1 tokens to simple_statement 115.1
   WHEN                                   => reduce 1 tokens to simple_statement 115.1
   IDENTIFIER                             => reduce 1 tokens to simple_statement 115.1
   Wisi_EOI                               => reduce 1 tokens to simple_statement 115.1
   default                                => ERROR

   Minimal_Complete_Action => simple_statement 115.1

State 19:
     71.4:compound_statement <= extended_return_statement ^

   BEGIN                                  => reduce 1 tokens to compound_statement 71.4
   CASE                                   => reduce 1 tokens to compound_statement 71.4
   DECLARE                                => reduce 1 tokens to compound_statement 71.4
   ELSE                                   => reduce 1 tokens to compound_statement 71.4
   ELSIF                                  => reduce 1 tokens to compound_statement 71.4
   END                                    => reduce 1 tokens to compound_statement 71.4
   EXIT                                   => reduce 1 tokens to compound_statement 71.4
   EXCEPTION                              => reduce 1 tokens to compound_statement 71.4
   FOR                                    => reduce 1 tokens to compound_statement 71.4
   FUNCTION                               => reduce 1 tokens to compound_statement 71.4
   IF                                     => reduce 1 tokens to compound_statement 71.4
   LOOP                                   => reduce 1 tokens to compound_statement 71.4
   PACKAGE                                => reduce 1 tokens to compound_statement 71.4
   PROCEDURE                              => reduce 1 tokens to compound_statement 71.4
   RETURN                                 => reduce 1 tokens to compound_statement 71.4
   WHEN                                   => reduce 1 tokens to compound_statement 71.4
   IDENTIFIER                             => reduce 1 tokens to compound_statement 71.4
   Wisi_EOI                               => reduce 1 tokens to compound_statement 71.4
   default                                => ERROR

   Minimal_Complete_Action => compound_statement 71.4

State 20:
    120.1:subprogram_specification <= function_specification ^

   IS                                     => reduce 1 tokens to subprogram_specification 120.1
   WITH                                   => reduce 1 tokens to subprogram_specification 120.1
   SEMICOLON                              => reduce 1 tokens to subprogram_specification 120.1
   default                                => ERROR

   Minimal_Complete_Action => subprogram_specification 120.1

State 21:
     69.3:compilation_unit <= generic_instantiation ^

   BEGIN                                  => reduce 1 tokens to compilation_unit 69.3
   CASE                                   => reduce 1 tokens to compilation_unit 69.3
   DECLARE                                => reduce 1 tokens to compilation_unit 69.3
   EXIT                                   => reduce 1 tokens to compilation_unit 69.3
   FOR                                    => reduce 1 tokens to compilation_unit 69.3
   FUNCTION                               => reduce 1 tokens to compilation_unit 69.3
   IF                                     => reduce 1 tokens to compilation_unit 69.3
   LOOP                                   => reduce 1 tokens to compilation_unit 69.3
   PACKAGE                                => reduce 1 tokens to compilation_unit 69.3
   PROCEDURE                              => reduce 1 tokens to compilation_unit 69.3
   RETURN                                 => reduce 1 tokens to compilation_unit 69.3
   IDENTIFIER                             => reduce 1 tokens to compilation_unit 69.3
   Wisi_EOI                               => reduce 1 tokens to compilation_unit 69.3
   default                                => ERROR

   Minimal_Complete_Action => compilation_unit 69.3

State 22:
     71.0:compound_statement <= if_statement ^

   BEGIN                                  => reduce 1 tokens to compound_statement 71.0
   CASE                                   => reduce 1 tokens to compound_statement 71.0
   DECLARE                                => reduce 1 tokens to compound_statement 71.0
   ELSE                                   => reduce 1 tokens to compound_statement 71.0
   ELSIF                                  => reduce 1 tokens to compound_statement 71.0
   END                                    => reduce 1 tokens to compound_statement 71.0
   EXIT                                   => reduce 1 tokens to compound_statement 71.0
   EXCEPTION                              => reduce 1 tokens to compound_statement 71.0
   FOR                                    => reduce 1 tokens to compound_statement 71.0
   FUNCTION                               => reduce 1 tokens to compound_statement 71.0
   IF                                     => reduce 1 tokens to compound_statement 71.0
   LOOP                                   => reduce 1 tokens to compound_statement 71.0
   PACKAGE                                => reduce 1 tokens to compound_statement 71.0
   PROCEDURE                              => reduce 1 tokens to compound_statement 71.0
   RETURN                                 => reduce 1 tokens to compound_statement 71.0
   WHEN                                   => reduce 1 tokens to compound_statement 71.0
   IDENTIFIER                             => reduce 1 tokens to compound_statement 71.0
   Wisi_EOI                               => reduce 1 tokens to compound_statement 71.0
   default                                => ERROR

   Minimal_Complete_Action => compound_statement 71.0

State 23:
     93.0:loop_statement <= iteration_scheme ^ LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON

   LOOP                                   => shift and goto state 72 93.0
   default                                => ERROR

   Minimal_Complete_Action => LOOP 93.0

State 24:
     71.2:compound_statement <= loop_statement ^

   BEGIN                                  => reduce 1 tokens to compound_statement 71.2
   CASE                                   => reduce 1 tokens to compound_statement 71.2
   DECLARE                                => reduce 1 tokens to compound_statement 71.2
   ELSE                                   => reduce 1 tokens to compound_statement 71.2
   ELSIF                                  => reduce 1 tokens to compound_statement 71.2
   END                                    => reduce 1 tokens to compound_statement 71.2
   EXIT                                   => reduce 1 tokens to compound_statement 71.2
   EXCEPTION                              => reduce 1 tokens to compound_statement 71.2
   FOR                                    => reduce 1 tokens to compound_statement 71.2
   FUNCTION                               => reduce 1 tokens to compound_statement 71.2
   IF                                     => reduce 1 tokens to compound_statement 71.2
   LOOP                                   => reduce 1 tokens to compound_statement 71.2
   PACKAGE                                => reduce 1 tokens to compound_statement 71.2
   PROCEDURE                              => reduce 1 tokens to compound_statement 71.2
   RETURN                                 => reduce 1 tokens to compound_statement 71.2
   WHEN                                   => reduce 1 tokens to compound_statement 71.2
   IDENTIFIER                             => reduce 1 tokens to compound_statement 71.2
   Wisi_EOI                               => reduce 1 tokens to compound_statement 71.2
   default                                => ERROR

   Minimal_Complete_Action => compound_statement 71.2

State 25:
     59.0:assignment_statement <= name ^ COLON_EQUAL expression SEMICOLON
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     95.1:name <= name ^ actual_parameter_part
    104.0:procedure_call_statement <= name ^ SEMICOLON
    111.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                             => shift and goto state 73 57.0
   COLON_EQUAL                            => shift and goto state 74 59.0
   DOT                                    => shift and goto state 75 111.0
   SEMICOLON                              => shift and goto state 76 104.0
   default                                => ERROR

   actual_parameter_part                  goto state 77

   Minimal_Complete_Action => SEMICOLON 104.0

State 26:
     69.0:compilation_unit <= package_body ^

   BEGIN                                  => reduce 1 tokens to compilation_unit 69.0
   CASE                                   => reduce 1 tokens to compilation_unit 69.0
   DECLARE                                => reduce 1 tokens to compilation_unit 69.0
   EXIT                                   => reduce 1 tokens to compilation_unit 69.0
   FOR                                    => reduce 1 tokens to compilation_unit 69.0
   FUNCTION                               => reduce 1 tokens to compilation_unit 69.0
   IF                                     => reduce 1 tokens to compilation_unit 69.0
   LOOP                                   => reduce 1 tokens to compilation_unit 69.0
   PACKAGE                                => reduce 1 tokens to compilation_unit 69.0
   PROCEDURE                              => reduce 1 tokens to compilation_unit 69.0
   RETURN                                 => reduce 1 tokens to compilation_unit 69.0
   IDENTIFIER                             => reduce 1 tokens to compilation_unit 69.0
   Wisi_EOI                               => reduce 1 tokens to compilation_unit 69.0
   default                                => ERROR

   Minimal_Complete_Action => compilation_unit 69.0

State 27:
    115.2:simple_statement <= procedure_call_statement ^

   BEGIN                                  => reduce 1 tokens to simple_statement 115.2
   CASE                                   => reduce 1 tokens to simple_statement 115.2
   DECLARE                                => reduce 1 tokens to simple_statement 115.2
   ELSE                                   => reduce 1 tokens to simple_statement 115.2
   ELSIF                                  => reduce 1 tokens to simple_statement 115.2
   END                                    => reduce 1 tokens to simple_statement 115.2
   EXIT                                   => reduce 1 tokens to simple_statement 115.2
   EXCEPTION                              => reduce 1 tokens to simple_statement 115.2
   FOR                                    => reduce 1 tokens to simple_statement 115.2
   FUNCTION                               => reduce 1 tokens to simple_statement 115.2
   IF                                     => reduce 1 tokens to simple_statement 115.2
   LOOP                                   => reduce 1 tokens to simple_statement 115.2
   PACKAGE                                => reduce 1 tokens to simple_statement 115.2
   PROCEDURE                              => reduce 1 tokens to simple_statement 115.2
   RETURN                                 => reduce 1 tokens to simple_statement 115.2
   WHEN                                   => reduce 1 tokens to simple_statement 115.2
   IDENTIFIER                             => reduce 1 tokens to simple_statement 115.2
   Wisi_EOI                               => reduce 1 tokens to simple_statement 115.2
   default                                => ERROR

   Minimal_Complete_Action => simple_statement 115.2

State 28:
    120.0:subprogram_specification <= procedure_specification ^

   IS                                     => reduce 1 tokens to subprogram_specification 120.0
   WITH                                   => reduce 1 tokens to subprogram_specification 120.0
   SEMICOLON                              => reduce 1 tokens to subprogram_specification 120.0
   default                                => ERROR

   Minimal_Complete_Action => subprogram_specification 120.0

State 29:
     95.3:name <= selected_component ^

   AND                                    => reduce 1 tokens to name 95.3
   IS                                     => reduce 1 tokens to name 95.3
   LEFT_PAREN                             => reduce 1 tokens to name 95.3
   LOOP                                   => reduce 1 tokens to name 95.3
   OR                                     => reduce 1 tokens to name 95.3
   RANGE                                  => reduce 1 tokens to name 95.3
   RETURN                                 => reduce 1 tokens to name 95.3
   RIGHT_PAREN                            => reduce 1 tokens to name 95.3
   THEN                                   => reduce 1 tokens to name 95.3
   WITH                                   => reduce 1 tokens to name 95.3
   XOR                                    => reduce 1 tokens to name 95.3
   AMPERSAND                              => reduce 1 tokens to name 95.3
   COLON_EQUAL                            => reduce 1 tokens to name 95.3
   COMMA                                  => reduce 1 tokens to name 95.3
   DOT                                    => reduce 1 tokens to name 95.3
   DOT_DOT                                => reduce 1 tokens to name 95.3
   EQUAL                                  => reduce 1 tokens to name 95.3
   EQUAL_GREATER                          => reduce 1 tokens to name 95.3
   GREATER                                => reduce 1 tokens to name 95.3
   GREATER_EQUAL                          => reduce 1 tokens to name 95.3
   LESS                                   => reduce 1 tokens to name 95.3
   LESS_EQUAL                             => reduce 1 tokens to name 95.3
   MINUS                                  => reduce 1 tokens to name 95.3
   PLUS                                   => reduce 1 tokens to name 95.3
   SEMICOLON                              => reduce 1 tokens to name 95.3
   SLASH                                  => reduce 1 tokens to name 95.3
   SLASH_EQUAL                            => reduce 1 tokens to name 95.3
   STAR                                   => reduce 1 tokens to name 95.3
   default                                => ERROR

   Minimal_Complete_Action => name 95.3

State 30:
    115.3:simple_statement <= simple_return_statement ^

   BEGIN                                  => reduce 1 tokens to simple_statement 115.3
   CASE                                   => reduce 1 tokens to simple_statement 115.3
   DECLARE                                => reduce 1 tokens to simple_statement 115.3
   ELSE                                   => reduce 1 tokens to simple_statement 115.3
   ELSIF                                  => reduce 1 tokens to simple_statement 115.3
   END                                    => reduce 1 tokens to simple_statement 115.3
   EXIT                                   => reduce 1 tokens to simple_statement 115.3
   EXCEPTION                              => reduce 1 tokens to simple_statement 115.3
   FOR                                    => reduce 1 tokens to simple_statement 115.3
   FUNCTION                               => reduce 1 tokens to simple_statement 115.3
   IF                                     => reduce 1 tokens to simple_statement 115.3
   LOOP                                   => reduce 1 tokens to simple_statement 115.3
   PACKAGE                                => reduce 1 tokens to simple_statement 115.3
   PROCEDURE                              => reduce 1 tokens to simple_statement 115.3
   RETURN                                 => reduce 1 tokens to simple_statement 115.3
   WHEN                                   => reduce 1 tokens to simple_statement 115.3
   IDENTIFIER                             => reduce 1 tokens to simple_statement 115.3
   Wisi_EOI                               => reduce 1 tokens to simple_statement 115.3
   default                                => ERROR

   Minimal_Complete_Action => simple_statement 115.3

State 31:
    116.0:statement <= simple_statement ^

   BEGIN                                  => reduce 1 tokens to statement 116.0
   CASE                                   => reduce 1 tokens to statement 116.0
   DECLARE                                => reduce 1 tokens to statement 116.0
   ELSE                                   => reduce 1 tokens to statement 116.0
   ELSIF                                  => reduce 1 tokens to statement 116.0
   END                                    => reduce 1 tokens to statement 116.0
   EXIT                                   => reduce 1 tokens to statement 116.0
   EXCEPTION                              => reduce 1 tokens to statement 116.0
   FOR                                    => reduce 1 tokens to statement 116.0
   FUNCTION                               => reduce 1 tokens to statement 116.0
   IF                                     => reduce 1 tokens to statement 116.0
   LOOP                                   => reduce 1 tokens to statement 116.0
   PACKAGE                                => reduce 1 tokens to statement 116.0
   PROCEDURE                              => reduce 1 tokens to statement 116.0
   RETURN                                 => reduce 1 tokens to statement 116.0
   WHEN                                   => reduce 1 tokens to statement 116.0
   IDENTIFIER                             => reduce 1 tokens to statement 116.0
   Wisi_EOI                               => reduce 1 tokens to statement 116.0
   default                                => ERROR

   Minimal_Complete_Action => statement 116.0

State 32:
     69.4:compilation_unit <= statement ^

   BEGIN                                  => reduce 1 tokens to compilation_unit 69.4
   CASE                                   => reduce 1 tokens to compilation_unit 69.4
   DECLARE                                => reduce 1 tokens to compilation_unit 69.4
   EXIT                                   => reduce 1 tokens to compilation_unit 69.4
   FOR                                    => reduce 1 tokens to compilation_unit 69.4
   FUNCTION                               => reduce 1 tokens to compilation_unit 69.4
   IF                                     => reduce 1 tokens to compilation_unit 69.4
   LOOP                                   => reduce 1 tokens to compilation_unit 69.4
   PACKAGE                                => reduce 1 tokens to compilation_unit 69.4
   PROCEDURE                              => reduce 1 tokens to compilation_unit 69.4
   RETURN                                 => reduce 1 tokens to compilation_unit 69.4
   IDENTIFIER                             => reduce 1 tokens to compilation_unit 69.4
   Wisi_EOI                               => reduce 1 tokens to compilation_unit 69.4
   default                                => ERROR

   Minimal_Complete_Action => compilation_unit 69.4

State 33:
     69.2:compilation_unit <= subprogram_body ^

   BEGIN                                  => reduce 1 tokens to compilation_unit 69.2
   CASE                                   => reduce 1 tokens to compilation_unit 69.2
   DECLARE                                => reduce 1 tokens to compilation_unit 69.2
   EXIT                                   => reduce 1 tokens to compilation_unit 69.2
   FOR                                    => reduce 1 tokens to compilation_unit 69.2
   FUNCTION                               => reduce 1 tokens to compilation_unit 69.2
   IF                                     => reduce 1 tokens to compilation_unit 69.2
   LOOP                                   => reduce 1 tokens to compilation_unit 69.2
   PACKAGE                                => reduce 1 tokens to compilation_unit 69.2
   PROCEDURE                              => reduce 1 tokens to compilation_unit 69.2
   RETURN                                 => reduce 1 tokens to compilation_unit 69.2
   IDENTIFIER                             => reduce 1 tokens to compilation_unit 69.2
   Wisi_EOI                               => reduce 1 tokens to compilation_unit 69.2
   default                                => ERROR

   Minimal_Complete_Action => compilation_unit 69.2

State 34:
     69.1:compilation_unit <= subprogram_declaration ^

   BEGIN                                  => reduce 1 tokens to compilation_unit 69.1
   CASE                                   => reduce 1 tokens to compilation_unit 69.1
   DECLARE                                => reduce 1 tokens to compilation_unit 69.1
   EXIT                                   => reduce 1 tokens to compilation_unit 69.1
   FOR                                    => reduce 1 tokens to compilation_unit 69.1
   FUNCTION                               => reduce 1 tokens to compilation_unit 69.1
   IF                                     => reduce 1 tokens to compilation_unit 69.1
   LOOP                                   => reduce 1 tokens to compilation_unit 69.1
   PACKAGE                                => reduce 1 tokens to compilation_unit 69.1
   PROCEDURE                              => reduce 1 tokens to compilation_unit 69.1
   RETURN                                 => reduce 1 tokens to compilation_unit 69.1
   IDENTIFIER                             => reduce 1 tokens to compilation_unit 69.1
   Wisi_EOI                               => reduce 1 tokens to compilation_unit 69.1
   default                                => ERROR

   Minimal_Complete_Action => compilation_unit 69.1

State 35:
    117.0:subprogram_body <= subprogram_specification ^ aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    117.1:subprogram_body <= subprogram_specification ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    119.0:subprogram_declaration <= subprogram_specification ^ SEMICOLON

   IS                                     => shift and goto state 78 117.1
   WITH                                   => shift and goto state 79 58.0
   SEMICOLON                              => shift and goto state 80 119.0
   default                                => ERROR

   aspect_specification                   goto state 81

   Minimal_Complete_Action => SEMICOLON 119.0

State 36:
    102.0:paren_expression <= LEFT_PAREN ^ expression RIGHT_PAREN

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   expression                             goto state 82
   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 37:
     83.1:factor <= NOT ^ primary

   LEFT_PAREN                             => shift and goto state 36 102.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 83
   selected_component                     goto state 29

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 38:
    125.1:unary_adding_operator <= MINUS ^

   LEFT_PAREN                             => reduce 1 tokens to unary_adding_operator 125.1
   NOT                                    => reduce 1 tokens to unary_adding_operator 125.1
   STRING_LITERAL                         => reduce 1 tokens to unary_adding_operator 125.1
   NUMERIC_LITERAL                        => reduce 1 tokens to unary_adding_operator 125.1
   IDENTIFIER                             => reduce 1 tokens to unary_adding_operator 125.1
   default                                => ERROR

   Minimal_Complete_Action => unary_adding_operator 125.1

State 39:
    125.0:unary_adding_operator <= PLUS ^

   LEFT_PAREN                             => reduce 1 tokens to unary_adding_operator 125.0
   NOT                                    => reduce 1 tokens to unary_adding_operator 125.0
   STRING_LITERAL                         => reduce 1 tokens to unary_adding_operator 125.0
   NUMERIC_LITERAL                        => reduce 1 tokens to unary_adding_operator 125.0
   IDENTIFIER                             => reduce 1 tokens to unary_adding_operator 125.0
   default                                => ERROR

   Minimal_Complete_Action => unary_adding_operator 125.0

State 40:
    103.1:primary <= STRING_LITERAL ^

   AND                                    => reduce 1 tokens to primary 103.1
   IS                                     => reduce 1 tokens to primary 103.1
   LOOP                                   => reduce 1 tokens to primary 103.1
   OR                                     => reduce 1 tokens to primary 103.1
   RIGHT_PAREN                            => reduce 1 tokens to primary 103.1
   THEN                                   => reduce 1 tokens to primary 103.1
   XOR                                    => reduce 1 tokens to primary 103.1
   AMPERSAND                              => reduce 1 tokens to primary 103.1
   COLON_EQUAL                            => reduce 1 tokens to primary 103.1
   COMMA                                  => reduce 1 tokens to primary 103.1
   DOT_DOT                                => reduce 1 tokens to primary 103.1
   EQUAL                                  => reduce 1 tokens to primary 103.1
   GREATER                                => reduce 1 tokens to primary 103.1
   GREATER_EQUAL                          => reduce 1 tokens to primary 103.1
   LESS                                   => reduce 1 tokens to primary 103.1
   LESS_EQUAL                             => reduce 1 tokens to primary 103.1
   MINUS                                  => reduce 1 tokens to primary 103.1
   PLUS                                   => reduce 1 tokens to primary 103.1
   SEMICOLON                              => reduce 1 tokens to primary 103.1
   SLASH                                  => reduce 1 tokens to primary 103.1
   SLASH_EQUAL                            => reduce 1 tokens to primary 103.1
   STAR                                   => reduce 1 tokens to primary 103.1
   default                                => ERROR

   Minimal_Complete_Action => primary 103.1

State 41:
    103.0:primary <= NUMERIC_LITERAL ^

   AND                                    => reduce 1 tokens to primary 103.0
   IS                                     => reduce 1 tokens to primary 103.0
   LOOP                                   => reduce 1 tokens to primary 103.0
   OR                                     => reduce 1 tokens to primary 103.0
   RIGHT_PAREN                            => reduce 1 tokens to primary 103.0
   THEN                                   => reduce 1 tokens to primary 103.0
   XOR                                    => reduce 1 tokens to primary 103.0
   AMPERSAND                              => reduce 1 tokens to primary 103.0
   COLON_EQUAL                            => reduce 1 tokens to primary 103.0
   COMMA                                  => reduce 1 tokens to primary 103.0
   DOT_DOT                                => reduce 1 tokens to primary 103.0
   EQUAL                                  => reduce 1 tokens to primary 103.0
   GREATER                                => reduce 1 tokens to primary 103.0
   GREATER_EQUAL                          => reduce 1 tokens to primary 103.0
   LESS                                   => reduce 1 tokens to primary 103.0
   LESS_EQUAL                             => reduce 1 tokens to primary 103.0
   MINUS                                  => reduce 1 tokens to primary 103.0
   PLUS                                   => reduce 1 tokens to primary 103.0
   SEMICOLON                              => reduce 1 tokens to primary 103.0
   SLASH                                  => reduce 1 tokens to primary 103.0
   SLASH_EQUAL                            => reduce 1 tokens to primary 103.0
   STAR                                   => reduce 1 tokens to primary 103.0
   default                                => ERROR

   Minimal_Complete_Action => primary 103.0

State 42:
     95.2:name <= IDENTIFIER ^

   AND                                    => reduce 1 tokens to name 95.2
   IS                                     => reduce 1 tokens to name 95.2
   LEFT_PAREN                             => reduce 1 tokens to name 95.2
   LOOP                                   => reduce 1 tokens to name 95.2
   OR                                     => reduce 1 tokens to name 95.2
   RANGE                                  => reduce 1 tokens to name 95.2
   RETURN                                 => reduce 1 tokens to name 95.2
   RIGHT_PAREN                            => reduce 1 tokens to name 95.2
   THEN                                   => reduce 1 tokens to name 95.2
   WITH                                   => reduce 1 tokens to name 95.2
   XOR                                    => reduce 1 tokens to name 95.2
   AMPERSAND                              => reduce 1 tokens to name 95.2
   COLON_EQUAL                            => reduce 1 tokens to name 95.2
   COMMA                                  => reduce 1 tokens to name 95.2
   DOT                                    => reduce 1 tokens to name 95.2
   DOT_DOT                                => reduce 1 tokens to name 95.2
   EQUAL                                  => reduce 1 tokens to name 95.2
   EQUAL_GREATER                          => reduce 1 tokens to name 95.2
   GREATER                                => reduce 1 tokens to name 95.2
   GREATER_EQUAL                          => reduce 1 tokens to name 95.2
   LESS                                   => reduce 1 tokens to name 95.2
   LESS_EQUAL                             => reduce 1 tokens to name 95.2
   MINUS                                  => reduce 1 tokens to name 95.2
   PLUS                                   => reduce 1 tokens to name 95.2
   SEMICOLON                              => reduce 1 tokens to name 95.2
   SLASH                                  => reduce 1 tokens to name 95.2
   SLASH_EQUAL                            => reduce 1 tokens to name 95.2
   STAR                                   => reduce 1 tokens to name 95.2
   default                                => ERROR

   Minimal_Complete_Action => name 95.2

State 43:
     67.0:case_statement <= CASE expression ^ IS case_statement_alternative_list END CASE SEMICOLON

   IS                                     => shift and goto state 84 67.0
   default                                => ERROR

   Minimal_Complete_Action => IS 67.0

State 44:
    122.0:term <= factor ^

   AND                                    => reduce 1 tokens to term 122.0
   IS                                     => reduce 1 tokens to term 122.0
   LOOP                                   => reduce 1 tokens to term 122.0
   OR                                     => reduce 1 tokens to term 122.0
   RIGHT_PAREN                            => reduce 1 tokens to term 122.0
   THEN                                   => reduce 1 tokens to term 122.0
   XOR                                    => reduce 1 tokens to term 122.0
   AMPERSAND                              => reduce 1 tokens to term 122.0
   COLON_EQUAL                            => reduce 1 tokens to term 122.0
   COMMA                                  => reduce 1 tokens to term 122.0
   DOT_DOT                                => reduce 1 tokens to term 122.0
   EQUAL                                  => reduce 1 tokens to term 122.0
   GREATER                                => reduce 1 tokens to term 122.0
   GREATER_EQUAL                          => reduce 1 tokens to term 122.0
   LESS                                   => reduce 1 tokens to term 122.0
   LESS_EQUAL                             => reduce 1 tokens to term 122.0
   MINUS                                  => reduce 1 tokens to term 122.0
   PLUS                                   => reduce 1 tokens to term 122.0
   SEMICOLON                              => reduce 1 tokens to term 122.0
   SLASH                                  => reduce 1 tokens to term 122.0
   SLASH_EQUAL                            => reduce 1 tokens to term 122.0
   STAR                                   => reduce 1 tokens to term 122.0
   default                                => ERROR

   Minimal_Complete_Action => term 122.0

State 45:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     95.1:name <= name ^ actual_parameter_part
    103.2:primary <= name ^
    111.0:selected_component <= name ^ DOT IDENTIFIER

   AND                                    => reduce 1 tokens to primary 103.2
   IS                                     => reduce 1 tokens to primary 103.2
   LEFT_PAREN                             => shift and goto state 73 57.0
   LOOP                                   => reduce 1 tokens to primary 103.2
   OR                                     => reduce 1 tokens to primary 103.2
   RIGHT_PAREN                            => reduce 1 tokens to primary 103.2
   THEN                                   => reduce 1 tokens to primary 103.2
   XOR                                    => reduce 1 tokens to primary 103.2
   AMPERSAND                              => reduce 1 tokens to primary 103.2
   COLON_EQUAL                            => reduce 1 tokens to primary 103.2
   COMMA                                  => reduce 1 tokens to primary 103.2
   DOT                                    => shift and goto state 75 111.0
   DOT_DOT                                => reduce 1 tokens to primary 103.2
   EQUAL                                  => reduce 1 tokens to primary 103.2
   GREATER                                => reduce 1 tokens to primary 103.2
   GREATER_EQUAL                          => reduce 1 tokens to primary 103.2
   LESS                                   => reduce 1 tokens to primary 103.2
   LESS_EQUAL                             => reduce 1 tokens to primary 103.2
   MINUS                                  => reduce 1 tokens to primary 103.2
   PLUS                                   => reduce 1 tokens to primary 103.2
   SEMICOLON                              => reduce 1 tokens to primary 103.2
   SLASH                                  => reduce 1 tokens to primary 103.2
   SLASH_EQUAL                            => reduce 1 tokens to primary 103.2
   STAR                                   => reduce 1 tokens to primary 103.2
   default                                => ERROR

   actual_parameter_part                  goto state 77

   Minimal_Complete_Action => primary 103.2

State 46:
    103.3:primary <= paren_expression ^

   AND                                    => reduce 1 tokens to primary 103.3
   IS                                     => reduce 1 tokens to primary 103.3
   LOOP                                   => reduce 1 tokens to primary 103.3
   OR                                     => reduce 1 tokens to primary 103.3
   RIGHT_PAREN                            => reduce 1 tokens to primary 103.3
   THEN                                   => reduce 1 tokens to primary 103.3
   XOR                                    => reduce 1 tokens to primary 103.3
   AMPERSAND                              => reduce 1 tokens to primary 103.3
   COLON_EQUAL                            => reduce 1 tokens to primary 103.3
   COMMA                                  => reduce 1 tokens to primary 103.3
   DOT_DOT                                => reduce 1 tokens to primary 103.3
   EQUAL                                  => reduce 1 tokens to primary 103.3
   GREATER                                => reduce 1 tokens to primary 103.3
   GREATER_EQUAL                          => reduce 1 tokens to primary 103.3
   LESS                                   => reduce 1 tokens to primary 103.3
   LESS_EQUAL                             => reduce 1 tokens to primary 103.3
   MINUS                                  => reduce 1 tokens to primary 103.3
   PLUS                                   => reduce 1 tokens to primary 103.3
   SEMICOLON                              => reduce 1 tokens to primary 103.3
   SLASH                                  => reduce 1 tokens to primary 103.3
   SLASH_EQUAL                            => reduce 1 tokens to primary 103.3
   STAR                                   => reduce 1 tokens to primary 103.3
   default                                => ERROR

   Minimal_Complete_Action => primary 103.3

State 47:
     83.0:factor <= primary ^

   AND                                    => reduce 1 tokens to factor 83.0
   IS                                     => reduce 1 tokens to factor 83.0
   LOOP                                   => reduce 1 tokens to factor 83.0
   OR                                     => reduce 1 tokens to factor 83.0
   RIGHT_PAREN                            => reduce 1 tokens to factor 83.0
   THEN                                   => reduce 1 tokens to factor 83.0
   XOR                                    => reduce 1 tokens to factor 83.0
   AMPERSAND                              => reduce 1 tokens to factor 83.0
   COLON_EQUAL                            => reduce 1 tokens to factor 83.0
   COMMA                                  => reduce 1 tokens to factor 83.0
   DOT_DOT                                => reduce 1 tokens to factor 83.0
   EQUAL                                  => reduce 1 tokens to factor 83.0
   GREATER                                => reduce 1 tokens to factor 83.0
   GREATER_EQUAL                          => reduce 1 tokens to factor 83.0
   LESS                                   => reduce 1 tokens to factor 83.0
   LESS_EQUAL                             => reduce 1 tokens to factor 83.0
   MINUS                                  => reduce 1 tokens to factor 83.0
   PLUS                                   => reduce 1 tokens to factor 83.0
   SEMICOLON                              => reduce 1 tokens to factor 83.0
   SLASH                                  => reduce 1 tokens to factor 83.0
   SLASH_EQUAL                            => reduce 1 tokens to factor 83.0
   STAR                                   => reduce 1 tokens to factor 83.0
   default                                => ERROR

   Minimal_Complete_Action => factor 83.0

State 48:
     80.0:expression <= relation ^
     80.1:expression <= relation ^ AND_relation_list
     80.2:expression <= relation ^ OR_relation_list
     80.3:expression <= relation ^ XOR_relation_list

   AND                                    => shift and goto state 85 129.0
   IS                                     => reduce 1 tokens to expression 80.0
   OR                                     => shift and goto state 86 130.0
   RIGHT_PAREN                            => reduce 1 tokens to expression 80.0
   THEN                                   => reduce 1 tokens to expression 80.0
   XOR                                    => shift and goto state 87 131.0
   COMMA                                  => reduce 1 tokens to expression 80.0
   SEMICOLON                              => reduce 1 tokens to expression 80.0
   default                                => ERROR

   AND_relation_list                      goto state 88
   OR_relation_list                       goto state 89
   XOR_relation_list                      goto state 90

   Minimal_Complete_Action => expression 80.0

State 49:
    109.0:relation <= simple_expression ^ relational_operator simple_expression
    109.1:relation <= simple_expression ^

   AND                                    => reduce 1 tokens to relation 109.1
   IS                                     => reduce 1 tokens to relation 109.1
   OR                                     => reduce 1 tokens to relation 109.1
   RIGHT_PAREN                            => reduce 1 tokens to relation 109.1
   THEN                                   => reduce 1 tokens to relation 109.1
   XOR                                    => reduce 1 tokens to relation 109.1
   COMMA                                  => reduce 1 tokens to relation 109.1
   EQUAL                                  => shift and goto state 91 110.0
   GREATER                                => shift and goto state 92 110.4
   GREATER_EQUAL                          => shift and goto state 93 110.5
   LESS                                   => shift and goto state 94 110.2
   LESS_EQUAL                             => shift and goto state 95 110.3
   SEMICOLON                              => reduce 1 tokens to relation 109.1
   SLASH_EQUAL                            => shift and goto state 96 110.1
   default                                => ERROR

   relational_operator                    goto state 97

   Minimal_Complete_Action => relation 109.1

State 50:
    122.1:term <= term ^ multiplying_operator factor
    136.0:term_binary_adding_operator_list <= term ^

   AND                                    => reduce 1 tokens to term_binary_adding_operator_list 136.0
   IS                                     => reduce 1 tokens to term_binary_adding_operator_list 136.0
   LOOP                                   => reduce 1 tokens to term_binary_adding_operator_list 136.0
   OR                                     => reduce 1 tokens to term_binary_adding_operator_list 136.0
   RIGHT_PAREN                            => reduce 1 tokens to term_binary_adding_operator_list 136.0
   THEN                                   => reduce 1 tokens to term_binary_adding_operator_list 136.0
   XOR                                    => reduce 1 tokens to term_binary_adding_operator_list 136.0
   AMPERSAND                              => reduce 1 tokens to term_binary_adding_operator_list 136.0
   COLON_EQUAL                            => reduce 1 tokens to term_binary_adding_operator_list 136.0
   COMMA                                  => reduce 1 tokens to term_binary_adding_operator_list 136.0
   DOT_DOT                                => reduce 1 tokens to term_binary_adding_operator_list 136.0
   EQUAL                                  => reduce 1 tokens to term_binary_adding_operator_list 136.0
   GREATER                                => reduce 1 tokens to term_binary_adding_operator_list 136.0
   GREATER_EQUAL                          => reduce 1 tokens to term_binary_adding_operator_list 136.0
   LESS                                   => reduce 1 tokens to term_binary_adding_operator_list 136.0
   LESS_EQUAL                             => reduce 1 tokens to term_binary_adding_operator_list 136.0
   MINUS                                  => reduce 1 tokens to term_binary_adding_operator_list 136.0
   PLUS                                   => reduce 1 tokens to term_binary_adding_operator_list 136.0
   SEMICOLON                              => reduce 1 tokens to term_binary_adding_operator_list 136.0
   SLASH                                  => shift and goto state 98 94.1
   SLASH_EQUAL                            => reduce 1 tokens to term_binary_adding_operator_list 136.0
   STAR                                   => shift and goto state 99 94.0
   default                                => ERROR

   multiplying_operator                   goto state 100

   Minimal_Complete_Action => term_binary_adding_operator_list 136.0

State 51:
    113.0:simple_expression <= unary_adding_operator ^ term_binary_adding_operator_list

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   selected_component                     goto state 29
   term                                   goto state 50
   term_binary_adding_operator_list       goto state 101

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 52:
    113.1:simple_expression <= term_binary_adding_operator_list ^
    136.1:term_binary_adding_operator_list <= term_binary_adding_operator_list ^ binary_adding_operator term

   AND                                    => reduce 1 tokens to simple_expression 113.1
   IS                                     => reduce 1 tokens to simple_expression 113.1
   LOOP                                   => reduce 1 tokens to simple_expression 113.1
   OR                                     => reduce 1 tokens to simple_expression 113.1
   RIGHT_PAREN                            => reduce 1 tokens to simple_expression 113.1
   THEN                                   => reduce 1 tokens to simple_expression 113.1
   XOR                                    => reduce 1 tokens to simple_expression 113.1
   AMPERSAND                              => shift and goto state 102 62.2
   COLON_EQUAL                            => reduce 1 tokens to simple_expression 113.1
   COMMA                                  => reduce 1 tokens to simple_expression 113.1
   DOT_DOT                                => reduce 1 tokens to simple_expression 113.1
   EQUAL                                  => reduce 1 tokens to simple_expression 113.1
   GREATER                                => reduce 1 tokens to simple_expression 113.1
   GREATER_EQUAL                          => reduce 1 tokens to simple_expression 113.1
   LESS                                   => reduce 1 tokens to simple_expression 113.1
   LESS_EQUAL                             => reduce 1 tokens to simple_expression 113.1
   MINUS                                  => shift and goto state 103 62.1
   PLUS                                   => shift and goto state 104 62.0
   SEMICOLON                              => reduce 1 tokens to simple_expression 113.1
   SLASH_EQUAL                            => reduce 1 tokens to simple_expression 113.1
   default                                => ERROR

   binary_adding_operator                 goto state 105

   Minimal_Complete_Action => simple_expression 113.1

State 53:
     79.2:exit_statement <= EXIT WHEN ^ expression SEMICOLON

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   expression                             goto state 106
   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 54:
     79.3:exit_statement <= EXIT SEMICOLON ^

   BEGIN                                  => reduce 2 tokens to exit_statement 79.3
   CASE                                   => reduce 2 tokens to exit_statement 79.3
   DECLARE                                => reduce 2 tokens to exit_statement 79.3
   ELSE                                   => reduce 2 tokens to exit_statement 79.3
   ELSIF                                  => reduce 2 tokens to exit_statement 79.3
   END                                    => reduce 2 tokens to exit_statement 79.3
   EXIT                                   => reduce 2 tokens to exit_statement 79.3
   EXCEPTION                              => reduce 2 tokens to exit_statement 79.3
   FOR                                    => reduce 2 tokens to exit_statement 79.3
   FUNCTION                               => reduce 2 tokens to exit_statement 79.3
   IF                                     => reduce 2 tokens to exit_statement 79.3
   LOOP                                   => reduce 2 tokens to exit_statement 79.3
   PACKAGE                                => reduce 2 tokens to exit_statement 79.3
   PROCEDURE                              => reduce 2 tokens to exit_statement 79.3
   RETURN                                 => reduce 2 tokens to exit_statement 79.3
   WHEN                                   => reduce 2 tokens to exit_statement 79.3
   IDENTIFIER                             => reduce 2 tokens to exit_statement 79.3
   Wisi_EOI                               => reduce 2 tokens to exit_statement 79.3
   default                                => ERROR

   Minimal_Complete_Action => exit_statement 79.3

State 55:
     79.0:exit_statement <= EXIT IDENTIFIER ^ WHEN expression SEMICOLON
     79.1:exit_statement <= EXIT IDENTIFIER ^ SEMICOLON

   WHEN                                   => shift and goto state 107 79.0
   SEMICOLON                              => shift and goto state 108 79.1
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 79.1

State 56:
     92.0:iteration_scheme <= FOR IDENTIFIER ^ IN discrete_subtype_definition

   IN                                     => shift and goto state 109 92.0
   default                                => ERROR

   Minimal_Complete_Action => IN 92.0

State 57:
     86.0:function_specification <= FUNCTION name ^ parameter_and_result_profile
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     95.1:name <= name ^ actual_parameter_part
    111.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                             => shift and goto state 110 57.0
   RETURN                                 => shift and goto state 111 99.1
   DOT                                    => shift and goto state 75 111.0
   default                                => ERROR

   actual_parameter_part                  goto state 77
   formal_part                            goto state 112
   parameter_and_result_profile           goto state 113

   Minimal_Complete_Action => RETURN 99.1

State 58:
     90.0:if_statement <= IF expression ^ THEN sequence_of_statements ELSIF_expression_list ELSE sequence_of_statements END IF SEMICOLON
     90.1:if_statement <= IF expression ^ THEN sequence_of_statements ELSIF_expression_list END IF SEMICOLON
     90.2:if_statement <= IF expression ^ THEN sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON
     90.3:if_statement <= IF expression ^ THEN sequence_of_statements END IF SEMICOLON

   THEN                                   => shift and goto state 114 90.0
   default                                => ERROR

   Minimal_Complete_Action => THEN 90.0

State 59:
     93.1:loop_statement <= LOOP sequence_of_statements ^ END LOOP identifier_opt SEMICOLON

   END                                    => shift and goto state 115 93.1
   default                                => ERROR

   Minimal_Complete_Action => END 93.1

State 60:
    135.0:statement_list <= statement ^

   BEGIN                                  => reduce 1 tokens to statement_list 135.0
   CASE                                   => reduce 1 tokens to statement_list 135.0
   DECLARE                                => reduce 1 tokens to statement_list 135.0
   ELSE                                   => reduce 1 tokens to statement_list 135.0
   ELSIF                                  => reduce 1 tokens to statement_list 135.0
   END                                    => reduce 1 tokens to statement_list 135.0
   EXIT                                   => reduce 1 tokens to statement_list 135.0
   EXCEPTION                              => reduce 1 tokens to statement_list 135.0
   FOR                                    => reduce 1 tokens to statement_list 135.0
   IF                                     => reduce 1 tokens to statement_list 135.0
   LOOP                                   => reduce 1 tokens to statement_list 135.0
   RETURN                                 => reduce 1 tokens to statement_list 135.0
   WHEN                                   => reduce 1 tokens to statement_list 135.0
   IDENTIFIER                             => reduce 1 tokens to statement_list 135.0
   default                                => ERROR

   Minimal_Complete_Action => statement_list 135.0

State 61:
    112.0:sequence_of_statements <= statement_list ^
    135.1:statement_list <= statement_list ^ statement

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   ELSE                                   => reduce 1 tokens to sequence_of_statements 112.0
   ELSIF                                  => reduce 1 tokens to sequence_of_statements 112.0
   END                                    => reduce 1 tokens to sequence_of_statements 112.0
   EXIT                                   => shift and goto state 2 79.0
   EXCEPTION                              => reduce 1 tokens to sequence_of_statements 112.0
   FOR                                    => shift and goto state 3 92.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   RETURN                                 => shift and goto state 9 82.0
   WHEN                                   => reduce 1 tokens to sequence_of_statements 112.0
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   procedure_call_statement               goto state 27
   selected_component                     goto state 29
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 116

   Minimal_Complete_Action => sequence_of_statements 112.0

State 62:
     98.0:package_body <= PACKAGE BODY ^ name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     98.1:package_body <= PACKAGE BODY ^ name aspect_specification IS declarative_part END name_opt SEMICOLON
     98.2:package_body <= PACKAGE BODY ^ name IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     98.3:package_body <= PACKAGE BODY ^ name IS declarative_part END name_opt SEMICOLON

   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   name                                   goto state 117
   selected_component                     goto state 29

   Minimal_Complete_Action => IDENTIFIER 95.2

State 63:
     87.0:generic_instantiation <= PACKAGE name ^ IS NEW name SEMICOLON
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     95.1:name <= name ^ actual_parameter_part
    111.0:selected_component <= name ^ DOT IDENTIFIER

   IS                                     => shift and goto state 118 87.0
   LEFT_PAREN                             => shift and goto state 73 57.0
   DOT                                    => shift and goto state 75 111.0
   default                                => ERROR

   actual_parameter_part                  goto state 77

   Minimal_Complete_Action => IS 87.0

State 64:
     87.1:generic_instantiation <= PROCEDURE name ^ IS NEW name SEMICOLON
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     95.1:name <= name ^ actual_parameter_part
    105.0:procedure_specification <= PROCEDURE name ^ parameter_profile
    111.0:selected_component <= name ^ DOT IDENTIFIER

   IS                                     => shift and goto state 119 87.1,
                                             reduce 0 tokens to parameter_profile 100.1
   LEFT_PAREN                             => shift and goto state 110 57.0
   WITH                                   => reduce 0 tokens to parameter_profile 100.1
   DOT                                    => shift and goto state 75 111.0
   SEMICOLON                              => reduce 0 tokens to parameter_profile 100.1
   default                                => ERROR

   actual_parameter_part                  goto state 77
   formal_part                            goto state 120
   parameter_profile                      goto state 121

   Minimal_Complete_Action => (IS 87.1, parameter_profile 100.1)

State 65:
     81.0:extended_return_object_declaration <= IDENTIFIER ^ COLON subtype_indication
     95.2:name <= IDENTIFIER ^

   AND                                    => reduce 1 tokens to name 95.2
   LEFT_PAREN                             => reduce 1 tokens to name 95.2
   OR                                     => reduce 1 tokens to name 95.2
   XOR                                    => reduce 1 tokens to name 95.2
   AMPERSAND                              => reduce 1 tokens to name 95.2
   COLON                                  => shift and goto state 122 81.0
   DOT                                    => reduce 1 tokens to name 95.2
   EQUAL                                  => reduce 1 tokens to name 95.2
   GREATER                                => reduce 1 tokens to name 95.2
   GREATER_EQUAL                          => reduce 1 tokens to name 95.2
   LESS                                   => reduce 1 tokens to name 95.2
   LESS_EQUAL                             => reduce 1 tokens to name 95.2
   MINUS                                  => reduce 1 tokens to name 95.2
   PLUS                                   => reduce 1 tokens to name 95.2
   SEMICOLON                              => reduce 1 tokens to name 95.2
   SLASH                                  => reduce 1 tokens to name 95.2
   SLASH_EQUAL                            => reduce 1 tokens to name 95.2
   STAR                                   => reduce 1 tokens to name 95.2
   default                                => ERROR

   Minimal_Complete_Action => (COLON 81.0, name 95.2)

State 66:
    114.0:simple_return_statement <= RETURN expression ^ SEMICOLON

   SEMICOLON                              => shift and goto state 123 114.0
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 114.0

State 67:
     82.0:extended_return_statement <= RETURN extended_return_object_declaration ^ SEMICOLON

   SEMICOLON                              => shift and goto state 124 82.0
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 82.0

State 68:
     63.0:block_label_opt <= IDENTIFIER COLON ^

   BEGIN                                  => reduce 2 tokens to block_label_opt 63.0
   DECLARE                                => reduce 2 tokens to block_label_opt 63.0
   default                                => ERROR

   Minimal_Complete_Action => block_label_opt 63.0

State 69:
     64.1:block_statement <= block_label_opt BEGIN ^ handled_sequence_of_statements END identifier_opt SEMICOLON

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   END                                    => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                                   => shift and goto state 2 79.0
   EXCEPTION                              => reduce 0 tokens to sequence_of_statements 112.1
   FOR                                    => shift and goto state 3 92.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   RETURN                                 => shift and goto state 9 82.0
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   handled_sequence_of_statements         goto state 125
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   procedure_call_statement               goto state 27
   selected_component                     goto state 29
   sequence_of_statements                 goto state 126
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 60
   statement_list                         goto state 61

   Minimal_Complete_Action => handled_sequence_of_statements 88.2

State 70:
     64.0:block_statement <= block_label_opt DECLARE ^ declarative_part BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON

   BEGIN                                  => reduce 0 tokens to declarative_part 74.1
   FUNCTION                               => shift and goto state 4 86.0
   PACKAGE                                => shift and goto state 127 98.0
   PROCEDURE                              => shift and goto state 128 105.0
   TYPE                                   => shift and goto state 129 85.0
   IDENTIFIER                             => shift and goto state 130 97.0
   default                                => ERROR

   body_g                                 goto state 131
   body_stub                              goto state 132
   declaration                            goto state 133
   declarative_part                       goto state 134
   full_type_declaration                  goto state 135
   function_specification                 goto state 20
   object_declaration                     goto state 136
   package_body                           goto state 137
   procedure_specification                goto state 28
   proper_body                            goto state 138
   subprogram_body                        goto state 139
   subprogram_body_stub                   goto state 140
   subprogram_declaration                 goto state 141
   subprogram_specification               goto state 142
   type_declaration                       goto state 143
   declaration_list                       goto state 144

   Minimal_Complete_Action => declarative_part 74.1

State 71:
     70.1:compilation_unit_list <= compilation_unit_list compilation_unit ^

   BEGIN                                  => reduce 2 tokens to compilation_unit_list 70.1
   CASE                                   => reduce 2 tokens to compilation_unit_list 70.1
   DECLARE                                => reduce 2 tokens to compilation_unit_list 70.1
   EXIT                                   => reduce 2 tokens to compilation_unit_list 70.1
   FOR                                    => reduce 2 tokens to compilation_unit_list 70.1
   FUNCTION                               => reduce 2 tokens to compilation_unit_list 70.1
   IF                                     => reduce 2 tokens to compilation_unit_list 70.1
   LOOP                                   => reduce 2 tokens to compilation_unit_list 70.1
   PACKAGE                                => reduce 2 tokens to compilation_unit_list 70.1
   PROCEDURE                              => reduce 2 tokens to compilation_unit_list 70.1
   RETURN                                 => reduce 2 tokens to compilation_unit_list 70.1
   IDENTIFIER                             => reduce 2 tokens to compilation_unit_list 70.1
   Wisi_EOI                               => reduce 2 tokens to compilation_unit_list 70.1
   default                                => ERROR

   Minimal_Complete_Action => compilation_unit_list 70.1

State 72:
     93.0:loop_statement <= iteration_scheme LOOP ^ sequence_of_statements END LOOP identifier_opt SEMICOLON

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   END                                    => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                                   => shift and goto state 2 79.0
   FOR                                    => shift and goto state 3 92.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   RETURN                                 => shift and goto state 9 82.0
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   procedure_call_statement               goto state 27
   selected_component                     goto state 29
   sequence_of_statements                 goto state 145
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 60
   statement_list                         goto state 61

   Minimal_Complete_Action => sequence_of_statements 112.1

State 73:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN
     95.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 146 60.0
   default                                => ERROR

   association                            goto state 147
   association_list                       goto state 148
   expression                             goto state 149
   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   range_g                                goto state 150
   range_list                             goto state 151
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 152
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 74:
     59.0:assignment_statement <= name COLON_EQUAL ^ expression SEMICOLON

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   expression                             goto state 153
   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 75:
    111.0:selected_component <= name DOT ^ IDENTIFIER

   IDENTIFIER                             => shift and goto state 154 111.0
   default                                => ERROR

   Minimal_Complete_Action => IDENTIFIER 111.0

State 76:
    104.0:procedure_call_statement <= name SEMICOLON ^

   BEGIN                                  => reduce 2 tokens to procedure_call_statement 104.0
   CASE                                   => reduce 2 tokens to procedure_call_statement 104.0
   DECLARE                                => reduce 2 tokens to procedure_call_statement 104.0
   ELSE                                   => reduce 2 tokens to procedure_call_statement 104.0
   ELSIF                                  => reduce 2 tokens to procedure_call_statement 104.0
   END                                    => reduce 2 tokens to procedure_call_statement 104.0
   EXIT                                   => reduce 2 tokens to procedure_call_statement 104.0
   EXCEPTION                              => reduce 2 tokens to procedure_call_statement 104.0
   FOR                                    => reduce 2 tokens to procedure_call_statement 104.0
   FUNCTION                               => reduce 2 tokens to procedure_call_statement 104.0
   IF                                     => reduce 2 tokens to procedure_call_statement 104.0
   LOOP                                   => reduce 2 tokens to procedure_call_statement 104.0
   PACKAGE                                => reduce 2 tokens to procedure_call_statement 104.0
   PROCEDURE                              => reduce 2 tokens to procedure_call_statement 104.0
   RETURN                                 => reduce 2 tokens to procedure_call_statement 104.0
   WHEN                                   => reduce 2 tokens to procedure_call_statement 104.0
   IDENTIFIER                             => reduce 2 tokens to procedure_call_statement 104.0
   Wisi_EOI                               => reduce 2 tokens to procedure_call_statement 104.0
   default                                => ERROR

   Minimal_Complete_Action => procedure_call_statement 104.0

State 77:
     95.1:name <= name actual_parameter_part ^

   AND                                    => reduce 2 tokens to name 95.1
   IS                                     => reduce 2 tokens to name 95.1
   LEFT_PAREN                             => reduce 2 tokens to name 95.1
   LOOP                                   => reduce 2 tokens to name 95.1
   OR                                     => reduce 2 tokens to name 95.1
   RANGE                                  => reduce 2 tokens to name 95.1
   RETURN                                 => reduce 2 tokens to name 95.1
   RIGHT_PAREN                            => reduce 2 tokens to name 95.1
   THEN                                   => reduce 2 tokens to name 95.1
   WITH                                   => reduce 2 tokens to name 95.1
   XOR                                    => reduce 2 tokens to name 95.1
   AMPERSAND                              => reduce 2 tokens to name 95.1
   COLON_EQUAL                            => reduce 2 tokens to name 95.1
   COMMA                                  => reduce 2 tokens to name 95.1
   DOT                                    => reduce 2 tokens to name 95.1
   DOT_DOT                                => reduce 2 tokens to name 95.1
   EQUAL                                  => reduce 2 tokens to name 95.1
   EQUAL_GREATER                          => reduce 2 tokens to name 95.1
   GREATER                                => reduce 2 tokens to name 95.1
   GREATER_EQUAL                          => reduce 2 tokens to name 95.1
   LESS                                   => reduce 2 tokens to name 95.1
   LESS_EQUAL                             => reduce 2 tokens to name 95.1
   MINUS                                  => reduce 2 tokens to name 95.1
   PLUS                                   => reduce 2 tokens to name 95.1
   SEMICOLON                              => reduce 2 tokens to name 95.1
   SLASH                                  => reduce 2 tokens to name 95.1
   SLASH_EQUAL                            => reduce 2 tokens to name 95.1
   STAR                                   => reduce 2 tokens to name 95.1
   default                                => ERROR

   Minimal_Complete_Action => name 95.1

State 78:
    117.1:subprogram_body <= subprogram_specification IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON

   BEGIN                                  => reduce 0 tokens to declarative_part 74.1
   FUNCTION                               => shift and goto state 4 86.0
   PACKAGE                                => shift and goto state 127 98.0
   PROCEDURE                              => shift and goto state 128 105.0
   TYPE                                   => shift and goto state 129 85.0
   IDENTIFIER                             => shift and goto state 130 97.0
   default                                => ERROR

   body_g                                 goto state 131
   body_stub                              goto state 132
   declaration                            goto state 133
   declarative_part                       goto state 155
   full_type_declaration                  goto state 135
   function_specification                 goto state 20
   object_declaration                     goto state 136
   package_body                           goto state 137
   procedure_specification                goto state 28
   proper_body                            goto state 138
   subprogram_body                        goto state 139
   subprogram_body_stub                   goto state 140
   subprogram_declaration                 goto state 141
   subprogram_specification               goto state 142
   type_declaration                       goto state 143
   declaration_list                       goto state 144

   Minimal_Complete_Action => declarative_part 74.1

State 79:
     58.0:aspect_specification <= WITH ^ association_list

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 146 60.0
   default                                => ERROR

   association                            goto state 147
   association_list                       goto state 156
   expression                             goto state 149
   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 80:
    119.0:subprogram_declaration <= subprogram_specification SEMICOLON ^

   BEGIN                                  => reduce 2 tokens to subprogram_declaration 119.0
   CASE                                   => reduce 2 tokens to subprogram_declaration 119.0
   DECLARE                                => reduce 2 tokens to subprogram_declaration 119.0
   END                                    => reduce 2 tokens to subprogram_declaration 119.0
   EXIT                                   => reduce 2 tokens to subprogram_declaration 119.0
   FOR                                    => reduce 2 tokens to subprogram_declaration 119.0
   FUNCTION                               => reduce 2 tokens to subprogram_declaration 119.0
   IF                                     => reduce 2 tokens to subprogram_declaration 119.0
   LOOP                                   => reduce 2 tokens to subprogram_declaration 119.0
   PACKAGE                                => reduce 2 tokens to subprogram_declaration 119.0
   PROCEDURE                              => reduce 2 tokens to subprogram_declaration 119.0
   RETURN                                 => reduce 2 tokens to subprogram_declaration 119.0
   TYPE                                   => reduce 2 tokens to subprogram_declaration 119.0
   IDENTIFIER                             => reduce 2 tokens to subprogram_declaration 119.0
   Wisi_EOI                               => reduce 2 tokens to subprogram_declaration 119.0
   default                                => ERROR

   Minimal_Complete_Action => subprogram_declaration 119.0

State 81:
    117.0:subprogram_body <= subprogram_specification aspect_specification ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON

   IS                                     => shift and goto state 157 117.0
   default                                => ERROR

   Minimal_Complete_Action => IS 117.0

State 82:
    102.0:paren_expression <= LEFT_PAREN expression ^ RIGHT_PAREN

   RIGHT_PAREN                            => shift and goto state 158 102.0
   default                                => ERROR

   Minimal_Complete_Action => RIGHT_PAREN 102.0

State 83:
     83.1:factor <= NOT primary ^

   AND                                    => reduce 2 tokens to factor 83.1
   IS                                     => reduce 2 tokens to factor 83.1
   LOOP                                   => reduce 2 tokens to factor 83.1
   OR                                     => reduce 2 tokens to factor 83.1
   RIGHT_PAREN                            => reduce 2 tokens to factor 83.1
   THEN                                   => reduce 2 tokens to factor 83.1
   XOR                                    => reduce 2 tokens to factor 83.1
   AMPERSAND                              => reduce 2 tokens to factor 83.1
   COLON_EQUAL                            => reduce 2 tokens to factor 83.1
   COMMA                                  => reduce 2 tokens to factor 83.1
   DOT_DOT                                => reduce 2 tokens to factor 83.1
   EQUAL                                  => reduce 2 tokens to factor 83.1
   GREATER                                => reduce 2 tokens to factor 83.1
   GREATER_EQUAL                          => reduce 2 tokens to factor 83.1
   LESS                                   => reduce 2 tokens to factor 83.1
   LESS_EQUAL                             => reduce 2 tokens to factor 83.1
   MINUS                                  => reduce 2 tokens to factor 83.1
   PLUS                                   => reduce 2 tokens to factor 83.1
   SEMICOLON                              => reduce 2 tokens to factor 83.1
   SLASH                                  => reduce 2 tokens to factor 83.1
   SLASH_EQUAL                            => reduce 2 tokens to factor 83.1
   STAR                                   => reduce 2 tokens to factor 83.1
   default                                => ERROR

   Minimal_Complete_Action => factor 83.1

State 84:
     67.0:case_statement <= CASE expression IS ^ case_statement_alternative_list END CASE SEMICOLON

   WHEN                                   => shift and goto state 159 68.0
   default                                => ERROR

   case_statement_alternative             goto state 160
   case_statement_alternative_list        goto state 161

   Minimal_Complete_Action => WHEN 68.0

State 85:
    129.0:AND_relation_list <= AND ^ relation

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 162
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 86:
    130.0:OR_relation_list <= OR ^ relation

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 163
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 87:
    131.0:XOR_relation_list <= XOR ^ relation

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 164
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 88:
     80.1:expression <= relation AND_relation_list ^
    129.1:AND_relation_list <= AND_relation_list ^ AND relation

   AND                                    => shift and goto state 165 129.1
   IS                                     => reduce 2 tokens to expression 80.1
   RIGHT_PAREN                            => reduce 2 tokens to expression 80.1
   THEN                                   => reduce 2 tokens to expression 80.1
   COMMA                                  => reduce 2 tokens to expression 80.1
   SEMICOLON                              => reduce 2 tokens to expression 80.1
   default                                => ERROR

   Minimal_Complete_Action => expression 80.1

State 89:
     80.2:expression <= relation OR_relation_list ^
    130.1:OR_relation_list <= OR_relation_list ^ OR relation

   IS                                     => reduce 2 tokens to expression 80.2
   OR                                     => shift and goto state 166 130.1
   RIGHT_PAREN                            => reduce 2 tokens to expression 80.2
   THEN                                   => reduce 2 tokens to expression 80.2
   COMMA                                  => reduce 2 tokens to expression 80.2
   SEMICOLON                              => reduce 2 tokens to expression 80.2
   default                                => ERROR

   Minimal_Complete_Action => expression 80.2

State 90:
     80.3:expression <= relation XOR_relation_list ^
    131.1:XOR_relation_list <= XOR_relation_list ^ XOR relation

   IS                                     => reduce 2 tokens to expression 80.3
   RIGHT_PAREN                            => reduce 2 tokens to expression 80.3
   THEN                                   => reduce 2 tokens to expression 80.3
   XOR                                    => shift and goto state 167 131.1
   COMMA                                  => reduce 2 tokens to expression 80.3
   SEMICOLON                              => reduce 2 tokens to expression 80.3
   default                                => ERROR

   Minimal_Complete_Action => expression 80.3

State 91:
    110.0:relational_operator <= EQUAL ^

   LEFT_PAREN                             => reduce 1 tokens to relational_operator 110.0
   NOT                                    => reduce 1 tokens to relational_operator 110.0
   MINUS                                  => reduce 1 tokens to relational_operator 110.0
   PLUS                                   => reduce 1 tokens to relational_operator 110.0
   STRING_LITERAL                         => reduce 1 tokens to relational_operator 110.0
   NUMERIC_LITERAL                        => reduce 1 tokens to relational_operator 110.0
   IDENTIFIER                             => reduce 1 tokens to relational_operator 110.0
   default                                => ERROR

   Minimal_Complete_Action => relational_operator 110.0

State 92:
    110.4:relational_operator <= GREATER ^

   LEFT_PAREN                             => reduce 1 tokens to relational_operator 110.4
   NOT                                    => reduce 1 tokens to relational_operator 110.4
   MINUS                                  => reduce 1 tokens to relational_operator 110.4
   PLUS                                   => reduce 1 tokens to relational_operator 110.4
   STRING_LITERAL                         => reduce 1 tokens to relational_operator 110.4
   NUMERIC_LITERAL                        => reduce 1 tokens to relational_operator 110.4
   IDENTIFIER                             => reduce 1 tokens to relational_operator 110.4
   default                                => ERROR

   Minimal_Complete_Action => relational_operator 110.4

State 93:
    110.5:relational_operator <= GREATER_EQUAL ^

   LEFT_PAREN                             => reduce 1 tokens to relational_operator 110.5
   NOT                                    => reduce 1 tokens to relational_operator 110.5
   MINUS                                  => reduce 1 tokens to relational_operator 110.5
   PLUS                                   => reduce 1 tokens to relational_operator 110.5
   STRING_LITERAL                         => reduce 1 tokens to relational_operator 110.5
   NUMERIC_LITERAL                        => reduce 1 tokens to relational_operator 110.5
   IDENTIFIER                             => reduce 1 tokens to relational_operator 110.5
   default                                => ERROR

   Minimal_Complete_Action => relational_operator 110.5

State 94:
    110.2:relational_operator <= LESS ^

   LEFT_PAREN                             => reduce 1 tokens to relational_operator 110.2
   NOT                                    => reduce 1 tokens to relational_operator 110.2
   MINUS                                  => reduce 1 tokens to relational_operator 110.2
   PLUS                                   => reduce 1 tokens to relational_operator 110.2
   STRING_LITERAL                         => reduce 1 tokens to relational_operator 110.2
   NUMERIC_LITERAL                        => reduce 1 tokens to relational_operator 110.2
   IDENTIFIER                             => reduce 1 tokens to relational_operator 110.2
   default                                => ERROR

   Minimal_Complete_Action => relational_operator 110.2

State 95:
    110.3:relational_operator <= LESS_EQUAL ^

   LEFT_PAREN                             => reduce 1 tokens to relational_operator 110.3
   NOT                                    => reduce 1 tokens to relational_operator 110.3
   MINUS                                  => reduce 1 tokens to relational_operator 110.3
   PLUS                                   => reduce 1 tokens to relational_operator 110.3
   STRING_LITERAL                         => reduce 1 tokens to relational_operator 110.3
   NUMERIC_LITERAL                        => reduce 1 tokens to relational_operator 110.3
   IDENTIFIER                             => reduce 1 tokens to relational_operator 110.3
   default                                => ERROR

   Minimal_Complete_Action => relational_operator 110.3

State 96:
    110.1:relational_operator <= SLASH_EQUAL ^

   LEFT_PAREN                             => reduce 1 tokens to relational_operator 110.1
   NOT                                    => reduce 1 tokens to relational_operator 110.1
   MINUS                                  => reduce 1 tokens to relational_operator 110.1
   PLUS                                   => reduce 1 tokens to relational_operator 110.1
   STRING_LITERAL                         => reduce 1 tokens to relational_operator 110.1
   NUMERIC_LITERAL                        => reduce 1 tokens to relational_operator 110.1
   IDENTIFIER                             => reduce 1 tokens to relational_operator 110.1
   default                                => ERROR

   Minimal_Complete_Action => relational_operator 110.1

State 97:
    109.0:relation <= simple_expression relational_operator ^ simple_expression

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   selected_component                     goto state 29
   simple_expression                      goto state 168
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 98:
     94.1:multiplying_operator <= SLASH ^

   LEFT_PAREN                             => reduce 1 tokens to multiplying_operator 94.1
   NOT                                    => reduce 1 tokens to multiplying_operator 94.1
   STRING_LITERAL                         => reduce 1 tokens to multiplying_operator 94.1
   NUMERIC_LITERAL                        => reduce 1 tokens to multiplying_operator 94.1
   IDENTIFIER                             => reduce 1 tokens to multiplying_operator 94.1
   default                                => ERROR

   Minimal_Complete_Action => multiplying_operator 94.1

State 99:
     94.0:multiplying_operator <= STAR ^

   LEFT_PAREN                             => reduce 1 tokens to multiplying_operator 94.0
   NOT                                    => reduce 1 tokens to multiplying_operator 94.0
   STRING_LITERAL                         => reduce 1 tokens to multiplying_operator 94.0
   NUMERIC_LITERAL                        => reduce 1 tokens to multiplying_operator 94.0
   IDENTIFIER                             => reduce 1 tokens to multiplying_operator 94.0
   default                                => ERROR

   Minimal_Complete_Action => multiplying_operator 94.0

State 100:
    122.1:term <= term multiplying_operator ^ factor

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   factor                                 goto state 169
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   selected_component                     goto state 29

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 101:
    113.0:simple_expression <= unary_adding_operator term_binary_adding_operator_list ^
    136.1:term_binary_adding_operator_list <= term_binary_adding_operator_list ^ binary_adding_operator term

   AND                                    => reduce 2 tokens to simple_expression 113.0
   IS                                     => reduce 2 tokens to simple_expression 113.0
   LOOP                                   => reduce 2 tokens to simple_expression 113.0
   OR                                     => reduce 2 tokens to simple_expression 113.0
   RIGHT_PAREN                            => reduce 2 tokens to simple_expression 113.0
   THEN                                   => reduce 2 tokens to simple_expression 113.0
   XOR                                    => reduce 2 tokens to simple_expression 113.0
   AMPERSAND                              => shift and goto state 102 62.2
   COLON_EQUAL                            => reduce 2 tokens to simple_expression 113.0
   COMMA                                  => reduce 2 tokens to simple_expression 113.0
   DOT_DOT                                => reduce 2 tokens to simple_expression 113.0
   EQUAL                                  => reduce 2 tokens to simple_expression 113.0
   GREATER                                => reduce 2 tokens to simple_expression 113.0
   GREATER_EQUAL                          => reduce 2 tokens to simple_expression 113.0
   LESS                                   => reduce 2 tokens to simple_expression 113.0
   LESS_EQUAL                             => reduce 2 tokens to simple_expression 113.0
   MINUS                                  => shift and goto state 103 62.1
   PLUS                                   => shift and goto state 104 62.0
   SEMICOLON                              => reduce 2 tokens to simple_expression 113.0
   SLASH_EQUAL                            => reduce 2 tokens to simple_expression 113.0
   default                                => ERROR

   binary_adding_operator                 goto state 105

   Minimal_Complete_Action => simple_expression 113.0

State 102:
     62.2:binary_adding_operator <= AMPERSAND ^

   LEFT_PAREN                             => reduce 1 tokens to binary_adding_operator 62.2
   NOT                                    => reduce 1 tokens to binary_adding_operator 62.2
   STRING_LITERAL                         => reduce 1 tokens to binary_adding_operator 62.2
   NUMERIC_LITERAL                        => reduce 1 tokens to binary_adding_operator 62.2
   IDENTIFIER                             => reduce 1 tokens to binary_adding_operator 62.2
   default                                => ERROR

   Minimal_Complete_Action => binary_adding_operator 62.2

State 103:
     62.1:binary_adding_operator <= MINUS ^

   LEFT_PAREN                             => reduce 1 tokens to binary_adding_operator 62.1
   NOT                                    => reduce 1 tokens to binary_adding_operator 62.1
   STRING_LITERAL                         => reduce 1 tokens to binary_adding_operator 62.1
   NUMERIC_LITERAL                        => reduce 1 tokens to binary_adding_operator 62.1
   IDENTIFIER                             => reduce 1 tokens to binary_adding_operator 62.1
   default                                => ERROR

   Minimal_Complete_Action => binary_adding_operator 62.1

State 104:
     62.0:binary_adding_operator <= PLUS ^

   LEFT_PAREN                             => reduce 1 tokens to binary_adding_operator 62.0
   NOT                                    => reduce 1 tokens to binary_adding_operator 62.0
   STRING_LITERAL                         => reduce 1 tokens to binary_adding_operator 62.0
   NUMERIC_LITERAL                        => reduce 1 tokens to binary_adding_operator 62.0
   IDENTIFIER                             => reduce 1 tokens to binary_adding_operator 62.0
   default                                => ERROR

   Minimal_Complete_Action => binary_adding_operator 62.0

State 105:
    136.1:term_binary_adding_operator_list <= term_binary_adding_operator_list binary_adding_operator ^ term

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   selected_component                     goto state 29
   term                                   goto state 170

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 106:
     79.2:exit_statement <= EXIT WHEN expression ^ SEMICOLON

   SEMICOLON                              => shift and goto state 171 79.2
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 79.2

State 107:
     79.0:exit_statement <= EXIT IDENTIFIER WHEN ^ expression SEMICOLON

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   expression                             goto state 172
   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 108:
     79.1:exit_statement <= EXIT IDENTIFIER SEMICOLON ^

   BEGIN                                  => reduce 3 tokens to exit_statement 79.1
   CASE                                   => reduce 3 tokens to exit_statement 79.1
   DECLARE                                => reduce 3 tokens to exit_statement 79.1
   ELSE                                   => reduce 3 tokens to exit_statement 79.1
   ELSIF                                  => reduce 3 tokens to exit_statement 79.1
   END                                    => reduce 3 tokens to exit_statement 79.1
   EXIT                                   => reduce 3 tokens to exit_statement 79.1
   EXCEPTION                              => reduce 3 tokens to exit_statement 79.1
   FOR                                    => reduce 3 tokens to exit_statement 79.1
   FUNCTION                               => reduce 3 tokens to exit_statement 79.1
   IF                                     => reduce 3 tokens to exit_statement 79.1
   LOOP                                   => reduce 3 tokens to exit_statement 79.1
   PACKAGE                                => reduce 3 tokens to exit_statement 79.1
   PROCEDURE                              => reduce 3 tokens to exit_statement 79.1
   RETURN                                 => reduce 3 tokens to exit_statement 79.1
   WHEN                                   => reduce 3 tokens to exit_statement 79.1
   IDENTIFIER                             => reduce 3 tokens to exit_statement 79.1
   Wisi_EOI                               => reduce 3 tokens to exit_statement 79.1
   default                                => ERROR

   Minimal_Complete_Action => exit_statement 79.1

State 109:
     92.0:iteration_scheme <= FOR IDENTIFIER IN ^ discrete_subtype_definition

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   discrete_subtype_definition            goto state 173
   factor                                 goto state 44
   name                                   goto state 174
   paren_expression                       goto state 46
   primary                                goto state 47
   range_g                                goto state 175
   selected_component                     goto state 29
   simple_expression                      goto state 176
   subtype_indication                     goto state 177
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => IDENTIFIER 95.2

State 110:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN
     84.0:formal_part <= LEFT_PAREN ^ parameter_specification_SEMICOLON_list RIGHT_PAREN
     95.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 178 60.0
   default                                => ERROR

   association                            goto state 147
   association_list                       goto state 148
   expression                             goto state 149
   factor                                 goto state 44
   name                                   goto state 45
   parameter_specification                goto state 179
   paren_expression                       goto state 46
   primary                                goto state 47
   range_g                                goto state 150
   range_list                             goto state 151
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 152
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   parameter_specification_SEMICOLON_list goto state 180
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 111:
     99.1:parameter_and_result_profile <= RETURN ^ IDENTIFIER

   IDENTIFIER                             => shift and goto state 181 99.1
   default                                => ERROR

   Minimal_Complete_Action => IDENTIFIER 99.1

State 112:
     99.0:parameter_and_result_profile <= formal_part ^ RETURN IDENTIFIER

   RETURN                                 => shift and goto state 182 99.0
   default                                => ERROR

   Minimal_Complete_Action => RETURN 99.0

State 113:
     86.0:function_specification <= FUNCTION name parameter_and_result_profile ^

   IS                                     => reduce 3 tokens to function_specification 86.0
   WITH                                   => reduce 3 tokens to function_specification 86.0
   SEMICOLON                              => reduce 3 tokens to function_specification 86.0
   default                                => ERROR

   Minimal_Complete_Action => function_specification 86.0

State 114:
     90.0:if_statement <= IF expression THEN ^ sequence_of_statements ELSIF_expression_list ELSE sequence_of_statements END IF SEMICOLON
     90.1:if_statement <= IF expression THEN ^ sequence_of_statements ELSIF_expression_list END IF SEMICOLON
     90.2:if_statement <= IF expression THEN ^ sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON
     90.3:if_statement <= IF expression THEN ^ sequence_of_statements END IF SEMICOLON

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   ELSE                                   => reduce 0 tokens to sequence_of_statements 112.1
   ELSIF                                  => reduce 0 tokens to sequence_of_statements 112.1
   END                                    => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                                   => shift and goto state 2 79.0
   FOR                                    => shift and goto state 3 92.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   RETURN                                 => shift and goto state 9 82.0
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   procedure_call_statement               goto state 27
   selected_component                     goto state 29
   sequence_of_statements                 goto state 183
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 60
   statement_list                         goto state 61

   Minimal_Complete_Action => sequence_of_statements 112.1

State 115:
     93.1:loop_statement <= LOOP sequence_of_statements END ^ LOOP identifier_opt SEMICOLON

   LOOP                                   => shift and goto state 184 93.1
   default                                => ERROR

   Minimal_Complete_Action => LOOP 93.1

State 116:
    135.1:statement_list <= statement_list statement ^

   BEGIN                                  => reduce 2 tokens to statement_list 135.1
   CASE                                   => reduce 2 tokens to statement_list 135.1
   DECLARE                                => reduce 2 tokens to statement_list 135.1
   ELSE                                   => reduce 2 tokens to statement_list 135.1
   ELSIF                                  => reduce 2 tokens to statement_list 135.1
   END                                    => reduce 2 tokens to statement_list 135.1
   EXIT                                   => reduce 2 tokens to statement_list 135.1
   EXCEPTION                              => reduce 2 tokens to statement_list 135.1
   FOR                                    => reduce 2 tokens to statement_list 135.1
   IF                                     => reduce 2 tokens to statement_list 135.1
   LOOP                                   => reduce 2 tokens to statement_list 135.1
   RETURN                                 => reduce 2 tokens to statement_list 135.1
   WHEN                                   => reduce 2 tokens to statement_list 135.1
   IDENTIFIER                             => reduce 2 tokens to statement_list 135.1
   default                                => ERROR

   Minimal_Complete_Action => statement_list 135.1

State 117:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     95.1:name <= name ^ actual_parameter_part
     98.0:package_body <= PACKAGE BODY name ^ aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     98.1:package_body <= PACKAGE BODY name ^ aspect_specification IS declarative_part END name_opt SEMICOLON
     98.2:package_body <= PACKAGE BODY name ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     98.3:package_body <= PACKAGE BODY name ^ IS declarative_part END name_opt SEMICOLON
    111.0:selected_component <= name ^ DOT IDENTIFIER

   IS                                     => shift and goto state 185 98.2
   LEFT_PAREN                             => shift and goto state 73 57.0
   WITH                                   => shift and goto state 79 58.0
   DOT                                    => shift and goto state 75 111.0
   default                                => ERROR

   actual_parameter_part                  goto state 77
   aspect_specification                   goto state 186

   Minimal_Complete_Action => IS 98.2

State 118:
     87.0:generic_instantiation <= PACKAGE name IS ^ NEW name SEMICOLON

   NEW                                    => shift and goto state 187 87.0
   default                                => ERROR

   Minimal_Complete_Action => NEW 87.0

State 119:
     87.1:generic_instantiation <= PROCEDURE name IS ^ NEW name SEMICOLON

   NEW                                    => shift and goto state 188 87.1
   default                                => ERROR

   Minimal_Complete_Action => NEW 87.1

State 120:
    100.0:parameter_profile <= formal_part ^

   IS                                     => reduce 1 tokens to parameter_profile 100.0
   WITH                                   => reduce 1 tokens to parameter_profile 100.0
   SEMICOLON                              => reduce 1 tokens to parameter_profile 100.0
   default                                => ERROR

   Minimal_Complete_Action => parameter_profile 100.0

State 121:
    105.0:procedure_specification <= PROCEDURE name parameter_profile ^

   IS                                     => reduce 3 tokens to procedure_specification 105.0
   WITH                                   => reduce 3 tokens to procedure_specification 105.0
   SEMICOLON                              => reduce 3 tokens to procedure_specification 105.0
   default                                => ERROR

   Minimal_Complete_Action => procedure_specification 105.0

State 122:
     81.0:extended_return_object_declaration <= IDENTIFIER COLON ^ subtype_indication

   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   name                                   goto state 189
   selected_component                     goto state 29
   subtype_indication                     goto state 190

   Minimal_Complete_Action => IDENTIFIER 95.2

State 123:
    114.0:simple_return_statement <= RETURN expression SEMICOLON ^

   BEGIN                                  => reduce 3 tokens to simple_return_statement 114.0
   CASE                                   => reduce 3 tokens to simple_return_statement 114.0
   DECLARE                                => reduce 3 tokens to simple_return_statement 114.0
   ELSE                                   => reduce 3 tokens to simple_return_statement 114.0
   ELSIF                                  => reduce 3 tokens to simple_return_statement 114.0
   END                                    => reduce 3 tokens to simple_return_statement 114.0
   EXIT                                   => reduce 3 tokens to simple_return_statement 114.0
   EXCEPTION                              => reduce 3 tokens to simple_return_statement 114.0
   FOR                                    => reduce 3 tokens to simple_return_statement 114.0
   FUNCTION                               => reduce 3 tokens to simple_return_statement 114.0
   IF                                     => reduce 3 tokens to simple_return_statement 114.0
   LOOP                                   => reduce 3 tokens to simple_return_statement 114.0
   PACKAGE                                => reduce 3 tokens to simple_return_statement 114.0
   PROCEDURE                              => reduce 3 tokens to simple_return_statement 114.0
   RETURN                                 => reduce 3 tokens to simple_return_statement 114.0
   WHEN                                   => reduce 3 tokens to simple_return_statement 114.0
   IDENTIFIER                             => reduce 3 tokens to simple_return_statement 114.0
   Wisi_EOI                               => reduce 3 tokens to simple_return_statement 114.0
   default                                => ERROR

   Minimal_Complete_Action => simple_return_statement 114.0

State 124:
     82.0:extended_return_statement <= RETURN extended_return_object_declaration SEMICOLON ^

   BEGIN                                  => reduce 3 tokens to extended_return_statement 82.0
   CASE                                   => reduce 3 tokens to extended_return_statement 82.0
   DECLARE                                => reduce 3 tokens to extended_return_statement 82.0
   ELSE                                   => reduce 3 tokens to extended_return_statement 82.0
   ELSIF                                  => reduce 3 tokens to extended_return_statement 82.0
   END                                    => reduce 3 tokens to extended_return_statement 82.0
   EXIT                                   => reduce 3 tokens to extended_return_statement 82.0
   EXCEPTION                              => reduce 3 tokens to extended_return_statement 82.0
   FOR                                    => reduce 3 tokens to extended_return_statement 82.0
   FUNCTION                               => reduce 3 tokens to extended_return_statement 82.0
   IF                                     => reduce 3 tokens to extended_return_statement 82.0
   LOOP                                   => reduce 3 tokens to extended_return_statement 82.0
   PACKAGE                                => reduce 3 tokens to extended_return_statement 82.0
   PROCEDURE                              => reduce 3 tokens to extended_return_statement 82.0
   RETURN                                 => reduce 3 tokens to extended_return_statement 82.0
   WHEN                                   => reduce 3 tokens to extended_return_statement 82.0
   IDENTIFIER                             => reduce 3 tokens to extended_return_statement 82.0
   Wisi_EOI                               => reduce 3 tokens to extended_return_statement 82.0
   default                                => ERROR

   Minimal_Complete_Action => extended_return_statement 82.0

State 125:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements ^ END identifier_opt SEMICOLON

   END                                    => shift and goto state 191 64.1
   default                                => ERROR

   Minimal_Complete_Action => END 64.1

State 126:
     88.0:handled_sequence_of_statements <= sequence_of_statements ^ EXCEPTION exception_handler_list
     88.1:handled_sequence_of_statements <= sequence_of_statements ^ EXCEPTION
     88.2:handled_sequence_of_statements <= sequence_of_statements ^

   END                                    => reduce 1 tokens to handled_sequence_of_statements 88.2
   EXCEPTION                              => shift and goto state 192 88.0
   default                                => ERROR

   Minimal_Complete_Action => handled_sequence_of_statements 88.2

State 127:
     98.0:package_body <= PACKAGE ^ BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     98.1:package_body <= PACKAGE ^ BODY name aspect_specification IS declarative_part END name_opt SEMICOLON
     98.2:package_body <= PACKAGE ^ BODY name IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     98.3:package_body <= PACKAGE ^ BODY name IS declarative_part END name_opt SEMICOLON

   BODY                                   => shift and goto state 62 98.0
   default                                => ERROR

   Minimal_Complete_Action => BODY 98.0

State 128:
    105.0:procedure_specification <= PROCEDURE ^ name parameter_profile

   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   name                                   goto state 193
   selected_component                     goto state 29

   Minimal_Complete_Action => IDENTIFIER 95.2

State 129:
     85.0:full_type_declaration <= TYPE ^ IDENTIFIER IS type_definition SEMICOLON

   IDENTIFIER                             => shift and goto state 194 85.0
   default                                => ERROR

   Minimal_Complete_Action => IDENTIFIER 85.0

State 130:
     97.0:object_declaration <= IDENTIFIER ^ COLON subtype_indication COLON_EQUAL expression SEMICOLON
     97.1:object_declaration <= IDENTIFIER ^ COLON subtype_indication SEMICOLON

   COLON                                  => shift and goto state 195 97.0
   default                                => ERROR

   Minimal_Complete_Action => COLON 97.0

State 131:
     73.0:declaration <= body_g ^

   BEGIN                                  => reduce 1 tokens to declaration 73.0
   END                                    => reduce 1 tokens to declaration 73.0
   FUNCTION                               => reduce 1 tokens to declaration 73.0
   PACKAGE                                => reduce 1 tokens to declaration 73.0
   PROCEDURE                              => reduce 1 tokens to declaration 73.0
   TYPE                                   => reduce 1 tokens to declaration 73.0
   IDENTIFIER                             => reduce 1 tokens to declaration 73.0
   default                                => ERROR

   Minimal_Complete_Action => declaration 73.0

State 132:
     65.1:body_g <= body_stub ^

   BEGIN                                  => reduce 1 tokens to body_g 65.1
   END                                    => reduce 1 tokens to body_g 65.1
   FUNCTION                               => reduce 1 tokens to body_g 65.1
   PACKAGE                                => reduce 1 tokens to body_g 65.1
   PROCEDURE                              => reduce 1 tokens to body_g 65.1
   TYPE                                   => reduce 1 tokens to body_g 65.1
   IDENTIFIER                             => reduce 1 tokens to body_g 65.1
   default                                => ERROR

   Minimal_Complete_Action => body_g 65.1

State 133:
    127.0:declaration_list <= declaration ^

   BEGIN                                  => reduce 1 tokens to declaration_list 127.0
   END                                    => reduce 1 tokens to declaration_list 127.0
   FUNCTION                               => reduce 1 tokens to declaration_list 127.0
   PACKAGE                                => reduce 1 tokens to declaration_list 127.0
   PROCEDURE                              => reduce 1 tokens to declaration_list 127.0
   TYPE                                   => reduce 1 tokens to declaration_list 127.0
   IDENTIFIER                             => reduce 1 tokens to declaration_list 127.0
   default                                => ERROR

   Minimal_Complete_Action => declaration_list 127.0

State 134:
     64.0:block_statement <= block_label_opt DECLARE declarative_part ^ BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON

   BEGIN                                  => shift and goto state 196 64.0
   default                                => ERROR

   Minimal_Complete_Action => BEGIN 64.0

State 135:
    123.0:type_declaration <= full_type_declaration ^

   BEGIN                                  => reduce 1 tokens to type_declaration 123.0
   END                                    => reduce 1 tokens to type_declaration 123.0
   FUNCTION                               => reduce 1 tokens to type_declaration 123.0
   PACKAGE                                => reduce 1 tokens to type_declaration 123.0
   PROCEDURE                              => reduce 1 tokens to type_declaration 123.0
   TYPE                                   => reduce 1 tokens to type_declaration 123.0
   IDENTIFIER                             => reduce 1 tokens to type_declaration 123.0
   default                                => ERROR

   Minimal_Complete_Action => type_declaration 123.0

State 136:
     73.1:declaration <= object_declaration ^

   BEGIN                                  => reduce 1 tokens to declaration 73.1
   END                                    => reduce 1 tokens to declaration 73.1
   FUNCTION                               => reduce 1 tokens to declaration 73.1
   PACKAGE                                => reduce 1 tokens to declaration 73.1
   PROCEDURE                              => reduce 1 tokens to declaration 73.1
   TYPE                                   => reduce 1 tokens to declaration 73.1
   IDENTIFIER                             => reduce 1 tokens to declaration 73.1
   default                                => ERROR

   Minimal_Complete_Action => declaration 73.1

State 137:
    106.0:proper_body <= package_body ^

   BEGIN                                  => reduce 1 tokens to proper_body 106.0
   END                                    => reduce 1 tokens to proper_body 106.0
   FUNCTION                               => reduce 1 tokens to proper_body 106.0
   PACKAGE                                => reduce 1 tokens to proper_body 106.0
   PROCEDURE                              => reduce 1 tokens to proper_body 106.0
   TYPE                                   => reduce 1 tokens to proper_body 106.0
   IDENTIFIER                             => reduce 1 tokens to proper_body 106.0
   default                                => ERROR

   Minimal_Complete_Action => proper_body 106.0

State 138:
     65.0:body_g <= proper_body ^

   BEGIN                                  => reduce 1 tokens to body_g 65.0
   END                                    => reduce 1 tokens to body_g 65.0
   FUNCTION                               => reduce 1 tokens to body_g 65.0
   PACKAGE                                => reduce 1 tokens to body_g 65.0
   PROCEDURE                              => reduce 1 tokens to body_g 65.0
   TYPE                                   => reduce 1 tokens to body_g 65.0
   IDENTIFIER                             => reduce 1 tokens to body_g 65.0
   default                                => ERROR

   Minimal_Complete_Action => body_g 65.0

State 139:
    106.1:proper_body <= subprogram_body ^

   BEGIN                                  => reduce 1 tokens to proper_body 106.1
   END                                    => reduce 1 tokens to proper_body 106.1
   FUNCTION                               => reduce 1 tokens to proper_body 106.1
   PACKAGE                                => reduce 1 tokens to proper_body 106.1
   PROCEDURE                              => reduce 1 tokens to proper_body 106.1
   TYPE                                   => reduce 1 tokens to proper_body 106.1
   IDENTIFIER                             => reduce 1 tokens to proper_body 106.1
   default                                => ERROR

   Minimal_Complete_Action => proper_body 106.1

State 140:
     66.0:body_stub <= subprogram_body_stub ^

   BEGIN                                  => reduce 1 tokens to body_stub 66.0
   END                                    => reduce 1 tokens to body_stub 66.0
   FUNCTION                               => reduce 1 tokens to body_stub 66.0
   PACKAGE                                => reduce 1 tokens to body_stub 66.0
   PROCEDURE                              => reduce 1 tokens to body_stub 66.0
   TYPE                                   => reduce 1 tokens to body_stub 66.0
   IDENTIFIER                             => reduce 1 tokens to body_stub 66.0
   default                                => ERROR

   Minimal_Complete_Action => body_stub 66.0

State 141:
     73.2:declaration <= subprogram_declaration ^

   BEGIN                                  => reduce 1 tokens to declaration 73.2
   END                                    => reduce 1 tokens to declaration 73.2
   FUNCTION                               => reduce 1 tokens to declaration 73.2
   PACKAGE                                => reduce 1 tokens to declaration 73.2
   PROCEDURE                              => reduce 1 tokens to declaration 73.2
   TYPE                                   => reduce 1 tokens to declaration 73.2
   IDENTIFIER                             => reduce 1 tokens to declaration 73.2
   default                                => ERROR

   Minimal_Complete_Action => declaration 73.2

State 142:
    117.0:subprogram_body <= subprogram_specification ^ aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    117.1:subprogram_body <= subprogram_specification ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    118.0:subprogram_body_stub <= subprogram_specification ^ IS SEPARATE SEMICOLON
    119.0:subprogram_declaration <= subprogram_specification ^ SEMICOLON

   IS                                     => shift and goto state 197 117.1
   WITH                                   => shift and goto state 79 58.0
   SEMICOLON                              => shift and goto state 80 119.0
   default                                => ERROR

   aspect_specification                   goto state 81

   Minimal_Complete_Action => SEMICOLON 119.0

State 143:
     73.3:declaration <= type_declaration ^

   BEGIN                                  => reduce 1 tokens to declaration 73.3
   END                                    => reduce 1 tokens to declaration 73.3
   FUNCTION                               => reduce 1 tokens to declaration 73.3
   PACKAGE                                => reduce 1 tokens to declaration 73.3
   PROCEDURE                              => reduce 1 tokens to declaration 73.3
   TYPE                                   => reduce 1 tokens to declaration 73.3
   IDENTIFIER                             => reduce 1 tokens to declaration 73.3
   default                                => ERROR

   Minimal_Complete_Action => declaration 73.3

State 144:
     74.0:declarative_part <= declaration_list ^
    127.1:declaration_list <= declaration_list ^ declaration

   BEGIN                                  => reduce 1 tokens to declarative_part 74.0
   END                                    => reduce 1 tokens to declarative_part 74.0
   FUNCTION                               => shift and goto state 4 86.0
   PACKAGE                                => shift and goto state 127 98.0
   PROCEDURE                              => shift and goto state 128 105.0
   TYPE                                   => shift and goto state 129 85.0
   IDENTIFIER                             => shift and goto state 130 97.0
   default                                => ERROR

   body_g                                 goto state 131
   body_stub                              goto state 132
   declaration                            goto state 198
   full_type_declaration                  goto state 135
   function_specification                 goto state 20
   object_declaration                     goto state 136
   package_body                           goto state 137
   procedure_specification                goto state 28
   proper_body                            goto state 138
   subprogram_body                        goto state 139
   subprogram_body_stub                   goto state 140
   subprogram_declaration                 goto state 141
   subprogram_specification               goto state 142
   type_declaration                       goto state 143

   Minimal_Complete_Action => declarative_part 74.0

State 145:
     93.0:loop_statement <= iteration_scheme LOOP sequence_of_statements ^ END LOOP identifier_opt SEMICOLON

   END                                    => shift and goto state 199 93.0
   default                                => ERROR

   Minimal_Complete_Action => END 93.0

State 146:
     60.0:association <= IDENTIFIER ^ EQUAL_GREATER expression
     95.2:name <= IDENTIFIER ^

   AND                                    => reduce 1 tokens to name 95.2
   IS                                     => reduce 1 tokens to name 95.2
   LEFT_PAREN                             => reduce 1 tokens to name 95.2
   OR                                     => reduce 1 tokens to name 95.2
   RANGE                                  => reduce 1 tokens to name 95.2
   RIGHT_PAREN                            => reduce 1 tokens to name 95.2
   XOR                                    => reduce 1 tokens to name 95.2
   AMPERSAND                              => reduce 1 tokens to name 95.2
   COMMA                                  => reduce 1 tokens to name 95.2
   DOT                                    => reduce 1 tokens to name 95.2
   DOT_DOT                                => reduce 1 tokens to name 95.2
   EQUAL                                  => reduce 1 tokens to name 95.2
   EQUAL_GREATER                          => shift and goto state 200 60.0
   GREATER                                => reduce 1 tokens to name 95.2
   GREATER_EQUAL                          => reduce 1 tokens to name 95.2
   LESS                                   => reduce 1 tokens to name 95.2
   LESS_EQUAL                             => reduce 1 tokens to name 95.2
   MINUS                                  => reduce 1 tokens to name 95.2
   PLUS                                   => reduce 1 tokens to name 95.2
   SLASH                                  => reduce 1 tokens to name 95.2
   SLASH_EQUAL                            => reduce 1 tokens to name 95.2
   STAR                                   => reduce 1 tokens to name 95.2
   default                                => ERROR

   Minimal_Complete_Action => (EQUAL_GREATER 60.0, name 95.2)

State 147:
     61.0:association_list <= association ^

   IS                                     => reduce 1 tokens to association_list 61.0
   RIGHT_PAREN                            => reduce 1 tokens to association_list 61.0
   COMMA                                  => reduce 1 tokens to association_list 61.0
   default                                => ERROR

   Minimal_Complete_Action => association_list 61.0

State 148:
     57.0:actual_parameter_part <= LEFT_PAREN association_list ^ RIGHT_PAREN
     61.1:association_list <= association_list ^ COMMA association

   RIGHT_PAREN                            => shift and goto state 201 57.0
   COMMA                                  => shift and goto state 202 61.1
   default                                => ERROR

   Minimal_Complete_Action => RIGHT_PAREN 57.0

State 149:
     60.1:association <= expression ^

   IS                                     => reduce 1 tokens to association 60.1
   RIGHT_PAREN                            => reduce 1 tokens to association 60.1
   COMMA                                  => reduce 1 tokens to association 60.1
   default                                => ERROR

   Minimal_Complete_Action => association 60.1

State 150:
    108.1:range_list <= range_g ^

   RIGHT_PAREN                            => reduce 1 tokens to range_list 108.1
   COMMA                                  => reduce 1 tokens to range_list 108.1
   default                                => ERROR

   Minimal_Complete_Action => range_list 108.1

State 151:
     95.0:name <= name LEFT_PAREN range_list ^ RIGHT_PAREN
    108.0:range_list <= range_list ^ COMMA range_g

   RIGHT_PAREN                            => shift and goto state 203 95.0
   COMMA                                  => shift and goto state 204 108.0
   default                                => ERROR

   Minimal_Complete_Action => 

State 152:
    107.0:range_g <= simple_expression ^ DOT_DOT simple_expression
    109.0:relation <= simple_expression ^ relational_operator simple_expression
    109.1:relation <= simple_expression ^

   AND                                    => reduce 1 tokens to relation 109.1
   OR                                     => reduce 1 tokens to relation 109.1
   RIGHT_PAREN                            => reduce 1 tokens to relation 109.1
   XOR                                    => reduce 1 tokens to relation 109.1
   COMMA                                  => reduce 1 tokens to relation 109.1
   DOT_DOT                                => shift and goto state 205 107.0
   EQUAL                                  => shift and goto state 91 110.0
   GREATER                                => shift and goto state 92 110.4
   GREATER_EQUAL                          => shift and goto state 93 110.5
   LESS                                   => shift and goto state 94 110.2
   LESS_EQUAL                             => shift and goto state 95 110.3
   SLASH_EQUAL                            => shift and goto state 96 110.1
   default                                => ERROR

   relational_operator                    goto state 97

   Minimal_Complete_Action => relation 109.1

State 153:
     59.0:assignment_statement <= name COLON_EQUAL expression ^ SEMICOLON

   SEMICOLON                              => shift and goto state 206 59.0
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 59.0

State 154:
    111.0:selected_component <= name DOT IDENTIFIER ^

   AND                                    => reduce 3 tokens to selected_component 111.0
   IS                                     => reduce 3 tokens to selected_component 111.0
   LEFT_PAREN                             => reduce 3 tokens to selected_component 111.0
   LOOP                                   => reduce 3 tokens to selected_component 111.0
   OR                                     => reduce 3 tokens to selected_component 111.0
   RANGE                                  => reduce 3 tokens to selected_component 111.0
   RETURN                                 => reduce 3 tokens to selected_component 111.0
   RIGHT_PAREN                            => reduce 3 tokens to selected_component 111.0
   THEN                                   => reduce 3 tokens to selected_component 111.0
   WITH                                   => reduce 3 tokens to selected_component 111.0
   XOR                                    => reduce 3 tokens to selected_component 111.0
   AMPERSAND                              => reduce 3 tokens to selected_component 111.0
   COLON_EQUAL                            => reduce 3 tokens to selected_component 111.0
   COMMA                                  => reduce 3 tokens to selected_component 111.0
   DOT                                    => reduce 3 tokens to selected_component 111.0
   DOT_DOT                                => reduce 3 tokens to selected_component 111.0
   EQUAL                                  => reduce 3 tokens to selected_component 111.0
   EQUAL_GREATER                          => reduce 3 tokens to selected_component 111.0
   GREATER                                => reduce 3 tokens to selected_component 111.0
   GREATER_EQUAL                          => reduce 3 tokens to selected_component 111.0
   LESS                                   => reduce 3 tokens to selected_component 111.0
   LESS_EQUAL                             => reduce 3 tokens to selected_component 111.0
   MINUS                                  => reduce 3 tokens to selected_component 111.0
   PLUS                                   => reduce 3 tokens to selected_component 111.0
   SEMICOLON                              => reduce 3 tokens to selected_component 111.0
   SLASH                                  => reduce 3 tokens to selected_component 111.0
   SLASH_EQUAL                            => reduce 3 tokens to selected_component 111.0
   STAR                                   => reduce 3 tokens to selected_component 111.0
   default                                => ERROR

   Minimal_Complete_Action => selected_component 111.0

State 155:
    117.1:subprogram_body <= subprogram_specification IS declarative_part ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON

   BEGIN                                  => shift and goto state 207 117.1
   default                                => ERROR

   Minimal_Complete_Action => BEGIN 117.1

State 156:
     58.0:aspect_specification <= WITH association_list ^
     61.1:association_list <= association_list ^ COMMA association

   IS                                     => reduce 2 tokens to aspect_specification 58.0
   COMMA                                  => shift and goto state 202 61.1
   default                                => ERROR

   Minimal_Complete_Action => aspect_specification 58.0

State 157:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON

   BEGIN                                  => reduce 0 tokens to declarative_part 74.1
   FUNCTION                               => shift and goto state 4 86.0
   PACKAGE                                => shift and goto state 127 98.0
   PROCEDURE                              => shift and goto state 128 105.0
   TYPE                                   => shift and goto state 129 85.0
   IDENTIFIER                             => shift and goto state 130 97.0
   default                                => ERROR

   body_g                                 goto state 131
   body_stub                              goto state 132
   declaration                            goto state 133
   declarative_part                       goto state 208
   full_type_declaration                  goto state 135
   function_specification                 goto state 20
   object_declaration                     goto state 136
   package_body                           goto state 137
   procedure_specification                goto state 28
   proper_body                            goto state 138
   subprogram_body                        goto state 139
   subprogram_body_stub                   goto state 140
   subprogram_declaration                 goto state 141
   subprogram_specification               goto state 142
   type_declaration                       goto state 143
   declaration_list                       goto state 144

   Minimal_Complete_Action => declarative_part 74.1

State 158:
    102.0:paren_expression <= LEFT_PAREN expression RIGHT_PAREN ^

   AND                                    => reduce 3 tokens to paren_expression 102.0
   IS                                     => reduce 3 tokens to paren_expression 102.0
   LOOP                                   => reduce 3 tokens to paren_expression 102.0
   OR                                     => reduce 3 tokens to paren_expression 102.0
   RIGHT_PAREN                            => reduce 3 tokens to paren_expression 102.0
   THEN                                   => reduce 3 tokens to paren_expression 102.0
   XOR                                    => reduce 3 tokens to paren_expression 102.0
   AMPERSAND                              => reduce 3 tokens to paren_expression 102.0
   COLON_EQUAL                            => reduce 3 tokens to paren_expression 102.0
   COMMA                                  => reduce 3 tokens to paren_expression 102.0
   DOT_DOT                                => reduce 3 tokens to paren_expression 102.0
   EQUAL                                  => reduce 3 tokens to paren_expression 102.0
   GREATER                                => reduce 3 tokens to paren_expression 102.0
   GREATER_EQUAL                          => reduce 3 tokens to paren_expression 102.0
   LESS                                   => reduce 3 tokens to paren_expression 102.0
   LESS_EQUAL                             => reduce 3 tokens to paren_expression 102.0
   MINUS                                  => reduce 3 tokens to paren_expression 102.0
   PLUS                                   => reduce 3 tokens to paren_expression 102.0
   SEMICOLON                              => reduce 3 tokens to paren_expression 102.0
   SLASH                                  => reduce 3 tokens to paren_expression 102.0
   SLASH_EQUAL                            => reduce 3 tokens to paren_expression 102.0
   STAR                                   => reduce 3 tokens to paren_expression 102.0
   default                                => ERROR

   Minimal_Complete_Action => paren_expression 102.0

State 159:
     68.0:case_statement_alternative <= WHEN ^ NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements

   NUMERIC_LITERAL                        => shift and goto state 209 68.0
   default                                => ERROR

   Minimal_Complete_Action => NUMERIC_LITERAL 68.0

State 160:
    126.0:case_statement_alternative_list <= case_statement_alternative ^

   END                                    => reduce 1 tokens to case_statement_alternative_list 126.0
   WHEN                                   => reduce 1 tokens to case_statement_alternative_list 126.0
   default                                => ERROR

   Minimal_Complete_Action => case_statement_alternative_list 126.0

State 161:
     67.0:case_statement <= CASE expression IS case_statement_alternative_list ^ END CASE SEMICOLON
    126.1:case_statement_alternative_list <= case_statement_alternative_list ^ case_statement_alternative

   END                                    => shift and goto state 210 67.0
   WHEN                                   => shift and goto state 159 68.0
   default                                => ERROR

   case_statement_alternative             goto state 211

   Minimal_Complete_Action => END 67.0

State 162:
    129.0:AND_relation_list <= AND relation ^

   AND                                    => reduce 2 tokens to AND_relation_list 129.0
   IS                                     => reduce 2 tokens to AND_relation_list 129.0
   RIGHT_PAREN                            => reduce 2 tokens to AND_relation_list 129.0
   THEN                                   => reduce 2 tokens to AND_relation_list 129.0
   COMMA                                  => reduce 2 tokens to AND_relation_list 129.0
   SEMICOLON                              => reduce 2 tokens to AND_relation_list 129.0
   default                                => ERROR

   Minimal_Complete_Action => AND_relation_list 129.0

State 163:
    130.0:OR_relation_list <= OR relation ^

   IS                                     => reduce 2 tokens to OR_relation_list 130.0
   OR                                     => reduce 2 tokens to OR_relation_list 130.0
   RIGHT_PAREN                            => reduce 2 tokens to OR_relation_list 130.0
   THEN                                   => reduce 2 tokens to OR_relation_list 130.0
   COMMA                                  => reduce 2 tokens to OR_relation_list 130.0
   SEMICOLON                              => reduce 2 tokens to OR_relation_list 130.0
   default                                => ERROR

   Minimal_Complete_Action => OR_relation_list 130.0

State 164:
    131.0:XOR_relation_list <= XOR relation ^

   IS                                     => reduce 2 tokens to XOR_relation_list 131.0
   RIGHT_PAREN                            => reduce 2 tokens to XOR_relation_list 131.0
   THEN                                   => reduce 2 tokens to XOR_relation_list 131.0
   XOR                                    => reduce 2 tokens to XOR_relation_list 131.0
   COMMA                                  => reduce 2 tokens to XOR_relation_list 131.0
   SEMICOLON                              => reduce 2 tokens to XOR_relation_list 131.0
   default                                => ERROR

   Minimal_Complete_Action => XOR_relation_list 131.0

State 165:
    129.1:AND_relation_list <= AND_relation_list AND ^ relation

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 212
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 166:
    130.1:OR_relation_list <= OR_relation_list OR ^ relation

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 213
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 167:
    131.1:XOR_relation_list <= XOR_relation_list XOR ^ relation

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 214
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 168:
    109.0:relation <= simple_expression relational_operator simple_expression ^

   AND                                    => reduce 3 tokens to relation 109.0
   IS                                     => reduce 3 tokens to relation 109.0
   OR                                     => reduce 3 tokens to relation 109.0
   RIGHT_PAREN                            => reduce 3 tokens to relation 109.0
   THEN                                   => reduce 3 tokens to relation 109.0
   XOR                                    => reduce 3 tokens to relation 109.0
   COMMA                                  => reduce 3 tokens to relation 109.0
   SEMICOLON                              => reduce 3 tokens to relation 109.0
   default                                => ERROR

   Minimal_Complete_Action => relation 109.0

State 169:
    122.1:term <= term multiplying_operator factor ^

   AND                                    => reduce 3 tokens to term 122.1
   IS                                     => reduce 3 tokens to term 122.1
   LOOP                                   => reduce 3 tokens to term 122.1
   OR                                     => reduce 3 tokens to term 122.1
   RIGHT_PAREN                            => reduce 3 tokens to term 122.1
   THEN                                   => reduce 3 tokens to term 122.1
   XOR                                    => reduce 3 tokens to term 122.1
   AMPERSAND                              => reduce 3 tokens to term 122.1
   COLON_EQUAL                            => reduce 3 tokens to term 122.1
   COMMA                                  => reduce 3 tokens to term 122.1
   DOT_DOT                                => reduce 3 tokens to term 122.1
   EQUAL                                  => reduce 3 tokens to term 122.1
   GREATER                                => reduce 3 tokens to term 122.1
   GREATER_EQUAL                          => reduce 3 tokens to term 122.1
   LESS                                   => reduce 3 tokens to term 122.1
   LESS_EQUAL                             => reduce 3 tokens to term 122.1
   MINUS                                  => reduce 3 tokens to term 122.1
   PLUS                                   => reduce 3 tokens to term 122.1
   SEMICOLON                              => reduce 3 tokens to term 122.1
   SLASH                                  => reduce 3 tokens to term 122.1
   SLASH_EQUAL                            => reduce 3 tokens to term 122.1
   STAR                                   => reduce 3 tokens to term 122.1
   default                                => ERROR

   Minimal_Complete_Action => term 122.1

State 170:
    122.1:term <= term ^ multiplying_operator factor
    136.1:term_binary_adding_operator_list <= term_binary_adding_operator_list binary_adding_operator term ^

   AND                                    => reduce 3 tokens to term_binary_adding_operator_list 136.1
   IS                                     => reduce 3 tokens to term_binary_adding_operator_list 136.1
   LOOP                                   => reduce 3 tokens to term_binary_adding_operator_list 136.1
   OR                                     => reduce 3 tokens to term_binary_adding_operator_list 136.1
   RIGHT_PAREN                            => reduce 3 tokens to term_binary_adding_operator_list 136.1
   THEN                                   => reduce 3 tokens to term_binary_adding_operator_list 136.1
   XOR                                    => reduce 3 tokens to term_binary_adding_operator_list 136.1
   AMPERSAND                              => reduce 3 tokens to term_binary_adding_operator_list 136.1
   COLON_EQUAL                            => reduce 3 tokens to term_binary_adding_operator_list 136.1
   COMMA                                  => reduce 3 tokens to term_binary_adding_operator_list 136.1
   DOT_DOT                                => reduce 3 tokens to term_binary_adding_operator_list 136.1
   EQUAL                                  => reduce 3 tokens to term_binary_adding_operator_list 136.1
   GREATER                                => reduce 3 tokens to term_binary_adding_operator_list 136.1
   GREATER_EQUAL                          => reduce 3 tokens to term_binary_adding_operator_list 136.1
   LESS                                   => reduce 3 tokens to term_binary_adding_operator_list 136.1
   LESS_EQUAL                             => reduce 3 tokens to term_binary_adding_operator_list 136.1
   MINUS                                  => reduce 3 tokens to term_binary_adding_operator_list 136.1
   PLUS                                   => reduce 3 tokens to term_binary_adding_operator_list 136.1
   SEMICOLON                              => reduce 3 tokens to term_binary_adding_operator_list 136.1
   SLASH                                  => shift and goto state 98 94.1
   SLASH_EQUAL                            => reduce 3 tokens to term_binary_adding_operator_list 136.1
   STAR                                   => shift and goto state 99 94.0
   default                                => ERROR

   multiplying_operator                   goto state 100

   Minimal_Complete_Action => term_binary_adding_operator_list 136.1

State 171:
     79.2:exit_statement <= EXIT WHEN expression SEMICOLON ^

   BEGIN                                  => reduce 4 tokens to exit_statement 79.2
   CASE                                   => reduce 4 tokens to exit_statement 79.2
   DECLARE                                => reduce 4 tokens to exit_statement 79.2
   ELSE                                   => reduce 4 tokens to exit_statement 79.2
   ELSIF                                  => reduce 4 tokens to exit_statement 79.2
   END                                    => reduce 4 tokens to exit_statement 79.2
   EXIT                                   => reduce 4 tokens to exit_statement 79.2
   EXCEPTION                              => reduce 4 tokens to exit_statement 79.2
   FOR                                    => reduce 4 tokens to exit_statement 79.2
   FUNCTION                               => reduce 4 tokens to exit_statement 79.2
   IF                                     => reduce 4 tokens to exit_statement 79.2
   LOOP                                   => reduce 4 tokens to exit_statement 79.2
   PACKAGE                                => reduce 4 tokens to exit_statement 79.2
   PROCEDURE                              => reduce 4 tokens to exit_statement 79.2
   RETURN                                 => reduce 4 tokens to exit_statement 79.2
   WHEN                                   => reduce 4 tokens to exit_statement 79.2
   IDENTIFIER                             => reduce 4 tokens to exit_statement 79.2
   Wisi_EOI                               => reduce 4 tokens to exit_statement 79.2
   default                                => ERROR

   Minimal_Complete_Action => exit_statement 79.2

State 172:
     79.0:exit_statement <= EXIT IDENTIFIER WHEN expression ^ SEMICOLON

   SEMICOLON                              => shift and goto state 215 79.0
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 79.0

State 173:
     92.0:iteration_scheme <= FOR IDENTIFIER IN discrete_subtype_definition ^

   LOOP                                   => reduce 4 tokens to iteration_scheme 92.0
   default                                => ERROR

   Minimal_Complete_Action => iteration_scheme 92.0

State 174:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     95.1:name <= name ^ actual_parameter_part
    103.2:primary <= name ^
    111.0:selected_component <= name ^ DOT IDENTIFIER
    121.0:subtype_indication <= name ^ constraint
    121.1:subtype_indication <= name ^

   AND                                    => reduce 1 tokens to primary 103.2
   LEFT_PAREN                             => shift and goto state 216 57.0
   LOOP                                   => reduce 1 tokens to subtype_indication 121.1
   OR                                     => reduce 1 tokens to primary 103.2
   RANGE                                  => shift and goto state 217 72.0
   RIGHT_PAREN                            => reduce 1 tokens to primary 103.2,
                                             reduce 1 tokens to subtype_indication 121.1
   XOR                                    => reduce 1 tokens to primary 103.2
   AMPERSAND                              => reduce 1 tokens to primary 103.2
   COMMA                                  => reduce 1 tokens to primary 103.2
   DOT                                    => shift and goto state 75 111.0
   DOT_DOT                                => reduce 1 tokens to primary 103.2
   EQUAL                                  => reduce 1 tokens to primary 103.2
   GREATER                                => reduce 1 tokens to primary 103.2
   GREATER_EQUAL                          => reduce 1 tokens to primary 103.2
   LESS                                   => reduce 1 tokens to primary 103.2
   LESS_EQUAL                             => reduce 1 tokens to primary 103.2
   MINUS                                  => reduce 1 tokens to primary 103.2
   PLUS                                   => reduce 1 tokens to primary 103.2
   SLASH                                  => reduce 1 tokens to primary 103.2
   SLASH_EQUAL                            => reduce 1 tokens to primary 103.2
   STAR                                   => reduce 1 tokens to primary 103.2
   default                                => ERROR

   actual_parameter_part                  goto state 77
   constraint                             goto state 218
   index_constraint                       goto state 219

   Minimal_Complete_Action => (primary 103.2, RANGE 72.0, subtype_indication 121.1)

State 175:
     75.1:discrete_subtype_definition <= range_g ^

   LOOP                                   => reduce 1 tokens to discrete_subtype_definition 75.1
   default                                => ERROR

   Minimal_Complete_Action => discrete_subtype_definition 75.1

State 176:
    107.0:range_g <= simple_expression ^ DOT_DOT simple_expression

   DOT_DOT                                => shift and goto state 205 107.0
   default                                => ERROR

   Minimal_Complete_Action => DOT_DOT 107.0

State 177:
     75.0:discrete_subtype_definition <= subtype_indication ^

   LOOP                                   => reduce 1 tokens to discrete_subtype_definition 75.0
   RIGHT_PAREN                            => reduce 1 tokens to discrete_subtype_definition 75.0
   default                                => ERROR

   Minimal_Complete_Action => discrete_subtype_definition 75.0

State 178:
     60.0:association <= IDENTIFIER ^ EQUAL_GREATER expression
     95.2:name <= IDENTIFIER ^
    101.0:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER COLON_EQUAL expression
    101.1:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER

   AND                                    => reduce 1 tokens to name 95.2
   LEFT_PAREN                             => reduce 1 tokens to name 95.2
   OR                                     => reduce 1 tokens to name 95.2
   RIGHT_PAREN                            => reduce 1 tokens to name 95.2
   XOR                                    => reduce 1 tokens to name 95.2
   AMPERSAND                              => reduce 1 tokens to name 95.2
   COLON                                  => shift and goto state 220 101.0
   COMMA                                  => reduce 1 tokens to name 95.2
   DOT                                    => reduce 1 tokens to name 95.2
   DOT_DOT                                => reduce 1 tokens to name 95.2
   EQUAL                                  => reduce 1 tokens to name 95.2
   EQUAL_GREATER                          => shift and goto state 200 60.0
   GREATER                                => reduce 1 tokens to name 95.2
   GREATER_EQUAL                          => reduce 1 tokens to name 95.2
   LESS                                   => reduce 1 tokens to name 95.2
   LESS_EQUAL                             => reduce 1 tokens to name 95.2
   MINUS                                  => reduce 1 tokens to name 95.2
   PLUS                                   => reduce 1 tokens to name 95.2
   SLASH                                  => reduce 1 tokens to name 95.2
   SLASH_EQUAL                            => reduce 1 tokens to name 95.2
   STAR                                   => reduce 1 tokens to name 95.2
   default                                => ERROR

   Minimal_Complete_Action => (EQUAL_GREATER 60.0, name 95.2, COLON 101.0)

State 179:
    132.0:parameter_specification_SEMICOLON_list <= parameter_specification ^

   RIGHT_PAREN                            => reduce 1 tokens to parameter_specification_SEMICOLON_list 132.0
   SEMICOLON                              => reduce 1 tokens to parameter_specification_SEMICOLON_list 132.0
   default                                => ERROR

   Minimal_Complete_Action => parameter_specification_SEMICOLON_list 132.0

State 180:
     84.0:formal_part <= LEFT_PAREN parameter_specification_SEMICOLON_list ^ RIGHT_PAREN
    132.1:parameter_specification_SEMICOLON_list <= parameter_specification_SEMICOLON_list ^ SEMICOLON parameter_specification

   RIGHT_PAREN                            => shift and goto state 221 84.0
   SEMICOLON                              => shift and goto state 222 132.1
   default                                => ERROR

   Minimal_Complete_Action => RIGHT_PAREN 84.0

State 181:
     99.1:parameter_and_result_profile <= RETURN IDENTIFIER ^

   IS                                     => reduce 2 tokens to parameter_and_result_profile 99.1
   WITH                                   => reduce 2 tokens to parameter_and_result_profile 99.1
   SEMICOLON                              => reduce 2 tokens to parameter_and_result_profile 99.1
   default                                => ERROR

   Minimal_Complete_Action => parameter_and_result_profile 99.1

State 182:
     99.0:parameter_and_result_profile <= formal_part RETURN ^ IDENTIFIER

   IDENTIFIER                             => shift and goto state 223 99.0
   default                                => ERROR

   Minimal_Complete_Action => IDENTIFIER 99.0

State 183:
     90.0:if_statement <= IF expression THEN sequence_of_statements ^ ELSIF_expression_list ELSE sequence_of_statements END IF SEMICOLON
     90.1:if_statement <= IF expression THEN sequence_of_statements ^ ELSIF_expression_list END IF SEMICOLON
     90.2:if_statement <= IF expression THEN sequence_of_statements ^ ELSE sequence_of_statements END IF SEMICOLON
     90.3:if_statement <= IF expression THEN sequence_of_statements ^ END IF SEMICOLON

   ELSE                                   => shift and goto state 224 90.2
   ELSIF                                  => shift and goto state 225 134.0
   END                                    => shift and goto state 226 90.3
   default                                => ERROR

   ELSIF_expression_list                  goto state 227

   Minimal_Complete_Action => END 90.3

State 184:
     93.1:loop_statement <= LOOP sequence_of_statements END LOOP ^ identifier_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to identifier_opt 89.1
   IDENTIFIER                             => shift and goto state 228 89.0
   default                                => ERROR

   identifier_opt                         goto state 229

   Minimal_Complete_Action => identifier_opt 89.1

State 185:
     98.2:package_body <= PACKAGE BODY name IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     98.3:package_body <= PACKAGE BODY name IS ^ declarative_part END name_opt SEMICOLON

   BEGIN                                  => reduce 0 tokens to declarative_part 74.1
   END                                    => reduce 0 tokens to declarative_part 74.1
   FUNCTION                               => shift and goto state 4 86.0
   PACKAGE                                => shift and goto state 127 98.0
   PROCEDURE                              => shift and goto state 128 105.0
   TYPE                                   => shift and goto state 129 85.0
   IDENTIFIER                             => shift and goto state 130 97.0
   default                                => ERROR

   body_g                                 goto state 131
   body_stub                              goto state 132
   declaration                            goto state 133
   declarative_part                       goto state 230
   full_type_declaration                  goto state 135
   function_specification                 goto state 20
   object_declaration                     goto state 136
   package_body                           goto state 137
   procedure_specification                goto state 28
   proper_body                            goto state 138
   subprogram_body                        goto state 139
   subprogram_body_stub                   goto state 140
   subprogram_declaration                 goto state 141
   subprogram_specification               goto state 142
   type_declaration                       goto state 143
   declaration_list                       goto state 144

   Minimal_Complete_Action => declarative_part 74.1

State 186:
     98.0:package_body <= PACKAGE BODY name aspect_specification ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     98.1:package_body <= PACKAGE BODY name aspect_specification ^ IS declarative_part END name_opt SEMICOLON

   IS                                     => shift and goto state 231 98.0
   default                                => ERROR

   Minimal_Complete_Action => IS 98.0

State 187:
     87.0:generic_instantiation <= PACKAGE name IS NEW ^ name SEMICOLON

   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   name                                   goto state 232
   selected_component                     goto state 29

   Minimal_Complete_Action => IDENTIFIER 95.2

State 188:
     87.1:generic_instantiation <= PROCEDURE name IS NEW ^ name SEMICOLON

   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   name                                   goto state 233
   selected_component                     goto state 29

   Minimal_Complete_Action => IDENTIFIER 95.2

State 189:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     95.1:name <= name ^ actual_parameter_part
    111.0:selected_component <= name ^ DOT IDENTIFIER
    121.0:subtype_indication <= name ^ constraint
    121.1:subtype_indication <= name ^

   LEFT_PAREN                             => shift and goto state 216 57.0
   RANGE                                  => shift and goto state 217 72.0
   COLON_EQUAL                            => reduce 1 tokens to subtype_indication 121.1
   DOT                                    => shift and goto state 75 111.0
   SEMICOLON                              => reduce 1 tokens to subtype_indication 121.1
   default                                => ERROR

   actual_parameter_part                  goto state 77
   constraint                             goto state 218
   index_constraint                       goto state 219

   Minimal_Complete_Action => (RANGE 72.0, subtype_indication 121.1)

State 190:
     81.0:extended_return_object_declaration <= IDENTIFIER COLON subtype_indication ^

   SEMICOLON                              => reduce 3 tokens to extended_return_object_declaration 81.0
   default                                => ERROR

   Minimal_Complete_Action => extended_return_object_declaration 81.0

State 191:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END ^ identifier_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to identifier_opt 89.1
   IDENTIFIER                             => shift and goto state 228 89.0
   default                                => ERROR

   identifier_opt                         goto state 234

   Minimal_Complete_Action => identifier_opt 89.1

State 192:
     88.0:handled_sequence_of_statements <= sequence_of_statements EXCEPTION ^ exception_handler_list
     88.1:handled_sequence_of_statements <= sequence_of_statements EXCEPTION ^

   END                                    => reduce 2 tokens to handled_sequence_of_statements 88.1
   WHEN                                   => shift and goto state 235 78.0
   default                                => ERROR

   exception_handler                      goto state 236
   exception_handler_list                 goto state 237

   Minimal_Complete_Action => handled_sequence_of_statements 88.1

State 193:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     95.1:name <= name ^ actual_parameter_part
    105.0:procedure_specification <= PROCEDURE name ^ parameter_profile
    111.0:selected_component <= name ^ DOT IDENTIFIER

   IS                                     => reduce 0 tokens to parameter_profile 100.1
   LEFT_PAREN                             => shift and goto state 110 57.0
   WITH                                   => reduce 0 tokens to parameter_profile 100.1
   DOT                                    => shift and goto state 75 111.0
   SEMICOLON                              => reduce 0 tokens to parameter_profile 100.1
   default                                => ERROR

   actual_parameter_part                  goto state 77
   formal_part                            goto state 120
   parameter_profile                      goto state 121

   Minimal_Complete_Action => parameter_profile 100.1

State 194:
     85.0:full_type_declaration <= TYPE IDENTIFIER ^ IS type_definition SEMICOLON

   IS                                     => shift and goto state 238 85.0
   default                                => ERROR

   Minimal_Complete_Action => IS 85.0

State 195:
     97.0:object_declaration <= IDENTIFIER COLON ^ subtype_indication COLON_EQUAL expression SEMICOLON
     97.1:object_declaration <= IDENTIFIER COLON ^ subtype_indication SEMICOLON

   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   name                                   goto state 189
   selected_component                     goto state 29
   subtype_indication                     goto state 239

   Minimal_Complete_Action => IDENTIFIER 95.2

State 196:
     64.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN ^ handled_sequence_of_statements END identifier_opt SEMICOLON

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   END                                    => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                                   => shift and goto state 2 79.0
   EXCEPTION                              => reduce 0 tokens to sequence_of_statements 112.1
   FOR                                    => shift and goto state 3 92.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   RETURN                                 => shift and goto state 9 82.0
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   handled_sequence_of_statements         goto state 240
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   procedure_call_statement               goto state 27
   selected_component                     goto state 29
   sequence_of_statements                 goto state 126
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 60
   statement_list                         goto state 61

   Minimal_Complete_Action => handled_sequence_of_statements 88.2

State 197:
    117.1:subprogram_body <= subprogram_specification IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    118.0:subprogram_body_stub <= subprogram_specification IS ^ SEPARATE SEMICOLON

   BEGIN                                  => reduce 0 tokens to declarative_part 74.1
   FUNCTION                               => shift and goto state 4 86.0
   PACKAGE                                => shift and goto state 127 98.0
   PROCEDURE                              => shift and goto state 128 105.0
   SEPARATE                               => shift and goto state 241 118.0
   TYPE                                   => shift and goto state 129 85.0
   IDENTIFIER                             => shift and goto state 130 97.0
   default                                => ERROR

   body_g                                 goto state 131
   body_stub                              goto state 132
   declaration                            goto state 133
   declarative_part                       goto state 155
   full_type_declaration                  goto state 135
   function_specification                 goto state 20
   object_declaration                     goto state 136
   package_body                           goto state 137
   procedure_specification                goto state 28
   proper_body                            goto state 138
   subprogram_body                        goto state 139
   subprogram_body_stub                   goto state 140
   subprogram_declaration                 goto state 141
   subprogram_specification               goto state 142
   type_declaration                       goto state 143
   declaration_list                       goto state 144

   Minimal_Complete_Action => SEPARATE 118.0

State 198:
    127.1:declaration_list <= declaration_list declaration ^

   BEGIN                                  => reduce 2 tokens to declaration_list 127.1
   END                                    => reduce 2 tokens to declaration_list 127.1
   FUNCTION                               => reduce 2 tokens to declaration_list 127.1
   PACKAGE                                => reduce 2 tokens to declaration_list 127.1
   PROCEDURE                              => reduce 2 tokens to declaration_list 127.1
   TYPE                                   => reduce 2 tokens to declaration_list 127.1
   IDENTIFIER                             => reduce 2 tokens to declaration_list 127.1
   default                                => ERROR

   Minimal_Complete_Action => declaration_list 127.1

State 199:
     93.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END ^ LOOP identifier_opt SEMICOLON

   LOOP                                   => shift and goto state 242 93.0
   default                                => ERROR

   Minimal_Complete_Action => LOOP 93.0

State 200:
     60.0:association <= IDENTIFIER EQUAL_GREATER ^ expression

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   expression                             goto state 243
   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 201:
     57.0:actual_parameter_part <= LEFT_PAREN association_list RIGHT_PAREN ^

   AND                                    => reduce 3 tokens to actual_parameter_part 57.0
   IS                                     => reduce 3 tokens to actual_parameter_part 57.0
   LEFT_PAREN                             => reduce 3 tokens to actual_parameter_part 57.0
   LOOP                                   => reduce 3 tokens to actual_parameter_part 57.0
   OR                                     => reduce 3 tokens to actual_parameter_part 57.0
   RANGE                                  => reduce 3 tokens to actual_parameter_part 57.0
   RETURN                                 => reduce 3 tokens to actual_parameter_part 57.0
   RIGHT_PAREN                            => reduce 3 tokens to actual_parameter_part 57.0
   THEN                                   => reduce 3 tokens to actual_parameter_part 57.0
   WITH                                   => reduce 3 tokens to actual_parameter_part 57.0
   XOR                                    => reduce 3 tokens to actual_parameter_part 57.0
   AMPERSAND                              => reduce 3 tokens to actual_parameter_part 57.0
   COLON_EQUAL                            => reduce 3 tokens to actual_parameter_part 57.0
   COMMA                                  => reduce 3 tokens to actual_parameter_part 57.0
   DOT                                    => reduce 3 tokens to actual_parameter_part 57.0
   DOT_DOT                                => reduce 3 tokens to actual_parameter_part 57.0
   EQUAL                                  => reduce 3 tokens to actual_parameter_part 57.0
   EQUAL_GREATER                          => reduce 3 tokens to actual_parameter_part 57.0
   GREATER                                => reduce 3 tokens to actual_parameter_part 57.0
   GREATER_EQUAL                          => reduce 3 tokens to actual_parameter_part 57.0
   LESS                                   => reduce 3 tokens to actual_parameter_part 57.0
   LESS_EQUAL                             => reduce 3 tokens to actual_parameter_part 57.0
   MINUS                                  => reduce 3 tokens to actual_parameter_part 57.0
   PLUS                                   => reduce 3 tokens to actual_parameter_part 57.0
   SEMICOLON                              => reduce 3 tokens to actual_parameter_part 57.0
   SLASH                                  => reduce 3 tokens to actual_parameter_part 57.0
   SLASH_EQUAL                            => reduce 3 tokens to actual_parameter_part 57.0
   STAR                                   => reduce 3 tokens to actual_parameter_part 57.0
   default                                => ERROR

   Minimal_Complete_Action => actual_parameter_part 57.0

State 202:
     61.1:association_list <= association_list COMMA ^ association

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 146 60.0
   default                                => ERROR

   association                            goto state 244
   expression                             goto state 149
   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 203:
     95.0:name <= name LEFT_PAREN range_list RIGHT_PAREN ^

   AND                                    => reduce 4 tokens to name 95.0
   IS                                     => reduce 4 tokens to name 95.0
   LEFT_PAREN                             => reduce 4 tokens to name 95.0
   LOOP                                   => reduce 4 tokens to name 95.0
   OR                                     => reduce 4 tokens to name 95.0
   RANGE                                  => reduce 4 tokens to name 95.0
   RETURN                                 => reduce 4 tokens to name 95.0
   RIGHT_PAREN                            => reduce 4 tokens to name 95.0
   THEN                                   => reduce 4 tokens to name 95.0
   WITH                                   => reduce 4 tokens to name 95.0
   XOR                                    => reduce 4 tokens to name 95.0
   AMPERSAND                              => reduce 4 tokens to name 95.0
   COLON_EQUAL                            => reduce 4 tokens to name 95.0
   COMMA                                  => reduce 4 tokens to name 95.0
   DOT                                    => reduce 4 tokens to name 95.0
   DOT_DOT                                => reduce 4 tokens to name 95.0
   EQUAL                                  => reduce 4 tokens to name 95.0
   EQUAL_GREATER                          => reduce 4 tokens to name 95.0
   GREATER                                => reduce 4 tokens to name 95.0
   GREATER_EQUAL                          => reduce 4 tokens to name 95.0
   LESS                                   => reduce 4 tokens to name 95.0
   LESS_EQUAL                             => reduce 4 tokens to name 95.0
   MINUS                                  => reduce 4 tokens to name 95.0
   PLUS                                   => reduce 4 tokens to name 95.0
   SEMICOLON                              => reduce 4 tokens to name 95.0
   SLASH                                  => reduce 4 tokens to name 95.0
   SLASH_EQUAL                            => reduce 4 tokens to name 95.0
   STAR                                   => reduce 4 tokens to name 95.0
   default                                => ERROR

   Minimal_Complete_Action => name 95.0

State 204:
    108.0:range_list <= range_list COMMA ^ range_g

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   range_g                                goto state 245
   selected_component                     goto state 29
   simple_expression                      goto state 176
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 205:
    107.0:range_g <= simple_expression DOT_DOT ^ simple_expression

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   selected_component                     goto state 29
   simple_expression                      goto state 246
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 206:
     59.0:assignment_statement <= name COLON_EQUAL expression SEMICOLON ^

   BEGIN                                  => reduce 4 tokens to assignment_statement 59.0
   CASE                                   => reduce 4 tokens to assignment_statement 59.0
   DECLARE                                => reduce 4 tokens to assignment_statement 59.0
   ELSE                                   => reduce 4 tokens to assignment_statement 59.0
   ELSIF                                  => reduce 4 tokens to assignment_statement 59.0
   END                                    => reduce 4 tokens to assignment_statement 59.0
   EXIT                                   => reduce 4 tokens to assignment_statement 59.0
   EXCEPTION                              => reduce 4 tokens to assignment_statement 59.0
   FOR                                    => reduce 4 tokens to assignment_statement 59.0
   FUNCTION                               => reduce 4 tokens to assignment_statement 59.0
   IF                                     => reduce 4 tokens to assignment_statement 59.0
   LOOP                                   => reduce 4 tokens to assignment_statement 59.0
   PACKAGE                                => reduce 4 tokens to assignment_statement 59.0
   PROCEDURE                              => reduce 4 tokens to assignment_statement 59.0
   RETURN                                 => reduce 4 tokens to assignment_statement 59.0
   WHEN                                   => reduce 4 tokens to assignment_statement 59.0
   IDENTIFIER                             => reduce 4 tokens to assignment_statement 59.0
   Wisi_EOI                               => reduce 4 tokens to assignment_statement 59.0
   default                                => ERROR

   Minimal_Complete_Action => assignment_statement 59.0

State 207:
    117.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   END                                    => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                                   => shift and goto state 2 79.0
   EXCEPTION                              => reduce 0 tokens to sequence_of_statements 112.1
   FOR                                    => shift and goto state 3 92.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   RETURN                                 => shift and goto state 9 82.0
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   handled_sequence_of_statements         goto state 247
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   procedure_call_statement               goto state 27
   selected_component                     goto state 29
   sequence_of_statements                 goto state 126
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 60
   statement_list                         goto state 61

   Minimal_Complete_Action => handled_sequence_of_statements 88.2

State 208:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON

   BEGIN                                  => shift and goto state 248 117.0
   default                                => ERROR

   Minimal_Complete_Action => BEGIN 117.0

State 209:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL ^ EQUAL_GREATER sequence_of_statements

   EQUAL_GREATER                          => shift and goto state 249 68.0
   default                                => ERROR

   Minimal_Complete_Action => EQUAL_GREATER 68.0

State 210:
     67.0:case_statement <= CASE expression IS case_statement_alternative_list END ^ CASE SEMICOLON

   CASE                                   => shift and goto state 250 67.0
   default                                => ERROR

   Minimal_Complete_Action => CASE 67.0

State 211:
    126.1:case_statement_alternative_list <= case_statement_alternative_list case_statement_alternative ^

   END                                    => reduce 2 tokens to case_statement_alternative_list 126.1
   WHEN                                   => reduce 2 tokens to case_statement_alternative_list 126.1
   default                                => ERROR

   Minimal_Complete_Action => case_statement_alternative_list 126.1

State 212:
    129.1:AND_relation_list <= AND_relation_list AND relation ^

   AND                                    => reduce 3 tokens to AND_relation_list 129.1
   IS                                     => reduce 3 tokens to AND_relation_list 129.1
   RIGHT_PAREN                            => reduce 3 tokens to AND_relation_list 129.1
   THEN                                   => reduce 3 tokens to AND_relation_list 129.1
   COMMA                                  => reduce 3 tokens to AND_relation_list 129.1
   SEMICOLON                              => reduce 3 tokens to AND_relation_list 129.1
   default                                => ERROR

   Minimal_Complete_Action => AND_relation_list 129.1

State 213:
    130.1:OR_relation_list <= OR_relation_list OR relation ^

   IS                                     => reduce 3 tokens to OR_relation_list 130.1
   OR                                     => reduce 3 tokens to OR_relation_list 130.1
   RIGHT_PAREN                            => reduce 3 tokens to OR_relation_list 130.1
   THEN                                   => reduce 3 tokens to OR_relation_list 130.1
   COMMA                                  => reduce 3 tokens to OR_relation_list 130.1
   SEMICOLON                              => reduce 3 tokens to OR_relation_list 130.1
   default                                => ERROR

   Minimal_Complete_Action => OR_relation_list 130.1

State 214:
    131.1:XOR_relation_list <= XOR_relation_list XOR relation ^

   IS                                     => reduce 3 tokens to XOR_relation_list 131.1
   RIGHT_PAREN                            => reduce 3 tokens to XOR_relation_list 131.1
   THEN                                   => reduce 3 tokens to XOR_relation_list 131.1
   XOR                                    => reduce 3 tokens to XOR_relation_list 131.1
   COMMA                                  => reduce 3 tokens to XOR_relation_list 131.1
   SEMICOLON                              => reduce 3 tokens to XOR_relation_list 131.1
   default                                => ERROR

   Minimal_Complete_Action => XOR_relation_list 131.1

State 215:
     79.0:exit_statement <= EXIT IDENTIFIER WHEN expression SEMICOLON ^

   BEGIN                                  => reduce 5 tokens to exit_statement 79.0
   CASE                                   => reduce 5 tokens to exit_statement 79.0
   DECLARE                                => reduce 5 tokens to exit_statement 79.0
   ELSE                                   => reduce 5 tokens to exit_statement 79.0
   ELSIF                                  => reduce 5 tokens to exit_statement 79.0
   END                                    => reduce 5 tokens to exit_statement 79.0
   EXIT                                   => reduce 5 tokens to exit_statement 79.0
   EXCEPTION                              => reduce 5 tokens to exit_statement 79.0
   FOR                                    => reduce 5 tokens to exit_statement 79.0
   FUNCTION                               => reduce 5 tokens to exit_statement 79.0
   IF                                     => reduce 5 tokens to exit_statement 79.0
   LOOP                                   => reduce 5 tokens to exit_statement 79.0
   PACKAGE                                => reduce 5 tokens to exit_statement 79.0
   PROCEDURE                              => reduce 5 tokens to exit_statement 79.0
   RETURN                                 => reduce 5 tokens to exit_statement 79.0
   WHEN                                   => reduce 5 tokens to exit_statement 79.0
   IDENTIFIER                             => reduce 5 tokens to exit_statement 79.0
   Wisi_EOI                               => reduce 5 tokens to exit_statement 79.0
   default                                => ERROR

   Minimal_Complete_Action => exit_statement 79.0

State 216:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN
     91.0:index_constraint <= LEFT_PAREN ^ discrete_subtype_definition RIGHT_PAREN
     95.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 146 60.0
   default                                => ERROR

   association                            goto state 147
   association_list                       goto state 148
   discrete_subtype_definition            goto state 251
   expression                             goto state 149
   factor                                 goto state 44
   name                                   goto state 174
   paren_expression                       goto state 46
   primary                                goto state 47
   range_g                                goto state 252
   range_list                             goto state 151
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 152
   subtype_indication                     goto state 177
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => (NUMERIC_LITERAL 103.0, IDENTIFIER 60.0)

State 217:
     72.0:constraint <= RANGE ^ range_g

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   range_g                                goto state 253
   selected_component                     goto state 29
   simple_expression                      goto state 176
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 218:
    121.0:subtype_indication <= name constraint ^

   LOOP                                   => reduce 2 tokens to subtype_indication 121.0
   RIGHT_PAREN                            => reduce 2 tokens to subtype_indication 121.0
   COLON_EQUAL                            => reduce 2 tokens to subtype_indication 121.0
   SEMICOLON                              => reduce 2 tokens to subtype_indication 121.0
   default                                => ERROR

   Minimal_Complete_Action => subtype_indication 121.0

State 219:
     72.1:constraint <= index_constraint ^

   LOOP                                   => reduce 1 tokens to constraint 72.1
   RIGHT_PAREN                            => reduce 1 tokens to constraint 72.1
   COLON_EQUAL                            => reduce 1 tokens to constraint 72.1
   SEMICOLON                              => reduce 1 tokens to constraint 72.1
   default                                => ERROR

   Minimal_Complete_Action => constraint 72.1

State 220:
    101.0:parameter_specification <= IDENTIFIER COLON ^ IDENTIFIER COLON_EQUAL expression
    101.1:parameter_specification <= IDENTIFIER COLON ^ IDENTIFIER

   IDENTIFIER                             => shift and goto state 254 101.0
   default                                => ERROR

   Minimal_Complete_Action => IDENTIFIER 101.0

State 221:
     84.0:formal_part <= LEFT_PAREN parameter_specification_SEMICOLON_list RIGHT_PAREN ^

   IS                                     => reduce 3 tokens to formal_part 84.0
   RETURN                                 => reduce 3 tokens to formal_part 84.0
   WITH                                   => reduce 3 tokens to formal_part 84.0
   SEMICOLON                              => reduce 3 tokens to formal_part 84.0
   default                                => ERROR

   Minimal_Complete_Action => formal_part 84.0

State 222:
    132.1:parameter_specification_SEMICOLON_list <= parameter_specification_SEMICOLON_list SEMICOLON ^ parameter_specification

   IDENTIFIER                             => shift and goto state 255 101.0
   default                                => ERROR

   parameter_specification                goto state 256

   Minimal_Complete_Action => IDENTIFIER 101.0

State 223:
     99.0:parameter_and_result_profile <= formal_part RETURN IDENTIFIER ^

   IS                                     => reduce 3 tokens to parameter_and_result_profile 99.0
   WITH                                   => reduce 3 tokens to parameter_and_result_profile 99.0
   SEMICOLON                              => reduce 3 tokens to parameter_and_result_profile 99.0
   default                                => ERROR

   Minimal_Complete_Action => parameter_and_result_profile 99.0

State 224:
     90.2:if_statement <= IF expression THEN sequence_of_statements ELSE ^ sequence_of_statements END IF SEMICOLON

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   END                                    => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                                   => shift and goto state 2 79.0
   FOR                                    => shift and goto state 3 92.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   RETURN                                 => shift and goto state 9 82.0
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   procedure_call_statement               goto state 27
   selected_component                     goto state 29
   sequence_of_statements                 goto state 257
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 60
   statement_list                         goto state 61

   Minimal_Complete_Action => sequence_of_statements 112.1

State 225:
    134.0:ELSIF_expression_list <= ELSIF ^ expression THEN sequence_of_statements

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   expression                             goto state 258
   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 226:
     90.3:if_statement <= IF expression THEN sequence_of_statements END ^ IF SEMICOLON

   IF                                     => shift and goto state 259 90.3
   default                                => ERROR

   Minimal_Complete_Action => IF 90.3

State 227:
     90.0:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list ^ ELSE sequence_of_statements END IF SEMICOLON
     90.1:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list ^ END IF SEMICOLON
    134.1:ELSIF_expression_list <= ELSIF_expression_list ^ ELSIF expression THEN sequence_of_statements

   ELSE                                   => shift and goto state 260 90.0
   ELSIF                                  => shift and goto state 261 134.1
   END                                    => shift and goto state 262 90.1
   default                                => ERROR

   Minimal_Complete_Action => END 90.1

State 228:
     89.0:identifier_opt <= IDENTIFIER ^

   SEMICOLON                              => reduce 1 tokens to identifier_opt 89.0
   default                                => ERROR

   Minimal_Complete_Action => identifier_opt 89.0

State 229:
     93.1:loop_statement <= LOOP sequence_of_statements END LOOP identifier_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 263 93.1
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 93.1

State 230:
     98.2:package_body <= PACKAGE BODY name IS declarative_part ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     98.3:package_body <= PACKAGE BODY name IS declarative_part ^ END name_opt SEMICOLON

   BEGIN                                  => shift and goto state 264 98.2
   END                                    => shift and goto state 265 98.3
   default                                => ERROR

   Minimal_Complete_Action => END 98.3

State 231:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     98.1:package_body <= PACKAGE BODY name aspect_specification IS ^ declarative_part END name_opt SEMICOLON

   BEGIN                                  => reduce 0 tokens to declarative_part 74.1
   END                                    => reduce 0 tokens to declarative_part 74.1
   FUNCTION                               => shift and goto state 4 86.0
   PACKAGE                                => shift and goto state 127 98.0
   PROCEDURE                              => shift and goto state 128 105.0
   TYPE                                   => shift and goto state 129 85.0
   IDENTIFIER                             => shift and goto state 130 97.0
   default                                => ERROR

   body_g                                 goto state 131
   body_stub                              goto state 132
   declaration                            goto state 133
   declarative_part                       goto state 266
   full_type_declaration                  goto state 135
   function_specification                 goto state 20
   object_declaration                     goto state 136
   package_body                           goto state 137
   procedure_specification                goto state 28
   proper_body                            goto state 138
   subprogram_body                        goto state 139
   subprogram_body_stub                   goto state 140
   subprogram_declaration                 goto state 141
   subprogram_specification               goto state 142
   type_declaration                       goto state 143
   declaration_list                       goto state 144

   Minimal_Complete_Action => declarative_part 74.1

State 232:
     87.0:generic_instantiation <= PACKAGE name IS NEW name ^ SEMICOLON
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     95.1:name <= name ^ actual_parameter_part
    111.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                             => shift and goto state 73 57.0
   DOT                                    => shift and goto state 75 111.0
   SEMICOLON                              => shift and goto state 267 87.0
   default                                => ERROR

   actual_parameter_part                  goto state 77

   Minimal_Complete_Action => SEMICOLON 87.0

State 233:
     87.1:generic_instantiation <= PROCEDURE name IS NEW name ^ SEMICOLON
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     95.1:name <= name ^ actual_parameter_part
    111.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                             => shift and goto state 73 57.0
   DOT                                    => shift and goto state 75 111.0
   SEMICOLON                              => shift and goto state 268 87.1
   default                                => ERROR

   actual_parameter_part                  goto state 77

   Minimal_Complete_Action => SEMICOLON 87.1

State 234:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 269 64.1
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 64.1

State 235:
     78.0:exception_handler <= WHEN ^ exception_choice EQUAL_GREATER sequence_of_statements

   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   exception_choice                       goto state 270
   name                                   goto state 271
   selected_component                     goto state 29

   Minimal_Complete_Action => IDENTIFIER 95.2

State 236:
    133.0:exception_handler_list <= exception_handler ^

   END                                    => reduce 1 tokens to exception_handler_list 133.0
   WHEN                                   => reduce 1 tokens to exception_handler_list 133.0
   default                                => ERROR

   Minimal_Complete_Action => exception_handler_list 133.0

State 237:
     88.0:handled_sequence_of_statements <= sequence_of_statements EXCEPTION exception_handler_list ^
    133.1:exception_handler_list <= exception_handler_list ^ exception_handler

   END                                    => reduce 3 tokens to handled_sequence_of_statements 88.0
   WHEN                                   => shift and goto state 235 78.0
   default                                => ERROR

   exception_handler                      goto state 272

   Minimal_Complete_Action => handled_sequence_of_statements 88.0

State 238:
     85.0:full_type_declaration <= TYPE IDENTIFIER IS ^ type_definition SEMICOLON

   LEFT_PAREN                             => shift and goto state 273 76.0
   default                                => ERROR

   enumeration_type_definition            goto state 274
   type_definition                        goto state 275

   Minimal_Complete_Action => LEFT_PAREN 76.0

State 239:
     97.0:object_declaration <= IDENTIFIER COLON subtype_indication ^ COLON_EQUAL expression SEMICOLON
     97.1:object_declaration <= IDENTIFIER COLON subtype_indication ^ SEMICOLON

   COLON_EQUAL                            => shift and goto state 276 97.0
   SEMICOLON                              => shift and goto state 277 97.1
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 97.1

State 240:
     64.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements ^ END identifier_opt SEMICOLON

   END                                    => shift and goto state 278 64.0
   default                                => ERROR

   Minimal_Complete_Action => END 64.0

State 241:
    118.0:subprogram_body_stub <= subprogram_specification IS SEPARATE ^ SEMICOLON

   SEMICOLON                              => shift and goto state 279 118.0
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 118.0

State 242:
     93.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP ^ identifier_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to identifier_opt 89.1
   IDENTIFIER                             => shift and goto state 228 89.0
   default                                => ERROR

   identifier_opt                         goto state 280

   Minimal_Complete_Action => identifier_opt 89.1

State 243:
     60.0:association <= IDENTIFIER EQUAL_GREATER expression ^

   IS                                     => reduce 3 tokens to association 60.0
   RIGHT_PAREN                            => reduce 3 tokens to association 60.0
   COMMA                                  => reduce 3 tokens to association 60.0
   default                                => ERROR

   Minimal_Complete_Action => association 60.0

State 244:
     61.1:association_list <= association_list COMMA association ^

   IS                                     => reduce 3 tokens to association_list 61.1
   RIGHT_PAREN                            => reduce 3 tokens to association_list 61.1
   COMMA                                  => reduce 3 tokens to association_list 61.1
   default                                => ERROR

   Minimal_Complete_Action => association_list 61.1

State 245:
    108.0:range_list <= range_list COMMA range_g ^

   RIGHT_PAREN                            => reduce 3 tokens to range_list 108.0
   COMMA                                  => reduce 3 tokens to range_list 108.0
   default                                => ERROR

   Minimal_Complete_Action => range_list 108.0

State 246:
    107.0:range_g <= simple_expression DOT_DOT simple_expression ^

   LOOP                                   => reduce 3 tokens to range_g 107.0
   RIGHT_PAREN                            => reduce 3 tokens to range_g 107.0
   COLON_EQUAL                            => reduce 3 tokens to range_g 107.0
   COMMA                                  => reduce 3 tokens to range_g 107.0
   SEMICOLON                              => reduce 3 tokens to range_g 107.0
   default                                => ERROR

   Minimal_Complete_Action => range_g 107.0

State 247:
    117.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON

   END                                    => shift and goto state 281 117.1
   default                                => ERROR

   Minimal_Complete_Action => END 117.1

State 248:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   END                                    => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                                   => shift and goto state 2 79.0
   EXCEPTION                              => reduce 0 tokens to sequence_of_statements 112.1
   FOR                                    => shift and goto state 3 92.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   RETURN                                 => shift and goto state 9 82.0
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   handled_sequence_of_statements         goto state 282
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   procedure_call_statement               goto state 27
   selected_component                     goto state 29
   sequence_of_statements                 goto state 126
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 60
   statement_list                         goto state 61

   Minimal_Complete_Action => handled_sequence_of_statements 88.2

State 249:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER ^ sequence_of_statements

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   END                                    => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                                   => shift and goto state 2 79.0
   FOR                                    => shift and goto state 3 92.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   RETURN                                 => shift and goto state 9 82.0
   WHEN                                   => reduce 0 tokens to sequence_of_statements 112.1
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   procedure_call_statement               goto state 27
   selected_component                     goto state 29
   sequence_of_statements                 goto state 283
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 60
   statement_list                         goto state 61

   Minimal_Complete_Action => sequence_of_statements 112.1

State 250:
     67.0:case_statement <= CASE expression IS case_statement_alternative_list END CASE ^ SEMICOLON

   SEMICOLON                              => shift and goto state 284 67.0
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 67.0

State 251:
     91.0:index_constraint <= LEFT_PAREN discrete_subtype_definition ^ RIGHT_PAREN

   RIGHT_PAREN                            => shift and goto state 285 91.0
   default                                => ERROR

   Minimal_Complete_Action => RIGHT_PAREN 91.0

State 252:
     75.1:discrete_subtype_definition <= range_g ^
    108.1:range_list <= range_g ^

   RIGHT_PAREN                            => reduce 1 tokens to discrete_subtype_definition 75.1,
                                             reduce 1 tokens to range_list 108.1
   COMMA                                  => reduce 1 tokens to range_list 108.1
   default                                => ERROR

   Minimal_Complete_Action => (discrete_subtype_definition 75.1, range_list 108.1)

State 253:
     72.0:constraint <= RANGE range_g ^

   LOOP                                   => reduce 2 tokens to constraint 72.0
   RIGHT_PAREN                            => reduce 2 tokens to constraint 72.0
   COLON_EQUAL                            => reduce 2 tokens to constraint 72.0
   SEMICOLON                              => reduce 2 tokens to constraint 72.0
   default                                => ERROR

   Minimal_Complete_Action => constraint 72.0

State 254:
    101.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER ^ COLON_EQUAL expression
    101.1:parameter_specification <= IDENTIFIER COLON IDENTIFIER ^

   RIGHT_PAREN                            => reduce 3 tokens to parameter_specification 101.1
   COLON_EQUAL                            => shift and goto state 286 101.0
   SEMICOLON                              => reduce 3 tokens to parameter_specification 101.1
   default                                => ERROR

   Minimal_Complete_Action => (COLON_EQUAL 101.0, parameter_specification 101.1)

State 255:
    101.0:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER COLON_EQUAL expression
    101.1:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER

   COLON                                  => shift and goto state 220 101.0
   default                                => ERROR

   Minimal_Complete_Action => COLON 101.0

State 256:
    132.1:parameter_specification_SEMICOLON_list <= parameter_specification_SEMICOLON_list SEMICOLON parameter_specification ^

   RIGHT_PAREN                            => reduce 3 tokens to parameter_specification_SEMICOLON_list 132.1
   SEMICOLON                              => reduce 3 tokens to parameter_specification_SEMICOLON_list 132.1
   default                                => ERROR

   Minimal_Complete_Action => parameter_specification_SEMICOLON_list 132.1

State 257:
     90.2:if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements ^ END IF SEMICOLON

   END                                    => shift and goto state 287 90.2
   default                                => ERROR

   Minimal_Complete_Action => END 90.2

State 258:
    134.0:ELSIF_expression_list <= ELSIF expression ^ THEN sequence_of_statements

   THEN                                   => shift and goto state 288 134.0
   default                                => ERROR

   Minimal_Complete_Action => THEN 134.0

State 259:
     90.3:if_statement <= IF expression THEN sequence_of_statements END IF ^ SEMICOLON

   SEMICOLON                              => shift and goto state 289 90.3
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 90.3

State 260:
     90.0:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list ELSE ^ sequence_of_statements END IF SEMICOLON

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   END                                    => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                                   => shift and goto state 2 79.0
   FOR                                    => shift and goto state 3 92.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   RETURN                                 => shift and goto state 9 82.0
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   procedure_call_statement               goto state 27
   selected_component                     goto state 29
   sequence_of_statements                 goto state 290
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 60
   statement_list                         goto state 61

   Minimal_Complete_Action => sequence_of_statements 112.1

State 261:
    134.1:ELSIF_expression_list <= ELSIF_expression_list ELSIF ^ expression THEN sequence_of_statements

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   expression                             goto state 291
   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 262:
     90.1:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list END ^ IF SEMICOLON

   IF                                     => shift and goto state 292 90.1
   default                                => ERROR

   Minimal_Complete_Action => IF 90.1

State 263:
     93.1:loop_statement <= LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ^

   BEGIN                                  => reduce 6 tokens to loop_statement 93.1
   CASE                                   => reduce 6 tokens to loop_statement 93.1
   DECLARE                                => reduce 6 tokens to loop_statement 93.1
   ELSE                                   => reduce 6 tokens to loop_statement 93.1
   ELSIF                                  => reduce 6 tokens to loop_statement 93.1
   END                                    => reduce 6 tokens to loop_statement 93.1
   EXIT                                   => reduce 6 tokens to loop_statement 93.1
   EXCEPTION                              => reduce 6 tokens to loop_statement 93.1
   FOR                                    => reduce 6 tokens to loop_statement 93.1
   FUNCTION                               => reduce 6 tokens to loop_statement 93.1
   IF                                     => reduce 6 tokens to loop_statement 93.1
   LOOP                                   => reduce 6 tokens to loop_statement 93.1
   PACKAGE                                => reduce 6 tokens to loop_statement 93.1
   PROCEDURE                              => reduce 6 tokens to loop_statement 93.1
   RETURN                                 => reduce 6 tokens to loop_statement 93.1
   WHEN                                   => reduce 6 tokens to loop_statement 93.1
   IDENTIFIER                             => reduce 6 tokens to loop_statement 93.1
   Wisi_EOI                               => reduce 6 tokens to loop_statement 93.1
   default                                => ERROR

   Minimal_Complete_Action => loop_statement 93.1

State 264:
     98.2:package_body <= PACKAGE BODY name IS declarative_part BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   END                                    => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                                   => shift and goto state 2 79.0
   EXCEPTION                              => reduce 0 tokens to sequence_of_statements 112.1
   FOR                                    => shift and goto state 3 92.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   RETURN                                 => shift and goto state 9 82.0
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   handled_sequence_of_statements         goto state 293
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   procedure_call_statement               goto state 27
   selected_component                     goto state 29
   sequence_of_statements                 goto state 126
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 60
   statement_list                         goto state 61

   Minimal_Complete_Action => handled_sequence_of_statements 88.2

State 265:
     98.3:package_body <= PACKAGE BODY name IS declarative_part END ^ name_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   name                                   goto state 294
   name_opt                               goto state 295
   selected_component                     goto state 29

   Minimal_Complete_Action => name_opt 96.1

State 266:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     98.1:package_body <= PACKAGE BODY name aspect_specification IS declarative_part ^ END name_opt SEMICOLON

   BEGIN                                  => shift and goto state 296 98.0
   END                                    => shift and goto state 297 98.1
   default                                => ERROR

   Minimal_Complete_Action => END 98.1

State 267:
     87.0:generic_instantiation <= PACKAGE name IS NEW name SEMICOLON ^

   BEGIN                                  => reduce 6 tokens to generic_instantiation 87.0
   CASE                                   => reduce 6 tokens to generic_instantiation 87.0
   DECLARE                                => reduce 6 tokens to generic_instantiation 87.0
   EXIT                                   => reduce 6 tokens to generic_instantiation 87.0
   FOR                                    => reduce 6 tokens to generic_instantiation 87.0
   FUNCTION                               => reduce 6 tokens to generic_instantiation 87.0
   IF                                     => reduce 6 tokens to generic_instantiation 87.0
   LOOP                                   => reduce 6 tokens to generic_instantiation 87.0
   PACKAGE                                => reduce 6 tokens to generic_instantiation 87.0
   PROCEDURE                              => reduce 6 tokens to generic_instantiation 87.0
   RETURN                                 => reduce 6 tokens to generic_instantiation 87.0
   IDENTIFIER                             => reduce 6 tokens to generic_instantiation 87.0
   Wisi_EOI                               => reduce 6 tokens to generic_instantiation 87.0
   default                                => ERROR

   Minimal_Complete_Action => generic_instantiation 87.0

State 268:
     87.1:generic_instantiation <= PROCEDURE name IS NEW name SEMICOLON ^

   BEGIN                                  => reduce 6 tokens to generic_instantiation 87.1
   CASE                                   => reduce 6 tokens to generic_instantiation 87.1
   DECLARE                                => reduce 6 tokens to generic_instantiation 87.1
   EXIT                                   => reduce 6 tokens to generic_instantiation 87.1
   FOR                                    => reduce 6 tokens to generic_instantiation 87.1
   FUNCTION                               => reduce 6 tokens to generic_instantiation 87.1
   IF                                     => reduce 6 tokens to generic_instantiation 87.1
   LOOP                                   => reduce 6 tokens to generic_instantiation 87.1
   PACKAGE                                => reduce 6 tokens to generic_instantiation 87.1
   PROCEDURE                              => reduce 6 tokens to generic_instantiation 87.1
   RETURN                                 => reduce 6 tokens to generic_instantiation 87.1
   IDENTIFIER                             => reduce 6 tokens to generic_instantiation 87.1
   Wisi_EOI                               => reduce 6 tokens to generic_instantiation 87.1
   default                                => ERROR

   Minimal_Complete_Action => generic_instantiation 87.1

State 269:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ^

   BEGIN                                  => reduce 6 tokens to block_statement 64.1
   CASE                                   => reduce 6 tokens to block_statement 64.1
   DECLARE                                => reduce 6 tokens to block_statement 64.1
   ELSE                                   => reduce 6 tokens to block_statement 64.1
   ELSIF                                  => reduce 6 tokens to block_statement 64.1
   END                                    => reduce 6 tokens to block_statement 64.1
   EXIT                                   => reduce 6 tokens to block_statement 64.1
   EXCEPTION                              => reduce 6 tokens to block_statement 64.1
   FOR                                    => reduce 6 tokens to block_statement 64.1
   FUNCTION                               => reduce 6 tokens to block_statement 64.1
   IF                                     => reduce 6 tokens to block_statement 64.1
   LOOP                                   => reduce 6 tokens to block_statement 64.1
   PACKAGE                                => reduce 6 tokens to block_statement 64.1
   PROCEDURE                              => reduce 6 tokens to block_statement 64.1
   RETURN                                 => reduce 6 tokens to block_statement 64.1
   WHEN                                   => reduce 6 tokens to block_statement 64.1
   IDENTIFIER                             => reduce 6 tokens to block_statement 64.1
   Wisi_EOI                               => reduce 6 tokens to block_statement 64.1
   default                                => ERROR

   Minimal_Complete_Action => block_statement 64.1

State 270:
     78.0:exception_handler <= WHEN exception_choice ^ EQUAL_GREATER sequence_of_statements

   EQUAL_GREATER                          => shift and goto state 298 78.0
   default                                => ERROR

   Minimal_Complete_Action => EQUAL_GREATER 78.0

State 271:
     77.0:exception_choice <= name ^
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     95.1:name <= name ^ actual_parameter_part
    111.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                             => shift and goto state 73 57.0
   DOT                                    => shift and goto state 75 111.0
   EQUAL_GREATER                          => reduce 1 tokens to exception_choice 77.0
   default                                => ERROR

   actual_parameter_part                  goto state 77

   Minimal_Complete_Action => exception_choice 77.0

State 272:
    133.1:exception_handler_list <= exception_handler_list exception_handler ^

   END                                    => reduce 2 tokens to exception_handler_list 133.1
   WHEN                                   => reduce 2 tokens to exception_handler_list 133.1
   default                                => ERROR

   Minimal_Complete_Action => exception_handler_list 133.1

State 273:
     76.0:enumeration_type_definition <= LEFT_PAREN ^ IDENTIFIER_COMMA_list RIGHT_PAREN

   IDENTIFIER                             => shift and goto state 299 128.0
   default                                => ERROR

   IDENTIFIER_COMMA_list                  goto state 300

   Minimal_Complete_Action => IDENTIFIER 128.0

State 274:
    124.0:type_definition <= enumeration_type_definition ^

   SEMICOLON                              => reduce 1 tokens to type_definition 124.0
   default                                => ERROR

   Minimal_Complete_Action => type_definition 124.0

State 275:
     85.0:full_type_declaration <= TYPE IDENTIFIER IS type_definition ^ SEMICOLON

   SEMICOLON                              => shift and goto state 301 85.0
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 85.0

State 276:
     97.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL ^ expression SEMICOLON

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   expression                             goto state 302
   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 277:
     97.1:object_declaration <= IDENTIFIER COLON subtype_indication SEMICOLON ^

   BEGIN                                  => reduce 4 tokens to object_declaration 97.1
   END                                    => reduce 4 tokens to object_declaration 97.1
   FUNCTION                               => reduce 4 tokens to object_declaration 97.1
   PACKAGE                                => reduce 4 tokens to object_declaration 97.1
   PROCEDURE                              => reduce 4 tokens to object_declaration 97.1
   TYPE                                   => reduce 4 tokens to object_declaration 97.1
   IDENTIFIER                             => reduce 4 tokens to object_declaration 97.1
   default                                => ERROR

   Minimal_Complete_Action => object_declaration 97.1

State 278:
     64.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements END ^ identifier_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to identifier_opt 89.1
   IDENTIFIER                             => shift and goto state 228 89.0
   default                                => ERROR

   identifier_opt                         goto state 303

   Minimal_Complete_Action => identifier_opt 89.1

State 279:
    118.0:subprogram_body_stub <= subprogram_specification IS SEPARATE SEMICOLON ^

   BEGIN                                  => reduce 4 tokens to subprogram_body_stub 118.0
   END                                    => reduce 4 tokens to subprogram_body_stub 118.0
   FUNCTION                               => reduce 4 tokens to subprogram_body_stub 118.0
   PACKAGE                                => reduce 4 tokens to subprogram_body_stub 118.0
   PROCEDURE                              => reduce 4 tokens to subprogram_body_stub 118.0
   TYPE                                   => reduce 4 tokens to subprogram_body_stub 118.0
   IDENTIFIER                             => reduce 4 tokens to subprogram_body_stub 118.0
   default                                => ERROR

   Minimal_Complete_Action => subprogram_body_stub 118.0

State 280:
     93.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP identifier_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 304 93.0
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 93.0

State 281:
    117.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   name                                   goto state 294
   name_opt                               goto state 305
   selected_component                     goto state 29

   Minimal_Complete_Action => name_opt 96.1

State 282:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON

   END                                    => shift and goto state 306 117.0
   default                                => ERROR

   Minimal_Complete_Action => END 117.0

State 283:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements ^

   END                                    => reduce 4 tokens to case_statement_alternative 68.0
   WHEN                                   => reduce 4 tokens to case_statement_alternative 68.0
   default                                => ERROR

   Minimal_Complete_Action => case_statement_alternative 68.0

State 284:
     67.0:case_statement <= CASE expression IS case_statement_alternative_list END CASE SEMICOLON ^

   BEGIN                                  => reduce 7 tokens to case_statement 67.0
   CASE                                   => reduce 7 tokens to case_statement 67.0
   DECLARE                                => reduce 7 tokens to case_statement 67.0
   ELSE                                   => reduce 7 tokens to case_statement 67.0
   ELSIF                                  => reduce 7 tokens to case_statement 67.0
   END                                    => reduce 7 tokens to case_statement 67.0
   EXIT                                   => reduce 7 tokens to case_statement 67.0
   EXCEPTION                              => reduce 7 tokens to case_statement 67.0
   FOR                                    => reduce 7 tokens to case_statement 67.0
   FUNCTION                               => reduce 7 tokens to case_statement 67.0
   IF                                     => reduce 7 tokens to case_statement 67.0
   LOOP                                   => reduce 7 tokens to case_statement 67.0
   PACKAGE                                => reduce 7 tokens to case_statement 67.0
   PROCEDURE                              => reduce 7 tokens to case_statement 67.0
   RETURN                                 => reduce 7 tokens to case_statement 67.0
   WHEN                                   => reduce 7 tokens to case_statement 67.0
   IDENTIFIER                             => reduce 7 tokens to case_statement 67.0
   Wisi_EOI                               => reduce 7 tokens to case_statement 67.0
   default                                => ERROR

   Minimal_Complete_Action => case_statement 67.0

State 285:
     91.0:index_constraint <= LEFT_PAREN discrete_subtype_definition RIGHT_PAREN ^

   LOOP                                   => reduce 3 tokens to index_constraint 91.0
   RIGHT_PAREN                            => reduce 3 tokens to index_constraint 91.0
   COLON_EQUAL                            => reduce 3 tokens to index_constraint 91.0
   SEMICOLON                              => reduce 3 tokens to index_constraint 91.0
   default                                => ERROR

   Minimal_Complete_Action => index_constraint 91.0

State 286:
    101.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL ^ expression

   LEFT_PAREN                             => shift and goto state 36 102.0
   NOT                                    => shift and goto state 37 83.1
   MINUS                                  => shift and goto state 38 125.1
   PLUS                                   => shift and goto state 39 125.0
   STRING_LITERAL                         => shift and goto state 40 103.1
   NUMERIC_LITERAL                        => shift and goto state 41 103.0
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   expression                             goto state 307
   factor                                 goto state 44
   name                                   goto state 45
   paren_expression                       goto state 46
   primary                                goto state 47
   relation                               goto state 48
   selected_component                     goto state 29
   simple_expression                      goto state 49
   term                                   goto state 50
   unary_adding_operator                  goto state 51
   term_binary_adding_operator_list       goto state 52

   Minimal_Complete_Action => NUMERIC_LITERAL 103.0

State 287:
     90.2:if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements END ^ IF SEMICOLON

   IF                                     => shift and goto state 308 90.2
   default                                => ERROR

   Minimal_Complete_Action => IF 90.2

State 288:
    134.0:ELSIF_expression_list <= ELSIF expression THEN ^ sequence_of_statements

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   ELSE                                   => reduce 0 tokens to sequence_of_statements 112.1
   ELSIF                                  => reduce 0 tokens to sequence_of_statements 112.1
   END                                    => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                                   => shift and goto state 2 79.0
   FOR                                    => shift and goto state 3 92.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   RETURN                                 => shift and goto state 9 82.0
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   procedure_call_statement               goto state 27
   selected_component                     goto state 29
   sequence_of_statements                 goto state 309
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 60
   statement_list                         goto state 61

   Minimal_Complete_Action => sequence_of_statements 112.1

State 289:
     90.3:if_statement <= IF expression THEN sequence_of_statements END IF SEMICOLON ^

   BEGIN                                  => reduce 7 tokens to if_statement 90.3
   CASE                                   => reduce 7 tokens to if_statement 90.3
   DECLARE                                => reduce 7 tokens to if_statement 90.3
   ELSE                                   => reduce 7 tokens to if_statement 90.3
   ELSIF                                  => reduce 7 tokens to if_statement 90.3
   END                                    => reduce 7 tokens to if_statement 90.3
   EXIT                                   => reduce 7 tokens to if_statement 90.3
   EXCEPTION                              => reduce 7 tokens to if_statement 90.3
   FOR                                    => reduce 7 tokens to if_statement 90.3
   FUNCTION                               => reduce 7 tokens to if_statement 90.3
   IF                                     => reduce 7 tokens to if_statement 90.3
   LOOP                                   => reduce 7 tokens to if_statement 90.3
   PACKAGE                                => reduce 7 tokens to if_statement 90.3
   PROCEDURE                              => reduce 7 tokens to if_statement 90.3
   RETURN                                 => reduce 7 tokens to if_statement 90.3
   WHEN                                   => reduce 7 tokens to if_statement 90.3
   IDENTIFIER                             => reduce 7 tokens to if_statement 90.3
   Wisi_EOI                               => reduce 7 tokens to if_statement 90.3
   default                                => ERROR

   Minimal_Complete_Action => if_statement 90.3

State 290:
     90.0:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list ELSE sequence_of_statements ^ END IF SEMICOLON

   END                                    => shift and goto state 310 90.0
   default                                => ERROR

   Minimal_Complete_Action => END 90.0

State 291:
    134.1:ELSIF_expression_list <= ELSIF_expression_list ELSIF expression ^ THEN sequence_of_statements

   THEN                                   => shift and goto state 311 134.1
   default                                => ERROR

   Minimal_Complete_Action => THEN 134.1

State 292:
     90.1:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list END IF ^ SEMICOLON

   SEMICOLON                              => shift and goto state 312 90.1
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 90.1

State 293:
     98.2:package_body <= PACKAGE BODY name IS declarative_part BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON

   END                                    => shift and goto state 313 98.2
   default                                => ERROR

   Minimal_Complete_Action => END 98.2

State 294:
     95.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     95.1:name <= name ^ actual_parameter_part
     96.0:name_opt <= name ^
    111.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                             => shift and goto state 73 57.0
   DOT                                    => shift and goto state 75 111.0
   SEMICOLON                              => reduce 1 tokens to name_opt 96.0
   default                                => ERROR

   actual_parameter_part                  goto state 77

   Minimal_Complete_Action => name_opt 96.0

State 295:
     98.3:package_body <= PACKAGE BODY name IS declarative_part END name_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 314 98.3
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 98.3

State 296:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   END                                    => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                                   => shift and goto state 2 79.0
   EXCEPTION                              => reduce 0 tokens to sequence_of_statements 112.1
   FOR                                    => shift and goto state 3 92.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   RETURN                                 => shift and goto state 9 82.0
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   handled_sequence_of_statements         goto state 315
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   procedure_call_statement               goto state 27
   selected_component                     goto state 29
   sequence_of_statements                 goto state 126
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 60
   statement_list                         goto state 61

   Minimal_Complete_Action => handled_sequence_of_statements 88.2

State 297:
     98.1:package_body <= PACKAGE BODY name aspect_specification IS declarative_part END ^ name_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   name                                   goto state 294
   name_opt                               goto state 316
   selected_component                     goto state 29

   Minimal_Complete_Action => name_opt 96.1

State 298:
     78.0:exception_handler <= WHEN exception_choice EQUAL_GREATER ^ sequence_of_statements

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   END                                    => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                                   => shift and goto state 2 79.0
   FOR                                    => shift and goto state 3 92.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   RETURN                                 => shift and goto state 9 82.0
   WHEN                                   => reduce 0 tokens to sequence_of_statements 112.1
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   procedure_call_statement               goto state 27
   selected_component                     goto state 29
   sequence_of_statements                 goto state 317
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 60
   statement_list                         goto state 61

   Minimal_Complete_Action => sequence_of_statements 112.1

State 299:
    128.0:IDENTIFIER_COMMA_list <= IDENTIFIER ^

   RIGHT_PAREN                            => reduce 1 tokens to IDENTIFIER_COMMA_list 128.0
   COMMA                                  => reduce 1 tokens to IDENTIFIER_COMMA_list 128.0
   default                                => ERROR

   Minimal_Complete_Action => IDENTIFIER_COMMA_list 128.0

State 300:
     76.0:enumeration_type_definition <= LEFT_PAREN IDENTIFIER_COMMA_list ^ RIGHT_PAREN
    128.1:IDENTIFIER_COMMA_list <= IDENTIFIER_COMMA_list ^ COMMA IDENTIFIER

   RIGHT_PAREN                            => shift and goto state 318 76.0
   COMMA                                  => shift and goto state 319 128.1
   default                                => ERROR

   Minimal_Complete_Action => RIGHT_PAREN 76.0

State 301:
     85.0:full_type_declaration <= TYPE IDENTIFIER IS type_definition SEMICOLON ^

   BEGIN                                  => reduce 5 tokens to full_type_declaration 85.0
   END                                    => reduce 5 tokens to full_type_declaration 85.0
   FUNCTION                               => reduce 5 tokens to full_type_declaration 85.0
   PACKAGE                                => reduce 5 tokens to full_type_declaration 85.0
   PROCEDURE                              => reduce 5 tokens to full_type_declaration 85.0
   TYPE                                   => reduce 5 tokens to full_type_declaration 85.0
   IDENTIFIER                             => reduce 5 tokens to full_type_declaration 85.0
   default                                => ERROR

   Minimal_Complete_Action => full_type_declaration 85.0

State 302:
     97.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression ^ SEMICOLON

   SEMICOLON                              => shift and goto state 320 97.0
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 97.0

State 303:
     64.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements END identifier_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 321 64.0
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 64.0

State 304:
     93.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ^

   BEGIN                                  => reduce 7 tokens to loop_statement 93.0
   CASE                                   => reduce 7 tokens to loop_statement 93.0
   DECLARE                                => reduce 7 tokens to loop_statement 93.0
   ELSE                                   => reduce 7 tokens to loop_statement 93.0
   ELSIF                                  => reduce 7 tokens to loop_statement 93.0
   END                                    => reduce 7 tokens to loop_statement 93.0
   EXIT                                   => reduce 7 tokens to loop_statement 93.0
   EXCEPTION                              => reduce 7 tokens to loop_statement 93.0
   FOR                                    => reduce 7 tokens to loop_statement 93.0
   FUNCTION                               => reduce 7 tokens to loop_statement 93.0
   IF                                     => reduce 7 tokens to loop_statement 93.0
   LOOP                                   => reduce 7 tokens to loop_statement 93.0
   PACKAGE                                => reduce 7 tokens to loop_statement 93.0
   PROCEDURE                              => reduce 7 tokens to loop_statement 93.0
   RETURN                                 => reduce 7 tokens to loop_statement 93.0
   WHEN                                   => reduce 7 tokens to loop_statement 93.0
   IDENTIFIER                             => reduce 7 tokens to loop_statement 93.0
   Wisi_EOI                               => reduce 7 tokens to loop_statement 93.0
   default                                => ERROR

   Minimal_Complete_Action => loop_statement 93.0

State 305:
    117.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 322 117.1
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 117.1

State 306:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   name                                   goto state 294
   name_opt                               goto state 323
   selected_component                     goto state 29

   Minimal_Complete_Action => name_opt 96.1

State 307:
    101.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL expression ^

   RIGHT_PAREN                            => reduce 5 tokens to parameter_specification 101.0
   SEMICOLON                              => reduce 5 tokens to parameter_specification 101.0
   default                                => ERROR

   Minimal_Complete_Action => parameter_specification 101.0

State 308:
     90.2:if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements END IF ^ SEMICOLON

   SEMICOLON                              => shift and goto state 324 90.2
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 90.2

State 309:
    134.0:ELSIF_expression_list <= ELSIF expression THEN sequence_of_statements ^

   ELSE                                   => reduce 4 tokens to ELSIF_expression_list 134.0
   ELSIF                                  => reduce 4 tokens to ELSIF_expression_list 134.0
   END                                    => reduce 4 tokens to ELSIF_expression_list 134.0
   default                                => ERROR

   Minimal_Complete_Action => ELSIF_expression_list 134.0

State 310:
     90.0:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list ELSE sequence_of_statements END ^ IF SEMICOLON

   IF                                     => shift and goto state 325 90.0
   default                                => ERROR

   Minimal_Complete_Action => IF 90.0

State 311:
    134.1:ELSIF_expression_list <= ELSIF_expression_list ELSIF expression THEN ^ sequence_of_statements

   BEGIN                                  => reduce 0 tokens to block_label_opt 63.1
   CASE                                   => shift and goto state 1 67.0
   DECLARE                                => reduce 0 tokens to block_label_opt 63.1
   ELSE                                   => reduce 0 tokens to sequence_of_statements 112.1
   ELSIF                                  => reduce 0 tokens to sequence_of_statements 112.1
   END                                    => reduce 0 tokens to sequence_of_statements 112.1
   EXIT                                   => shift and goto state 2 79.0
   FOR                                    => shift and goto state 3 92.0
   IF                                     => shift and goto state 5 90.0
   LOOP                                   => shift and goto state 6 93.1
   RETURN                                 => shift and goto state 9 82.0
   IDENTIFIER                             => shift and goto state 10 63.0
   default                                => ERROR

   assignment_statement                   goto state 11
   block_label_opt                        goto state 12
   block_statement                        goto state 13
   case_statement                         goto state 14
   compound_statement                     goto state 17
   exit_statement                         goto state 18
   extended_return_statement              goto state 19
   if_statement                           goto state 22
   iteration_scheme                       goto state 23
   loop_statement                         goto state 24
   name                                   goto state 25
   procedure_call_statement               goto state 27
   selected_component                     goto state 29
   sequence_of_statements                 goto state 326
   simple_return_statement                goto state 30
   simple_statement                       goto state 31
   statement                              goto state 60
   statement_list                         goto state 61

   Minimal_Complete_Action => sequence_of_statements 112.1

State 312:
     90.1:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list END IF SEMICOLON ^

   BEGIN                                  => reduce 8 tokens to if_statement 90.1
   CASE                                   => reduce 8 tokens to if_statement 90.1
   DECLARE                                => reduce 8 tokens to if_statement 90.1
   ELSE                                   => reduce 8 tokens to if_statement 90.1
   ELSIF                                  => reduce 8 tokens to if_statement 90.1
   END                                    => reduce 8 tokens to if_statement 90.1
   EXIT                                   => reduce 8 tokens to if_statement 90.1
   EXCEPTION                              => reduce 8 tokens to if_statement 90.1
   FOR                                    => reduce 8 tokens to if_statement 90.1
   FUNCTION                               => reduce 8 tokens to if_statement 90.1
   IF                                     => reduce 8 tokens to if_statement 90.1
   LOOP                                   => reduce 8 tokens to if_statement 90.1
   PACKAGE                                => reduce 8 tokens to if_statement 90.1
   PROCEDURE                              => reduce 8 tokens to if_statement 90.1
   RETURN                                 => reduce 8 tokens to if_statement 90.1
   WHEN                                   => reduce 8 tokens to if_statement 90.1
   IDENTIFIER                             => reduce 8 tokens to if_statement 90.1
   Wisi_EOI                               => reduce 8 tokens to if_statement 90.1
   default                                => ERROR

   Minimal_Complete_Action => if_statement 90.1

State 313:
     98.2:package_body <= PACKAGE BODY name IS declarative_part BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   name                                   goto state 294
   name_opt                               goto state 327
   selected_component                     goto state 29

   Minimal_Complete_Action => name_opt 96.1

State 314:
     98.3:package_body <= PACKAGE BODY name IS declarative_part END name_opt SEMICOLON ^

   BEGIN                                  => reduce 8 tokens to package_body 98.3
   CASE                                   => reduce 8 tokens to package_body 98.3
   DECLARE                                => reduce 8 tokens to package_body 98.3
   END                                    => reduce 8 tokens to package_body 98.3
   EXIT                                   => reduce 8 tokens to package_body 98.3
   FOR                                    => reduce 8 tokens to package_body 98.3
   FUNCTION                               => reduce 8 tokens to package_body 98.3
   IF                                     => reduce 8 tokens to package_body 98.3
   LOOP                                   => reduce 8 tokens to package_body 98.3
   PACKAGE                                => reduce 8 tokens to package_body 98.3
   PROCEDURE                              => reduce 8 tokens to package_body 98.3
   RETURN                                 => reduce 8 tokens to package_body 98.3
   TYPE                                   => reduce 8 tokens to package_body 98.3
   IDENTIFIER                             => reduce 8 tokens to package_body 98.3
   Wisi_EOI                               => reduce 8 tokens to package_body 98.3
   default                                => ERROR

   Minimal_Complete_Action => package_body 98.3

State 315:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON

   END                                    => shift and goto state 328 98.0
   default                                => ERROR

   Minimal_Complete_Action => END 98.0

State 316:
     98.1:package_body <= PACKAGE BODY name aspect_specification IS declarative_part END name_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 329 98.1
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 98.1

State 317:
     78.0:exception_handler <= WHEN exception_choice EQUAL_GREATER sequence_of_statements ^

   END                                    => reduce 4 tokens to exception_handler 78.0
   WHEN                                   => reduce 4 tokens to exception_handler 78.0
   default                                => ERROR

   Minimal_Complete_Action => exception_handler 78.0

State 318:
     76.0:enumeration_type_definition <= LEFT_PAREN IDENTIFIER_COMMA_list RIGHT_PAREN ^

   SEMICOLON                              => reduce 3 tokens to enumeration_type_definition 76.0
   default                                => ERROR

   Minimal_Complete_Action => enumeration_type_definition 76.0

State 319:
    128.1:IDENTIFIER_COMMA_list <= IDENTIFIER_COMMA_list COMMA ^ IDENTIFIER

   IDENTIFIER                             => shift and goto state 330 128.1
   default                                => ERROR

   Minimal_Complete_Action => IDENTIFIER 128.1

State 320:
     97.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression SEMICOLON ^

   BEGIN                                  => reduce 6 tokens to object_declaration 97.0
   END                                    => reduce 6 tokens to object_declaration 97.0
   FUNCTION                               => reduce 6 tokens to object_declaration 97.0
   PACKAGE                                => reduce 6 tokens to object_declaration 97.0
   PROCEDURE                              => reduce 6 tokens to object_declaration 97.0
   TYPE                                   => reduce 6 tokens to object_declaration 97.0
   IDENTIFIER                             => reduce 6 tokens to object_declaration 97.0
   default                                => ERROR

   Minimal_Complete_Action => object_declaration 97.0

State 321:
     64.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ^

   BEGIN                                  => reduce 8 tokens to block_statement 64.0
   CASE                                   => reduce 8 tokens to block_statement 64.0
   DECLARE                                => reduce 8 tokens to block_statement 64.0
   ELSE                                   => reduce 8 tokens to block_statement 64.0
   ELSIF                                  => reduce 8 tokens to block_statement 64.0
   END                                    => reduce 8 tokens to block_statement 64.0
   EXIT                                   => reduce 8 tokens to block_statement 64.0
   EXCEPTION                              => reduce 8 tokens to block_statement 64.0
   FOR                                    => reduce 8 tokens to block_statement 64.0
   FUNCTION                               => reduce 8 tokens to block_statement 64.0
   IF                                     => reduce 8 tokens to block_statement 64.0
   LOOP                                   => reduce 8 tokens to block_statement 64.0
   PACKAGE                                => reduce 8 tokens to block_statement 64.0
   PROCEDURE                              => reduce 8 tokens to block_statement 64.0
   RETURN                                 => reduce 8 tokens to block_statement 64.0
   WHEN                                   => reduce 8 tokens to block_statement 64.0
   IDENTIFIER                             => reduce 8 tokens to block_statement 64.0
   Wisi_EOI                               => reduce 8 tokens to block_statement 64.0
   default                                => ERROR

   Minimal_Complete_Action => block_statement 64.0

State 322:
    117.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^

   BEGIN                                  => reduce 8 tokens to subprogram_body 117.1
   CASE                                   => reduce 8 tokens to subprogram_body 117.1
   DECLARE                                => reduce 8 tokens to subprogram_body 117.1
   END                                    => reduce 8 tokens to subprogram_body 117.1
   EXIT                                   => reduce 8 tokens to subprogram_body 117.1
   FOR                                    => reduce 8 tokens to subprogram_body 117.1
   FUNCTION                               => reduce 8 tokens to subprogram_body 117.1
   IF                                     => reduce 8 tokens to subprogram_body 117.1
   LOOP                                   => reduce 8 tokens to subprogram_body 117.1
   PACKAGE                                => reduce 8 tokens to subprogram_body 117.1
   PROCEDURE                              => reduce 8 tokens to subprogram_body 117.1
   RETURN                                 => reduce 8 tokens to subprogram_body 117.1
   TYPE                                   => reduce 8 tokens to subprogram_body 117.1
   IDENTIFIER                             => reduce 8 tokens to subprogram_body 117.1
   Wisi_EOI                               => reduce 8 tokens to subprogram_body 117.1
   default                                => ERROR

   Minimal_Complete_Action => subprogram_body 117.1

State 323:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 331 117.0
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 117.0

State 324:
     90.2:if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON ^

   BEGIN                                  => reduce 9 tokens to if_statement 90.2
   CASE                                   => reduce 9 tokens to if_statement 90.2
   DECLARE                                => reduce 9 tokens to if_statement 90.2
   ELSE                                   => reduce 9 tokens to if_statement 90.2
   ELSIF                                  => reduce 9 tokens to if_statement 90.2
   END                                    => reduce 9 tokens to if_statement 90.2
   EXIT                                   => reduce 9 tokens to if_statement 90.2
   EXCEPTION                              => reduce 9 tokens to if_statement 90.2
   FOR                                    => reduce 9 tokens to if_statement 90.2
   FUNCTION                               => reduce 9 tokens to if_statement 90.2
   IF                                     => reduce 9 tokens to if_statement 90.2
   LOOP                                   => reduce 9 tokens to if_statement 90.2
   PACKAGE                                => reduce 9 tokens to if_statement 90.2
   PROCEDURE                              => reduce 9 tokens to if_statement 90.2
   RETURN                                 => reduce 9 tokens to if_statement 90.2
   WHEN                                   => reduce 9 tokens to if_statement 90.2
   IDENTIFIER                             => reduce 9 tokens to if_statement 90.2
   Wisi_EOI                               => reduce 9 tokens to if_statement 90.2
   default                                => ERROR

   Minimal_Complete_Action => if_statement 90.2

State 325:
     90.0:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list ELSE sequence_of_statements END IF ^ SEMICOLON

   SEMICOLON                              => shift and goto state 332 90.0
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 90.0

State 326:
    134.1:ELSIF_expression_list <= ELSIF_expression_list ELSIF expression THEN sequence_of_statements ^

   ELSE                                   => reduce 5 tokens to ELSIF_expression_list 134.1
   ELSIF                                  => reduce 5 tokens to ELSIF_expression_list 134.1
   END                                    => reduce 5 tokens to ELSIF_expression_list 134.1
   default                                => ERROR

   Minimal_Complete_Action => ELSIF_expression_list 134.1

State 327:
     98.2:package_body <= PACKAGE BODY name IS declarative_part BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 333 98.2
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 98.2

State 328:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to name_opt 96.1
   IDENTIFIER                             => shift and goto state 42 95.2
   default                                => ERROR

   name                                   goto state 294
   name_opt                               goto state 334
   selected_component                     goto state 29

   Minimal_Complete_Action => name_opt 96.1

State 329:
     98.1:package_body <= PACKAGE BODY name aspect_specification IS declarative_part END name_opt SEMICOLON ^

   BEGIN                                  => reduce 9 tokens to package_body 98.1
   CASE                                   => reduce 9 tokens to package_body 98.1
   DECLARE                                => reduce 9 tokens to package_body 98.1
   END                                    => reduce 9 tokens to package_body 98.1
   EXIT                                   => reduce 9 tokens to package_body 98.1
   FOR                                    => reduce 9 tokens to package_body 98.1
   FUNCTION                               => reduce 9 tokens to package_body 98.1
   IF                                     => reduce 9 tokens to package_body 98.1
   LOOP                                   => reduce 9 tokens to package_body 98.1
   PACKAGE                                => reduce 9 tokens to package_body 98.1
   PROCEDURE                              => reduce 9 tokens to package_body 98.1
   RETURN                                 => reduce 9 tokens to package_body 98.1
   TYPE                                   => reduce 9 tokens to package_body 98.1
   IDENTIFIER                             => reduce 9 tokens to package_body 98.1
   Wisi_EOI                               => reduce 9 tokens to package_body 98.1
   default                                => ERROR

   Minimal_Complete_Action => package_body 98.1

State 330:
    128.1:IDENTIFIER_COMMA_list <= IDENTIFIER_COMMA_list COMMA IDENTIFIER ^

   RIGHT_PAREN                            => reduce 3 tokens to IDENTIFIER_COMMA_list 128.1
   COMMA                                  => reduce 3 tokens to IDENTIFIER_COMMA_list 128.1
   default                                => ERROR

   Minimal_Complete_Action => IDENTIFIER_COMMA_list 128.1

State 331:
    117.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^

   BEGIN                                  => reduce 9 tokens to subprogram_body 117.0
   CASE                                   => reduce 9 tokens to subprogram_body 117.0
   DECLARE                                => reduce 9 tokens to subprogram_body 117.0
   END                                    => reduce 9 tokens to subprogram_body 117.0
   EXIT                                   => reduce 9 tokens to subprogram_body 117.0
   FOR                                    => reduce 9 tokens to subprogram_body 117.0
   FUNCTION                               => reduce 9 tokens to subprogram_body 117.0
   IF                                     => reduce 9 tokens to subprogram_body 117.0
   LOOP                                   => reduce 9 tokens to subprogram_body 117.0
   PACKAGE                                => reduce 9 tokens to subprogram_body 117.0
   PROCEDURE                              => reduce 9 tokens to subprogram_body 117.0
   RETURN                                 => reduce 9 tokens to subprogram_body 117.0
   TYPE                                   => reduce 9 tokens to subprogram_body 117.0
   IDENTIFIER                             => reduce 9 tokens to subprogram_body 117.0
   Wisi_EOI                               => reduce 9 tokens to subprogram_body 117.0
   default                                => ERROR

   Minimal_Complete_Action => subprogram_body 117.0

State 332:
     90.0:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list ELSE sequence_of_statements END IF SEMICOLON ^

   BEGIN                                  => reduce 10 tokens to if_statement 90.0
   CASE                                   => reduce 10 tokens to if_statement 90.0
   DECLARE                                => reduce 10 tokens to if_statement 90.0
   ELSE                                   => reduce 10 tokens to if_statement 90.0
   ELSIF                                  => reduce 10 tokens to if_statement 90.0
   END                                    => reduce 10 tokens to if_statement 90.0
   EXIT                                   => reduce 10 tokens to if_statement 90.0
   EXCEPTION                              => reduce 10 tokens to if_statement 90.0
   FOR                                    => reduce 10 tokens to if_statement 90.0
   FUNCTION                               => reduce 10 tokens to if_statement 90.0
   IF                                     => reduce 10 tokens to if_statement 90.0
   LOOP                                   => reduce 10 tokens to if_statement 90.0
   PACKAGE                                => reduce 10 tokens to if_statement 90.0
   PROCEDURE                              => reduce 10 tokens to if_statement 90.0
   RETURN                                 => reduce 10 tokens to if_statement 90.0
   WHEN                                   => reduce 10 tokens to if_statement 90.0
   IDENTIFIER                             => reduce 10 tokens to if_statement 90.0
   Wisi_EOI                               => reduce 10 tokens to if_statement 90.0
   default                                => ERROR

   Minimal_Complete_Action => if_statement 90.0

State 333:
     98.2:package_body <= PACKAGE BODY name IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^

   BEGIN                                  => reduce 10 tokens to package_body 98.2
   CASE                                   => reduce 10 tokens to package_body 98.2
   DECLARE                                => reduce 10 tokens to package_body 98.2
   END                                    => reduce 10 tokens to package_body 98.2
   EXIT                                   => reduce 10 tokens to package_body 98.2
   FOR                                    => reduce 10 tokens to package_body 98.2
   FUNCTION                               => reduce 10 tokens to package_body 98.2
   IF                                     => reduce 10 tokens to package_body 98.2
   LOOP                                   => reduce 10 tokens to package_body 98.2
   PACKAGE                                => reduce 10 tokens to package_body 98.2
   PROCEDURE                              => reduce 10 tokens to package_body 98.2
   RETURN                                 => reduce 10 tokens to package_body 98.2
   TYPE                                   => reduce 10 tokens to package_body 98.2
   IDENTIFIER                             => reduce 10 tokens to package_body 98.2
   Wisi_EOI                               => reduce 10 tokens to package_body 98.2
   default                                => ERROR

   Minimal_Complete_Action => package_body 98.2

State 334:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 335 98.0
   default                                => ERROR

   Minimal_Complete_Action => SEMICOLON 98.0

State 335:
     98.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^

   BEGIN                                  => reduce 11 tokens to package_body 98.0
   CASE                                   => reduce 11 tokens to package_body 98.0
   DECLARE                                => reduce 11 tokens to package_body 98.0
   END                                    => reduce 11 tokens to package_body 98.0
   EXIT                                   => reduce 11 tokens to package_body 98.0
   FOR                                    => reduce 11 tokens to package_body 98.0
   FUNCTION                               => reduce 11 tokens to package_body 98.0
   IF                                     => reduce 11 tokens to package_body 98.0
   LOOP                                   => reduce 11 tokens to package_body 98.0
   PACKAGE                                => reduce 11 tokens to package_body 98.0
   PROCEDURE                              => reduce 11 tokens to package_body 98.0
   RETURN                                 => reduce 11 tokens to package_body 98.0
   TYPE                                   => reduce 11 tokens to package_body 98.0
   IDENTIFIER                             => reduce 11 tokens to package_body 98.0
   Wisi_EOI                               => reduce 11 tokens to package_body 98.0
   default                                => ERROR

   Minimal_Complete_Action => package_body 98.0

States with conflicts: 64 174 252

 0 accept/reduce conflicts, 1 shift/reduce conflicts, 2 reduce/reduce conflicts

 80 rules, 18 user actions, 20 checks, 336 states
