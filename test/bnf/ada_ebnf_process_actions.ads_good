--  generated parser support file. -*- buffer-read-only:t  -*-
--  command line: wisitoken-bnf-generate.exe  --generate LALR Ada_Emacs re2c PROCESS ../test/bnf/ada_ebnf.wy
--

with WisiToken.Syntax_Trees;
package Ada_Ebnf_Process_Actions is

   Descriptor : aliased constant WisiToken.Descriptor :=
     (First_Terminal    => 0,
      Last_Terminal       => 11,
      First_Nonterminal   => 12,
      Last_Nonterminal    => 25,
      SOI_ID              => 26,
      EOI_ID              => 11,
      Accept_ID           => 12,
      Case_Insensitive    => False,
      New_Line_ID         => 32767,
      String_1_ID         => 32767,
      String_2_ID         => 32767,
      Image               =>
        (new String'("USE"),
         new String'("RANGE"),
         new String'("CONSTANT"),
         new String'("IS"),
         new String'("SUBTYPE"),
         new String'("GENERIC"),
         new String'("COLON"),
         new String'("COLON_EQUAL"),
         new String'("SEMICOLON"),
         new String'("TICK"),
         new String'("IDENTIFIER"),
         new String'("Wisi_EOI"),
         new String'("wisitoken_accept"),
         new String'("assign_value"),
         new String'("generic_formal_part"),
         new String'("subtype_declaration"),
         new String'("object_declaration"),
         new String'("compilation_unit"),
         new String'("constraint"),
         new String'("generic_formal_parameter_declaration"),
         new String'("use_clause"),
         new String'("subtype_indication"),
         new String'("name"),
         new String'("expression"),
         new String'("generic_formal_parameter_declaration_use_clause"),
         new String'("generic_formal_parameter_declaration_use_clause_list"),
         new String'("Wisi_SOI")),
      Terminal_Image_Width => 11,
      Image_Width          => 52,
      Last_Lookahead       => 12);

   type Token_Enum_ID is
     (USE_ID,
      RANGE_ID,
      CONSTANT_ID,
      IS_ID,
      SUBTYPE_ID,
      GENERIC_ID,
      COLON_ID,
      COLON_EQUAL_ID,
      SEMICOLON_ID,
      TICK_ID,
      IDENTIFIER_ID,
      Wisi_EOI_ID,
      wisitoken_accept_ID,
      assign_value_ID,
      generic_formal_part_ID,
      subtype_declaration_ID,
      object_declaration_ID,
      compilation_unit_ID,
      constraint_ID,
      generic_formal_parameter_declaration_ID,
      use_clause_ID,
      subtype_indication_ID,
      name_ID,
      expression_ID,
      generic_formal_parameter_declaration_use_clause_ID,
      generic_formal_parameter_declaration_use_clause_list_ID,
      Wisi_SOI_ID);

   type Token_Enum_ID_Array is array (Positive range <>) of Token_Enum_ID;
   use all type WisiToken.Token_ID;
   function "+" (Item : in Token_Enum_ID) return WisiToken.Token_ID
     is (WisiToken.Token_ID'First + Token_Enum_ID'Pos (Item));
   function To_Token_Enum (Item : in WisiToken.Token_ID) return Token_Enum_ID
     is (Token_Enum_ID'Val (Item - WisiToken.Token_ID'First));
   function "-" (Item : in WisiToken.Token_ID) return Token_Enum_ID renames To_Token_Enum;

   procedure object_declaration_0
     (User_Data : in out WisiToken.Syntax_Trees.User_Data_Type'Class;
      Tree      : in out WisiToken.Syntax_Trees.Tree;
      Nonterm   : in     WisiToken.Syntax_Trees.Valid_Node_Access);
   procedure object_declaration_1
     (User_Data : in out WisiToken.Syntax_Trees.User_Data_Type'Class;
      Tree      : in out WisiToken.Syntax_Trees.Tree;
      Nonterm   : in     WisiToken.Syntax_Trees.Valid_Node_Access);
   procedure object_declaration_2
     (User_Data : in out WisiToken.Syntax_Trees.User_Data_Type'Class;
      Tree      : in out WisiToken.Syntax_Trees.Tree;
      Nonterm   : in     WisiToken.Syntax_Trees.Valid_Node_Access);
   procedure object_declaration_3
     (User_Data : in out WisiToken.Syntax_Trees.User_Data_Type'Class;
      Tree      : in out WisiToken.Syntax_Trees.Tree;
      Nonterm   : in     WisiToken.Syntax_Trees.Valid_Node_Access);
   procedure object_declaration_4
     (User_Data : in out WisiToken.Syntax_Trees.User_Data_Type'Class;
      Tree      : in out WisiToken.Syntax_Trees.Tree;
      Nonterm   : in     WisiToken.Syntax_Trees.Valid_Node_Access);
   procedure object_declaration_5
     (User_Data : in out WisiToken.Syntax_Trees.User_Data_Type'Class;
      Tree      : in out WisiToken.Syntax_Trees.Tree;
      Nonterm   : in     WisiToken.Syntax_Trees.Valid_Node_Access);
   procedure object_declaration_6
     (User_Data : in out WisiToken.Syntax_Trees.User_Data_Type'Class;
      Tree      : in out WisiToken.Syntax_Trees.Tree;
      Nonterm   : in     WisiToken.Syntax_Trees.Valid_Node_Access);
   procedure object_declaration_7
     (User_Data : in out WisiToken.Syntax_Trees.User_Data_Type'Class;
      Tree      : in out WisiToken.Syntax_Trees.Tree;
      Nonterm   : in     WisiToken.Syntax_Trees.Valid_Node_Access);
   Partial_Parse_Active    : aliased Boolean := False;
   Partial_Parse_Byte_Goal : aliased WisiToken.Buffer_Pos := WisiToken.Buffer_Pos'Last;
end Ada_Ebnf_Process_Actions;
