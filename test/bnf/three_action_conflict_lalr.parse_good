 27 tokens lexed
 0: 0: (-1, 1:(LBRACE, (1 . 1))) : shift and goto state 1
 0: 1: (-1, 2:(IDENTIFIER, (3 . 5))) : shift and goto state 5
 0: 5: (-1, 3:(SEMI, (6 . 6))) : reduce 1 tokens to expression
(expression_1, (3 . 5)) <= (2:(IDENTIFIER, (3 . 5)))
 ... goto state 7
 0: 7: (-1, 3:(SEMI, (6 . 6))) : shift and goto state 14
 0: 14: (-1, 4:(LPAREN, (73 . 73))) : reduce 2 tokens to statement
(statement_0, (3 . 6)) <= ((expression, (3 . 5)), 3:(SEMI, (6 . 6)))
 ... goto state 6
 0: 6: (-1, 4:(LPAREN, (73 . 73))) : reduce 1 tokens to statement_list
(statement_list_0, (3 . 6)) <= ((statement, (3 . 6)))
 ... goto state 10
 0: 10: (-1, 4:(LPAREN, (73 . 73))) : shift and goto state 3
 0: 3: (-1, 5:(IDENTIFIER, (74 . 76))) : shift and goto state 11
 0: 11: (-1, 6:(RPAREN, (77 . 77))) : spawn 1, (2 active)
tree size:  31
 1: 11: (-1, 6:(RPAREN, (77 . 77))) : reduce 1 tokens to classOrInterfaceType
(classOrInterfaceType_0, (74 . 76)) <= (5:(IDENTIFIER, (74 . 76)))
 ... goto state 12
 0: 11: (-1, 6:(RPAREN, (77 . 77))) : spawn 2, (3 active)
tree size:  32
 2: 11: (-1, 6:(RPAREN, (77 . 77))) : reduce 1 tokens to expression
(expression_1, (74 . 76)) <= (5:(IDENTIFIER, (74 . 76)))
 ... goto state 13
 0: 11: (-1, 6:(RPAREN, (77 . 77))) : shift and goto state 18
 2: 13: (-1, 6:(RPAREN, (77 . 77))) : shift and goto state 20
 1: 12: (-1, 6:(RPAREN, (77 . 77))) : shift and goto state 19
 2: 20: (-1, 7:(IDENTIFIER, (79 . 81))) : ERROR
 2: 20: expecting: RPAREN, SEMI
 2: zombie
 1: 19: (-1, 7:(IDENTIFIER, (79 . 81))) : shift and goto state 5
 0: 18: (-1, 7:(IDENTIFIER, (79 . 81))) : ERROR
 0: 18: expecting: ARROW
 0: zombie
 2: zombie
 1: 5: (-1, 8:(SEMI, (82 . 82))) : reduce 1 tokens to expression
(expression_1, (79 . 81)) <= (7:(IDENTIFIER, (79 . 81)))
 ... goto state 22
 0: zombie
 2: zombie
 1: 22: (-1, 8:(SEMI, (82 . 82))) : reduce 4 tokens to expression
(expression_2, (73 . 81)) <= (4:(LPAREN, (73 . 73)), (classOrInterfaceType, (74 . 76)), 6:(RPAREN, (77 . 77)), (expression, (79 . 81)))
 ... goto state 7
 0: zombie
 2: zombie
 1: 7: (-1, 8:(SEMI, (82 . 82))) : shift and goto state 14
 0: zombie
 2: zombie
 1: 14: (-1, 9:(LPAREN, (84 . 84))) : reduce 2 tokens to statement
(statement_0, (73 . 82)) <= ((expression, (73 . 81)), 8:(SEMI, (82 . 82)))
 ... goto state 17
 0: zombie
 2: zombie
 1: 17: (-1, 9:(LPAREN, (84 . 84))) : reduce 2 tokens to statement_list
(statement_list_1, (3 . 82)) <= ((statement_list, (3 . 6)), (statement, (73 . 82)))
 ... goto state 10
 0: zombie
 2: zombie
 1: 10: (-1, 9:(LPAREN, (84 . 84))) : shift and goto state 3
 0: zombie
 2: terminate (2 active): zombie (-1, 7:(IDENTIFIER, (79 . 81)))
 1: 3: (-1, 10:(IDENTIFIER, (85 . 87))) : shift and goto state 11
 0: terminate (1 active): zombie (-1, 7:(IDENTIFIER, (79 . 81)))
 1: 11: (-1, 11:(RPAREN, (88 . 88))) : spawn 3, (2 active)
tree size:  37
 3: 11: (-1, 11:(RPAREN, (88 . 88))) : reduce 1 tokens to classOrInterfaceType
(classOrInterfaceType_0, (85 . 87)) <= (10:(IDENTIFIER, (85 . 87)))
 ... goto state 12
 1: 11: (-1, 11:(RPAREN, (88 . 88))) : spawn 4, (3 active)
tree size:  38
 4: 11: (-1, 11:(RPAREN, (88 . 88))) : reduce 1 tokens to expression
(expression_1, (85 . 87)) <= (10:(IDENTIFIER, (85 . 87)))
 ... goto state 13
 1: 11: (-1, 11:(RPAREN, (88 . 88))) : shift and goto state 18
 4: 13: (-1, 11:(RPAREN, (88 . 88))) : shift and goto state 20
 3: 12: (-1, 11:(RPAREN, (88 . 88))) : shift and goto state 19
 4: 20: (-1, 12:(ARROW, (89 . 90))) : ERROR
 4: 20: expecting: RPAREN, SEMI
 4: zombie
 3: 19: (-1, 12:(ARROW, (89 . 90))) : ERROR
 3: 19: expecting: LPAREN, IDENTIFIER
 3: zombie
 1: 18: (-1, 12:(ARROW, (89 . 90))) : reduce 3 tokens to lambdaParameters
(lambdaParameters_0, (84 . 88)) <= (9:(LPAREN, (84 . 84)), 10:(IDENTIFIER, (85 . 87)), 11:(RPAREN, (88 . 88)))
 ... goto state 9
 4: zombie
 3: zombie
 1: 9: (-1, 12:(ARROW, (89 . 90))) : shift and goto state 15
 4: zombie
 3: zombie
 1: 15: (-1, 13:(LBRACE, (91 . 91))) : shift and goto state 1
 4: zombie
 3: zombie
 1: 1: (-1, 14:(IDENTIFIER, (92 . 94))) : shift and goto state 5
 4: terminate (2 active): zombie (-1, 12:(ARROW, (89 . 90)))
 3: terminate (1 active): zombie (-1, 12:(ARROW, (89 . 90)))
 1: 5: (-1, 15:(SEMI, (95 . 95))) : reduce 1 tokens to expression
(expression_1, (92 . 94)) <= (14:(IDENTIFIER, (92 . 94)))
 ... goto state 7
 1: 7: (-1, 15:(SEMI, (95 . 95))) : shift and goto state 14
 1: 14: (-1, 16:(RBRACE, (96 . 96))) : reduce 2 tokens to statement
(statement_0, (92 . 95)) <= ((expression, (92 . 94)), 15:(SEMI, (95 . 95)))
 ... goto state 6
 1: 6: (-1, 16:(RBRACE, (96 . 96))) : reduce 1 tokens to statement_list
(statement_list_0, (92 . 95)) <= ((statement, (92 . 95)))
 ... goto state 10
 1: 10: (-1, 16:(RBRACE, (96 . 96))) : shift and goto state 16
 1: 16: (-1, 17:(SEMI, (97 . 97))) : reduce 3 tokens to block
(block_0, (91 . 96)) <= (13:(LBRACE, (91 . 91)), (statement_list, (92 . 95)), 16:(RBRACE, (96 . 96)))
 ... goto state 21
 1: 21: (-1, 17:(SEMI, (97 . 97))) : reduce 3 tokens to lambdaExpression
(lambdaExpression_0, (84 . 96)) <= ((lambdaParameters, (84 . 88)), 12:(ARROW, (89 . 90)), (block, (91 . 96)))
 ... goto state 8
 1: 8: (-1, 17:(SEMI, (97 . 97))) : reduce 1 tokens to expression
(expression_3, (84 . 96)) <= ((lambdaExpression, (84 . 96)))
 ... goto state 7
 1: 7: (-1, 17:(SEMI, (97 . 97))) : shift and goto state 14
 1: 14: (-1, 18:(LPAREN, (142 . 142))) : reduce 2 tokens to statement
(statement_0, (84 . 97)) <= ((expression, (84 . 96)), 17:(SEMI, (97 . 97)))
 ... goto state 17
 1: 17: (-1, 18:(LPAREN, (142 . 142))) : reduce 2 tokens to statement_list
(statement_list_1, (3 . 97)) <= ((statement_list, (3 . 82)), (statement, (84 . 97)))
 ... goto state 10
 1: 10: (-1, 18:(LPAREN, (142 . 142))) : shift and goto state 3
 1: 3: (-1, 19:(IDENTIFIER, (143 . 145))) : shift and goto state 11
 1: 11: (-1, 20:(RPAREN, (146 . 146))) : spawn 5, (2 active)
tree size:  48
 5: 11: (-1, 20:(RPAREN, (146 . 146))) : reduce 1 tokens to classOrInterfaceType
(classOrInterfaceType_0, (143 . 145)) <= (19:(IDENTIFIER, (143 . 145)))
 ... goto state 12
 1: 11: (-1, 20:(RPAREN, (146 . 146))) : spawn 6, (3 active)
tree size:  49
 6: 11: (-1, 20:(RPAREN, (146 . 146))) : reduce 1 tokens to expression
(expression_1, (143 . 145)) <= (19:(IDENTIFIER, (143 . 145)))
 ... goto state 13
 1: 11: (-1, 20:(RPAREN, (146 . 146))) : shift and goto state 18
 6: 13: (-1, 20:(RPAREN, (146 . 146))) : shift and goto state 20
 5: 12: (-1, 20:(RPAREN, (146 . 146))) : shift and goto state 19
 6: 20: (-1, 21:(ARROW, (147 . 148))) : ERROR
 6: 20: expecting: RPAREN, SEMI
 6: zombie
 5: 19: (-1, 21:(ARROW, (147 . 148))) : ERROR
 5: 19: expecting: LPAREN, IDENTIFIER
 5: zombie
 1: 18: (-1, 21:(ARROW, (147 . 148))) : reduce 3 tokens to lambdaParameters
(lambdaParameters_0, (142 . 146)) <= (18:(LPAREN, (142 . 142)), 19:(IDENTIFIER, (143 . 145)), 20:(RPAREN, (146 . 146)))
 ... goto state 9
 6: zombie
 5: zombie
 1: 9: (-1, 21:(ARROW, (147 . 148))) : shift and goto state 15
 6: zombie
 5: zombie
 1: 15: (-1, 22:(IDENTIFIER, (150 . 152))) : ERROR
 1: 15: expecting: LBRACE
 1: zombie

 McKenzie error recovery

parser 6: State 20 Current_Token (-1, 21:(ARROW, (147 . 148))) Resume_Token_Goal 24
Action

parser 5: State 19 Current_Token (-1, 21:(ARROW, (147 . 148))) Resume_Token_Goal 24
Action

parser 1: State 15 Current_Token (-1, 22:(IDENTIFIER, (150 . 152))) Resume_Token_Goal 25
Action

 1 parallel tasks
new Worker_Task 1
 6: succeed 1, enqueue 114, check  63, cost:  15
 6:  15, ( 0 0 1 0 0 0 0 3 0), (2 : (block, (1 . 154)))|(-1, 27:(Wisi_EOI, (159 . 158)))|((DELETE, ARROW, 21), (INSERT, SEMI, 22), (FAST_FORWARD, 25), (DELETE, SEMI, 25), (DELETE, RBRACE, 26))
 5: succeed 1, enqueue 99, check  49, cost:  12
 5:  12, ( 0 0 0 0 0 0 0 3 0), (2 : (block, (1 . 154)))|(-1, 27:(Wisi_EOI, (159 . 158)))|((DELETE, ARROW, 21), (FAST_FORWARD, 25), (DELETE, SEMI, 25), (DELETE, RBRACE, 26))
 1: succeed 1, enqueue 4, check  2, cost:  3
 1:  3, ( 0 0 1 0 0 0 0 0 0), (1 : (LBRACE))|(-1, 22:(IDENTIFIER, (150 . 152)))|((INSERT, LBRACE, 22)) minimal_complete ACTIVE

recover: succeed, parser count 3
 6: stack (6, (0, -28:(-)), (1, 1:(LBRACE, (1 . 1))), (10, -48:(statement_list, (3 . 97))), (3, 18:(LPAREN, (142 . 142))), (13, -50:(expression, (143 . 145))), ^(20, 20:(RPAREN, (146 . 146))))
    Current_Token: (6, -52:(SEMI))
    Shared_Token: (-1, 22:(IDENTIFIER, (150 . 152)))
    stream input: (6, (-1, -52:(SEMI)))
    recover_insert_delete:((DELETE,  25, -), (DELETE,  26, -))
    resume_active: True, token goal 30, inc_shared_stream_token: FALSE
 5: stack (5, (0, -28:(-)), (1, 1:(LBRACE, (1 . 1))), (10, -48:(statement_list, (3 . 97))), (3, 18:(LPAREN, (142 . 142))), (12, -49:(classOrInterfaceType, (143 . 145))), ^(19, 20:(RPAREN, (146 . 146))))
    Current_Token: (-1, 22:(IDENTIFIER, (150 . 152)))
    Shared_Token: (-1, 22:(IDENTIFIER, (150 . 152)))
    recover_insert_delete:((DELETE,  25, -), (DELETE,  26, -))
    resume_active: True, token goal 30, inc_shared_stream_token: TRUE
 1: stack (1, (0, -28:(-)), (1, 1:(LBRACE, (1 . 1))), (10, -48:(statement_list, (3 . 97))), (9, -51:(lambdaParameters, (142 . 146))), ^(15, 21:(ARROW, (147 . 148))))
    Current_Token: (1, -53:(LBRACE))
    Shared_Token: (-1, 22:(IDENTIFIER, (150 . 152)))
    stream input: (1, (-1, -53:(LBRACE)))
    recover_insert_delete:
    resume_active: True, token goal 25, inc_shared_stream_token: FALSE

 6: 20: (6, -52:(SEMI)) : reduce 3 tokens to expression
(expression_0, (142 . 146)) <= (18:(LPAREN, (142 . 142)), (expression, (143 . 145)), 20:(RPAREN, (146 . 146)))
 ... goto state 7
 5: 19: (-1, 22:(IDENTIFIER, (150 . 152))) : shift and goto state 5
 1: 15: (1, -53:(LBRACE)) : shift and goto state 1
 6: 7: (6, -52:(SEMI)) : shift and goto state 14
 6: 14: (-1, 22:(IDENTIFIER, (150 . 152))) : reduce 2 tokens to statement
(statement_0, (142 . 146)) <= ((expression, (142 . 146)), -52:(SEMI))
 ... goto state 17
 5: 5: (-1, 23:(SEMI, (153 . 153))) : reduce 1 tokens to expression
(expression_1, (150 . 152)) <= (22:(IDENTIFIER, (150 . 152)))
 ... goto state 22
 1: 1: (-1, 22:(IDENTIFIER, (150 . 152))) : shift and goto state 5
 6: 17: (-1, 22:(IDENTIFIER, (150 . 152))) : reduce 2 tokens to statement_list
(statement_list_1, (3 . 146)) <= ((statement_list, (3 . 97)), (statement, (142 . 146)))
 ... goto state 10
 5: 22: (-1, 23:(SEMI, (153 . 153))) : reduce 4 tokens to expression
(expression_2, (142 . 152)) <= (18:(LPAREN, (142 . 142)), (classOrInterfaceType, (143 . 145)), 20:(RPAREN, (146 . 146)), (expression, (150 . 152)))
 ... goto state 7
 6: 10: (-1, 22:(IDENTIFIER, (150 . 152))) : shift and goto state 5
 5: 7: (-1, 23:(SEMI, (153 . 153))) : shift and goto state 14
 6: 5: (-1, 23:(SEMI, (153 . 153))) : reduce 1 tokens to expression
(expression_1, (150 . 152)) <= (22:(IDENTIFIER, (150 . 152)))
 ... goto state 7
 5: 14: (-1, 24:(RBRACE, (154 . 154))) : reduce 2 tokens to statement
(statement_0, (142 . 153)) <= ((expression, (142 . 152)), 23:(SEMI, (153 . 153)))
 ... goto state 17
 1: 5: (-1, 23:(SEMI, (153 . 153))) : reduce 1 tokens to expression
(expression_1, (150 . 152)) <= (22:(IDENTIFIER, (150 . 152)))
 ... goto state 7
 6: 7: (-1, 23:(SEMI, (153 . 153))) : shift and goto state 14
 5: 17: (-1, 24:(RBRACE, (154 . 154))) : reduce 2 tokens to statement_list
(statement_list_1, (3 . 153)) <= ((statement_list, (3 . 97)), (statement, (142 . 153)))
 ... goto state 10
 1: 7: (-1, 23:(SEMI, (153 . 153))) : shift and goto state 14
 5: 10: (-1, 24:(RBRACE, (154 . 154))) : shift and goto state 16
 6: 14: (-1, 24:(RBRACE, (154 . 154))) : reduce 2 tokens to statement
(statement_0, (150 . 153)) <= ((expression, (150 . 152)), 23:(SEMI, (153 . 153)))
 ... goto state 17
 5: 16: (-1, 27:(Wisi_EOI, (159 . 158))) : reduce 3 tokens to block
(block_0, (1 . 154)) <= (1:(LBRACE, (1 . 1)), (statement_list, (3 . 153)), 24:(RBRACE, (154 . 154)))
 ... goto state 2
 1: 14: (-1, 24:(RBRACE, (154 . 154))) : reduce 2 tokens to statement
(statement_0, (150 . 153)) <= ((expression, (150 . 152)), 23:(SEMI, (153 . 153)))
 ... goto state 6
 6: 17: (-1, 24:(RBRACE, (154 . 154))) : reduce 2 tokens to statement_list
(statement_list_1, (3 . 153)) <= ((statement_list, (3 . 146)), (statement, (150 . 153)))
 ... goto state 10
 5: 2: (-1, 27:(Wisi_EOI, (159 . 158))) : accept it
(wisitoken_accept_0, (1 . 154)) <= ((block, (1 . 154)))
 1: 6: (-1, 24:(RBRACE, (154 . 154))) : reduce 1 tokens to statement_list
(statement_list_0, (150 . 153)) <= ((statement, (150 . 153)))
 ... goto state 10
 6: 10: (-1, 24:(RBRACE, (154 . 154))) : shift and goto state 16
 1: 10: (-1, 24:(RBRACE, (154 . 154))) : shift and goto state 16
 6: 16: (-1, 27:(Wisi_EOI, (159 . 158))) : reduce 3 tokens to block
(block_0, (1 . 154)) <= (1:(LBRACE, (1 . 1)), (statement_list, (3 . 153)), 24:(RBRACE, (154 . 154)))
 ... goto state 2
 1: 16: (-1, 25:(SEMI, (155 . 155))) : reduce 3 tokens to block
(block_0, (150 . 154)) <= (-53:(LBRACE), (statement_list, (150 . 153)), 24:(RBRACE, (154 . 154)))
 ... goto state 21
 6: 2: (-1, 27:(Wisi_EOI, (159 . 158))) : accept it
(wisitoken_accept_0, (1 . 154)) <= ((block, (1 . 154)))
 1: 21: (-1, 25:(SEMI, (155 . 155))) : reduce 3 tokens to lambdaExpression
(lambdaExpression_0, (142 . 154)) <= ((lambdaParameters, (142 . 146)), 21:(ARROW, (147 . 148)), (block, (150 . 154)))
 ... goto state 8
 1: 8: (-1, 25:(SEMI, (155 . 155))) : reduce 1 tokens to expression
(expression_3, (142 . 154)) <= ((lambdaExpression, (142 . 154)))
 ... goto state 7
 1: 7: (-1, 25:(SEMI, (155 . 155))) : shift and goto state 14
 1: resume_active: False
 1: 14: (-1, 26:(RBRACE, (158 . 158))) : reduce 2 tokens to statement
(statement_0, (142 . 155)) <= ((expression, (142 . 154)), 25:(SEMI, (155 . 155)))
 ... goto state 17
 1: 17: (-1, 26:(RBRACE, (158 . 158))) : reduce 2 tokens to statement_list
(statement_list_1, (3 . 155)) <= ((statement_list, (3 . 97)), (statement, (142 . 155)))
 ... goto state 10
 1: 10: (-1, 26:(RBRACE, (158 . 158))) : shift and goto state 16
 1: 16: (-1, 27:(Wisi_EOI, (159 . 158))) : reduce 3 tokens to block
(block_0, (1 . 158)) <= (1:(LBRACE, (1 . 1)), (statement_list, (3 . 155)), 26:(RBRACE, (158 . 158)))
 ... goto state 2
 1: 2: (-1, 27:(Wisi_EOI, (159 . 158))) : accept it
(wisitoken_accept_0, (1 . 158)) <= ((block, (1 . 158)))
 6: terminate (2 active): recover cost/length (-1, 27:(Wisi_EOI, (159 . 158)))
 5: terminate (1 active): recover cost/length (-1, 27:(Wisi_EOI, (159 . 158)))
 1: succeed
three_action_conflict.input:9:9: syntax error: expecting LBRACE, found 'foo'
   recovered: ((INSERT, LBRACE, 22))
