;;; Wisi grammar demonstrating the need for canonical order in item
;;; sets, so conflicts have the same name in LALR and LR1 parsers.
;;
%code copyright_license %{
--  Copyright (C) 2013, 2015, 2017, 2018 Stephen Leake.  All Rights Reserved.

--  This program is free software; you can redistribute it and/or
--  modify it under the terms of the GNU General Public License as
--  published by the Free Software Foundation; either version 3, or (at
--  your option) any later version.
--
--  This software is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
--  General Public License for more details.
--
--  You should have received a copy of the GNU General Public License
--  along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.
}%

;; Declare all variants tested by wisi_wy_test.adb
%generate LALR Ada re2c
;; FIXME: conflict_name has indirect left recursion; add Packrat_Gen, Packrat_Proc

%keyword LEFT_PAREN "("
%keyword RIGHT_PAREN ")"

%token <punctuation> TICK "'"

%token <symbol> IDENTIFIER %[ [a-zA-Z][0-9a-zA-Z_]* ]%

%non_grammar <non-reporting> WHITESPACE %[ [ \t\n] ]%

%start name

%conflict SHIFT/REDUCE in state attribute_reference, attribute_designator on token TICK

aggregate
  : LEFT_PAREN name RIGHT_PAREN
  ;

attribute_reference : name TICK attribute_designator ;

attribute_designator
  : name
  ;

name
  : IDENTIFIER
    %()%
    %(return Propagate_Name (Nonterm, Tokens, 1);)%
  | attribute_reference
  | qualified_expression
  ;

qualified_expression
  : name TICK aggregate
  ;
;;; end of file
