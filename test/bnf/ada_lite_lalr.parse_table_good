Tokens:
 0 => WHITESPACE
 1 => NEW_LINE
 2 => COMMENT
 3 => AND
 4 => BEGIN
 5 => BODY
 6 => CASE
 7 => DECLARE
 8 => ELSE
 9 => ELSIF
 10 => END
 11 => EXIT
 12 => EXCEPTION
 13 => FOR
 14 => FUNCTION
 15 => IF
 16 => IN
 17 => IS
 18 => LEFT_PAREN
 19 => LOOP
 20 => NEW
 21 => NOT
 22 => OR
 23 => PACKAGE
 24 => PROCEDURE
 25 => RANGE
 26 => RETURN
 27 => RIGHT_PAREN
 28 => SEPARATE
 29 => THEN
 30 => TYPE
 31 => WHEN
 32 => WITH
 33 => XOR
 34 => AMPERSAND
 35 => COLON
 36 => COLON_EQUAL
 37 => COMMA
 38 => DOT
 39 => DOT_DOT
 40 => EQUAL
 41 => EQUAL_GREATER
 42 => GREATER
 43 => GREATER_EQUAL
 44 => LESS
 45 => LESS_EQUAL
 46 => MINUS
 47 => PLUS
 48 => SEMICOLON
 49 => SLASH
 50 => SLASH_EQUAL
 51 => STAR
 52 => STRING_LITERAL
 53 => NUMERIC_LITERAL
 54 => IDENTIFIER
 55 => Wisi_EOI
 56 => wisitoken_accept
 57 => actual_parameter_part
 58 => aspect_specification_opt
 59 => assignment_statement
 60 => association_opt
 61 => association_list
 62 => binary_adding_operator
 63 => block_label_opt
 64 => block_statement
 65 => body_g
 66 => body_stub
 67 => case_statement
 68 => case_statement_alternative
 69 => case_statement_alternative_list
 70 => compilation_unit
 71 => compilation_unit_list
 72 => compound_statement
 73 => constraint
 74 => declaration
 75 => declarations
 76 => declarative_part_opt
 77 => discrete_subtype_definition
 78 => elsif_statement_item
 79 => elsif_statement_list
 80 => enumeration_literal_list
 81 => enumeration_type_definition
 82 => exception_choice
 83 => exception_handler
 84 => exception_handler_list
 85 => exception_handler_list_opt
 86 => exit_statement
 87 => expression
 88 => expression_opt
 89 => extended_return_object_declaration
 90 => extended_return_statement
 91 => factor
 92 => formal_part
 93 => full_type_declaration
 94 => function_specification
 95 => generic_instantiation
 96 => handled_sequence_of_statements
 97 => identifier_opt
 98 => if_statement
 99 => index_constraint
 100 => iteration_scheme
 101 => loop_statement
 102 => multiplying_operator
 103 => name
 104 => name_opt
 105 => object_declaration
 106 => package_body
 107 => parameter_and_result_profile
 108 => parameter_profile_opt
 109 => parameter_specification
 110 => parameter_specification_list
 111 => paren_expression
 112 => primary
 113 => procedure_call_statement
 114 => procedure_specification
 115 => proper_body
 116 => range_g
 117 => range_list
 118 => relation_and_list
 119 => relation_or_list
 120 => relation_xor_list
 121 => relation
 122 => relational_operator
 123 => selected_component
 124 => sequence_of_statements
 125 => sequence_of_statements_opt
 126 => simple_expression
 127 => simple_return_statement
 128 => simple_statement
 129 => statement
 130 => subprogram_body
 131 => subprogram_body_stub
 132 => subprogram_declaration
 133 => subprogram_specification
 134 => subtype_indication
 135 => term
 136 => term_list
 137 => type_declaration
 138 => type_definition
 139 => unary_adding_operator

Productions:
56.0: wisitoken_accept <= compilation_unit_list Wisi_EOI
57.0: actual_parameter_part <= LEFT_PAREN association_list RIGHT_PAREN
58.0: aspect_specification_opt <= WITH association_list
58.1: aspect_specification_opt <=
59.0: assignment_statement <= name COLON_EQUAL expression_opt SEMICOLON
60.0: association_opt <= IDENTIFIER EQUAL_GREATER expression_opt
60.1: association_opt <= expression
60.2: association_opt <=
61.0: association_list <= association_list COMMA association_opt
61.1: association_list <= association_opt
62.0: binary_adding_operator <= PLUS
62.1: binary_adding_operator <= MINUS
62.2: binary_adding_operator <= AMPERSAND
63.0: block_label_opt <= IDENTIFIER COLON
63.1: block_label_opt <=
64.0: block_statement <= block_label_opt DECLARE declarative_part_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON
64.1: block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON
65.0: body_g <= proper_body
65.1: body_g <= body_stub
66.0: body_stub <= subprogram_body_stub
67.0: case_statement <= CASE expression_opt IS case_statement_alternative_list END CASE SEMICOLON
68.0: case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements_opt
69.0: case_statement_alternative_list <= case_statement_alternative_list case_statement_alternative
69.1: case_statement_alternative_list <= case_statement_alternative
70.0: compilation_unit <= package_body
70.1: compilation_unit <= subprogram_declaration
70.2: compilation_unit <= subprogram_body
70.3: compilation_unit <= generic_instantiation
70.4: compilation_unit <= statement
71.0: compilation_unit_list <= compilation_unit_list compilation_unit
71.1: compilation_unit_list <= compilation_unit
72.0: compound_statement <= if_statement
72.1: compound_statement <= case_statement
72.2: compound_statement <= loop_statement
72.3: compound_statement <= block_statement
72.4: compound_statement <= extended_return_statement
73.0: constraint <= RANGE range_g
73.1: constraint <= index_constraint
74.0: declaration <= body_g
74.1: declaration <= object_declaration
74.2: declaration <= subprogram_declaration
74.3: declaration <= type_declaration
75.0: declarations <= declarations declaration
75.1: declarations <= declaration
76.0: declarative_part_opt <= declarations
76.1: declarative_part_opt <=
77.0: discrete_subtype_definition <= subtype_indication
77.1: discrete_subtype_definition <= range_g
78.0: elsif_statement_item <= ELSIF expression_opt THEN sequence_of_statements_opt
79.0: elsif_statement_list <= elsif_statement_list elsif_statement_item
79.1: elsif_statement_list <= elsif_statement_item
80.0: enumeration_literal_list <= enumeration_literal_list COMMA IDENTIFIER
80.1: enumeration_literal_list <= IDENTIFIER
81.0: enumeration_type_definition <= LEFT_PAREN enumeration_literal_list RIGHT_PAREN
82.0: exception_choice <= name
83.0: exception_handler <= WHEN exception_choice EQUAL_GREATER sequence_of_statements_opt
84.0: exception_handler_list <= exception_handler_list exception_handler
84.1: exception_handler_list <= exception_handler
85.0: exception_handler_list_opt <= exception_handler_list
85.1: exception_handler_list_opt <=
86.0: exit_statement <= EXIT identifier_opt WHEN expression_opt SEMICOLON
86.1: exit_statement <= EXIT identifier_opt SEMICOLON
87.0: expression <= relation
87.1: expression <= relation_and_list
87.2: expression <= relation_or_list
87.3: expression <= relation_xor_list
88.0: expression_opt <= expression
88.1: expression_opt <=
89.0: extended_return_object_declaration <= IDENTIFIER COLON subtype_indication
90.0: extended_return_statement <= RETURN extended_return_object_declaration SEMICOLON
91.0: factor <= primary
91.1: factor <= NOT primary
92.0: formal_part <= LEFT_PAREN parameter_specification_list RIGHT_PAREN
93.0: full_type_declaration <= TYPE IDENTIFIER IS type_definition SEMICOLON
94.0: function_specification <= FUNCTION name parameter_and_result_profile
95.0: generic_instantiation <= PACKAGE name IS NEW name SEMICOLON
95.1: generic_instantiation <= PROCEDURE name IS NEW name SEMICOLON
96.0: handled_sequence_of_statements <= sequence_of_statements_opt EXCEPTION exception_handler_list_opt
96.1: handled_sequence_of_statements <= sequence_of_statements_opt
97.0: identifier_opt <= IDENTIFIER
97.1: identifier_opt <=
98.0: if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list ELSE sequence_of_statements_opt END IF SEMICOLON
98.1: if_statement <= IF expression_opt THEN sequence_of_statements_opt ELSE sequence_of_statements_opt END IF SEMICOLON
98.2: if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list END IF SEMICOLON
98.3: if_statement <= IF expression_opt THEN sequence_of_statements_opt END IF SEMICOLON
99.0: index_constraint <= LEFT_PAREN discrete_subtype_definition RIGHT_PAREN
100.0: iteration_scheme <= FOR IDENTIFIER IN discrete_subtype_definition
101.0: loop_statement <= iteration_scheme LOOP sequence_of_statements_opt END LOOP identifier_opt SEMICOLON
101.1: loop_statement <= LOOP sequence_of_statements_opt END LOOP identifier_opt SEMICOLON
102.0: multiplying_operator <= STAR
102.1: multiplying_operator <= SLASH
103.0: name <= name LEFT_PAREN range_list RIGHT_PAREN
103.1: name <= name actual_parameter_part
103.2: name <= IDENTIFIER
103.3: name <= selected_component
104.0: name_opt <= name
104.1: name_opt <=
105.0: object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression_opt SEMICOLON
105.1: object_declaration <= IDENTIFIER COLON subtype_indication SEMICOLON
106.0: package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON
106.1: package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt END name_opt SEMICOLON
107.0: parameter_and_result_profile <= formal_part RETURN IDENTIFIER
107.1: parameter_and_result_profile <= RETURN IDENTIFIER
108.0: parameter_profile_opt <= formal_part
108.1: parameter_profile_opt <=
109.0: parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL expression_opt
109.1: parameter_specification <= IDENTIFIER COLON IDENTIFIER
109.2: parameter_specification <=
110.0: parameter_specification_list <= parameter_specification_list SEMICOLON parameter_specification
110.1: parameter_specification_list <= parameter_specification
111.0: paren_expression <= LEFT_PAREN expression_opt RIGHT_PAREN
112.0: primary <= NUMERIC_LITERAL
112.1: primary <= STRING_LITERAL
112.2: primary <= name
112.3: primary <= paren_expression
113.0: procedure_call_statement <= name SEMICOLON
114.0: procedure_specification <= PROCEDURE name parameter_profile_opt
115.0: proper_body <= package_body
115.1: proper_body <= subprogram_body
116.0: range_g <= simple_expression DOT_DOT simple_expression
117.0: range_list <= range_list COMMA range_g
117.1: range_list <= range_g
118.0: relation_and_list <= relation_and_list AND relation
118.1: relation_and_list <= relation AND relation
119.0: relation_or_list <= relation_or_list OR relation
119.1: relation_or_list <= relation OR relation
120.0: relation_xor_list <= relation_xor_list XOR relation
120.1: relation_xor_list <= relation XOR relation
121.0: relation <= simple_expression relational_operator simple_expression
121.1: relation <= simple_expression
122.0: relational_operator <= EQUAL
122.1: relational_operator <= SLASH_EQUAL
122.2: relational_operator <= LESS
122.3: relational_operator <= LESS_EQUAL
122.4: relational_operator <= GREATER
122.5: relational_operator <= GREATER_EQUAL
123.0: selected_component <= name DOT IDENTIFIER
124.0: sequence_of_statements <= sequence_of_statements statement
124.1: sequence_of_statements <= statement
125.0: sequence_of_statements_opt <= sequence_of_statements
125.1: sequence_of_statements_opt <=
126.0: simple_expression <= unary_adding_operator term_list
126.1: simple_expression <= term_list
127.0: simple_return_statement <= RETURN expression_opt SEMICOLON
127.1: simple_return_statement <= RETURN SEMICOLON
128.0: simple_statement <= assignment_statement
128.1: simple_statement <= exit_statement
128.2: simple_statement <= procedure_call_statement
128.3: simple_statement <= simple_return_statement
129.0: statement <= simple_statement
129.1: statement <= compound_statement
130.0: subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON
131.0: subprogram_body_stub <= subprogram_specification IS SEPARATE SEMICOLON
132.0: subprogram_declaration <= subprogram_specification SEMICOLON
133.0: subprogram_specification <= procedure_specification
133.1: subprogram_specification <= function_specification
134.0: subtype_indication <= name constraint
134.1: subtype_indication <= name
135.0: term <= term multiplying_operator factor
135.1: term <= factor
136.0: term_list <= term_list binary_adding_operator term
136.1: term_list <= term
137.0: type_declaration <= full_type_declaration
138.0: type_definition <= enumeration_type_definition
139.0: unary_adding_operator <= PLUS
139.1: unary_adding_operator <= MINUS

McKenzie:
(Insert =>
 AND             => 4,
 BEGIN           => 3,
 BODY            => 4,
 CASE            => 3,
 DECLARE         => 3,
 ELSE            => 3,
 ELSIF           => 3,
 END             => 1,
 EXIT            => 3,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 3,
 IF              => 2,
 IN              => 4,
 IS              => 3,
 LEFT_PAREN      => 4,
 LOOP            => 2,
 NEW             => 3,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 3,
 RANGE           => 4,
 RETURN          => 3,
 RIGHT_PAREN     => 3,
 SEPARATE        => 4,
 THEN            => 3,
 TYPE            => 4,
 WHEN            => 3,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 1,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 4,
 NUMERIC_LITERAL => 4,
 IDENTIFIER      => 3,
 Wisi_EOI        => 4)
(Delete =>
 AND             => 4,
 BEGIN           => 1,
 BODY            => 4,
 CASE            => 4,
 DECLARE         => 4,
 ELSE            => 4,
 ELSIF           => 4,
 END             => 1,
 EXIT            => 4,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 4,
 IF              => 4,
 IN              => 4,
 IS              => 4,
 LEFT_PAREN      => 4,
 LOOP            => 4,
 NEW             => 4,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 4,
 RANGE           => 4,
 RETURN          => 4,
 RIGHT_PAREN     => 4,
 SEPARATE        => 4,
 THEN            => 4,
 TYPE            => 4,
 WHEN            => 4,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 4,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 2,
 NUMERIC_LITERAL => 4,
 IDENTIFIER      => 4,
 Wisi_EOI        => 4)
(Push_Back =>
 AND             => 4,
 BEGIN           => 1,
 BODY            => 4,
 CASE            => 4,
 DECLARE         => 4,
 ELSE            => 4,
 ELSIF           => 4,
 END             => 1,
 EXIT            => 4,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 4,
 IF              => 4,
 IN              => 4,
 IS              => 4,
 LEFT_PAREN      => 4,
 LOOP            => 4,
 NEW             => 4,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 4,
 RANGE           => 4,
 RETURN          => 4,
 RIGHT_PAREN     => 4,
 SEPARATE        => 4,
 THEN            => 4,
 TYPE            => 4,
 WHEN            => 4,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 4,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 2,
 NUMERIC_LITERAL => 4,
 IDENTIFIER      => 4,
 Wisi_EOI        => 4)
Ignore_Check_Fail => 4
Task_Count        => 0
Cost_Limit        => 10
Check_Limit       => 3
Check_Delta_Limit => 2147483647
Enqueue_Limit     => 2147483647

Ancestors:
AMPERSAND => binary_adding_operator
EQUAL => relational_operator
GREATER => relational_operator
GREATER_EQUAL => relational_operator
LESS => relational_operator
LESS_EQUAL => relational_operator
MINUS => binary_adding_operator, unary_adding_operator
PLUS => binary_adding_operator, unary_adding_operator
SLASH => multiplying_operator
SLASH_EQUAL => relational_operator
STAR => multiplying_operator
STRING_LITERAL => association_opt, association_list, expression, expression_opt, factor, primary, relation, simple_expression, term, term_list
NUMERIC_LITERAL => association_opt, association_list, expression, expression_opt, factor, primary, relation, simple_expression, term, term_list
IDENTIFIER => association_opt, association_list, discrete_subtype_definition, enumeration_literal_list, exception_choice, expression, expression_opt, factor, identifier_opt, name, name_opt, primary, relation, simple_expression, subtype_indication, term, term_list
assignment_statement => compilation_unit, compilation_unit_list, handled_sequence_of_statements, sequence_of_statements, sequence_of_statements_opt, simple_statement, statement
association_opt => association_list
block_statement => compilation_unit, compilation_unit_list, compound_statement, handled_sequence_of_statements, sequence_of_statements, sequence_of_statements_opt, statement
body_g => declaration, declarations, declarative_part_opt
body_stub => body_g, declaration, declarations, declarative_part_opt
case_statement => compilation_unit, compilation_unit_list, compound_statement, handled_sequence_of_statements, sequence_of_statements, sequence_of_statements_opt, statement
case_statement_alternative => case_statement_alternative_list
compilation_unit => compilation_unit_list
compound_statement => compilation_unit, compilation_unit_list, handled_sequence_of_statements, sequence_of_statements, sequence_of_statements_opt, statement
declaration => declarations, declarative_part_opt
declarations => declarative_part_opt
elsif_statement_item => elsif_statement_list
enumeration_type_definition => type_definition
exception_handler => exception_handler_list, exception_handler_list_opt
exception_handler_list => exception_handler_list_opt
exit_statement => compilation_unit, compilation_unit_list, handled_sequence_of_statements, sequence_of_statements, sequence_of_statements_opt, simple_statement, statement
expression => association_opt, association_list, expression_opt
extended_return_statement => compilation_unit, compilation_unit_list, compound_statement, handled_sequence_of_statements, sequence_of_statements, sequence_of_statements_opt, statement
factor => association_opt, association_list, expression, expression_opt, relation, simple_expression, term, term_list
formal_part => parameter_profile_opt
full_type_declaration => declaration, declarations, declarative_part_opt, type_declaration
function_specification => subprogram_specification
generic_instantiation => compilation_unit, compilation_unit_list
if_statement => compilation_unit, compilation_unit_list, compound_statement, handled_sequence_of_statements, sequence_of_statements, sequence_of_statements_opt, statement
index_constraint => constraint
loop_statement => compilation_unit, compilation_unit_list, compound_statement, handled_sequence_of_statements, sequence_of_statements, sequence_of_statements_opt, statement
name => association_opt, association_list, discrete_subtype_definition, exception_choice, expression, expression_opt, factor, name_opt, primary, relation, simple_expression, subtype_indication, term, term_list
object_declaration => declaration, declarations, declarative_part_opt
package_body => body_g, compilation_unit, compilation_unit_list, declaration, declarations, declarative_part_opt, proper_body
parameter_specification => parameter_specification_list
paren_expression => association_opt, association_list, expression, expression_opt, factor, primary, relation, simple_expression, term, term_list
primary => association_opt, association_list, expression, expression_opt, factor, relation, simple_expression, term, term_list
procedure_call_statement => compilation_unit, compilation_unit_list, handled_sequence_of_statements, sequence_of_statements, sequence_of_statements_opt, simple_statement, statement
procedure_specification => subprogram_specification
proper_body => body_g, declaration, declarations, declarative_part_opt
range_g => discrete_subtype_definition, range_list
relation_and_list => association_opt, association_list, expression, expression_opt
relation_or_list => association_opt, association_list, expression, expression_opt
relation_xor_list => association_opt, association_list, expression, expression_opt
relation => association_opt, association_list, expression, expression_opt
selected_component => association_opt, association_list, discrete_subtype_definition, exception_choice, expression, expression_opt, factor, name, name_opt, primary, relation, simple_expression, subtype_indication, term, term_list
sequence_of_statements => handled_sequence_of_statements, sequence_of_statements_opt
sequence_of_statements_opt => handled_sequence_of_statements
simple_expression => association_opt, association_list, expression, expression_opt, relation
simple_return_statement => compilation_unit, compilation_unit_list, handled_sequence_of_statements, sequence_of_statements, sequence_of_statements_opt, simple_statement, statement
simple_statement => compilation_unit, compilation_unit_list, handled_sequence_of_statements, sequence_of_statements, sequence_of_statements_opt, statement
statement => compilation_unit, compilation_unit_list, handled_sequence_of_statements, sequence_of_statements, sequence_of_statements_opt
subprogram_body => body_g, compilation_unit, compilation_unit_list, declaration, declarations, declarative_part_opt, proper_body
subprogram_body_stub => body_g, body_stub, declaration, declarations, declarative_part_opt
subprogram_declaration => compilation_unit, compilation_unit_list, declaration, declarations, declarative_part_opt
subtype_indication => discrete_subtype_definition
term => association_opt, association_list, expression, expression_opt, relation, simple_expression, term_list
term_list => association_opt, association_list, expression, expression_opt, relation, simple_expression
type_declaration => declaration, declarations, declarative_part_opt

LALR Parse Table:
State 0:
     56.0:wisitoken_accept <= ^ compilation_unit_list Wisi_EOI, 

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   FUNCTION                           => shift and goto state 4
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   PACKAGE                            => shift and goto state 7
   PROCEDURE                          => shift and goto state 8
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compilation_unit                   goto state 15
   compilation_unit_list              goto state 16
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   function_specification             goto state 20
   generic_instantiation              goto state 21
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   package_body                       goto state 26
   procedure_call_statement           goto state 27
   procedure_specification            goto state 28
   selected_component                 goto state 29
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 32
   subprogram_body                    goto state 33
   subprogram_declaration             goto state 34
   subprogram_specification           goto state 35

   Minimal_Complete_Actions => (RETURN)

State 1:
     67.0:case_statement <= CASE ^ expression_opt IS case_statement_alternative_list END CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   IS                                 => reduce 0 tokens to expression_opt 88.1
   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   expression                         goto state 43
   expression_opt                     goto state 44
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (expression_opt)

State 2:
     86.0:exit_statement <= EXIT ^ identifier_opt WHEN expression_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     86.1:exit_statement <= EXIT ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   WHEN                               => reduce 0 tokens to identifier_opt 97.1
   SEMICOLON                          => reduce 0 tokens to identifier_opt 97.1
   IDENTIFIER                         => shift and goto state 57
   default                            => ERROR

   identifier_opt                     goto state 58

   Minimal_Complete_Actions => (identifier_opt)

State 3:
    100.0:iteration_scheme <= FOR ^ IDENTIFIER IN discrete_subtype_definition, LOOP

   IDENTIFIER                         => shift and goto state 59
   default                            => ERROR

   Minimal_Complete_Actions => (IDENTIFIER)

State 4:
     94.0:function_specification <= FUNCTION ^ name parameter_and_result_profile, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   name                               goto state 60
   selected_component                 goto state 29

   Minimal_Complete_Actions => (IDENTIFIER)

State 5:
     98.0:if_statement <= IF ^ expression_opt THEN sequence_of_statements_opt elsif_statement_list ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     98.1:if_statement <= IF ^ expression_opt THEN sequence_of_statements_opt ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     98.2:if_statement <= IF ^ expression_opt THEN sequence_of_statements_opt elsif_statement_list END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     98.3:if_statement <= IF ^ expression_opt THEN sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   THEN                               => reduce 0 tokens to expression_opt 88.1
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   expression                         goto state 43
   expression_opt                     goto state 61
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (expression_opt)

State 6:
    101.1:loop_statement <= LOOP ^ sequence_of_statements_opt END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 125.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 62
   sequence_of_statements_opt         goto state 63
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 64

   Minimal_Complete_Actions => (sequence_of_statements_opt)

State 7:
     95.0:generic_instantiation <= PACKAGE ^ name IS NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
    106.0:package_body <= PACKAGE ^ BODY name aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
    106.1:package_body <= PACKAGE ^ BODY name aspect_specification_opt IS declarative_part_opt END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BODY                               => shift and goto state 65
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   name                               goto state 66
   selected_component                 goto state 29

   Minimal_Complete_Actions => (BODY, IDENTIFIER)

State 8:
     95.1:generic_instantiation <= PROCEDURE ^ name IS NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
    114.0:procedure_specification <= PROCEDURE ^ name parameter_profile_opt, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   name                               goto state 67
   selected_component                 goto state 29

   Minimal_Complete_Actions => (IDENTIFIER)

State 9:
     90.0:extended_return_statement <= RETURN ^ extended_return_object_declaration SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
    127.0:simple_return_statement <= RETURN ^ expression_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
    127.1:simple_return_statement <= RETURN ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   SEMICOLON                          => shift and goto state 68,
                                         reduce 0 tokens to expression_opt 88.1
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 69
   default                            => ERROR

   expression                         goto state 43
   expression_opt                     goto state 70
   extended_return_object_declaration goto state 71
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (SEMICOLON, IDENTIFIER, expression_opt)

State 10:
     63.0:block_label_opt <= IDENTIFIER ^ COLON, BEGIN/DECLARE
    103.2:name <= IDENTIFIER ^, LEFT_PAREN/COLON_EQUAL/DOT/SEMICOLON

   LEFT_PAREN                         => reduce 1 tokens to name 103.2
   COLON                              => shift and goto state 72
   COLON_EQUAL                        => reduce 1 tokens to name 103.2
   DOT                                => reduce 1 tokens to name 103.2
   SEMICOLON                          => reduce 1 tokens to name 103.2
   default                            => ERROR

   Minimal_Complete_Actions => (COLON, name)

State 11:
    128.0:simple_statement <= assignment_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to simple_statement 128.0
   CASE                               => reduce 1 tokens to simple_statement 128.0
   DECLARE                            => reduce 1 tokens to simple_statement 128.0
   ELSE                               => reduce 1 tokens to simple_statement 128.0
   ELSIF                              => reduce 1 tokens to simple_statement 128.0
   END                                => reduce 1 tokens to simple_statement 128.0
   EXIT                               => reduce 1 tokens to simple_statement 128.0
   EXCEPTION                          => reduce 1 tokens to simple_statement 128.0
   FOR                                => reduce 1 tokens to simple_statement 128.0
   FUNCTION                           => reduce 1 tokens to simple_statement 128.0
   IF                                 => reduce 1 tokens to simple_statement 128.0
   LOOP                               => reduce 1 tokens to simple_statement 128.0
   PACKAGE                            => reduce 1 tokens to simple_statement 128.0
   PROCEDURE                          => reduce 1 tokens to simple_statement 128.0
   RETURN                             => reduce 1 tokens to simple_statement 128.0
   WHEN                               => reduce 1 tokens to simple_statement 128.0
   IDENTIFIER                         => reduce 1 tokens to simple_statement 128.0
   Wisi_EOI                           => reduce 1 tokens to simple_statement 128.0
   default                            => ERROR

   Minimal_Complete_Actions => (simple_statement)

State 12:
     64.0:block_statement <= block_label_opt ^ DECLARE declarative_part_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     64.1:block_statement <= block_label_opt ^ BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 73
   DECLARE                            => shift and goto state 74
   default                            => ERROR

   Minimal_Complete_Actions => (BEGIN, DECLARE)

State 13:
     72.3:compound_statement <= block_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compound_statement 72.3
   CASE                               => reduce 1 tokens to compound_statement 72.3
   DECLARE                            => reduce 1 tokens to compound_statement 72.3
   ELSE                               => reduce 1 tokens to compound_statement 72.3
   ELSIF                              => reduce 1 tokens to compound_statement 72.3
   END                                => reduce 1 tokens to compound_statement 72.3
   EXIT                               => reduce 1 tokens to compound_statement 72.3
   EXCEPTION                          => reduce 1 tokens to compound_statement 72.3
   FOR                                => reduce 1 tokens to compound_statement 72.3
   FUNCTION                           => reduce 1 tokens to compound_statement 72.3
   IF                                 => reduce 1 tokens to compound_statement 72.3
   LOOP                               => reduce 1 tokens to compound_statement 72.3
   PACKAGE                            => reduce 1 tokens to compound_statement 72.3
   PROCEDURE                          => reduce 1 tokens to compound_statement 72.3
   RETURN                             => reduce 1 tokens to compound_statement 72.3
   WHEN                               => reduce 1 tokens to compound_statement 72.3
   IDENTIFIER                         => reduce 1 tokens to compound_statement 72.3
   Wisi_EOI                           => reduce 1 tokens to compound_statement 72.3
   default                            => ERROR

   Minimal_Complete_Actions => (compound_statement)

State 14:
     72.1:compound_statement <= case_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compound_statement 72.1
   CASE                               => reduce 1 tokens to compound_statement 72.1
   DECLARE                            => reduce 1 tokens to compound_statement 72.1
   ELSE                               => reduce 1 tokens to compound_statement 72.1
   ELSIF                              => reduce 1 tokens to compound_statement 72.1
   END                                => reduce 1 tokens to compound_statement 72.1
   EXIT                               => reduce 1 tokens to compound_statement 72.1
   EXCEPTION                          => reduce 1 tokens to compound_statement 72.1
   FOR                                => reduce 1 tokens to compound_statement 72.1
   FUNCTION                           => reduce 1 tokens to compound_statement 72.1
   IF                                 => reduce 1 tokens to compound_statement 72.1
   LOOP                               => reduce 1 tokens to compound_statement 72.1
   PACKAGE                            => reduce 1 tokens to compound_statement 72.1
   PROCEDURE                          => reduce 1 tokens to compound_statement 72.1
   RETURN                             => reduce 1 tokens to compound_statement 72.1
   WHEN                               => reduce 1 tokens to compound_statement 72.1
   IDENTIFIER                         => reduce 1 tokens to compound_statement 72.1
   Wisi_EOI                           => reduce 1 tokens to compound_statement 72.1
   default                            => ERROR

   Minimal_Complete_Actions => (compound_statement)

State 15:
     71.1:compilation_unit_list <= compilation_unit ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compilation_unit_list 71.1
   CASE                               => reduce 1 tokens to compilation_unit_list 71.1
   DECLARE                            => reduce 1 tokens to compilation_unit_list 71.1
   EXIT                               => reduce 1 tokens to compilation_unit_list 71.1
   FOR                                => reduce 1 tokens to compilation_unit_list 71.1
   FUNCTION                           => reduce 1 tokens to compilation_unit_list 71.1
   IF                                 => reduce 1 tokens to compilation_unit_list 71.1
   LOOP                               => reduce 1 tokens to compilation_unit_list 71.1
   PACKAGE                            => reduce 1 tokens to compilation_unit_list 71.1
   PROCEDURE                          => reduce 1 tokens to compilation_unit_list 71.1
   RETURN                             => reduce 1 tokens to compilation_unit_list 71.1
   IDENTIFIER                         => reduce 1 tokens to compilation_unit_list 71.1
   Wisi_EOI                           => reduce 1 tokens to compilation_unit_list 71.1
   default                            => ERROR

   Minimal_Complete_Actions => (compilation_unit_list)

State 16:
     56.0:wisitoken_accept <= compilation_unit_list ^ Wisi_EOI, 
     71.0:compilation_unit_list <= compilation_unit_list ^ compilation_unit, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   FUNCTION                           => shift and goto state 4
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   PACKAGE                            => shift and goto state 7
   PROCEDURE                          => shift and goto state 8
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   Wisi_EOI                           => accept it 56.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compilation_unit                   goto state 75
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   function_specification             goto state 20
   generic_instantiation              goto state 21
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   package_body                       goto state 26
   procedure_call_statement           goto state 27
   procedure_specification            goto state 28
   selected_component                 goto state 29
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 32
   subprogram_body                    goto state 33
   subprogram_declaration             goto state 34
   subprogram_specification           goto state 35

State 17:
    129.1:statement <= compound_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to statement 129.1
   CASE                               => reduce 1 tokens to statement 129.1
   DECLARE                            => reduce 1 tokens to statement 129.1
   ELSE                               => reduce 1 tokens to statement 129.1
   ELSIF                              => reduce 1 tokens to statement 129.1
   END                                => reduce 1 tokens to statement 129.1
   EXIT                               => reduce 1 tokens to statement 129.1
   EXCEPTION                          => reduce 1 tokens to statement 129.1
   FOR                                => reduce 1 tokens to statement 129.1
   FUNCTION                           => reduce 1 tokens to statement 129.1
   IF                                 => reduce 1 tokens to statement 129.1
   LOOP                               => reduce 1 tokens to statement 129.1
   PACKAGE                            => reduce 1 tokens to statement 129.1
   PROCEDURE                          => reduce 1 tokens to statement 129.1
   RETURN                             => reduce 1 tokens to statement 129.1
   WHEN                               => reduce 1 tokens to statement 129.1
   IDENTIFIER                         => reduce 1 tokens to statement 129.1
   Wisi_EOI                           => reduce 1 tokens to statement 129.1
   default                            => ERROR

   Minimal_Complete_Actions => (statement)

State 18:
    128.1:simple_statement <= exit_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to simple_statement 128.1
   CASE                               => reduce 1 tokens to simple_statement 128.1
   DECLARE                            => reduce 1 tokens to simple_statement 128.1
   ELSE                               => reduce 1 tokens to simple_statement 128.1
   ELSIF                              => reduce 1 tokens to simple_statement 128.1
   END                                => reduce 1 tokens to simple_statement 128.1
   EXIT                               => reduce 1 tokens to simple_statement 128.1
   EXCEPTION                          => reduce 1 tokens to simple_statement 128.1
   FOR                                => reduce 1 tokens to simple_statement 128.1
   FUNCTION                           => reduce 1 tokens to simple_statement 128.1
   IF                                 => reduce 1 tokens to simple_statement 128.1
   LOOP                               => reduce 1 tokens to simple_statement 128.1
   PACKAGE                            => reduce 1 tokens to simple_statement 128.1
   PROCEDURE                          => reduce 1 tokens to simple_statement 128.1
   RETURN                             => reduce 1 tokens to simple_statement 128.1
   WHEN                               => reduce 1 tokens to simple_statement 128.1
   IDENTIFIER                         => reduce 1 tokens to simple_statement 128.1
   Wisi_EOI                           => reduce 1 tokens to simple_statement 128.1
   default                            => ERROR

   Minimal_Complete_Actions => (simple_statement)

State 19:
     72.4:compound_statement <= extended_return_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compound_statement 72.4
   CASE                               => reduce 1 tokens to compound_statement 72.4
   DECLARE                            => reduce 1 tokens to compound_statement 72.4
   ELSE                               => reduce 1 tokens to compound_statement 72.4
   ELSIF                              => reduce 1 tokens to compound_statement 72.4
   END                                => reduce 1 tokens to compound_statement 72.4
   EXIT                               => reduce 1 tokens to compound_statement 72.4
   EXCEPTION                          => reduce 1 tokens to compound_statement 72.4
   FOR                                => reduce 1 tokens to compound_statement 72.4
   FUNCTION                           => reduce 1 tokens to compound_statement 72.4
   IF                                 => reduce 1 tokens to compound_statement 72.4
   LOOP                               => reduce 1 tokens to compound_statement 72.4
   PACKAGE                            => reduce 1 tokens to compound_statement 72.4
   PROCEDURE                          => reduce 1 tokens to compound_statement 72.4
   RETURN                             => reduce 1 tokens to compound_statement 72.4
   WHEN                               => reduce 1 tokens to compound_statement 72.4
   IDENTIFIER                         => reduce 1 tokens to compound_statement 72.4
   Wisi_EOI                           => reduce 1 tokens to compound_statement 72.4
   default                            => ERROR

   Minimal_Complete_Actions => (compound_statement)

State 20:
    133.1:subprogram_specification <= function_specification ^, IS/WITH/SEMICOLON

   IS                                 => reduce 1 tokens to subprogram_specification 133.1
   WITH                               => reduce 1 tokens to subprogram_specification 133.1
   SEMICOLON                          => reduce 1 tokens to subprogram_specification 133.1
   default                            => ERROR

   Minimal_Complete_Actions => (subprogram_specification)

State 21:
     70.3:compilation_unit <= generic_instantiation ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compilation_unit 70.3
   CASE                               => reduce 1 tokens to compilation_unit 70.3
   DECLARE                            => reduce 1 tokens to compilation_unit 70.3
   EXIT                               => reduce 1 tokens to compilation_unit 70.3
   FOR                                => reduce 1 tokens to compilation_unit 70.3
   FUNCTION                           => reduce 1 tokens to compilation_unit 70.3
   IF                                 => reduce 1 tokens to compilation_unit 70.3
   LOOP                               => reduce 1 tokens to compilation_unit 70.3
   PACKAGE                            => reduce 1 tokens to compilation_unit 70.3
   PROCEDURE                          => reduce 1 tokens to compilation_unit 70.3
   RETURN                             => reduce 1 tokens to compilation_unit 70.3
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 70.3
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 70.3
   default                            => ERROR

   Minimal_Complete_Actions => (compilation_unit)

State 22:
     72.0:compound_statement <= if_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compound_statement 72.0
   CASE                               => reduce 1 tokens to compound_statement 72.0
   DECLARE                            => reduce 1 tokens to compound_statement 72.0
   ELSE                               => reduce 1 tokens to compound_statement 72.0
   ELSIF                              => reduce 1 tokens to compound_statement 72.0
   END                                => reduce 1 tokens to compound_statement 72.0
   EXIT                               => reduce 1 tokens to compound_statement 72.0
   EXCEPTION                          => reduce 1 tokens to compound_statement 72.0
   FOR                                => reduce 1 tokens to compound_statement 72.0
   FUNCTION                           => reduce 1 tokens to compound_statement 72.0
   IF                                 => reduce 1 tokens to compound_statement 72.0
   LOOP                               => reduce 1 tokens to compound_statement 72.0
   PACKAGE                            => reduce 1 tokens to compound_statement 72.0
   PROCEDURE                          => reduce 1 tokens to compound_statement 72.0
   RETURN                             => reduce 1 tokens to compound_statement 72.0
   WHEN                               => reduce 1 tokens to compound_statement 72.0
   IDENTIFIER                         => reduce 1 tokens to compound_statement 72.0
   Wisi_EOI                           => reduce 1 tokens to compound_statement 72.0
   default                            => ERROR

   Minimal_Complete_Actions => (compound_statement)

State 23:
    101.0:loop_statement <= iteration_scheme ^ LOOP sequence_of_statements_opt END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LOOP                               => shift and goto state 76
   default                            => ERROR

   Minimal_Complete_Actions => (LOOP)

State 24:
     72.2:compound_statement <= loop_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compound_statement 72.2
   CASE                               => reduce 1 tokens to compound_statement 72.2
   DECLARE                            => reduce 1 tokens to compound_statement 72.2
   ELSE                               => reduce 1 tokens to compound_statement 72.2
   ELSIF                              => reduce 1 tokens to compound_statement 72.2
   END                                => reduce 1 tokens to compound_statement 72.2
   EXIT                               => reduce 1 tokens to compound_statement 72.2
   EXCEPTION                          => reduce 1 tokens to compound_statement 72.2
   FOR                                => reduce 1 tokens to compound_statement 72.2
   FUNCTION                           => reduce 1 tokens to compound_statement 72.2
   IF                                 => reduce 1 tokens to compound_statement 72.2
   LOOP                               => reduce 1 tokens to compound_statement 72.2
   PACKAGE                            => reduce 1 tokens to compound_statement 72.2
   PROCEDURE                          => reduce 1 tokens to compound_statement 72.2
   RETURN                             => reduce 1 tokens to compound_statement 72.2
   WHEN                               => reduce 1 tokens to compound_statement 72.2
   IDENTIFIER                         => reduce 1 tokens to compound_statement 72.2
   Wisi_EOI                           => reduce 1 tokens to compound_statement 72.2
   default                            => ERROR

   Minimal_Complete_Actions => (compound_statement)

State 25:
     59.0:assignment_statement <= name ^ COLON_EQUAL expression_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
    103.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/COLON_EQUAL/DOT/SEMICOLON
    103.1:name <= name ^ actual_parameter_part, LEFT_PAREN/COLON_EQUAL/DOT/SEMICOLON
    113.0:procedure_call_statement <= name ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
    123.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/COLON_EQUAL/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 77
   COLON_EQUAL                        => shift and goto state 78
   DOT                                => shift and goto state 79
   SEMICOLON                          => shift and goto state 80
   default                            => ERROR

   actual_parameter_part              goto state 81

   Minimal_Complete_Actions => (COLON_EQUAL, DOT, SEMICOLON)

State 26:
     70.0:compilation_unit <= package_body ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compilation_unit 70.0
   CASE                               => reduce 1 tokens to compilation_unit 70.0
   DECLARE                            => reduce 1 tokens to compilation_unit 70.0
   EXIT                               => reduce 1 tokens to compilation_unit 70.0
   FOR                                => reduce 1 tokens to compilation_unit 70.0
   FUNCTION                           => reduce 1 tokens to compilation_unit 70.0
   IF                                 => reduce 1 tokens to compilation_unit 70.0
   LOOP                               => reduce 1 tokens to compilation_unit 70.0
   PACKAGE                            => reduce 1 tokens to compilation_unit 70.0
   PROCEDURE                          => reduce 1 tokens to compilation_unit 70.0
   RETURN                             => reduce 1 tokens to compilation_unit 70.0
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 70.0
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 70.0
   default                            => ERROR

   Minimal_Complete_Actions => (compilation_unit)

State 27:
    128.2:simple_statement <= procedure_call_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to simple_statement 128.2
   CASE                               => reduce 1 tokens to simple_statement 128.2
   DECLARE                            => reduce 1 tokens to simple_statement 128.2
   ELSE                               => reduce 1 tokens to simple_statement 128.2
   ELSIF                              => reduce 1 tokens to simple_statement 128.2
   END                                => reduce 1 tokens to simple_statement 128.2
   EXIT                               => reduce 1 tokens to simple_statement 128.2
   EXCEPTION                          => reduce 1 tokens to simple_statement 128.2
   FOR                                => reduce 1 tokens to simple_statement 128.2
   FUNCTION                           => reduce 1 tokens to simple_statement 128.2
   IF                                 => reduce 1 tokens to simple_statement 128.2
   LOOP                               => reduce 1 tokens to simple_statement 128.2
   PACKAGE                            => reduce 1 tokens to simple_statement 128.2
   PROCEDURE                          => reduce 1 tokens to simple_statement 128.2
   RETURN                             => reduce 1 tokens to simple_statement 128.2
   WHEN                               => reduce 1 tokens to simple_statement 128.2
   IDENTIFIER                         => reduce 1 tokens to simple_statement 128.2
   Wisi_EOI                           => reduce 1 tokens to simple_statement 128.2
   default                            => ERROR

   Minimal_Complete_Actions => (simple_statement)

State 28:
    133.0:subprogram_specification <= procedure_specification ^, IS/WITH/SEMICOLON

   IS                                 => reduce 1 tokens to subprogram_specification 133.0
   WITH                               => reduce 1 tokens to subprogram_specification 133.0
   SEMICOLON                          => reduce 1 tokens to subprogram_specification 133.0
   default                            => ERROR

   Minimal_Complete_Actions => (subprogram_specification)

State 29:
    103.3:name <= selected_component ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to name 103.3
   IS                                 => reduce 1 tokens to name 103.3
   LEFT_PAREN                         => reduce 1 tokens to name 103.3
   LOOP                               => reduce 1 tokens to name 103.3
   OR                                 => reduce 1 tokens to name 103.3
   RANGE                              => reduce 1 tokens to name 103.3
   RETURN                             => reduce 1 tokens to name 103.3
   RIGHT_PAREN                        => reduce 1 tokens to name 103.3
   THEN                               => reduce 1 tokens to name 103.3
   WITH                               => reduce 1 tokens to name 103.3
   XOR                                => reduce 1 tokens to name 103.3
   AMPERSAND                          => reduce 1 tokens to name 103.3
   COLON_EQUAL                        => reduce 1 tokens to name 103.3
   COMMA                              => reduce 1 tokens to name 103.3
   DOT                                => reduce 1 tokens to name 103.3
   DOT_DOT                            => reduce 1 tokens to name 103.3
   EQUAL                              => reduce 1 tokens to name 103.3
   EQUAL_GREATER                      => reduce 1 tokens to name 103.3
   GREATER                            => reduce 1 tokens to name 103.3
   GREATER_EQUAL                      => reduce 1 tokens to name 103.3
   LESS                               => reduce 1 tokens to name 103.3
   LESS_EQUAL                         => reduce 1 tokens to name 103.3
   MINUS                              => reduce 1 tokens to name 103.3
   PLUS                               => reduce 1 tokens to name 103.3
   SEMICOLON                          => reduce 1 tokens to name 103.3
   SLASH                              => reduce 1 tokens to name 103.3
   SLASH_EQUAL                        => reduce 1 tokens to name 103.3
   STAR                               => reduce 1 tokens to name 103.3
   default                            => ERROR

   Minimal_Complete_Actions => (name)

State 30:
    128.3:simple_statement <= simple_return_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to simple_statement 128.3
   CASE                               => reduce 1 tokens to simple_statement 128.3
   DECLARE                            => reduce 1 tokens to simple_statement 128.3
   ELSE                               => reduce 1 tokens to simple_statement 128.3
   ELSIF                              => reduce 1 tokens to simple_statement 128.3
   END                                => reduce 1 tokens to simple_statement 128.3
   EXIT                               => reduce 1 tokens to simple_statement 128.3
   EXCEPTION                          => reduce 1 tokens to simple_statement 128.3
   FOR                                => reduce 1 tokens to simple_statement 128.3
   FUNCTION                           => reduce 1 tokens to simple_statement 128.3
   IF                                 => reduce 1 tokens to simple_statement 128.3
   LOOP                               => reduce 1 tokens to simple_statement 128.3
   PACKAGE                            => reduce 1 tokens to simple_statement 128.3
   PROCEDURE                          => reduce 1 tokens to simple_statement 128.3
   RETURN                             => reduce 1 tokens to simple_statement 128.3
   WHEN                               => reduce 1 tokens to simple_statement 128.3
   IDENTIFIER                         => reduce 1 tokens to simple_statement 128.3
   Wisi_EOI                           => reduce 1 tokens to simple_statement 128.3
   default                            => ERROR

   Minimal_Complete_Actions => (simple_statement)

State 31:
    129.0:statement <= simple_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to statement 129.0
   CASE                               => reduce 1 tokens to statement 129.0
   DECLARE                            => reduce 1 tokens to statement 129.0
   ELSE                               => reduce 1 tokens to statement 129.0
   ELSIF                              => reduce 1 tokens to statement 129.0
   END                                => reduce 1 tokens to statement 129.0
   EXIT                               => reduce 1 tokens to statement 129.0
   EXCEPTION                          => reduce 1 tokens to statement 129.0
   FOR                                => reduce 1 tokens to statement 129.0
   FUNCTION                           => reduce 1 tokens to statement 129.0
   IF                                 => reduce 1 tokens to statement 129.0
   LOOP                               => reduce 1 tokens to statement 129.0
   PACKAGE                            => reduce 1 tokens to statement 129.0
   PROCEDURE                          => reduce 1 tokens to statement 129.0
   RETURN                             => reduce 1 tokens to statement 129.0
   WHEN                               => reduce 1 tokens to statement 129.0
   IDENTIFIER                         => reduce 1 tokens to statement 129.0
   Wisi_EOI                           => reduce 1 tokens to statement 129.0
   default                            => ERROR

   Minimal_Complete_Actions => (statement)

State 32:
     70.4:compilation_unit <= statement ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compilation_unit 70.4
   CASE                               => reduce 1 tokens to compilation_unit 70.4
   DECLARE                            => reduce 1 tokens to compilation_unit 70.4
   EXIT                               => reduce 1 tokens to compilation_unit 70.4
   FOR                                => reduce 1 tokens to compilation_unit 70.4
   FUNCTION                           => reduce 1 tokens to compilation_unit 70.4
   IF                                 => reduce 1 tokens to compilation_unit 70.4
   LOOP                               => reduce 1 tokens to compilation_unit 70.4
   PACKAGE                            => reduce 1 tokens to compilation_unit 70.4
   PROCEDURE                          => reduce 1 tokens to compilation_unit 70.4
   RETURN                             => reduce 1 tokens to compilation_unit 70.4
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 70.4
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 70.4
   default                            => ERROR

   Minimal_Complete_Actions => (compilation_unit)

State 33:
     70.2:compilation_unit <= subprogram_body ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compilation_unit 70.2
   CASE                               => reduce 1 tokens to compilation_unit 70.2
   DECLARE                            => reduce 1 tokens to compilation_unit 70.2
   EXIT                               => reduce 1 tokens to compilation_unit 70.2
   FOR                                => reduce 1 tokens to compilation_unit 70.2
   FUNCTION                           => reduce 1 tokens to compilation_unit 70.2
   IF                                 => reduce 1 tokens to compilation_unit 70.2
   LOOP                               => reduce 1 tokens to compilation_unit 70.2
   PACKAGE                            => reduce 1 tokens to compilation_unit 70.2
   PROCEDURE                          => reduce 1 tokens to compilation_unit 70.2
   RETURN                             => reduce 1 tokens to compilation_unit 70.2
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 70.2
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 70.2
   default                            => ERROR

   Minimal_Complete_Actions => (compilation_unit)

State 34:
     70.1:compilation_unit <= subprogram_declaration ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 1 tokens to compilation_unit 70.1
   CASE                               => reduce 1 tokens to compilation_unit 70.1
   DECLARE                            => reduce 1 tokens to compilation_unit 70.1
   EXIT                               => reduce 1 tokens to compilation_unit 70.1
   FOR                                => reduce 1 tokens to compilation_unit 70.1
   FUNCTION                           => reduce 1 tokens to compilation_unit 70.1
   IF                                 => reduce 1 tokens to compilation_unit 70.1
   LOOP                               => reduce 1 tokens to compilation_unit 70.1
   PACKAGE                            => reduce 1 tokens to compilation_unit 70.1
   PROCEDURE                          => reduce 1 tokens to compilation_unit 70.1
   RETURN                             => reduce 1 tokens to compilation_unit 70.1
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 70.1
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 70.1
   default                            => ERROR

   Minimal_Complete_Actions => (compilation_unit)

State 35:
    130.0:subprogram_body <= subprogram_specification ^ aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
    132.0:subprogram_declaration <= subprogram_specification ^ SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   IS                                 => reduce 0 tokens to aspect_specification_opt 58.1
   WITH                               => shift and goto state 82
   SEMICOLON                          => shift and goto state 83
   default                            => ERROR

   aspect_specification_opt           goto state 84

   Minimal_Complete_Actions => (SEMICOLON, aspect_specification_opt)

State 36:
    111.0:paren_expression <= LEFT_PAREN ^ expression_opt RIGHT_PAREN, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   RIGHT_PAREN                        => reduce 0 tokens to expression_opt 88.1
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   expression                         goto state 43
   expression_opt                     goto state 85
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (expression_opt)

State 37:
     91.1:factor <= NOT ^ primary, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 36
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 86
   selected_component                 goto state 29

   Minimal_Complete_Actions => (IDENTIFIER)

State 38:
    139.1:unary_adding_operator <= MINUS ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to unary_adding_operator 139.1
   NOT                                => reduce 1 tokens to unary_adding_operator 139.1
   STRING_LITERAL                     => reduce 1 tokens to unary_adding_operator 139.1
   NUMERIC_LITERAL                    => reduce 1 tokens to unary_adding_operator 139.1
   IDENTIFIER                         => reduce 1 tokens to unary_adding_operator 139.1
   default                            => ERROR

   Minimal_Complete_Actions => (unary_adding_operator)

State 39:
    139.0:unary_adding_operator <= PLUS ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to unary_adding_operator 139.0
   NOT                                => reduce 1 tokens to unary_adding_operator 139.0
   STRING_LITERAL                     => reduce 1 tokens to unary_adding_operator 139.0
   NUMERIC_LITERAL                    => reduce 1 tokens to unary_adding_operator 139.0
   IDENTIFIER                         => reduce 1 tokens to unary_adding_operator 139.0
   default                            => ERROR

   Minimal_Complete_Actions => (unary_adding_operator)

State 40:
    112.1:primary <= STRING_LITERAL ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to primary 112.1
   IS                                 => reduce 1 tokens to primary 112.1
   LOOP                               => reduce 1 tokens to primary 112.1
   OR                                 => reduce 1 tokens to primary 112.1
   RIGHT_PAREN                        => reduce 1 tokens to primary 112.1
   THEN                               => reduce 1 tokens to primary 112.1
   XOR                                => reduce 1 tokens to primary 112.1
   AMPERSAND                          => reduce 1 tokens to primary 112.1
   COLON_EQUAL                        => reduce 1 tokens to primary 112.1
   COMMA                              => reduce 1 tokens to primary 112.1
   DOT_DOT                            => reduce 1 tokens to primary 112.1
   EQUAL                              => reduce 1 tokens to primary 112.1
   GREATER                            => reduce 1 tokens to primary 112.1
   GREATER_EQUAL                      => reduce 1 tokens to primary 112.1
   LESS                               => reduce 1 tokens to primary 112.1
   LESS_EQUAL                         => reduce 1 tokens to primary 112.1
   MINUS                              => reduce 1 tokens to primary 112.1
   PLUS                               => reduce 1 tokens to primary 112.1
   SEMICOLON                          => reduce 1 tokens to primary 112.1
   SLASH                              => reduce 1 tokens to primary 112.1
   SLASH_EQUAL                        => reduce 1 tokens to primary 112.1
   STAR                               => reduce 1 tokens to primary 112.1
   default                            => ERROR

   Minimal_Complete_Actions => (primary)

State 41:
    112.0:primary <= NUMERIC_LITERAL ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to primary 112.0
   IS                                 => reduce 1 tokens to primary 112.0
   LOOP                               => reduce 1 tokens to primary 112.0
   OR                                 => reduce 1 tokens to primary 112.0
   RIGHT_PAREN                        => reduce 1 tokens to primary 112.0
   THEN                               => reduce 1 tokens to primary 112.0
   XOR                                => reduce 1 tokens to primary 112.0
   AMPERSAND                          => reduce 1 tokens to primary 112.0
   COLON_EQUAL                        => reduce 1 tokens to primary 112.0
   COMMA                              => reduce 1 tokens to primary 112.0
   DOT_DOT                            => reduce 1 tokens to primary 112.0
   EQUAL                              => reduce 1 tokens to primary 112.0
   GREATER                            => reduce 1 tokens to primary 112.0
   GREATER_EQUAL                      => reduce 1 tokens to primary 112.0
   LESS                               => reduce 1 tokens to primary 112.0
   LESS_EQUAL                         => reduce 1 tokens to primary 112.0
   MINUS                              => reduce 1 tokens to primary 112.0
   PLUS                               => reduce 1 tokens to primary 112.0
   SEMICOLON                          => reduce 1 tokens to primary 112.0
   SLASH                              => reduce 1 tokens to primary 112.0
   SLASH_EQUAL                        => reduce 1 tokens to primary 112.0
   STAR                               => reduce 1 tokens to primary 112.0
   default                            => ERROR

   Minimal_Complete_Actions => (primary)

State 42:
    103.2:name <= IDENTIFIER ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to name 103.2
   IS                                 => reduce 1 tokens to name 103.2
   LEFT_PAREN                         => reduce 1 tokens to name 103.2
   LOOP                               => reduce 1 tokens to name 103.2
   OR                                 => reduce 1 tokens to name 103.2
   RANGE                              => reduce 1 tokens to name 103.2
   RETURN                             => reduce 1 tokens to name 103.2
   RIGHT_PAREN                        => reduce 1 tokens to name 103.2
   THEN                               => reduce 1 tokens to name 103.2
   WITH                               => reduce 1 tokens to name 103.2
   XOR                                => reduce 1 tokens to name 103.2
   AMPERSAND                          => reduce 1 tokens to name 103.2
   COLON_EQUAL                        => reduce 1 tokens to name 103.2
   COMMA                              => reduce 1 tokens to name 103.2
   DOT                                => reduce 1 tokens to name 103.2
   DOT_DOT                            => reduce 1 tokens to name 103.2
   EQUAL                              => reduce 1 tokens to name 103.2
   EQUAL_GREATER                      => reduce 1 tokens to name 103.2
   GREATER                            => reduce 1 tokens to name 103.2
   GREATER_EQUAL                      => reduce 1 tokens to name 103.2
   LESS                               => reduce 1 tokens to name 103.2
   LESS_EQUAL                         => reduce 1 tokens to name 103.2
   MINUS                              => reduce 1 tokens to name 103.2
   PLUS                               => reduce 1 tokens to name 103.2
   SEMICOLON                          => reduce 1 tokens to name 103.2
   SLASH                              => reduce 1 tokens to name 103.2
   SLASH_EQUAL                        => reduce 1 tokens to name 103.2
   STAR                               => reduce 1 tokens to name 103.2
   default                            => ERROR

   Minimal_Complete_Actions => (name)

State 43:
     88.0:expression_opt <= expression ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   IS                                 => reduce 1 tokens to expression_opt 88.0
   RIGHT_PAREN                        => reduce 1 tokens to expression_opt 88.0
   THEN                               => reduce 1 tokens to expression_opt 88.0
   COMMA                              => reduce 1 tokens to expression_opt 88.0
   SEMICOLON                          => reduce 1 tokens to expression_opt 88.0
   default                            => ERROR

   Minimal_Complete_Actions => (expression_opt)

State 44:
     67.0:case_statement <= CASE expression_opt ^ IS case_statement_alternative_list END CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   IS                                 => shift and goto state 87
   default                            => ERROR

   Minimal_Complete_Actions => (IS)

State 45:
    135.1:term <= factor ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to term 135.1
   IS                                 => reduce 1 tokens to term 135.1
   LOOP                               => reduce 1 tokens to term 135.1
   OR                                 => reduce 1 tokens to term 135.1
   RIGHT_PAREN                        => reduce 1 tokens to term 135.1
   THEN                               => reduce 1 tokens to term 135.1
   XOR                                => reduce 1 tokens to term 135.1
   AMPERSAND                          => reduce 1 tokens to term 135.1
   COLON_EQUAL                        => reduce 1 tokens to term 135.1
   COMMA                              => reduce 1 tokens to term 135.1
   DOT_DOT                            => reduce 1 tokens to term 135.1
   EQUAL                              => reduce 1 tokens to term 135.1
   GREATER                            => reduce 1 tokens to term 135.1
   GREATER_EQUAL                      => reduce 1 tokens to term 135.1
   LESS                               => reduce 1 tokens to term 135.1
   LESS_EQUAL                         => reduce 1 tokens to term 135.1
   MINUS                              => reduce 1 tokens to term 135.1
   PLUS                               => reduce 1 tokens to term 135.1
   SEMICOLON                          => reduce 1 tokens to term 135.1
   SLASH                              => reduce 1 tokens to term 135.1
   SLASH_EQUAL                        => reduce 1 tokens to term 135.1
   STAR                               => reduce 1 tokens to term 135.1
   default                            => ERROR

   Minimal_Complete_Actions => (term)

State 46:
    103.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    103.1:name <= name ^ actual_parameter_part, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    112.2:primary <= name ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    123.0:selected_component <= name ^ DOT IDENTIFIER, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to primary 112.2
   IS                                 => reduce 1 tokens to primary 112.2
   LEFT_PAREN                         => shift and goto state 77
   LOOP                               => reduce 1 tokens to primary 112.2
   OR                                 => reduce 1 tokens to primary 112.2
   RIGHT_PAREN                        => reduce 1 tokens to primary 112.2
   THEN                               => reduce 1 tokens to primary 112.2
   XOR                                => reduce 1 tokens to primary 112.2
   AMPERSAND                          => reduce 1 tokens to primary 112.2
   COLON_EQUAL                        => reduce 1 tokens to primary 112.2
   COMMA                              => reduce 1 tokens to primary 112.2
   DOT                                => shift and goto state 79
   DOT_DOT                            => reduce 1 tokens to primary 112.2
   EQUAL                              => reduce 1 tokens to primary 112.2
   GREATER                            => reduce 1 tokens to primary 112.2
   GREATER_EQUAL                      => reduce 1 tokens to primary 112.2
   LESS                               => reduce 1 tokens to primary 112.2
   LESS_EQUAL                         => reduce 1 tokens to primary 112.2
   MINUS                              => reduce 1 tokens to primary 112.2
   PLUS                               => reduce 1 tokens to primary 112.2
   SEMICOLON                          => reduce 1 tokens to primary 112.2
   SLASH                              => reduce 1 tokens to primary 112.2
   SLASH_EQUAL                        => reduce 1 tokens to primary 112.2
   STAR                               => reduce 1 tokens to primary 112.2
   default                            => ERROR

   actual_parameter_part              goto state 81

   Minimal_Complete_Actions => (DOT, primary)

State 47:
    112.3:primary <= paren_expression ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to primary 112.3
   IS                                 => reduce 1 tokens to primary 112.3
   LOOP                               => reduce 1 tokens to primary 112.3
   OR                                 => reduce 1 tokens to primary 112.3
   RIGHT_PAREN                        => reduce 1 tokens to primary 112.3
   THEN                               => reduce 1 tokens to primary 112.3
   XOR                                => reduce 1 tokens to primary 112.3
   AMPERSAND                          => reduce 1 tokens to primary 112.3
   COLON_EQUAL                        => reduce 1 tokens to primary 112.3
   COMMA                              => reduce 1 tokens to primary 112.3
   DOT_DOT                            => reduce 1 tokens to primary 112.3
   EQUAL                              => reduce 1 tokens to primary 112.3
   GREATER                            => reduce 1 tokens to primary 112.3
   GREATER_EQUAL                      => reduce 1 tokens to primary 112.3
   LESS                               => reduce 1 tokens to primary 112.3
   LESS_EQUAL                         => reduce 1 tokens to primary 112.3
   MINUS                              => reduce 1 tokens to primary 112.3
   PLUS                               => reduce 1 tokens to primary 112.3
   SEMICOLON                          => reduce 1 tokens to primary 112.3
   SLASH                              => reduce 1 tokens to primary 112.3
   SLASH_EQUAL                        => reduce 1 tokens to primary 112.3
   STAR                               => reduce 1 tokens to primary 112.3
   default                            => ERROR

   Minimal_Complete_Actions => (primary)

State 48:
     91.0:factor <= primary ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to factor 91.0
   IS                                 => reduce 1 tokens to factor 91.0
   LOOP                               => reduce 1 tokens to factor 91.0
   OR                                 => reduce 1 tokens to factor 91.0
   RIGHT_PAREN                        => reduce 1 tokens to factor 91.0
   THEN                               => reduce 1 tokens to factor 91.0
   XOR                                => reduce 1 tokens to factor 91.0
   AMPERSAND                          => reduce 1 tokens to factor 91.0
   COLON_EQUAL                        => reduce 1 tokens to factor 91.0
   COMMA                              => reduce 1 tokens to factor 91.0
   DOT_DOT                            => reduce 1 tokens to factor 91.0
   EQUAL                              => reduce 1 tokens to factor 91.0
   GREATER                            => reduce 1 tokens to factor 91.0
   GREATER_EQUAL                      => reduce 1 tokens to factor 91.0
   LESS                               => reduce 1 tokens to factor 91.0
   LESS_EQUAL                         => reduce 1 tokens to factor 91.0
   MINUS                              => reduce 1 tokens to factor 91.0
   PLUS                               => reduce 1 tokens to factor 91.0
   SEMICOLON                          => reduce 1 tokens to factor 91.0
   SLASH                              => reduce 1 tokens to factor 91.0
   SLASH_EQUAL                        => reduce 1 tokens to factor 91.0
   STAR                               => reduce 1 tokens to factor 91.0
   default                            => ERROR

   Minimal_Complete_Actions => (factor)

State 49:
     87.1:expression <= relation_and_list ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    118.0:relation_and_list <= relation_and_list ^ AND relation, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   AND                                => shift and goto state 88
   IS                                 => reduce 1 tokens to expression 87.1
   RIGHT_PAREN                        => reduce 1 tokens to expression 87.1
   THEN                               => reduce 1 tokens to expression 87.1
   COMMA                              => reduce 1 tokens to expression 87.1
   SEMICOLON                          => reduce 1 tokens to expression 87.1
   default                            => ERROR

   Minimal_Complete_Actions => (expression)

State 50:
     87.2:expression <= relation_or_list ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    119.0:relation_or_list <= relation_or_list ^ OR relation, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   IS                                 => reduce 1 tokens to expression 87.2
   OR                                 => shift and goto state 89
   RIGHT_PAREN                        => reduce 1 tokens to expression 87.2
   THEN                               => reduce 1 tokens to expression 87.2
   COMMA                              => reduce 1 tokens to expression 87.2
   SEMICOLON                          => reduce 1 tokens to expression 87.2
   default                            => ERROR

   Minimal_Complete_Actions => (expression)

State 51:
     87.3:expression <= relation_xor_list ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    120.0:relation_xor_list <= relation_xor_list ^ XOR relation, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   IS                                 => reduce 1 tokens to expression 87.3
   RIGHT_PAREN                        => reduce 1 tokens to expression 87.3
   THEN                               => reduce 1 tokens to expression 87.3
   XOR                                => shift and goto state 90
   COMMA                              => reduce 1 tokens to expression 87.3
   SEMICOLON                          => reduce 1 tokens to expression 87.3
   default                            => ERROR

   Minimal_Complete_Actions => (expression)

State 52:
     87.0:expression <= relation ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    118.1:relation_and_list <= relation ^ AND relation, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    119.1:relation_or_list <= relation ^ OR relation, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    120.1:relation_xor_list <= relation ^ XOR relation, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   AND                                => shift and goto state 91
   IS                                 => reduce 1 tokens to expression 87.0
   OR                                 => shift and goto state 92
   RIGHT_PAREN                        => reduce 1 tokens to expression 87.0
   THEN                               => reduce 1 tokens to expression 87.0
   XOR                                => shift and goto state 93
   COMMA                              => reduce 1 tokens to expression 87.0
   SEMICOLON                          => reduce 1 tokens to expression 87.0
   default                            => ERROR

   Minimal_Complete_Actions => (AND, OR, XOR, expression)

State 53:
    121.0:relation <= simple_expression ^ relational_operator simple_expression, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON
    121.1:relation <= simple_expression ^, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   AND                                => reduce 1 tokens to relation 121.1
   IS                                 => reduce 1 tokens to relation 121.1
   OR                                 => reduce 1 tokens to relation 121.1
   RIGHT_PAREN                        => reduce 1 tokens to relation 121.1
   THEN                               => reduce 1 tokens to relation 121.1
   XOR                                => reduce 1 tokens to relation 121.1
   COMMA                              => reduce 1 tokens to relation 121.1
   EQUAL                              => shift and goto state 94
   GREATER                            => shift and goto state 95
   GREATER_EQUAL                      => shift and goto state 96
   LESS                               => shift and goto state 97
   LESS_EQUAL                         => shift and goto state 98
   SEMICOLON                          => reduce 1 tokens to relation 121.1
   SLASH_EQUAL                        => shift and goto state 99
   default                            => ERROR

   relational_operator                goto state 100

   Minimal_Complete_Actions => (relation)

State 54:
    135.0:term <= term ^ multiplying_operator factor, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    136.1:term_list <= term ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 1 tokens to term_list 136.1
   IS                                 => reduce 1 tokens to term_list 136.1
   LOOP                               => reduce 1 tokens to term_list 136.1
   OR                                 => reduce 1 tokens to term_list 136.1
   RIGHT_PAREN                        => reduce 1 tokens to term_list 136.1
   THEN                               => reduce 1 tokens to term_list 136.1
   XOR                                => reduce 1 tokens to term_list 136.1
   AMPERSAND                          => reduce 1 tokens to term_list 136.1
   COLON_EQUAL                        => reduce 1 tokens to term_list 136.1
   COMMA                              => reduce 1 tokens to term_list 136.1
   DOT_DOT                            => reduce 1 tokens to term_list 136.1
   EQUAL                              => reduce 1 tokens to term_list 136.1
   GREATER                            => reduce 1 tokens to term_list 136.1
   GREATER_EQUAL                      => reduce 1 tokens to term_list 136.1
   LESS                               => reduce 1 tokens to term_list 136.1
   LESS_EQUAL                         => reduce 1 tokens to term_list 136.1
   MINUS                              => reduce 1 tokens to term_list 136.1
   PLUS                               => reduce 1 tokens to term_list 136.1
   SEMICOLON                          => reduce 1 tokens to term_list 136.1
   SLASH                              => shift and goto state 101
   SLASH_EQUAL                        => reduce 1 tokens to term_list 136.1
   STAR                               => shift and goto state 102
   default                            => ERROR

   multiplying_operator               goto state 103

   Minimal_Complete_Actions => (term_list)

State 55:
    126.1:simple_expression <= term_list ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL
    136.0:term_list <= term_list ^ binary_adding_operator term, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 1 tokens to simple_expression 126.1
   IS                                 => reduce 1 tokens to simple_expression 126.1
   LOOP                               => reduce 1 tokens to simple_expression 126.1
   OR                                 => reduce 1 tokens to simple_expression 126.1
   RIGHT_PAREN                        => reduce 1 tokens to simple_expression 126.1
   THEN                               => reduce 1 tokens to simple_expression 126.1
   XOR                                => reduce 1 tokens to simple_expression 126.1
   AMPERSAND                          => shift and goto state 104
   COLON_EQUAL                        => reduce 1 tokens to simple_expression 126.1
   COMMA                              => reduce 1 tokens to simple_expression 126.1
   DOT_DOT                            => reduce 1 tokens to simple_expression 126.1
   EQUAL                              => reduce 1 tokens to simple_expression 126.1
   GREATER                            => reduce 1 tokens to simple_expression 126.1
   GREATER_EQUAL                      => reduce 1 tokens to simple_expression 126.1
   LESS                               => reduce 1 tokens to simple_expression 126.1
   LESS_EQUAL                         => reduce 1 tokens to simple_expression 126.1
   MINUS                              => shift and goto state 105
   PLUS                               => shift and goto state 106
   SEMICOLON                          => reduce 1 tokens to simple_expression 126.1
   SLASH_EQUAL                        => reduce 1 tokens to simple_expression 126.1
   default                            => ERROR

   binary_adding_operator             goto state 107

   Minimal_Complete_Actions => (simple_expression)

State 56:
    126.0:simple_expression <= unary_adding_operator ^ term_list, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   selected_component                 goto state 29
   term                               goto state 54
   term_list                          goto state 108

   Minimal_Complete_Actions => (IDENTIFIER)

State 57:
     97.0:identifier_opt <= IDENTIFIER ^, WHEN/SEMICOLON

   WHEN                               => reduce 1 tokens to identifier_opt 97.0
   SEMICOLON                          => reduce 1 tokens to identifier_opt 97.0
   default                            => ERROR

   Minimal_Complete_Actions => (identifier_opt)

State 58:
     86.0:exit_statement <= EXIT identifier_opt ^ WHEN expression_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     86.1:exit_statement <= EXIT identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   WHEN                               => shift and goto state 109
   SEMICOLON                          => shift and goto state 110
   default                            => ERROR

   Minimal_Complete_Actions => (WHEN, SEMICOLON)

State 59:
    100.0:iteration_scheme <= FOR IDENTIFIER ^ IN discrete_subtype_definition, LOOP

   IN                                 => shift and goto state 111
   default                            => ERROR

   Minimal_Complete_Actions => (IN)

State 60:
     94.0:function_specification <= FUNCTION name ^ parameter_and_result_profile, IS/WITH/SEMICOLON
    103.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/RETURN/DOT
    103.1:name <= name ^ actual_parameter_part, LEFT_PAREN/RETURN/DOT
    123.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/RETURN/DOT

   LEFT_PAREN                         => shift and goto state 112
   RETURN                             => shift and goto state 113
   DOT                                => shift and goto state 79
   default                            => ERROR

   actual_parameter_part              goto state 81
   formal_part                        goto state 114
   parameter_and_result_profile       goto state 115

   Minimal_Complete_Actions => (RETURN, DOT)

State 61:
     98.0:if_statement <= IF expression_opt ^ THEN sequence_of_statements_opt elsif_statement_list ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     98.1:if_statement <= IF expression_opt ^ THEN sequence_of_statements_opt ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     98.2:if_statement <= IF expression_opt ^ THEN sequence_of_statements_opt elsif_statement_list END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     98.3:if_statement <= IF expression_opt ^ THEN sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   THEN                               => shift and goto state 116
   default                            => ERROR

   Minimal_Complete_Actions => (THEN)

State 62:
    124.0:sequence_of_statements <= sequence_of_statements ^ statement, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
    125.0:sequence_of_statements_opt <= sequence_of_statements ^, ELSE/ELSIF/END/EXCEPTION/WHEN

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   ELSE                               => reduce 1 tokens to sequence_of_statements_opt 125.0
   ELSIF                              => reduce 1 tokens to sequence_of_statements_opt 125.0
   END                                => reduce 1 tokens to sequence_of_statements_opt 125.0
   EXIT                               => shift and goto state 2
   EXCEPTION                          => reduce 1 tokens to sequence_of_statements_opt 125.0
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   WHEN                               => reduce 1 tokens to sequence_of_statements_opt 125.0
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 117

   Minimal_Complete_Actions => (sequence_of_statements_opt)

State 63:
    101.1:loop_statement <= LOOP sequence_of_statements_opt ^ END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 118
   default                            => ERROR

   Minimal_Complete_Actions => (END)

State 64:
    124.1:sequence_of_statements <= statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 1 tokens to sequence_of_statements 124.1
   CASE                               => reduce 1 tokens to sequence_of_statements 124.1
   DECLARE                            => reduce 1 tokens to sequence_of_statements 124.1
   ELSE                               => reduce 1 tokens to sequence_of_statements 124.1
   ELSIF                              => reduce 1 tokens to sequence_of_statements 124.1
   END                                => reduce 1 tokens to sequence_of_statements 124.1
   EXIT                               => reduce 1 tokens to sequence_of_statements 124.1
   EXCEPTION                          => reduce 1 tokens to sequence_of_statements 124.1
   FOR                                => reduce 1 tokens to sequence_of_statements 124.1
   IF                                 => reduce 1 tokens to sequence_of_statements 124.1
   LOOP                               => reduce 1 tokens to sequence_of_statements 124.1
   RETURN                             => reduce 1 tokens to sequence_of_statements 124.1
   WHEN                               => reduce 1 tokens to sequence_of_statements 124.1
   IDENTIFIER                         => reduce 1 tokens to sequence_of_statements 124.1
   default                            => ERROR

   Minimal_Complete_Actions => (sequence_of_statements)

State 65:
    106.0:package_body <= PACKAGE BODY ^ name aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
    106.1:package_body <= PACKAGE BODY ^ name aspect_specification_opt IS declarative_part_opt END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   name                               goto state 119
   selected_component                 goto state 29

   Minimal_Complete_Actions => (IDENTIFIER)

State 66:
     95.0:generic_instantiation <= PACKAGE name ^ IS NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
    103.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, IS/LEFT_PAREN/DOT
    103.1:name <= name ^ actual_parameter_part, IS/LEFT_PAREN/DOT
    123.0:selected_component <= name ^ DOT IDENTIFIER, IS/LEFT_PAREN/DOT

   IS                                 => shift and goto state 120
   LEFT_PAREN                         => shift and goto state 77
   DOT                                => shift and goto state 79
   default                            => ERROR

   actual_parameter_part              goto state 81

   Minimal_Complete_Actions => (IS, DOT)

State 67:
     95.1:generic_instantiation <= PROCEDURE name ^ IS NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
    103.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, IS/LEFT_PAREN/WITH/DOT/SEMICOLON
    103.1:name <= name ^ actual_parameter_part, IS/LEFT_PAREN/WITH/DOT/SEMICOLON
    114.0:procedure_specification <= PROCEDURE name ^ parameter_profile_opt, IS/WITH/SEMICOLON
    123.0:selected_component <= name ^ DOT IDENTIFIER, IS/LEFT_PAREN/WITH/DOT/SEMICOLON

   IS                                 => shift and goto state 121,
                                         reduce 0 tokens to parameter_profile_opt 108.1
   LEFT_PAREN                         => shift and goto state 112
   WITH                               => reduce 0 tokens to parameter_profile_opt 108.1
   DOT                                => shift and goto state 79
   SEMICOLON                          => reduce 0 tokens to parameter_profile_opt 108.1
   default                            => ERROR

   actual_parameter_part              goto state 81
   formal_part                        goto state 122
   parameter_profile_opt              goto state 123

   Minimal_Complete_Actions => (IS, DOT, parameter_profile_opt)

State 68:
    127.1:simple_return_statement <= RETURN SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 2 tokens to simple_return_statement 127.1
   CASE                               => reduce 2 tokens to simple_return_statement 127.1
   DECLARE                            => reduce 2 tokens to simple_return_statement 127.1
   ELSE                               => reduce 2 tokens to simple_return_statement 127.1
   ELSIF                              => reduce 2 tokens to simple_return_statement 127.1
   END                                => reduce 2 tokens to simple_return_statement 127.1
   EXIT                               => reduce 2 tokens to simple_return_statement 127.1
   EXCEPTION                          => reduce 2 tokens to simple_return_statement 127.1
   FOR                                => reduce 2 tokens to simple_return_statement 127.1
   FUNCTION                           => reduce 2 tokens to simple_return_statement 127.1
   IF                                 => reduce 2 tokens to simple_return_statement 127.1
   LOOP                               => reduce 2 tokens to simple_return_statement 127.1
   PACKAGE                            => reduce 2 tokens to simple_return_statement 127.1
   PROCEDURE                          => reduce 2 tokens to simple_return_statement 127.1
   RETURN                             => reduce 2 tokens to simple_return_statement 127.1
   WHEN                               => reduce 2 tokens to simple_return_statement 127.1
   IDENTIFIER                         => reduce 2 tokens to simple_return_statement 127.1
   Wisi_EOI                           => reduce 2 tokens to simple_return_statement 127.1
   default                            => ERROR

   Minimal_Complete_Actions => (simple_return_statement)

State 69:
     89.0:extended_return_object_declaration <= IDENTIFIER ^ COLON subtype_indication, SEMICOLON
    103.2:name <= IDENTIFIER ^, AND/LEFT_PAREN/OR/XOR/AMPERSAND/DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to name 103.2
   LEFT_PAREN                         => reduce 1 tokens to name 103.2
   OR                                 => reduce 1 tokens to name 103.2
   XOR                                => reduce 1 tokens to name 103.2
   AMPERSAND                          => reduce 1 tokens to name 103.2
   COLON                              => shift and goto state 124
   DOT                                => reduce 1 tokens to name 103.2
   EQUAL                              => reduce 1 tokens to name 103.2
   GREATER                            => reduce 1 tokens to name 103.2
   GREATER_EQUAL                      => reduce 1 tokens to name 103.2
   LESS                               => reduce 1 tokens to name 103.2
   LESS_EQUAL                         => reduce 1 tokens to name 103.2
   MINUS                              => reduce 1 tokens to name 103.2
   PLUS                               => reduce 1 tokens to name 103.2
   SEMICOLON                          => reduce 1 tokens to name 103.2
   SLASH                              => reduce 1 tokens to name 103.2
   SLASH_EQUAL                        => reduce 1 tokens to name 103.2
   STAR                               => reduce 1 tokens to name 103.2
   default                            => ERROR

   Minimal_Complete_Actions => (COLON, name)

State 70:
    127.0:simple_return_statement <= RETURN expression_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 125
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 71:
     90.0:extended_return_statement <= RETURN extended_return_object_declaration ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 126
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 72:
     63.0:block_label_opt <= IDENTIFIER COLON ^, BEGIN/DECLARE

   BEGIN                              => reduce 2 tokens to block_label_opt 63.0
   DECLARE                            => reduce 2 tokens to block_label_opt 63.0
   default                            => ERROR

   Minimal_Complete_Actions => (block_label_opt)

State 73:
     64.1:block_statement <= block_label_opt BEGIN ^ handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 125.1
   EXIT                               => shift and goto state 2
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements_opt 125.1
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   handled_sequence_of_statements     goto state 127
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 62
   sequence_of_statements_opt         goto state 128
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 64

   Minimal_Complete_Actions => (handled_sequence_of_statements)

State 74:
     64.0:block_statement <= block_label_opt DECLARE ^ declarative_part_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to declarative_part_opt 76.1
   FUNCTION                           => shift and goto state 4
   PACKAGE                            => shift and goto state 129
   PROCEDURE                          => shift and goto state 130
   TYPE                               => shift and goto state 131
   IDENTIFIER                         => shift and goto state 132
   default                            => ERROR

   body_g                             goto state 133
   body_stub                          goto state 134
   declaration                        goto state 135
   declarations                       goto state 136
   declarative_part_opt               goto state 137
   full_type_declaration              goto state 138
   function_specification             goto state 20
   object_declaration                 goto state 139
   package_body                       goto state 140
   procedure_specification            goto state 28
   proper_body                        goto state 141
   subprogram_body                    goto state 142
   subprogram_body_stub               goto state 143
   subprogram_declaration             goto state 144
   subprogram_specification           goto state 145
   type_declaration                   goto state 146

   Minimal_Complete_Actions => (declarative_part_opt)

State 75:
     71.0:compilation_unit_list <= compilation_unit_list compilation_unit ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 2 tokens to compilation_unit_list 71.0
   CASE                               => reduce 2 tokens to compilation_unit_list 71.0
   DECLARE                            => reduce 2 tokens to compilation_unit_list 71.0
   EXIT                               => reduce 2 tokens to compilation_unit_list 71.0
   FOR                                => reduce 2 tokens to compilation_unit_list 71.0
   FUNCTION                           => reduce 2 tokens to compilation_unit_list 71.0
   IF                                 => reduce 2 tokens to compilation_unit_list 71.0
   LOOP                               => reduce 2 tokens to compilation_unit_list 71.0
   PACKAGE                            => reduce 2 tokens to compilation_unit_list 71.0
   PROCEDURE                          => reduce 2 tokens to compilation_unit_list 71.0
   RETURN                             => reduce 2 tokens to compilation_unit_list 71.0
   IDENTIFIER                         => reduce 2 tokens to compilation_unit_list 71.0
   Wisi_EOI                           => reduce 2 tokens to compilation_unit_list 71.0
   default                            => ERROR

   Minimal_Complete_Actions => (compilation_unit_list)

State 76:
    101.0:loop_statement <= iteration_scheme LOOP ^ sequence_of_statements_opt END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 125.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 62
   sequence_of_statements_opt         goto state 147
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 64

   Minimal_Complete_Actions => (sequence_of_statements_opt)

State 77:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    103.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   RIGHT_PAREN                        => reduce 0 tokens to association_opt 60.2
   COMMA                              => reduce 0 tokens to association_opt 60.2
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 148
   default                            => ERROR

   association_opt                    goto state 149
   association_list                   goto state 150
   expression                         goto state 151
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 152
   range_list                         goto state 153
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 29
   simple_expression                  goto state 154
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (IDENTIFIER, association_list)

State 78:
     59.0:assignment_statement <= name COLON_EQUAL ^ expression_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   SEMICOLON                          => reduce 0 tokens to expression_opt 88.1
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   expression                         goto state 43
   expression_opt                     goto state 155
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (expression_opt)

State 79:
    123.0:selected_component <= name DOT ^ IDENTIFIER, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   IDENTIFIER                         => shift and goto state 156
   default                            => ERROR

   Minimal_Complete_Actions => (IDENTIFIER)

State 80:
    113.0:procedure_call_statement <= name SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 2 tokens to procedure_call_statement 113.0
   CASE                               => reduce 2 tokens to procedure_call_statement 113.0
   DECLARE                            => reduce 2 tokens to procedure_call_statement 113.0
   ELSE                               => reduce 2 tokens to procedure_call_statement 113.0
   ELSIF                              => reduce 2 tokens to procedure_call_statement 113.0
   END                                => reduce 2 tokens to procedure_call_statement 113.0
   EXIT                               => reduce 2 tokens to procedure_call_statement 113.0
   EXCEPTION                          => reduce 2 tokens to procedure_call_statement 113.0
   FOR                                => reduce 2 tokens to procedure_call_statement 113.0
   FUNCTION                           => reduce 2 tokens to procedure_call_statement 113.0
   IF                                 => reduce 2 tokens to procedure_call_statement 113.0
   LOOP                               => reduce 2 tokens to procedure_call_statement 113.0
   PACKAGE                            => reduce 2 tokens to procedure_call_statement 113.0
   PROCEDURE                          => reduce 2 tokens to procedure_call_statement 113.0
   RETURN                             => reduce 2 tokens to procedure_call_statement 113.0
   WHEN                               => reduce 2 tokens to procedure_call_statement 113.0
   IDENTIFIER                         => reduce 2 tokens to procedure_call_statement 113.0
   Wisi_EOI                           => reduce 2 tokens to procedure_call_statement 113.0
   default                            => ERROR

   Minimal_Complete_Actions => (procedure_call_statement)

State 81:
    103.1:name <= name actual_parameter_part ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 2 tokens to name 103.1
   IS                                 => reduce 2 tokens to name 103.1
   LEFT_PAREN                         => reduce 2 tokens to name 103.1
   LOOP                               => reduce 2 tokens to name 103.1
   OR                                 => reduce 2 tokens to name 103.1
   RANGE                              => reduce 2 tokens to name 103.1
   RETURN                             => reduce 2 tokens to name 103.1
   RIGHT_PAREN                        => reduce 2 tokens to name 103.1
   THEN                               => reduce 2 tokens to name 103.1
   WITH                               => reduce 2 tokens to name 103.1
   XOR                                => reduce 2 tokens to name 103.1
   AMPERSAND                          => reduce 2 tokens to name 103.1
   COLON_EQUAL                        => reduce 2 tokens to name 103.1
   COMMA                              => reduce 2 tokens to name 103.1
   DOT                                => reduce 2 tokens to name 103.1
   DOT_DOT                            => reduce 2 tokens to name 103.1
   EQUAL                              => reduce 2 tokens to name 103.1
   EQUAL_GREATER                      => reduce 2 tokens to name 103.1
   GREATER                            => reduce 2 tokens to name 103.1
   GREATER_EQUAL                      => reduce 2 tokens to name 103.1
   LESS                               => reduce 2 tokens to name 103.1
   LESS_EQUAL                         => reduce 2 tokens to name 103.1
   MINUS                              => reduce 2 tokens to name 103.1
   PLUS                               => reduce 2 tokens to name 103.1
   SEMICOLON                          => reduce 2 tokens to name 103.1
   SLASH                              => reduce 2 tokens to name 103.1
   SLASH_EQUAL                        => reduce 2 tokens to name 103.1
   STAR                               => reduce 2 tokens to name 103.1
   default                            => ERROR

   Minimal_Complete_Actions => (name)

State 82:
     58.0:aspect_specification_opt <= WITH ^ association_list, IS

   IS                                 => reduce 0 tokens to association_opt 60.2
   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   COMMA                              => reduce 0 tokens to association_opt 60.2
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 148
   default                            => ERROR

   association_opt                    goto state 149
   association_list                   goto state 157
   expression                         goto state 151
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (association_list)

State 83:
    132.0:subprogram_declaration <= subprogram_specification SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 2 tokens to subprogram_declaration 132.0
   CASE                               => reduce 2 tokens to subprogram_declaration 132.0
   DECLARE                            => reduce 2 tokens to subprogram_declaration 132.0
   END                                => reduce 2 tokens to subprogram_declaration 132.0
   EXIT                               => reduce 2 tokens to subprogram_declaration 132.0
   FOR                                => reduce 2 tokens to subprogram_declaration 132.0
   FUNCTION                           => reduce 2 tokens to subprogram_declaration 132.0
   IF                                 => reduce 2 tokens to subprogram_declaration 132.0
   LOOP                               => reduce 2 tokens to subprogram_declaration 132.0
   PACKAGE                            => reduce 2 tokens to subprogram_declaration 132.0
   PROCEDURE                          => reduce 2 tokens to subprogram_declaration 132.0
   RETURN                             => reduce 2 tokens to subprogram_declaration 132.0
   TYPE                               => reduce 2 tokens to subprogram_declaration 132.0
   IDENTIFIER                         => reduce 2 tokens to subprogram_declaration 132.0
   Wisi_EOI                           => reduce 2 tokens to subprogram_declaration 132.0
   default                            => ERROR

   Minimal_Complete_Actions => (subprogram_declaration)

State 84:
    130.0:subprogram_body <= subprogram_specification aspect_specification_opt ^ IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   IS                                 => shift and goto state 158
   default                            => ERROR

   Minimal_Complete_Actions => (IS)

State 85:
    111.0:paren_expression <= LEFT_PAREN expression_opt ^ RIGHT_PAREN, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   RIGHT_PAREN                        => shift and goto state 159
   default                            => ERROR

   Minimal_Complete_Actions => (RIGHT_PAREN)

State 86:
     91.1:factor <= NOT primary ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 2 tokens to factor 91.1
   IS                                 => reduce 2 tokens to factor 91.1
   LOOP                               => reduce 2 tokens to factor 91.1
   OR                                 => reduce 2 tokens to factor 91.1
   RIGHT_PAREN                        => reduce 2 tokens to factor 91.1
   THEN                               => reduce 2 tokens to factor 91.1
   XOR                                => reduce 2 tokens to factor 91.1
   AMPERSAND                          => reduce 2 tokens to factor 91.1
   COLON_EQUAL                        => reduce 2 tokens to factor 91.1
   COMMA                              => reduce 2 tokens to factor 91.1
   DOT_DOT                            => reduce 2 tokens to factor 91.1
   EQUAL                              => reduce 2 tokens to factor 91.1
   GREATER                            => reduce 2 tokens to factor 91.1
   GREATER_EQUAL                      => reduce 2 tokens to factor 91.1
   LESS                               => reduce 2 tokens to factor 91.1
   LESS_EQUAL                         => reduce 2 tokens to factor 91.1
   MINUS                              => reduce 2 tokens to factor 91.1
   PLUS                               => reduce 2 tokens to factor 91.1
   SEMICOLON                          => reduce 2 tokens to factor 91.1
   SLASH                              => reduce 2 tokens to factor 91.1
   SLASH_EQUAL                        => reduce 2 tokens to factor 91.1
   STAR                               => reduce 2 tokens to factor 91.1
   default                            => ERROR

   Minimal_Complete_Actions => (factor)

State 87:
     67.0:case_statement <= CASE expression_opt IS ^ case_statement_alternative_list END CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   WHEN                               => shift and goto state 160
   default                            => ERROR

   case_statement_alternative         goto state 161
   case_statement_alternative_list    goto state 162

   Minimal_Complete_Actions => (WHEN)

State 88:
    118.0:relation_and_list <= relation_and_list AND ^ relation, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 163
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (IDENTIFIER)

State 89:
    119.0:relation_or_list <= relation_or_list OR ^ relation, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 164
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (IDENTIFIER)

State 90:
    120.0:relation_xor_list <= relation_xor_list XOR ^ relation, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 165
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (IDENTIFIER)

State 91:
    118.1:relation_and_list <= relation AND ^ relation, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 166
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (IDENTIFIER)

State 92:
    119.1:relation_or_list <= relation OR ^ relation, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 167
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (IDENTIFIER)

State 93:
    120.1:relation_xor_list <= relation XOR ^ relation, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 168
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (IDENTIFIER)

State 94:
    122.0:relational_operator <= EQUAL ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 122.0
   NOT                                => reduce 1 tokens to relational_operator 122.0
   MINUS                              => reduce 1 tokens to relational_operator 122.0
   PLUS                               => reduce 1 tokens to relational_operator 122.0
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 122.0
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 122.0
   IDENTIFIER                         => reduce 1 tokens to relational_operator 122.0
   default                            => ERROR

   Minimal_Complete_Actions => (relational_operator)

State 95:
    122.4:relational_operator <= GREATER ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 122.4
   NOT                                => reduce 1 tokens to relational_operator 122.4
   MINUS                              => reduce 1 tokens to relational_operator 122.4
   PLUS                               => reduce 1 tokens to relational_operator 122.4
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 122.4
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 122.4
   IDENTIFIER                         => reduce 1 tokens to relational_operator 122.4
   default                            => ERROR

   Minimal_Complete_Actions => (relational_operator)

State 96:
    122.5:relational_operator <= GREATER_EQUAL ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 122.5
   NOT                                => reduce 1 tokens to relational_operator 122.5
   MINUS                              => reduce 1 tokens to relational_operator 122.5
   PLUS                               => reduce 1 tokens to relational_operator 122.5
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 122.5
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 122.5
   IDENTIFIER                         => reduce 1 tokens to relational_operator 122.5
   default                            => ERROR

   Minimal_Complete_Actions => (relational_operator)

State 97:
    122.2:relational_operator <= LESS ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 122.2
   NOT                                => reduce 1 tokens to relational_operator 122.2
   MINUS                              => reduce 1 tokens to relational_operator 122.2
   PLUS                               => reduce 1 tokens to relational_operator 122.2
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 122.2
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 122.2
   IDENTIFIER                         => reduce 1 tokens to relational_operator 122.2
   default                            => ERROR

   Minimal_Complete_Actions => (relational_operator)

State 98:
    122.3:relational_operator <= LESS_EQUAL ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 122.3
   NOT                                => reduce 1 tokens to relational_operator 122.3
   MINUS                              => reduce 1 tokens to relational_operator 122.3
   PLUS                               => reduce 1 tokens to relational_operator 122.3
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 122.3
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 122.3
   IDENTIFIER                         => reduce 1 tokens to relational_operator 122.3
   default                            => ERROR

   Minimal_Complete_Actions => (relational_operator)

State 99:
    122.1:relational_operator <= SLASH_EQUAL ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 122.1
   NOT                                => reduce 1 tokens to relational_operator 122.1
   MINUS                              => reduce 1 tokens to relational_operator 122.1
   PLUS                               => reduce 1 tokens to relational_operator 122.1
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 122.1
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 122.1
   IDENTIFIER                         => reduce 1 tokens to relational_operator 122.1
   default                            => ERROR

   Minimal_Complete_Actions => (relational_operator)

State 100:
    121.0:relation <= simple_expression relational_operator ^ simple_expression, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   selected_component                 goto state 29
   simple_expression                  goto state 169
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (IDENTIFIER)

State 101:
    102.1:multiplying_operator <= SLASH ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to multiplying_operator 102.1
   NOT                                => reduce 1 tokens to multiplying_operator 102.1
   STRING_LITERAL                     => reduce 1 tokens to multiplying_operator 102.1
   NUMERIC_LITERAL                    => reduce 1 tokens to multiplying_operator 102.1
   IDENTIFIER                         => reduce 1 tokens to multiplying_operator 102.1
   default                            => ERROR

   Minimal_Complete_Actions => (multiplying_operator)

State 102:
    102.0:multiplying_operator <= STAR ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to multiplying_operator 102.0
   NOT                                => reduce 1 tokens to multiplying_operator 102.0
   STRING_LITERAL                     => reduce 1 tokens to multiplying_operator 102.0
   NUMERIC_LITERAL                    => reduce 1 tokens to multiplying_operator 102.0
   IDENTIFIER                         => reduce 1 tokens to multiplying_operator 102.0
   default                            => ERROR

   Minimal_Complete_Actions => (multiplying_operator)

State 103:
    135.0:term <= term multiplying_operator ^ factor, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   factor                             goto state 170
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   selected_component                 goto state 29

   Minimal_Complete_Actions => (IDENTIFIER)

State 104:
     62.2:binary_adding_operator <= AMPERSAND ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to binary_adding_operator 62.2
   NOT                                => reduce 1 tokens to binary_adding_operator 62.2
   STRING_LITERAL                     => reduce 1 tokens to binary_adding_operator 62.2
   NUMERIC_LITERAL                    => reduce 1 tokens to binary_adding_operator 62.2
   IDENTIFIER                         => reduce 1 tokens to binary_adding_operator 62.2
   default                            => ERROR

   Minimal_Complete_Actions => (binary_adding_operator)

State 105:
     62.1:binary_adding_operator <= MINUS ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to binary_adding_operator 62.1
   NOT                                => reduce 1 tokens to binary_adding_operator 62.1
   STRING_LITERAL                     => reduce 1 tokens to binary_adding_operator 62.1
   NUMERIC_LITERAL                    => reduce 1 tokens to binary_adding_operator 62.1
   IDENTIFIER                         => reduce 1 tokens to binary_adding_operator 62.1
   default                            => ERROR

   Minimal_Complete_Actions => (binary_adding_operator)

State 106:
     62.0:binary_adding_operator <= PLUS ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to binary_adding_operator 62.0
   NOT                                => reduce 1 tokens to binary_adding_operator 62.0
   STRING_LITERAL                     => reduce 1 tokens to binary_adding_operator 62.0
   NUMERIC_LITERAL                    => reduce 1 tokens to binary_adding_operator 62.0
   IDENTIFIER                         => reduce 1 tokens to binary_adding_operator 62.0
   default                            => ERROR

   Minimal_Complete_Actions => (binary_adding_operator)

State 107:
    136.0:term_list <= term_list binary_adding_operator ^ term, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   selected_component                 goto state 29
   term                               goto state 171

   Minimal_Complete_Actions => (IDENTIFIER)

State 108:
    126.0:simple_expression <= unary_adding_operator term_list ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL
    136.0:term_list <= term_list ^ binary_adding_operator term, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 2 tokens to simple_expression 126.0
   IS                                 => reduce 2 tokens to simple_expression 126.0
   LOOP                               => reduce 2 tokens to simple_expression 126.0
   OR                                 => reduce 2 tokens to simple_expression 126.0
   RIGHT_PAREN                        => reduce 2 tokens to simple_expression 126.0
   THEN                               => reduce 2 tokens to simple_expression 126.0
   XOR                                => reduce 2 tokens to simple_expression 126.0
   AMPERSAND                          => shift and goto state 104
   COLON_EQUAL                        => reduce 2 tokens to simple_expression 126.0
   COMMA                              => reduce 2 tokens to simple_expression 126.0
   DOT_DOT                            => reduce 2 tokens to simple_expression 126.0
   EQUAL                              => reduce 2 tokens to simple_expression 126.0
   GREATER                            => reduce 2 tokens to simple_expression 126.0
   GREATER_EQUAL                      => reduce 2 tokens to simple_expression 126.0
   LESS                               => reduce 2 tokens to simple_expression 126.0
   LESS_EQUAL                         => reduce 2 tokens to simple_expression 126.0
   MINUS                              => shift and goto state 105
   PLUS                               => shift and goto state 106
   SEMICOLON                          => reduce 2 tokens to simple_expression 126.0
   SLASH_EQUAL                        => reduce 2 tokens to simple_expression 126.0
   default                            => ERROR

   binary_adding_operator             goto state 107

   Minimal_Complete_Actions => (simple_expression)

State 109:
     86.0:exit_statement <= EXIT identifier_opt WHEN ^ expression_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   SEMICOLON                          => reduce 0 tokens to expression_opt 88.1
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   expression                         goto state 43
   expression_opt                     goto state 172
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (expression_opt)

State 110:
     86.1:exit_statement <= EXIT identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 3 tokens to exit_statement 86.1
   CASE                               => reduce 3 tokens to exit_statement 86.1
   DECLARE                            => reduce 3 tokens to exit_statement 86.1
   ELSE                               => reduce 3 tokens to exit_statement 86.1
   ELSIF                              => reduce 3 tokens to exit_statement 86.1
   END                                => reduce 3 tokens to exit_statement 86.1
   EXIT                               => reduce 3 tokens to exit_statement 86.1
   EXCEPTION                          => reduce 3 tokens to exit_statement 86.1
   FOR                                => reduce 3 tokens to exit_statement 86.1
   FUNCTION                           => reduce 3 tokens to exit_statement 86.1
   IF                                 => reduce 3 tokens to exit_statement 86.1
   LOOP                               => reduce 3 tokens to exit_statement 86.1
   PACKAGE                            => reduce 3 tokens to exit_statement 86.1
   PROCEDURE                          => reduce 3 tokens to exit_statement 86.1
   RETURN                             => reduce 3 tokens to exit_statement 86.1
   WHEN                               => reduce 3 tokens to exit_statement 86.1
   IDENTIFIER                         => reduce 3 tokens to exit_statement 86.1
   Wisi_EOI                           => reduce 3 tokens to exit_statement 86.1
   default                            => ERROR

   Minimal_Complete_Actions => (exit_statement)

State 111:
    100.0:iteration_scheme <= FOR IDENTIFIER IN ^ discrete_subtype_definition, LOOP

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   discrete_subtype_definition        goto state 173
   factor                             goto state 45
   name                               goto state 174
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 175
   selected_component                 goto state 29
   simple_expression                  goto state 176
   subtype_indication                 goto state 177
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (IDENTIFIER)

State 112:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN, IS/LEFT_PAREN/RETURN/WITH/DOT/SEMICOLON
     92.0:formal_part <= LEFT_PAREN ^ parameter_specification_list RIGHT_PAREN, IS/RETURN/WITH/SEMICOLON
    103.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN, IS/LEFT_PAREN/RETURN/WITH/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   RIGHT_PAREN                        => reduce 0 tokens to association_opt 60.2,
                                         reduce 0 tokens to parameter_specification 109.2
   COMMA                              => reduce 0 tokens to association_opt 60.2
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   SEMICOLON                          => reduce 0 tokens to parameter_specification 109.2
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 178
   default                            => ERROR

   association_opt                    goto state 149
   association_list                   goto state 150
   expression                         goto state 151
   factor                             goto state 45
   name                               goto state 46
   parameter_specification            goto state 179
   parameter_specification_list       goto state 180
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 152
   range_list                         goto state 153
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 29
   simple_expression                  goto state 154
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (IDENTIFIER, association_list, parameter_specification_list)

State 113:
    107.1:parameter_and_result_profile <= RETURN ^ IDENTIFIER, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 181
   default                            => ERROR

   Minimal_Complete_Actions => (IDENTIFIER)

State 114:
    107.0:parameter_and_result_profile <= formal_part ^ RETURN IDENTIFIER, IS/WITH/SEMICOLON

   RETURN                             => shift and goto state 182
   default                            => ERROR

   Minimal_Complete_Actions => (RETURN)

State 115:
     94.0:function_specification <= FUNCTION name parameter_and_result_profile ^, IS/WITH/SEMICOLON

   IS                                 => reduce 3 tokens to function_specification 94.0
   WITH                               => reduce 3 tokens to function_specification 94.0
   SEMICOLON                          => reduce 3 tokens to function_specification 94.0
   default                            => ERROR

   Minimal_Complete_Actions => (function_specification)

State 116:
     98.0:if_statement <= IF expression_opt THEN ^ sequence_of_statements_opt elsif_statement_list ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     98.1:if_statement <= IF expression_opt THEN ^ sequence_of_statements_opt ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     98.2:if_statement <= IF expression_opt THEN ^ sequence_of_statements_opt elsif_statement_list END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     98.3:if_statement <= IF expression_opt THEN ^ sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   ELSE                               => reduce 0 tokens to sequence_of_statements_opt 125.1
   ELSIF                              => reduce 0 tokens to sequence_of_statements_opt 125.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 125.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 62
   sequence_of_statements_opt         goto state 183
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 64

   Minimal_Complete_Actions => (sequence_of_statements_opt)

State 117:
    124.0:sequence_of_statements <= sequence_of_statements statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 2 tokens to sequence_of_statements 124.0
   CASE                               => reduce 2 tokens to sequence_of_statements 124.0
   DECLARE                            => reduce 2 tokens to sequence_of_statements 124.0
   ELSE                               => reduce 2 tokens to sequence_of_statements 124.0
   ELSIF                              => reduce 2 tokens to sequence_of_statements 124.0
   END                                => reduce 2 tokens to sequence_of_statements 124.0
   EXIT                               => reduce 2 tokens to sequence_of_statements 124.0
   EXCEPTION                          => reduce 2 tokens to sequence_of_statements 124.0
   FOR                                => reduce 2 tokens to sequence_of_statements 124.0
   IF                                 => reduce 2 tokens to sequence_of_statements 124.0
   LOOP                               => reduce 2 tokens to sequence_of_statements 124.0
   RETURN                             => reduce 2 tokens to sequence_of_statements 124.0
   WHEN                               => reduce 2 tokens to sequence_of_statements 124.0
   IDENTIFIER                         => reduce 2 tokens to sequence_of_statements 124.0
   default                            => ERROR

   Minimal_Complete_Actions => (sequence_of_statements)

State 118:
    101.1:loop_statement <= LOOP sequence_of_statements_opt END ^ LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LOOP                               => shift and goto state 184
   default                            => ERROR

   Minimal_Complete_Actions => (LOOP)

State 119:
    103.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, IS/LEFT_PAREN/WITH/DOT
    103.1:name <= name ^ actual_parameter_part, IS/LEFT_PAREN/WITH/DOT
    106.0:package_body <= PACKAGE BODY name ^ aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
    106.1:package_body <= PACKAGE BODY name ^ aspect_specification_opt IS declarative_part_opt END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
    123.0:selected_component <= name ^ DOT IDENTIFIER, IS/LEFT_PAREN/WITH/DOT

   IS                                 => reduce 0 tokens to aspect_specification_opt 58.1
   LEFT_PAREN                         => shift and goto state 77
   WITH                               => shift and goto state 82
   DOT                                => shift and goto state 79
   default                            => ERROR

   actual_parameter_part              goto state 81
   aspect_specification_opt           goto state 185

   Minimal_Complete_Actions => (DOT, aspect_specification_opt)

State 120:
     95.0:generic_instantiation <= PACKAGE name IS ^ NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   NEW                                => shift and goto state 186
   default                            => ERROR

   Minimal_Complete_Actions => (NEW)

State 121:
     95.1:generic_instantiation <= PROCEDURE name IS ^ NEW name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   NEW                                => shift and goto state 187
   default                            => ERROR

   Minimal_Complete_Actions => (NEW)

State 122:
    108.0:parameter_profile_opt <= formal_part ^, IS/WITH/SEMICOLON

   IS                                 => reduce 1 tokens to parameter_profile_opt 108.0
   WITH                               => reduce 1 tokens to parameter_profile_opt 108.0
   SEMICOLON                          => reduce 1 tokens to parameter_profile_opt 108.0
   default                            => ERROR

   Minimal_Complete_Actions => (parameter_profile_opt)

State 123:
    114.0:procedure_specification <= PROCEDURE name parameter_profile_opt ^, IS/WITH/SEMICOLON

   IS                                 => reduce 3 tokens to procedure_specification 114.0
   WITH                               => reduce 3 tokens to procedure_specification 114.0
   SEMICOLON                          => reduce 3 tokens to procedure_specification 114.0
   default                            => ERROR

   Minimal_Complete_Actions => (procedure_specification)

State 124:
     89.0:extended_return_object_declaration <= IDENTIFIER COLON ^ subtype_indication, SEMICOLON

   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   name                               goto state 188
   selected_component                 goto state 29
   subtype_indication                 goto state 189

   Minimal_Complete_Actions => (IDENTIFIER)

State 125:
    127.0:simple_return_statement <= RETURN expression_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 3 tokens to simple_return_statement 127.0
   CASE                               => reduce 3 tokens to simple_return_statement 127.0
   DECLARE                            => reduce 3 tokens to simple_return_statement 127.0
   ELSE                               => reduce 3 tokens to simple_return_statement 127.0
   ELSIF                              => reduce 3 tokens to simple_return_statement 127.0
   END                                => reduce 3 tokens to simple_return_statement 127.0
   EXIT                               => reduce 3 tokens to simple_return_statement 127.0
   EXCEPTION                          => reduce 3 tokens to simple_return_statement 127.0
   FOR                                => reduce 3 tokens to simple_return_statement 127.0
   FUNCTION                           => reduce 3 tokens to simple_return_statement 127.0
   IF                                 => reduce 3 tokens to simple_return_statement 127.0
   LOOP                               => reduce 3 tokens to simple_return_statement 127.0
   PACKAGE                            => reduce 3 tokens to simple_return_statement 127.0
   PROCEDURE                          => reduce 3 tokens to simple_return_statement 127.0
   RETURN                             => reduce 3 tokens to simple_return_statement 127.0
   WHEN                               => reduce 3 tokens to simple_return_statement 127.0
   IDENTIFIER                         => reduce 3 tokens to simple_return_statement 127.0
   Wisi_EOI                           => reduce 3 tokens to simple_return_statement 127.0
   default                            => ERROR

   Minimal_Complete_Actions => (simple_return_statement)

State 126:
     90.0:extended_return_statement <= RETURN extended_return_object_declaration SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 3 tokens to extended_return_statement 90.0
   CASE                               => reduce 3 tokens to extended_return_statement 90.0
   DECLARE                            => reduce 3 tokens to extended_return_statement 90.0
   ELSE                               => reduce 3 tokens to extended_return_statement 90.0
   ELSIF                              => reduce 3 tokens to extended_return_statement 90.0
   END                                => reduce 3 tokens to extended_return_statement 90.0
   EXIT                               => reduce 3 tokens to extended_return_statement 90.0
   EXCEPTION                          => reduce 3 tokens to extended_return_statement 90.0
   FOR                                => reduce 3 tokens to extended_return_statement 90.0
   FUNCTION                           => reduce 3 tokens to extended_return_statement 90.0
   IF                                 => reduce 3 tokens to extended_return_statement 90.0
   LOOP                               => reduce 3 tokens to extended_return_statement 90.0
   PACKAGE                            => reduce 3 tokens to extended_return_statement 90.0
   PROCEDURE                          => reduce 3 tokens to extended_return_statement 90.0
   RETURN                             => reduce 3 tokens to extended_return_statement 90.0
   WHEN                               => reduce 3 tokens to extended_return_statement 90.0
   IDENTIFIER                         => reduce 3 tokens to extended_return_statement 90.0
   Wisi_EOI                           => reduce 3 tokens to extended_return_statement 90.0
   default                            => ERROR

   Minimal_Complete_Actions => (extended_return_statement)

State 127:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements ^ END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 190
   default                            => ERROR

   Minimal_Complete_Actions => (END)

State 128:
     96.0:handled_sequence_of_statements <= sequence_of_statements_opt ^ EXCEPTION exception_handler_list_opt, END
     96.1:handled_sequence_of_statements <= sequence_of_statements_opt ^, END

   END                                => reduce 1 tokens to handled_sequence_of_statements 96.1
   EXCEPTION                          => shift and goto state 191
   default                            => ERROR

   Minimal_Complete_Actions => (handled_sequence_of_statements)

State 129:
    106.0:package_body <= PACKAGE ^ BODY name aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    106.1:package_body <= PACKAGE ^ BODY name aspect_specification_opt IS declarative_part_opt END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BODY                               => shift and goto state 65
   default                            => ERROR

   Minimal_Complete_Actions => (BODY)

State 130:
    114.0:procedure_specification <= PROCEDURE ^ name parameter_profile_opt, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   name                               goto state 192
   selected_component                 goto state 29

   Minimal_Complete_Actions => (IDENTIFIER)

State 131:
     93.0:full_type_declaration <= TYPE ^ IDENTIFIER IS type_definition SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   IDENTIFIER                         => shift and goto state 193
   default                            => ERROR

   Minimal_Complete_Actions => (IDENTIFIER)

State 132:
    105.0:object_declaration <= IDENTIFIER ^ COLON subtype_indication COLON_EQUAL expression_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    105.1:object_declaration <= IDENTIFIER ^ COLON subtype_indication SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   COLON                              => shift and goto state 194
   default                            => ERROR

   Minimal_Complete_Actions => (COLON)

State 133:
     74.0:declaration <= body_g ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declaration 74.0
   END                                => reduce 1 tokens to declaration 74.0
   FUNCTION                           => reduce 1 tokens to declaration 74.0
   PACKAGE                            => reduce 1 tokens to declaration 74.0
   PROCEDURE                          => reduce 1 tokens to declaration 74.0
   TYPE                               => reduce 1 tokens to declaration 74.0
   IDENTIFIER                         => reduce 1 tokens to declaration 74.0
   default                            => ERROR

   Minimal_Complete_Actions => (declaration)

State 134:
     65.1:body_g <= body_stub ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to body_g 65.1
   END                                => reduce 1 tokens to body_g 65.1
   FUNCTION                           => reduce 1 tokens to body_g 65.1
   PACKAGE                            => reduce 1 tokens to body_g 65.1
   PROCEDURE                          => reduce 1 tokens to body_g 65.1
   TYPE                               => reduce 1 tokens to body_g 65.1
   IDENTIFIER                         => reduce 1 tokens to body_g 65.1
   default                            => ERROR

   Minimal_Complete_Actions => (body_g)

State 135:
     75.1:declarations <= declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declarations 75.1
   END                                => reduce 1 tokens to declarations 75.1
   FUNCTION                           => reduce 1 tokens to declarations 75.1
   PACKAGE                            => reduce 1 tokens to declarations 75.1
   PROCEDURE                          => reduce 1 tokens to declarations 75.1
   TYPE                               => reduce 1 tokens to declarations 75.1
   IDENTIFIER                         => reduce 1 tokens to declarations 75.1
   default                            => ERROR

   Minimal_Complete_Actions => (declarations)

State 136:
     75.0:declarations <= declarations ^ declaration, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
     76.0:declarative_part_opt <= declarations ^, BEGIN/END

   BEGIN                              => reduce 1 tokens to declarative_part_opt 76.0
   END                                => reduce 1 tokens to declarative_part_opt 76.0
   FUNCTION                           => shift and goto state 4
   PACKAGE                            => shift and goto state 129
   PROCEDURE                          => shift and goto state 130
   TYPE                               => shift and goto state 131
   IDENTIFIER                         => shift and goto state 132
   default                            => ERROR

   body_g                             goto state 133
   body_stub                          goto state 134
   declaration                        goto state 195
   full_type_declaration              goto state 138
   function_specification             goto state 20
   object_declaration                 goto state 139
   package_body                       goto state 140
   procedure_specification            goto state 28
   proper_body                        goto state 141
   subprogram_body                    goto state 142
   subprogram_body_stub               goto state 143
   subprogram_declaration             goto state 144
   subprogram_specification           goto state 145
   type_declaration                   goto state 146

   Minimal_Complete_Actions => (declarative_part_opt)

State 137:
     64.0:block_statement <= block_label_opt DECLARE declarative_part_opt ^ BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 196
   default                            => ERROR

   Minimal_Complete_Actions => (BEGIN)

State 138:
    137.0:type_declaration <= full_type_declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to type_declaration 137.0
   END                                => reduce 1 tokens to type_declaration 137.0
   FUNCTION                           => reduce 1 tokens to type_declaration 137.0
   PACKAGE                            => reduce 1 tokens to type_declaration 137.0
   PROCEDURE                          => reduce 1 tokens to type_declaration 137.0
   TYPE                               => reduce 1 tokens to type_declaration 137.0
   IDENTIFIER                         => reduce 1 tokens to type_declaration 137.0
   default                            => ERROR

   Minimal_Complete_Actions => (type_declaration)

State 139:
     74.1:declaration <= object_declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declaration 74.1
   END                                => reduce 1 tokens to declaration 74.1
   FUNCTION                           => reduce 1 tokens to declaration 74.1
   PACKAGE                            => reduce 1 tokens to declaration 74.1
   PROCEDURE                          => reduce 1 tokens to declaration 74.1
   TYPE                               => reduce 1 tokens to declaration 74.1
   IDENTIFIER                         => reduce 1 tokens to declaration 74.1
   default                            => ERROR

   Minimal_Complete_Actions => (declaration)

State 140:
    115.0:proper_body <= package_body ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to proper_body 115.0
   END                                => reduce 1 tokens to proper_body 115.0
   FUNCTION                           => reduce 1 tokens to proper_body 115.0
   PACKAGE                            => reduce 1 tokens to proper_body 115.0
   PROCEDURE                          => reduce 1 tokens to proper_body 115.0
   TYPE                               => reduce 1 tokens to proper_body 115.0
   IDENTIFIER                         => reduce 1 tokens to proper_body 115.0
   default                            => ERROR

   Minimal_Complete_Actions => (proper_body)

State 141:
     65.0:body_g <= proper_body ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to body_g 65.0
   END                                => reduce 1 tokens to body_g 65.0
   FUNCTION                           => reduce 1 tokens to body_g 65.0
   PACKAGE                            => reduce 1 tokens to body_g 65.0
   PROCEDURE                          => reduce 1 tokens to body_g 65.0
   TYPE                               => reduce 1 tokens to body_g 65.0
   IDENTIFIER                         => reduce 1 tokens to body_g 65.0
   default                            => ERROR

   Minimal_Complete_Actions => (body_g)

State 142:
    115.1:proper_body <= subprogram_body ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to proper_body 115.1
   END                                => reduce 1 tokens to proper_body 115.1
   FUNCTION                           => reduce 1 tokens to proper_body 115.1
   PACKAGE                            => reduce 1 tokens to proper_body 115.1
   PROCEDURE                          => reduce 1 tokens to proper_body 115.1
   TYPE                               => reduce 1 tokens to proper_body 115.1
   IDENTIFIER                         => reduce 1 tokens to proper_body 115.1
   default                            => ERROR

   Minimal_Complete_Actions => (proper_body)

State 143:
     66.0:body_stub <= subprogram_body_stub ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to body_stub 66.0
   END                                => reduce 1 tokens to body_stub 66.0
   FUNCTION                           => reduce 1 tokens to body_stub 66.0
   PACKAGE                            => reduce 1 tokens to body_stub 66.0
   PROCEDURE                          => reduce 1 tokens to body_stub 66.0
   TYPE                               => reduce 1 tokens to body_stub 66.0
   IDENTIFIER                         => reduce 1 tokens to body_stub 66.0
   default                            => ERROR

   Minimal_Complete_Actions => (body_stub)

State 144:
     74.2:declaration <= subprogram_declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declaration 74.2
   END                                => reduce 1 tokens to declaration 74.2
   FUNCTION                           => reduce 1 tokens to declaration 74.2
   PACKAGE                            => reduce 1 tokens to declaration 74.2
   PROCEDURE                          => reduce 1 tokens to declaration 74.2
   TYPE                               => reduce 1 tokens to declaration 74.2
   IDENTIFIER                         => reduce 1 tokens to declaration 74.2
   default                            => ERROR

   Minimal_Complete_Actions => (declaration)

State 145:
    130.0:subprogram_body <= subprogram_specification ^ aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    131.0:subprogram_body_stub <= subprogram_specification ^ IS SEPARATE SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    132.0:subprogram_declaration <= subprogram_specification ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   IS                                 => shift and goto state 197,
                                         reduce 0 tokens to aspect_specification_opt 58.1
   WITH                               => shift and goto state 82
   SEMICOLON                          => shift and goto state 83
   default                            => ERROR

   aspect_specification_opt           goto state 84

   Minimal_Complete_Actions => (IS, SEMICOLON, aspect_specification_opt)

State 146:
     74.3:declaration <= type_declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declaration 74.3
   END                                => reduce 1 tokens to declaration 74.3
   FUNCTION                           => reduce 1 tokens to declaration 74.3
   PACKAGE                            => reduce 1 tokens to declaration 74.3
   PROCEDURE                          => reduce 1 tokens to declaration 74.3
   TYPE                               => reduce 1 tokens to declaration 74.3
   IDENTIFIER                         => reduce 1 tokens to declaration 74.3
   default                            => ERROR

   Minimal_Complete_Actions => (declaration)

State 147:
    101.0:loop_statement <= iteration_scheme LOOP sequence_of_statements_opt ^ END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 198
   default                            => ERROR

   Minimal_Complete_Actions => (END)

State 148:
     60.0:association_opt <= IDENTIFIER ^ EQUAL_GREATER expression_opt, IS/RIGHT_PAREN/COMMA
    103.2:name <= IDENTIFIER ^, AND/IS/LEFT_PAREN/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to name 103.2
   IS                                 => reduce 1 tokens to name 103.2
   LEFT_PAREN                         => reduce 1 tokens to name 103.2
   OR                                 => reduce 1 tokens to name 103.2
   RANGE                              => reduce 1 tokens to name 103.2
   RIGHT_PAREN                        => reduce 1 tokens to name 103.2
   XOR                                => reduce 1 tokens to name 103.2
   AMPERSAND                          => reduce 1 tokens to name 103.2
   COMMA                              => reduce 1 tokens to name 103.2
   DOT                                => reduce 1 tokens to name 103.2
   DOT_DOT                            => reduce 1 tokens to name 103.2
   EQUAL                              => reduce 1 tokens to name 103.2
   EQUAL_GREATER                      => shift and goto state 199
   GREATER                            => reduce 1 tokens to name 103.2
   GREATER_EQUAL                      => reduce 1 tokens to name 103.2
   LESS                               => reduce 1 tokens to name 103.2
   LESS_EQUAL                         => reduce 1 tokens to name 103.2
   MINUS                              => reduce 1 tokens to name 103.2
   PLUS                               => reduce 1 tokens to name 103.2
   SLASH                              => reduce 1 tokens to name 103.2
   SLASH_EQUAL                        => reduce 1 tokens to name 103.2
   STAR                               => reduce 1 tokens to name 103.2
   default                            => ERROR

   Minimal_Complete_Actions => (name)

State 149:
     61.1:association_list <= association_opt ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 1 tokens to association_list 61.1
   RIGHT_PAREN                        => reduce 1 tokens to association_list 61.1
   COMMA                              => reduce 1 tokens to association_list 61.1
   default                            => ERROR

   Minimal_Complete_Actions => (association_list)

State 150:
     57.0:actual_parameter_part <= LEFT_PAREN association_list ^ RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
     61.0:association_list <= association_list ^ COMMA association_opt, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => shift and goto state 200
   COMMA                              => shift and goto state 201
   default                            => ERROR

   Minimal_Complete_Actions => (RIGHT_PAREN)

State 151:
     60.1:association_opt <= expression ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 1 tokens to association_opt 60.1
   RIGHT_PAREN                        => reduce 1 tokens to association_opt 60.1
   COMMA                              => reduce 1 tokens to association_opt 60.1
   default                            => ERROR

   Minimal_Complete_Actions => (association_opt)

State 152:
    117.1:range_list <= range_g ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 1 tokens to range_list 117.1
   COMMA                              => reduce 1 tokens to range_list 117.1
   default                            => ERROR

   Minimal_Complete_Actions => (range_list)

State 153:
    103.0:name <= name LEFT_PAREN range_list ^ RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    117.0:range_list <= range_list ^ COMMA range_g, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => shift and goto state 202
   COMMA                              => shift and goto state 203
   default                            => ERROR

   Minimal_Complete_Actions => (RIGHT_PAREN)

State 154:
    116.0:range_g <= simple_expression ^ DOT_DOT simple_expression, RIGHT_PAREN/COMMA
    121.0:relation <= simple_expression ^ relational_operator simple_expression, AND/OR/RIGHT_PAREN/XOR/COMMA
    121.1:relation <= simple_expression ^, AND/OR/RIGHT_PAREN/XOR/COMMA

   AND                                => reduce 1 tokens to relation 121.1
   OR                                 => reduce 1 tokens to relation 121.1
   RIGHT_PAREN                        => reduce 1 tokens to relation 121.1
   XOR                                => reduce 1 tokens to relation 121.1
   COMMA                              => reduce 1 tokens to relation 121.1
   DOT_DOT                            => shift and goto state 204
   EQUAL                              => shift and goto state 94
   GREATER                            => shift and goto state 95
   GREATER_EQUAL                      => shift and goto state 96
   LESS                               => shift and goto state 97
   LESS_EQUAL                         => shift and goto state 98
   SLASH_EQUAL                        => shift and goto state 99
   default                            => ERROR

   relational_operator                goto state 100

   Minimal_Complete_Actions => (DOT_DOT, relation)

State 155:
     59.0:assignment_statement <= name COLON_EQUAL expression_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 205
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 156:
    123.0:selected_component <= name DOT IDENTIFIER ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 3 tokens to selected_component 123.0
   IS                                 => reduce 3 tokens to selected_component 123.0
   LEFT_PAREN                         => reduce 3 tokens to selected_component 123.0
   LOOP                               => reduce 3 tokens to selected_component 123.0
   OR                                 => reduce 3 tokens to selected_component 123.0
   RANGE                              => reduce 3 tokens to selected_component 123.0
   RETURN                             => reduce 3 tokens to selected_component 123.0
   RIGHT_PAREN                        => reduce 3 tokens to selected_component 123.0
   THEN                               => reduce 3 tokens to selected_component 123.0
   WITH                               => reduce 3 tokens to selected_component 123.0
   XOR                                => reduce 3 tokens to selected_component 123.0
   AMPERSAND                          => reduce 3 tokens to selected_component 123.0
   COLON_EQUAL                        => reduce 3 tokens to selected_component 123.0
   COMMA                              => reduce 3 tokens to selected_component 123.0
   DOT                                => reduce 3 tokens to selected_component 123.0
   DOT_DOT                            => reduce 3 tokens to selected_component 123.0
   EQUAL                              => reduce 3 tokens to selected_component 123.0
   EQUAL_GREATER                      => reduce 3 tokens to selected_component 123.0
   GREATER                            => reduce 3 tokens to selected_component 123.0
   GREATER_EQUAL                      => reduce 3 tokens to selected_component 123.0
   LESS                               => reduce 3 tokens to selected_component 123.0
   LESS_EQUAL                         => reduce 3 tokens to selected_component 123.0
   MINUS                              => reduce 3 tokens to selected_component 123.0
   PLUS                               => reduce 3 tokens to selected_component 123.0
   SEMICOLON                          => reduce 3 tokens to selected_component 123.0
   SLASH                              => reduce 3 tokens to selected_component 123.0
   SLASH_EQUAL                        => reduce 3 tokens to selected_component 123.0
   STAR                               => reduce 3 tokens to selected_component 123.0
   default                            => ERROR

   Minimal_Complete_Actions => (selected_component)

State 157:
     58.0:aspect_specification_opt <= WITH association_list ^, IS
     61.0:association_list <= association_list ^ COMMA association_opt, IS/COMMA

   IS                                 => reduce 2 tokens to aspect_specification_opt 58.0
   COMMA                              => shift and goto state 201
   default                            => ERROR

   Minimal_Complete_Actions => (aspect_specification_opt)

State 158:
    130.0:subprogram_body <= subprogram_specification aspect_specification_opt IS ^ declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to declarative_part_opt 76.1
   FUNCTION                           => shift and goto state 4
   PACKAGE                            => shift and goto state 129
   PROCEDURE                          => shift and goto state 130
   TYPE                               => shift and goto state 131
   IDENTIFIER                         => shift and goto state 132
   default                            => ERROR

   body_g                             goto state 133
   body_stub                          goto state 134
   declaration                        goto state 135
   declarations                       goto state 136
   declarative_part_opt               goto state 206
   full_type_declaration              goto state 138
   function_specification             goto state 20
   object_declaration                 goto state 139
   package_body                       goto state 140
   procedure_specification            goto state 28
   proper_body                        goto state 141
   subprogram_body                    goto state 142
   subprogram_body_stub               goto state 143
   subprogram_declaration             goto state 144
   subprogram_specification           goto state 145
   type_declaration                   goto state 146

   Minimal_Complete_Actions => (declarative_part_opt)

State 159:
    111.0:paren_expression <= LEFT_PAREN expression_opt RIGHT_PAREN ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 3 tokens to paren_expression 111.0
   IS                                 => reduce 3 tokens to paren_expression 111.0
   LOOP                               => reduce 3 tokens to paren_expression 111.0
   OR                                 => reduce 3 tokens to paren_expression 111.0
   RIGHT_PAREN                        => reduce 3 tokens to paren_expression 111.0
   THEN                               => reduce 3 tokens to paren_expression 111.0
   XOR                                => reduce 3 tokens to paren_expression 111.0
   AMPERSAND                          => reduce 3 tokens to paren_expression 111.0
   COLON_EQUAL                        => reduce 3 tokens to paren_expression 111.0
   COMMA                              => reduce 3 tokens to paren_expression 111.0
   DOT_DOT                            => reduce 3 tokens to paren_expression 111.0
   EQUAL                              => reduce 3 tokens to paren_expression 111.0
   GREATER                            => reduce 3 tokens to paren_expression 111.0
   GREATER_EQUAL                      => reduce 3 tokens to paren_expression 111.0
   LESS                               => reduce 3 tokens to paren_expression 111.0
   LESS_EQUAL                         => reduce 3 tokens to paren_expression 111.0
   MINUS                              => reduce 3 tokens to paren_expression 111.0
   PLUS                               => reduce 3 tokens to paren_expression 111.0
   SEMICOLON                          => reduce 3 tokens to paren_expression 111.0
   SLASH                              => reduce 3 tokens to paren_expression 111.0
   SLASH_EQUAL                        => reduce 3 tokens to paren_expression 111.0
   STAR                               => reduce 3 tokens to paren_expression 111.0
   default                            => ERROR

   Minimal_Complete_Actions => (paren_expression)

State 160:
     68.0:case_statement_alternative <= WHEN ^ NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements_opt, END/WHEN

   NUMERIC_LITERAL                    => shift and goto state 207
   default                            => ERROR

   Minimal_Complete_Actions => (NUMERIC_LITERAL)

State 161:
     69.1:case_statement_alternative_list <= case_statement_alternative ^, END/WHEN

   END                                => reduce 1 tokens to case_statement_alternative_list 69.1
   WHEN                               => reduce 1 tokens to case_statement_alternative_list 69.1
   default                            => ERROR

   Minimal_Complete_Actions => (case_statement_alternative_list)

State 162:
     67.0:case_statement <= CASE expression_opt IS case_statement_alternative_list ^ END CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     69.0:case_statement_alternative_list <= case_statement_alternative_list ^ case_statement_alternative, END/WHEN

   END                                => shift and goto state 208
   WHEN                               => shift and goto state 160
   default                            => ERROR

   case_statement_alternative         goto state 209

   Minimal_Complete_Actions => (END)

State 163:
    118.0:relation_and_list <= relation_and_list AND relation ^, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   AND                                => reduce 3 tokens to relation_and_list 118.0
   IS                                 => reduce 3 tokens to relation_and_list 118.0
   RIGHT_PAREN                        => reduce 3 tokens to relation_and_list 118.0
   THEN                               => reduce 3 tokens to relation_and_list 118.0
   COMMA                              => reduce 3 tokens to relation_and_list 118.0
   SEMICOLON                          => reduce 3 tokens to relation_and_list 118.0
   default                            => ERROR

   Minimal_Complete_Actions => (relation_and_list)

State 164:
    119.0:relation_or_list <= relation_or_list OR relation ^, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   IS                                 => reduce 3 tokens to relation_or_list 119.0
   OR                                 => reduce 3 tokens to relation_or_list 119.0
   RIGHT_PAREN                        => reduce 3 tokens to relation_or_list 119.0
   THEN                               => reduce 3 tokens to relation_or_list 119.0
   COMMA                              => reduce 3 tokens to relation_or_list 119.0
   SEMICOLON                          => reduce 3 tokens to relation_or_list 119.0
   default                            => ERROR

   Minimal_Complete_Actions => (relation_or_list)

State 165:
    120.0:relation_xor_list <= relation_xor_list XOR relation ^, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   IS                                 => reduce 3 tokens to relation_xor_list 120.0
   RIGHT_PAREN                        => reduce 3 tokens to relation_xor_list 120.0
   THEN                               => reduce 3 tokens to relation_xor_list 120.0
   XOR                                => reduce 3 tokens to relation_xor_list 120.0
   COMMA                              => reduce 3 tokens to relation_xor_list 120.0
   SEMICOLON                          => reduce 3 tokens to relation_xor_list 120.0
   default                            => ERROR

   Minimal_Complete_Actions => (relation_xor_list)

State 166:
    118.1:relation_and_list <= relation AND relation ^, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   AND                                => reduce 3 tokens to relation_and_list 118.1
   IS                                 => reduce 3 tokens to relation_and_list 118.1
   RIGHT_PAREN                        => reduce 3 tokens to relation_and_list 118.1
   THEN                               => reduce 3 tokens to relation_and_list 118.1
   COMMA                              => reduce 3 tokens to relation_and_list 118.1
   SEMICOLON                          => reduce 3 tokens to relation_and_list 118.1
   default                            => ERROR

   Minimal_Complete_Actions => (relation_and_list)

State 167:
    119.1:relation_or_list <= relation OR relation ^, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   IS                                 => reduce 3 tokens to relation_or_list 119.1
   OR                                 => reduce 3 tokens to relation_or_list 119.1
   RIGHT_PAREN                        => reduce 3 tokens to relation_or_list 119.1
   THEN                               => reduce 3 tokens to relation_or_list 119.1
   COMMA                              => reduce 3 tokens to relation_or_list 119.1
   SEMICOLON                          => reduce 3 tokens to relation_or_list 119.1
   default                            => ERROR

   Minimal_Complete_Actions => (relation_or_list)

State 168:
    120.1:relation_xor_list <= relation XOR relation ^, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   IS                                 => reduce 3 tokens to relation_xor_list 120.1
   RIGHT_PAREN                        => reduce 3 tokens to relation_xor_list 120.1
   THEN                               => reduce 3 tokens to relation_xor_list 120.1
   XOR                                => reduce 3 tokens to relation_xor_list 120.1
   COMMA                              => reduce 3 tokens to relation_xor_list 120.1
   SEMICOLON                          => reduce 3 tokens to relation_xor_list 120.1
   default                            => ERROR

   Minimal_Complete_Actions => (relation_xor_list)

State 169:
    121.0:relation <= simple_expression relational_operator simple_expression ^, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   AND                                => reduce 3 tokens to relation 121.0
   IS                                 => reduce 3 tokens to relation 121.0
   OR                                 => reduce 3 tokens to relation 121.0
   RIGHT_PAREN                        => reduce 3 tokens to relation 121.0
   THEN                               => reduce 3 tokens to relation 121.0
   XOR                                => reduce 3 tokens to relation 121.0
   COMMA                              => reduce 3 tokens to relation 121.0
   SEMICOLON                          => reduce 3 tokens to relation 121.0
   default                            => ERROR

   Minimal_Complete_Actions => (relation)

State 170:
    135.0:term <= term multiplying_operator factor ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 3 tokens to term 135.0
   IS                                 => reduce 3 tokens to term 135.0
   LOOP                               => reduce 3 tokens to term 135.0
   OR                                 => reduce 3 tokens to term 135.0
   RIGHT_PAREN                        => reduce 3 tokens to term 135.0
   THEN                               => reduce 3 tokens to term 135.0
   XOR                                => reduce 3 tokens to term 135.0
   AMPERSAND                          => reduce 3 tokens to term 135.0
   COLON_EQUAL                        => reduce 3 tokens to term 135.0
   COMMA                              => reduce 3 tokens to term 135.0
   DOT_DOT                            => reduce 3 tokens to term 135.0
   EQUAL                              => reduce 3 tokens to term 135.0
   GREATER                            => reduce 3 tokens to term 135.0
   GREATER_EQUAL                      => reduce 3 tokens to term 135.0
   LESS                               => reduce 3 tokens to term 135.0
   LESS_EQUAL                         => reduce 3 tokens to term 135.0
   MINUS                              => reduce 3 tokens to term 135.0
   PLUS                               => reduce 3 tokens to term 135.0
   SEMICOLON                          => reduce 3 tokens to term 135.0
   SLASH                              => reduce 3 tokens to term 135.0
   SLASH_EQUAL                        => reduce 3 tokens to term 135.0
   STAR                               => reduce 3 tokens to term 135.0
   default                            => ERROR

   Minimal_Complete_Actions => (term)

State 171:
    135.0:term <= term ^ multiplying_operator factor, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    136.0:term_list <= term_list binary_adding_operator term ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 3 tokens to term_list 136.0
   IS                                 => reduce 3 tokens to term_list 136.0
   LOOP                               => reduce 3 tokens to term_list 136.0
   OR                                 => reduce 3 tokens to term_list 136.0
   RIGHT_PAREN                        => reduce 3 tokens to term_list 136.0
   THEN                               => reduce 3 tokens to term_list 136.0
   XOR                                => reduce 3 tokens to term_list 136.0
   AMPERSAND                          => reduce 3 tokens to term_list 136.0
   COLON_EQUAL                        => reduce 3 tokens to term_list 136.0
   COMMA                              => reduce 3 tokens to term_list 136.0
   DOT_DOT                            => reduce 3 tokens to term_list 136.0
   EQUAL                              => reduce 3 tokens to term_list 136.0
   GREATER                            => reduce 3 tokens to term_list 136.0
   GREATER_EQUAL                      => reduce 3 tokens to term_list 136.0
   LESS                               => reduce 3 tokens to term_list 136.0
   LESS_EQUAL                         => reduce 3 tokens to term_list 136.0
   MINUS                              => reduce 3 tokens to term_list 136.0
   PLUS                               => reduce 3 tokens to term_list 136.0
   SEMICOLON                          => reduce 3 tokens to term_list 136.0
   SLASH                              => shift and goto state 101
   SLASH_EQUAL                        => reduce 3 tokens to term_list 136.0
   STAR                               => shift and goto state 102
   default                            => ERROR

   multiplying_operator               goto state 103

   Minimal_Complete_Actions => (term_list)

State 172:
     86.0:exit_statement <= EXIT identifier_opt WHEN expression_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 210
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 173:
    100.0:iteration_scheme <= FOR IDENTIFIER IN discrete_subtype_definition ^, LOOP

   LOOP                               => reduce 4 tokens to iteration_scheme 100.0
   default                            => ERROR

   Minimal_Complete_Actions => (iteration_scheme)

State 174:
    103.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    103.1:name <= name ^ actual_parameter_part, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    112.2:primary <= name ^, AND/OR/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    123.0:selected_component <= name ^ DOT IDENTIFIER, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    134.0:subtype_indication <= name ^ constraint, LOOP/RIGHT_PAREN
    134.1:subtype_indication <= name ^, LOOP/RIGHT_PAREN

   AND                                => reduce 1 tokens to primary 112.2
   LEFT_PAREN                         => shift and goto state 211
   LOOP                               => reduce 1 tokens to subtype_indication 134.1
   OR                                 => reduce 1 tokens to primary 112.2
   RANGE                              => shift and goto state 212
   RIGHT_PAREN                        => reduce 1 tokens to primary 112.2,
                                         reduce 1 tokens to subtype_indication 134.1
   XOR                                => reduce 1 tokens to primary 112.2
   AMPERSAND                          => reduce 1 tokens to primary 112.2
   COMMA                              => reduce 1 tokens to primary 112.2
   DOT                                => shift and goto state 79
   DOT_DOT                            => reduce 1 tokens to primary 112.2
   EQUAL                              => reduce 1 tokens to primary 112.2
   GREATER                            => reduce 1 tokens to primary 112.2
   GREATER_EQUAL                      => reduce 1 tokens to primary 112.2
   LESS                               => reduce 1 tokens to primary 112.2
   LESS_EQUAL                         => reduce 1 tokens to primary 112.2
   MINUS                              => reduce 1 tokens to primary 112.2
   PLUS                               => reduce 1 tokens to primary 112.2
   SLASH                              => reduce 1 tokens to primary 112.2
   SLASH_EQUAL                        => reduce 1 tokens to primary 112.2
   STAR                               => reduce 1 tokens to primary 112.2
   default                            => ERROR

   actual_parameter_part              goto state 81
   constraint                         goto state 213
   index_constraint                   goto state 214

   Minimal_Complete_Actions => (DOT, primary, subtype_indication)

State 175:
     77.1:discrete_subtype_definition <= range_g ^, LOOP

   LOOP                               => reduce 1 tokens to discrete_subtype_definition 77.1
   default                            => ERROR

   Minimal_Complete_Actions => (discrete_subtype_definition)

State 176:
    116.0:range_g <= simple_expression ^ DOT_DOT simple_expression, LOOP/RIGHT_PAREN/COLON_EQUAL/COMMA/SEMICOLON

   DOT_DOT                            => shift and goto state 204
   default                            => ERROR

   Minimal_Complete_Actions => (DOT_DOT)

State 177:
     77.0:discrete_subtype_definition <= subtype_indication ^, LOOP/RIGHT_PAREN

   LOOP                               => reduce 1 tokens to discrete_subtype_definition 77.0
   RIGHT_PAREN                        => reduce 1 tokens to discrete_subtype_definition 77.0
   default                            => ERROR

   Minimal_Complete_Actions => (discrete_subtype_definition)

State 178:
     60.0:association_opt <= IDENTIFIER ^ EQUAL_GREATER expression_opt, RIGHT_PAREN/COMMA
    103.2:name <= IDENTIFIER ^, AND/LEFT_PAREN/OR/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    109.0:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER COLON_EQUAL expression_opt, RIGHT_PAREN/SEMICOLON
    109.1:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER, RIGHT_PAREN/SEMICOLON

   AND                                => reduce 1 tokens to name 103.2
   LEFT_PAREN                         => reduce 1 tokens to name 103.2
   OR                                 => reduce 1 tokens to name 103.2
   RIGHT_PAREN                        => reduce 1 tokens to name 103.2
   XOR                                => reduce 1 tokens to name 103.2
   AMPERSAND                          => reduce 1 tokens to name 103.2
   COLON                              => shift and goto state 215
   COMMA                              => reduce 1 tokens to name 103.2
   DOT                                => reduce 1 tokens to name 103.2
   DOT_DOT                            => reduce 1 tokens to name 103.2
   EQUAL                              => reduce 1 tokens to name 103.2
   EQUAL_GREATER                      => shift and goto state 199
   GREATER                            => reduce 1 tokens to name 103.2
   GREATER_EQUAL                      => reduce 1 tokens to name 103.2
   LESS                               => reduce 1 tokens to name 103.2
   LESS_EQUAL                         => reduce 1 tokens to name 103.2
   MINUS                              => reduce 1 tokens to name 103.2
   PLUS                               => reduce 1 tokens to name 103.2
   SLASH                              => reduce 1 tokens to name 103.2
   SLASH_EQUAL                        => reduce 1 tokens to name 103.2
   STAR                               => reduce 1 tokens to name 103.2
   default                            => ERROR

   Minimal_Complete_Actions => (COLON, name)

State 179:
    110.1:parameter_specification_list <= parameter_specification ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 1 tokens to parameter_specification_list 110.1
   SEMICOLON                          => reduce 1 tokens to parameter_specification_list 110.1
   default                            => ERROR

   Minimal_Complete_Actions => (parameter_specification_list)

State 180:
     92.0:formal_part <= LEFT_PAREN parameter_specification_list ^ RIGHT_PAREN, IS/RETURN/WITH/SEMICOLON
    110.0:parameter_specification_list <= parameter_specification_list ^ SEMICOLON parameter_specification, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => shift and goto state 216
   SEMICOLON                          => shift and goto state 217
   default                            => ERROR

   Minimal_Complete_Actions => (RIGHT_PAREN)

State 181:
    107.1:parameter_and_result_profile <= RETURN IDENTIFIER ^, IS/WITH/SEMICOLON

   IS                                 => reduce 2 tokens to parameter_and_result_profile 107.1
   WITH                               => reduce 2 tokens to parameter_and_result_profile 107.1
   SEMICOLON                          => reduce 2 tokens to parameter_and_result_profile 107.1
   default                            => ERROR

   Minimal_Complete_Actions => (parameter_and_result_profile)

State 182:
    107.0:parameter_and_result_profile <= formal_part RETURN ^ IDENTIFIER, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 218
   default                            => ERROR

   Minimal_Complete_Actions => (IDENTIFIER)

State 183:
     98.0:if_statement <= IF expression_opt THEN sequence_of_statements_opt ^ elsif_statement_list ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     98.1:if_statement <= IF expression_opt THEN sequence_of_statements_opt ^ ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     98.2:if_statement <= IF expression_opt THEN sequence_of_statements_opt ^ elsif_statement_list END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     98.3:if_statement <= IF expression_opt THEN sequence_of_statements_opt ^ END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   ELSE                               => shift and goto state 219
   ELSIF                              => shift and goto state 220
   END                                => shift and goto state 221
   default                            => ERROR

   elsif_statement_item               goto state 222
   elsif_statement_list               goto state 223

   Minimal_Complete_Actions => (ELSE, ELSIF, END)

State 184:
    101.1:loop_statement <= LOOP sequence_of_statements_opt END LOOP ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to identifier_opt 97.1
   IDENTIFIER                         => shift and goto state 57
   default                            => ERROR

   identifier_opt                     goto state 224

   Minimal_Complete_Actions => (identifier_opt)

State 185:
    106.0:package_body <= PACKAGE BODY name aspect_specification_opt ^ IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
    106.1:package_body <= PACKAGE BODY name aspect_specification_opt ^ IS declarative_part_opt END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   IS                                 => shift and goto state 225
   default                            => ERROR

   Minimal_Complete_Actions => (IS)

State 186:
     95.0:generic_instantiation <= PACKAGE name IS NEW ^ name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   name                               goto state 226
   selected_component                 goto state 29

   Minimal_Complete_Actions => (IDENTIFIER)

State 187:
     95.1:generic_instantiation <= PROCEDURE name IS NEW ^ name SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   name                               goto state 227
   selected_component                 goto state 29

   Minimal_Complete_Actions => (IDENTIFIER)

State 188:
    103.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/RANGE/COLON_EQUAL/DOT/SEMICOLON
    103.1:name <= name ^ actual_parameter_part, LEFT_PAREN/RANGE/COLON_EQUAL/DOT/SEMICOLON
    123.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/RANGE/COLON_EQUAL/DOT/SEMICOLON
    134.0:subtype_indication <= name ^ constraint, COLON_EQUAL/SEMICOLON
    134.1:subtype_indication <= name ^, COLON_EQUAL/SEMICOLON

   LEFT_PAREN                         => shift and goto state 211
   RANGE                              => shift and goto state 212
   COLON_EQUAL                        => reduce 1 tokens to subtype_indication 134.1
   DOT                                => shift and goto state 79
   SEMICOLON                          => reduce 1 tokens to subtype_indication 134.1
   default                            => ERROR

   actual_parameter_part              goto state 81
   constraint                         goto state 213
   index_constraint                   goto state 214

   Minimal_Complete_Actions => (DOT, subtype_indication)

State 189:
     89.0:extended_return_object_declaration <= IDENTIFIER COLON subtype_indication ^, SEMICOLON

   SEMICOLON                          => reduce 3 tokens to extended_return_object_declaration 89.0
   default                            => ERROR

   Minimal_Complete_Actions => (extended_return_object_declaration)

State 190:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to identifier_opt 97.1
   IDENTIFIER                         => shift and goto state 57
   default                            => ERROR

   identifier_opt                     goto state 228

   Minimal_Complete_Actions => (identifier_opt)

State 191:
     96.0:handled_sequence_of_statements <= sequence_of_statements_opt EXCEPTION ^ exception_handler_list_opt, END

   END                                => reduce 0 tokens to exception_handler_list_opt 85.1
   WHEN                               => shift and goto state 229
   default                            => ERROR

   exception_handler                  goto state 230
   exception_handler_list             goto state 231
   exception_handler_list_opt         goto state 232

   Minimal_Complete_Actions => (exception_handler_list_opt)

State 192:
    103.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, IS/LEFT_PAREN/WITH/DOT/SEMICOLON
    103.1:name <= name ^ actual_parameter_part, IS/LEFT_PAREN/WITH/DOT/SEMICOLON
    114.0:procedure_specification <= PROCEDURE name ^ parameter_profile_opt, IS/WITH/SEMICOLON
    123.0:selected_component <= name ^ DOT IDENTIFIER, IS/LEFT_PAREN/WITH/DOT/SEMICOLON

   IS                                 => reduce 0 tokens to parameter_profile_opt 108.1
   LEFT_PAREN                         => shift and goto state 112
   WITH                               => reduce 0 tokens to parameter_profile_opt 108.1
   DOT                                => shift and goto state 79
   SEMICOLON                          => reduce 0 tokens to parameter_profile_opt 108.1
   default                            => ERROR

   actual_parameter_part              goto state 81
   formal_part                        goto state 122
   parameter_profile_opt              goto state 123

   Minimal_Complete_Actions => (DOT, parameter_profile_opt)

State 193:
     93.0:full_type_declaration <= TYPE IDENTIFIER ^ IS type_definition SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   IS                                 => shift and goto state 233
   default                            => ERROR

   Minimal_Complete_Actions => (IS)

State 194:
    105.0:object_declaration <= IDENTIFIER COLON ^ subtype_indication COLON_EQUAL expression_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    105.1:object_declaration <= IDENTIFIER COLON ^ subtype_indication SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   name                               goto state 188
   selected_component                 goto state 29
   subtype_indication                 goto state 234

   Minimal_Complete_Actions => (IDENTIFIER)

State 195:
     75.0:declarations <= declarations declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 2 tokens to declarations 75.0
   END                                => reduce 2 tokens to declarations 75.0
   FUNCTION                           => reduce 2 tokens to declarations 75.0
   PACKAGE                            => reduce 2 tokens to declarations 75.0
   PROCEDURE                          => reduce 2 tokens to declarations 75.0
   TYPE                               => reduce 2 tokens to declarations 75.0
   IDENTIFIER                         => reduce 2 tokens to declarations 75.0
   default                            => ERROR

   Minimal_Complete_Actions => (declarations)

State 196:
     64.0:block_statement <= block_label_opt DECLARE declarative_part_opt BEGIN ^ handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 125.1
   EXIT                               => shift and goto state 2
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements_opt 125.1
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   handled_sequence_of_statements     goto state 235
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 62
   sequence_of_statements_opt         goto state 128
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 64

   Minimal_Complete_Actions => (handled_sequence_of_statements)

State 197:
    131.0:subprogram_body_stub <= subprogram_specification IS ^ SEPARATE SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   SEPARATE                           => shift and goto state 236
   default                            => ERROR

   Minimal_Complete_Actions => (SEPARATE)

State 198:
    101.0:loop_statement <= iteration_scheme LOOP sequence_of_statements_opt END ^ LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   LOOP                               => shift and goto state 237
   default                            => ERROR

   Minimal_Complete_Actions => (LOOP)

State 199:
     60.0:association_opt <= IDENTIFIER EQUAL_GREATER ^ expression_opt, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 0 tokens to expression_opt 88.1
   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   RIGHT_PAREN                        => reduce 0 tokens to expression_opt 88.1
   COMMA                              => reduce 0 tokens to expression_opt 88.1
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   expression                         goto state 43
   expression_opt                     goto state 238
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (expression_opt)

State 200:
     57.0:actual_parameter_part <= LEFT_PAREN association_list RIGHT_PAREN ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 3 tokens to actual_parameter_part 57.0
   IS                                 => reduce 3 tokens to actual_parameter_part 57.0
   LEFT_PAREN                         => reduce 3 tokens to actual_parameter_part 57.0
   LOOP                               => reduce 3 tokens to actual_parameter_part 57.0
   OR                                 => reduce 3 tokens to actual_parameter_part 57.0
   RANGE                              => reduce 3 tokens to actual_parameter_part 57.0
   RETURN                             => reduce 3 tokens to actual_parameter_part 57.0
   RIGHT_PAREN                        => reduce 3 tokens to actual_parameter_part 57.0
   THEN                               => reduce 3 tokens to actual_parameter_part 57.0
   WITH                               => reduce 3 tokens to actual_parameter_part 57.0
   XOR                                => reduce 3 tokens to actual_parameter_part 57.0
   AMPERSAND                          => reduce 3 tokens to actual_parameter_part 57.0
   COLON_EQUAL                        => reduce 3 tokens to actual_parameter_part 57.0
   COMMA                              => reduce 3 tokens to actual_parameter_part 57.0
   DOT                                => reduce 3 tokens to actual_parameter_part 57.0
   DOT_DOT                            => reduce 3 tokens to actual_parameter_part 57.0
   EQUAL                              => reduce 3 tokens to actual_parameter_part 57.0
   EQUAL_GREATER                      => reduce 3 tokens to actual_parameter_part 57.0
   GREATER                            => reduce 3 tokens to actual_parameter_part 57.0
   GREATER_EQUAL                      => reduce 3 tokens to actual_parameter_part 57.0
   LESS                               => reduce 3 tokens to actual_parameter_part 57.0
   LESS_EQUAL                         => reduce 3 tokens to actual_parameter_part 57.0
   MINUS                              => reduce 3 tokens to actual_parameter_part 57.0
   PLUS                               => reduce 3 tokens to actual_parameter_part 57.0
   SEMICOLON                          => reduce 3 tokens to actual_parameter_part 57.0
   SLASH                              => reduce 3 tokens to actual_parameter_part 57.0
   SLASH_EQUAL                        => reduce 3 tokens to actual_parameter_part 57.0
   STAR                               => reduce 3 tokens to actual_parameter_part 57.0
   default                            => ERROR

   Minimal_Complete_Actions => (actual_parameter_part)

State 201:
     61.0:association_list <= association_list COMMA ^ association_opt, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 0 tokens to association_opt 60.2
   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   RIGHT_PAREN                        => reduce 0 tokens to association_opt 60.2
   COMMA                              => reduce 0 tokens to association_opt 60.2
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 148
   default                            => ERROR

   association_opt                    goto state 239
   expression                         goto state 151
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (association_opt)

State 202:
    103.0:name <= name LEFT_PAREN range_list RIGHT_PAREN ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 4 tokens to name 103.0
   IS                                 => reduce 4 tokens to name 103.0
   LEFT_PAREN                         => reduce 4 tokens to name 103.0
   LOOP                               => reduce 4 tokens to name 103.0
   OR                                 => reduce 4 tokens to name 103.0
   RANGE                              => reduce 4 tokens to name 103.0
   RETURN                             => reduce 4 tokens to name 103.0
   RIGHT_PAREN                        => reduce 4 tokens to name 103.0
   THEN                               => reduce 4 tokens to name 103.0
   WITH                               => reduce 4 tokens to name 103.0
   XOR                                => reduce 4 tokens to name 103.0
   AMPERSAND                          => reduce 4 tokens to name 103.0
   COLON_EQUAL                        => reduce 4 tokens to name 103.0
   COMMA                              => reduce 4 tokens to name 103.0
   DOT                                => reduce 4 tokens to name 103.0
   DOT_DOT                            => reduce 4 tokens to name 103.0
   EQUAL                              => reduce 4 tokens to name 103.0
   EQUAL_GREATER                      => reduce 4 tokens to name 103.0
   GREATER                            => reduce 4 tokens to name 103.0
   GREATER_EQUAL                      => reduce 4 tokens to name 103.0
   LESS                               => reduce 4 tokens to name 103.0
   LESS_EQUAL                         => reduce 4 tokens to name 103.0
   MINUS                              => reduce 4 tokens to name 103.0
   PLUS                               => reduce 4 tokens to name 103.0
   SEMICOLON                          => reduce 4 tokens to name 103.0
   SLASH                              => reduce 4 tokens to name 103.0
   SLASH_EQUAL                        => reduce 4 tokens to name 103.0
   STAR                               => reduce 4 tokens to name 103.0
   default                            => ERROR

   Minimal_Complete_Actions => (name)

State 203:
    117.0:range_list <= range_list COMMA ^ range_g, RIGHT_PAREN/COMMA

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 240
   selected_component                 goto state 29
   simple_expression                  goto state 176
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (IDENTIFIER)

State 204:
    116.0:range_g <= simple_expression DOT_DOT ^ simple_expression, LOOP/RIGHT_PAREN/COLON_EQUAL/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   selected_component                 goto state 29
   simple_expression                  goto state 241
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (IDENTIFIER)

State 205:
     59.0:assignment_statement <= name COLON_EQUAL expression_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 4 tokens to assignment_statement 59.0
   CASE                               => reduce 4 tokens to assignment_statement 59.0
   DECLARE                            => reduce 4 tokens to assignment_statement 59.0
   ELSE                               => reduce 4 tokens to assignment_statement 59.0
   ELSIF                              => reduce 4 tokens to assignment_statement 59.0
   END                                => reduce 4 tokens to assignment_statement 59.0
   EXIT                               => reduce 4 tokens to assignment_statement 59.0
   EXCEPTION                          => reduce 4 tokens to assignment_statement 59.0
   FOR                                => reduce 4 tokens to assignment_statement 59.0
   FUNCTION                           => reduce 4 tokens to assignment_statement 59.0
   IF                                 => reduce 4 tokens to assignment_statement 59.0
   LOOP                               => reduce 4 tokens to assignment_statement 59.0
   PACKAGE                            => reduce 4 tokens to assignment_statement 59.0
   PROCEDURE                          => reduce 4 tokens to assignment_statement 59.0
   RETURN                             => reduce 4 tokens to assignment_statement 59.0
   WHEN                               => reduce 4 tokens to assignment_statement 59.0
   IDENTIFIER                         => reduce 4 tokens to assignment_statement 59.0
   Wisi_EOI                           => reduce 4 tokens to assignment_statement 59.0
   default                            => ERROR

   Minimal_Complete_Actions => (assignment_statement)

State 206:
    130.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part_opt ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 242
   default                            => ERROR

   Minimal_Complete_Actions => (BEGIN)

State 207:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL ^ EQUAL_GREATER sequence_of_statements_opt, END/WHEN

   EQUAL_GREATER                      => shift and goto state 243
   default                            => ERROR

   Minimal_Complete_Actions => (EQUAL_GREATER)

State 208:
     67.0:case_statement <= CASE expression_opt IS case_statement_alternative_list END ^ CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   CASE                               => shift and goto state 244
   default                            => ERROR

   Minimal_Complete_Actions => (CASE)

State 209:
     69.0:case_statement_alternative_list <= case_statement_alternative_list case_statement_alternative ^, END/WHEN

   END                                => reduce 2 tokens to case_statement_alternative_list 69.0
   WHEN                               => reduce 2 tokens to case_statement_alternative_list 69.0
   default                            => ERROR

   Minimal_Complete_Actions => (case_statement_alternative_list)

State 210:
     86.0:exit_statement <= EXIT identifier_opt WHEN expression_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 5 tokens to exit_statement 86.0
   CASE                               => reduce 5 tokens to exit_statement 86.0
   DECLARE                            => reduce 5 tokens to exit_statement 86.0
   ELSE                               => reduce 5 tokens to exit_statement 86.0
   ELSIF                              => reduce 5 tokens to exit_statement 86.0
   END                                => reduce 5 tokens to exit_statement 86.0
   EXIT                               => reduce 5 tokens to exit_statement 86.0
   EXCEPTION                          => reduce 5 tokens to exit_statement 86.0
   FOR                                => reduce 5 tokens to exit_statement 86.0
   FUNCTION                           => reduce 5 tokens to exit_statement 86.0
   IF                                 => reduce 5 tokens to exit_statement 86.0
   LOOP                               => reduce 5 tokens to exit_statement 86.0
   PACKAGE                            => reduce 5 tokens to exit_statement 86.0
   PROCEDURE                          => reduce 5 tokens to exit_statement 86.0
   RETURN                             => reduce 5 tokens to exit_statement 86.0
   WHEN                               => reduce 5 tokens to exit_statement 86.0
   IDENTIFIER                         => reduce 5 tokens to exit_statement 86.0
   Wisi_EOI                           => reduce 5 tokens to exit_statement 86.0
   default                            => ERROR

   Minimal_Complete_Actions => (exit_statement)

State 211:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
     99.0:index_constraint <= LEFT_PAREN ^ discrete_subtype_definition RIGHT_PAREN, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON
    103.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   RIGHT_PAREN                        => reduce 0 tokens to association_opt 60.2
   COMMA                              => reduce 0 tokens to association_opt 60.2
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 148
   default                            => ERROR

   association_opt                    goto state 149
   association_list                   goto state 150
   discrete_subtype_definition        goto state 245
   expression                         goto state 151
   factor                             goto state 45
   name                               goto state 174
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 246
   range_list                         goto state 153
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 29
   simple_expression                  goto state 154
   subtype_indication                 goto state 177
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (IDENTIFIER, association_list)

State 212:
     73.0:constraint <= RANGE ^ range_g, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 247
   selected_component                 goto state 29
   simple_expression                  goto state 176
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (IDENTIFIER)

State 213:
    134.0:subtype_indication <= name constraint ^, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LOOP                               => reduce 2 tokens to subtype_indication 134.0
   RIGHT_PAREN                        => reduce 2 tokens to subtype_indication 134.0
   COLON_EQUAL                        => reduce 2 tokens to subtype_indication 134.0
   SEMICOLON                          => reduce 2 tokens to subtype_indication 134.0
   default                            => ERROR

   Minimal_Complete_Actions => (subtype_indication)

State 214:
     73.1:constraint <= index_constraint ^, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LOOP                               => reduce 1 tokens to constraint 73.1
   RIGHT_PAREN                        => reduce 1 tokens to constraint 73.1
   COLON_EQUAL                        => reduce 1 tokens to constraint 73.1
   SEMICOLON                          => reduce 1 tokens to constraint 73.1
   default                            => ERROR

   Minimal_Complete_Actions => (constraint)

State 215:
    109.0:parameter_specification <= IDENTIFIER COLON ^ IDENTIFIER COLON_EQUAL expression_opt, RIGHT_PAREN/SEMICOLON
    109.1:parameter_specification <= IDENTIFIER COLON ^ IDENTIFIER, RIGHT_PAREN/SEMICOLON

   IDENTIFIER                         => shift and goto state 248
   default                            => ERROR

   Minimal_Complete_Actions => (IDENTIFIER)

State 216:
     92.0:formal_part <= LEFT_PAREN parameter_specification_list RIGHT_PAREN ^, IS/RETURN/WITH/SEMICOLON

   IS                                 => reduce 3 tokens to formal_part 92.0
   RETURN                             => reduce 3 tokens to formal_part 92.0
   WITH                               => reduce 3 tokens to formal_part 92.0
   SEMICOLON                          => reduce 3 tokens to formal_part 92.0
   default                            => ERROR

   Minimal_Complete_Actions => (formal_part)

State 217:
    110.0:parameter_specification_list <= parameter_specification_list SEMICOLON ^ parameter_specification, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 0 tokens to parameter_specification 109.2
   SEMICOLON                          => reduce 0 tokens to parameter_specification 109.2
   IDENTIFIER                         => shift and goto state 249
   default                            => ERROR

   parameter_specification            goto state 250

   Minimal_Complete_Actions => (parameter_specification)

State 218:
    107.0:parameter_and_result_profile <= formal_part RETURN IDENTIFIER ^, IS/WITH/SEMICOLON

   IS                                 => reduce 3 tokens to parameter_and_result_profile 107.0
   WITH                               => reduce 3 tokens to parameter_and_result_profile 107.0
   SEMICOLON                          => reduce 3 tokens to parameter_and_result_profile 107.0
   default                            => ERROR

   Minimal_Complete_Actions => (parameter_and_result_profile)

State 219:
     98.1:if_statement <= IF expression_opt THEN sequence_of_statements_opt ELSE ^ sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 125.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 62
   sequence_of_statements_opt         goto state 251
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 64

   Minimal_Complete_Actions => (sequence_of_statements_opt)

State 220:
     78.0:elsif_statement_item <= ELSIF ^ expression_opt THEN sequence_of_statements_opt, ELSE/ELSIF/END

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   THEN                               => reduce 0 tokens to expression_opt 88.1
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   expression                         goto state 43
   expression_opt                     goto state 252
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (expression_opt)

State 221:
     98.3:if_statement <= IF expression_opt THEN sequence_of_statements_opt END ^ IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   IF                                 => shift and goto state 253
   default                            => ERROR

   Minimal_Complete_Actions => (IF)

State 222:
     79.1:elsif_statement_list <= elsif_statement_item ^, ELSE/ELSIF/END

   ELSE                               => reduce 1 tokens to elsif_statement_list 79.1
   ELSIF                              => reduce 1 tokens to elsif_statement_list 79.1
   END                                => reduce 1 tokens to elsif_statement_list 79.1
   default                            => ERROR

   Minimal_Complete_Actions => (elsif_statement_list)

State 223:
     79.0:elsif_statement_list <= elsif_statement_list ^ elsif_statement_item, ELSE/ELSIF/END
     98.0:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list ^ ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI
     98.2:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list ^ END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   ELSE                               => shift and goto state 254
   ELSIF                              => shift and goto state 220
   END                                => shift and goto state 255
   default                            => ERROR

   elsif_statement_item               goto state 256

   Minimal_Complete_Actions => (ELSE, END)

State 224:
    101.1:loop_statement <= LOOP sequence_of_statements_opt END LOOP identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 257
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 225:
    106.0:package_body <= PACKAGE BODY name aspect_specification_opt IS ^ declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
    106.1:package_body <= PACKAGE BODY name aspect_specification_opt IS ^ declarative_part_opt END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to declarative_part_opt 76.1
   END                                => reduce 0 tokens to declarative_part_opt 76.1
   FUNCTION                           => shift and goto state 4
   PACKAGE                            => shift and goto state 129
   PROCEDURE                          => shift and goto state 130
   TYPE                               => shift and goto state 131
   IDENTIFIER                         => shift and goto state 132
   default                            => ERROR

   body_g                             goto state 133
   body_stub                          goto state 134
   declaration                        goto state 135
   declarations                       goto state 136
   declarative_part_opt               goto state 258
   full_type_declaration              goto state 138
   function_specification             goto state 20
   object_declaration                 goto state 139
   package_body                       goto state 140
   procedure_specification            goto state 28
   proper_body                        goto state 141
   subprogram_body                    goto state 142
   subprogram_body_stub               goto state 143
   subprogram_declaration             goto state 144
   subprogram_specification           goto state 145
   type_declaration                   goto state 146

   Minimal_Complete_Actions => (declarative_part_opt)

State 226:
     95.0:generic_instantiation <= PACKAGE name IS NEW name ^ SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
    103.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/DOT/SEMICOLON
    103.1:name <= name ^ actual_parameter_part, LEFT_PAREN/DOT/SEMICOLON
    123.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 77
   DOT                                => shift and goto state 79
   SEMICOLON                          => shift and goto state 259
   default                            => ERROR

   actual_parameter_part              goto state 81

   Minimal_Complete_Actions => (DOT, SEMICOLON)

State 227:
     95.1:generic_instantiation <= PROCEDURE name IS NEW name ^ SEMICOLON, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI
    103.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/DOT/SEMICOLON
    103.1:name <= name ^ actual_parameter_part, LEFT_PAREN/DOT/SEMICOLON
    123.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 77
   DOT                                => shift and goto state 79
   SEMICOLON                          => shift and goto state 260
   default                            => ERROR

   actual_parameter_part              goto state 81

   Minimal_Complete_Actions => (DOT, SEMICOLON)

State 228:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 261
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 229:
     83.0:exception_handler <= WHEN ^ exception_choice EQUAL_GREATER sequence_of_statements_opt, END/WHEN

   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   exception_choice                   goto state 262
   name                               goto state 263
   selected_component                 goto state 29

   Minimal_Complete_Actions => (IDENTIFIER)

State 230:
     84.1:exception_handler_list <= exception_handler ^, END/WHEN

   END                                => reduce 1 tokens to exception_handler_list 84.1
   WHEN                               => reduce 1 tokens to exception_handler_list 84.1
   default                            => ERROR

   Minimal_Complete_Actions => (exception_handler_list)

State 231:
     84.0:exception_handler_list <= exception_handler_list ^ exception_handler, END/WHEN
     85.0:exception_handler_list_opt <= exception_handler_list ^, END

   END                                => reduce 1 tokens to exception_handler_list_opt 85.0
   WHEN                               => shift and goto state 229
   default                            => ERROR

   exception_handler                  goto state 264

   Minimal_Complete_Actions => (exception_handler_list_opt)

State 232:
     96.0:handled_sequence_of_statements <= sequence_of_statements_opt EXCEPTION exception_handler_list_opt ^, END

   END                                => reduce 3 tokens to handled_sequence_of_statements 96.0
   default                            => ERROR

   Minimal_Complete_Actions => (handled_sequence_of_statements)

State 233:
     93.0:full_type_declaration <= TYPE IDENTIFIER IS ^ type_definition SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   LEFT_PAREN                         => shift and goto state 265
   default                            => ERROR

   enumeration_type_definition        goto state 266
   type_definition                    goto state 267

   Minimal_Complete_Actions => (LEFT_PAREN)

State 234:
    105.0:object_declaration <= IDENTIFIER COLON subtype_indication ^ COLON_EQUAL expression_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    105.1:object_declaration <= IDENTIFIER COLON subtype_indication ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   COLON_EQUAL                        => shift and goto state 268
   SEMICOLON                          => shift and goto state 269
   default                            => ERROR

   Minimal_Complete_Actions => (COLON_EQUAL, SEMICOLON)

State 235:
     64.0:block_statement <= block_label_opt DECLARE declarative_part_opt BEGIN handled_sequence_of_statements ^ END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 270
   default                            => ERROR

   Minimal_Complete_Actions => (END)

State 236:
    131.0:subprogram_body_stub <= subprogram_specification IS SEPARATE ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   SEMICOLON                          => shift and goto state 271
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 237:
    101.0:loop_statement <= iteration_scheme LOOP sequence_of_statements_opt END LOOP ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to identifier_opt 97.1
   IDENTIFIER                         => shift and goto state 57
   default                            => ERROR

   identifier_opt                     goto state 272

   Minimal_Complete_Actions => (identifier_opt)

State 238:
     60.0:association_opt <= IDENTIFIER EQUAL_GREATER expression_opt ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 3 tokens to association_opt 60.0
   RIGHT_PAREN                        => reduce 3 tokens to association_opt 60.0
   COMMA                              => reduce 3 tokens to association_opt 60.0
   default                            => ERROR

   Minimal_Complete_Actions => (association_opt)

State 239:
     61.0:association_list <= association_list COMMA association_opt ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 3 tokens to association_list 61.0
   RIGHT_PAREN                        => reduce 3 tokens to association_list 61.0
   COMMA                              => reduce 3 tokens to association_list 61.0
   default                            => ERROR

   Minimal_Complete_Actions => (association_list)

State 240:
    117.0:range_list <= range_list COMMA range_g ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 3 tokens to range_list 117.0
   COMMA                              => reduce 3 tokens to range_list 117.0
   default                            => ERROR

   Minimal_Complete_Actions => (range_list)

State 241:
    116.0:range_g <= simple_expression DOT_DOT simple_expression ^, LOOP/RIGHT_PAREN/COLON_EQUAL/COMMA/SEMICOLON

   LOOP                               => reduce 3 tokens to range_g 116.0
   RIGHT_PAREN                        => reduce 3 tokens to range_g 116.0
   COLON_EQUAL                        => reduce 3 tokens to range_g 116.0
   COMMA                              => reduce 3 tokens to range_g 116.0
   SEMICOLON                          => reduce 3 tokens to range_g 116.0
   default                            => ERROR

   Minimal_Complete_Actions => (range_g)

State 242:
    130.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part_opt BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 125.1
   EXIT                               => shift and goto state 2
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements_opt 125.1
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   handled_sequence_of_statements     goto state 273
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 62
   sequence_of_statements_opt         goto state 128
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 64

   Minimal_Complete_Actions => (handled_sequence_of_statements)

State 243:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER ^ sequence_of_statements_opt, END/WHEN

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 125.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   WHEN                               => reduce 0 tokens to sequence_of_statements_opt 125.1
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 62
   sequence_of_statements_opt         goto state 274
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 64

   Minimal_Complete_Actions => (sequence_of_statements_opt)

State 244:
     67.0:case_statement <= CASE expression_opt IS case_statement_alternative_list END CASE ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 275
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 245:
     99.0:index_constraint <= LEFT_PAREN discrete_subtype_definition ^ RIGHT_PAREN, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   RIGHT_PAREN                        => shift and goto state 276
   default                            => ERROR

   Minimal_Complete_Actions => (RIGHT_PAREN)

State 246:
     77.1:discrete_subtype_definition <= range_g ^, RIGHT_PAREN
    117.1:range_list <= range_g ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 1 tokens to discrete_subtype_definition 77.1,
                                         reduce 1 tokens to range_list 117.1
   COMMA                              => reduce 1 tokens to range_list 117.1
   default                            => ERROR

   Minimal_Complete_Actions => (discrete_subtype_definition, range_list)

State 247:
     73.0:constraint <= RANGE range_g ^, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LOOP                               => reduce 2 tokens to constraint 73.0
   RIGHT_PAREN                        => reduce 2 tokens to constraint 73.0
   COLON_EQUAL                        => reduce 2 tokens to constraint 73.0
   SEMICOLON                          => reduce 2 tokens to constraint 73.0
   default                            => ERROR

   Minimal_Complete_Actions => (constraint)

State 248:
    109.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER ^ COLON_EQUAL expression_opt, RIGHT_PAREN/SEMICOLON
    109.1:parameter_specification <= IDENTIFIER COLON IDENTIFIER ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 3 tokens to parameter_specification 109.1
   COLON_EQUAL                        => shift and goto state 277
   SEMICOLON                          => reduce 3 tokens to parameter_specification 109.1
   default                            => ERROR

   Minimal_Complete_Actions => (parameter_specification)

State 249:
    109.0:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER COLON_EQUAL expression_opt, RIGHT_PAREN/SEMICOLON
    109.1:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER, RIGHT_PAREN/SEMICOLON

   COLON                              => shift and goto state 215
   default                            => ERROR

   Minimal_Complete_Actions => (COLON)

State 250:
    110.0:parameter_specification_list <= parameter_specification_list SEMICOLON parameter_specification ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 3 tokens to parameter_specification_list 110.0
   SEMICOLON                          => reduce 3 tokens to parameter_specification_list 110.0
   default                            => ERROR

   Minimal_Complete_Actions => (parameter_specification_list)

State 251:
     98.1:if_statement <= IF expression_opt THEN sequence_of_statements_opt ELSE sequence_of_statements_opt ^ END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 278
   default                            => ERROR

   Minimal_Complete_Actions => (END)

State 252:
     78.0:elsif_statement_item <= ELSIF expression_opt ^ THEN sequence_of_statements_opt, ELSE/ELSIF/END

   THEN                               => shift and goto state 279
   default                            => ERROR

   Minimal_Complete_Actions => (THEN)

State 253:
     98.3:if_statement <= IF expression_opt THEN sequence_of_statements_opt END IF ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 280
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 254:
     98.0:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list ELSE ^ sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 125.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 62
   sequence_of_statements_opt         goto state 281
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 64

   Minimal_Complete_Actions => (sequence_of_statements_opt)

State 255:
     98.2:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list END ^ IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   IF                                 => shift and goto state 282
   default                            => ERROR

   Minimal_Complete_Actions => (IF)

State 256:
     79.0:elsif_statement_list <= elsif_statement_list elsif_statement_item ^, ELSE/ELSIF/END

   ELSE                               => reduce 2 tokens to elsif_statement_list 79.0
   ELSIF                              => reduce 2 tokens to elsif_statement_list 79.0
   END                                => reduce 2 tokens to elsif_statement_list 79.0
   default                            => ERROR

   Minimal_Complete_Actions => (elsif_statement_list)

State 257:
    101.1:loop_statement <= LOOP sequence_of_statements_opt END LOOP identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 6 tokens to loop_statement 101.1
   CASE                               => reduce 6 tokens to loop_statement 101.1
   DECLARE                            => reduce 6 tokens to loop_statement 101.1
   ELSE                               => reduce 6 tokens to loop_statement 101.1
   ELSIF                              => reduce 6 tokens to loop_statement 101.1
   END                                => reduce 6 tokens to loop_statement 101.1
   EXIT                               => reduce 6 tokens to loop_statement 101.1
   EXCEPTION                          => reduce 6 tokens to loop_statement 101.1
   FOR                                => reduce 6 tokens to loop_statement 101.1
   FUNCTION                           => reduce 6 tokens to loop_statement 101.1
   IF                                 => reduce 6 tokens to loop_statement 101.1
   LOOP                               => reduce 6 tokens to loop_statement 101.1
   PACKAGE                            => reduce 6 tokens to loop_statement 101.1
   PROCEDURE                          => reduce 6 tokens to loop_statement 101.1
   RETURN                             => reduce 6 tokens to loop_statement 101.1
   WHEN                               => reduce 6 tokens to loop_statement 101.1
   IDENTIFIER                         => reduce 6 tokens to loop_statement 101.1
   Wisi_EOI                           => reduce 6 tokens to loop_statement 101.1
   default                            => ERROR

   Minimal_Complete_Actions => (loop_statement)

State 258:
    106.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI
    106.1:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt ^ END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 283
   END                                => shift and goto state 284
   default                            => ERROR

   Minimal_Complete_Actions => (BEGIN, END)

State 259:
     95.0:generic_instantiation <= PACKAGE name IS NEW name SEMICOLON ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 6 tokens to generic_instantiation 95.0
   CASE                               => reduce 6 tokens to generic_instantiation 95.0
   DECLARE                            => reduce 6 tokens to generic_instantiation 95.0
   EXIT                               => reduce 6 tokens to generic_instantiation 95.0
   FOR                                => reduce 6 tokens to generic_instantiation 95.0
   FUNCTION                           => reduce 6 tokens to generic_instantiation 95.0
   IF                                 => reduce 6 tokens to generic_instantiation 95.0
   LOOP                               => reduce 6 tokens to generic_instantiation 95.0
   PACKAGE                            => reduce 6 tokens to generic_instantiation 95.0
   PROCEDURE                          => reduce 6 tokens to generic_instantiation 95.0
   RETURN                             => reduce 6 tokens to generic_instantiation 95.0
   IDENTIFIER                         => reduce 6 tokens to generic_instantiation 95.0
   Wisi_EOI                           => reduce 6 tokens to generic_instantiation 95.0
   default                            => ERROR

   Minimal_Complete_Actions => (generic_instantiation)

State 260:
     95.1:generic_instantiation <= PROCEDURE name IS NEW name SEMICOLON ^, BEGIN/CASE/DECLARE/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 6 tokens to generic_instantiation 95.1
   CASE                               => reduce 6 tokens to generic_instantiation 95.1
   DECLARE                            => reduce 6 tokens to generic_instantiation 95.1
   EXIT                               => reduce 6 tokens to generic_instantiation 95.1
   FOR                                => reduce 6 tokens to generic_instantiation 95.1
   FUNCTION                           => reduce 6 tokens to generic_instantiation 95.1
   IF                                 => reduce 6 tokens to generic_instantiation 95.1
   LOOP                               => reduce 6 tokens to generic_instantiation 95.1
   PACKAGE                            => reduce 6 tokens to generic_instantiation 95.1
   PROCEDURE                          => reduce 6 tokens to generic_instantiation 95.1
   RETURN                             => reduce 6 tokens to generic_instantiation 95.1
   IDENTIFIER                         => reduce 6 tokens to generic_instantiation 95.1
   Wisi_EOI                           => reduce 6 tokens to generic_instantiation 95.1
   default                            => ERROR

   Minimal_Complete_Actions => (generic_instantiation)

State 261:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 6 tokens to block_statement 64.1
   CASE                               => reduce 6 tokens to block_statement 64.1
   DECLARE                            => reduce 6 tokens to block_statement 64.1
   ELSE                               => reduce 6 tokens to block_statement 64.1
   ELSIF                              => reduce 6 tokens to block_statement 64.1
   END                                => reduce 6 tokens to block_statement 64.1
   EXIT                               => reduce 6 tokens to block_statement 64.1
   EXCEPTION                          => reduce 6 tokens to block_statement 64.1
   FOR                                => reduce 6 tokens to block_statement 64.1
   FUNCTION                           => reduce 6 tokens to block_statement 64.1
   IF                                 => reduce 6 tokens to block_statement 64.1
   LOOP                               => reduce 6 tokens to block_statement 64.1
   PACKAGE                            => reduce 6 tokens to block_statement 64.1
   PROCEDURE                          => reduce 6 tokens to block_statement 64.1
   RETURN                             => reduce 6 tokens to block_statement 64.1
   WHEN                               => reduce 6 tokens to block_statement 64.1
   IDENTIFIER                         => reduce 6 tokens to block_statement 64.1
   Wisi_EOI                           => reduce 6 tokens to block_statement 64.1
   default                            => ERROR

   Minimal_Complete_Actions => (block_statement)

State 262:
     83.0:exception_handler <= WHEN exception_choice ^ EQUAL_GREATER sequence_of_statements_opt, END/WHEN

   EQUAL_GREATER                      => shift and goto state 285
   default                            => ERROR

   Minimal_Complete_Actions => (EQUAL_GREATER)

State 263:
     82.0:exception_choice <= name ^, EQUAL_GREATER
    103.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/DOT/EQUAL_GREATER
    103.1:name <= name ^ actual_parameter_part, LEFT_PAREN/DOT/EQUAL_GREATER
    123.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/DOT/EQUAL_GREATER

   LEFT_PAREN                         => shift and goto state 77
   DOT                                => shift and goto state 79
   EQUAL_GREATER                      => reduce 1 tokens to exception_choice 82.0
   default                            => ERROR

   actual_parameter_part              goto state 81

   Minimal_Complete_Actions => (DOT, exception_choice)

State 264:
     84.0:exception_handler_list <= exception_handler_list exception_handler ^, END/WHEN

   END                                => reduce 2 tokens to exception_handler_list 84.0
   WHEN                               => reduce 2 tokens to exception_handler_list 84.0
   default                            => ERROR

   Minimal_Complete_Actions => (exception_handler_list)

State 265:
     81.0:enumeration_type_definition <= LEFT_PAREN ^ enumeration_literal_list RIGHT_PAREN, SEMICOLON

   IDENTIFIER                         => shift and goto state 286
   default                            => ERROR

   enumeration_literal_list           goto state 287

   Minimal_Complete_Actions => (IDENTIFIER)

State 266:
    138.0:type_definition <= enumeration_type_definition ^, SEMICOLON

   SEMICOLON                          => reduce 1 tokens to type_definition 138.0
   default                            => ERROR

   Minimal_Complete_Actions => (type_definition)

State 267:
     93.0:full_type_declaration <= TYPE IDENTIFIER IS type_definition ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   SEMICOLON                          => shift and goto state 288
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 268:
    105.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL ^ expression_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   SEMICOLON                          => reduce 0 tokens to expression_opt 88.1
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   expression                         goto state 43
   expression_opt                     goto state 289
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (expression_opt)

State 269:
    105.1:object_declaration <= IDENTIFIER COLON subtype_indication SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 4 tokens to object_declaration 105.1
   END                                => reduce 4 tokens to object_declaration 105.1
   FUNCTION                           => reduce 4 tokens to object_declaration 105.1
   PACKAGE                            => reduce 4 tokens to object_declaration 105.1
   PROCEDURE                          => reduce 4 tokens to object_declaration 105.1
   TYPE                               => reduce 4 tokens to object_declaration 105.1
   IDENTIFIER                         => reduce 4 tokens to object_declaration 105.1
   default                            => ERROR

   Minimal_Complete_Actions => (object_declaration)

State 270:
     64.0:block_statement <= block_label_opt DECLARE declarative_part_opt BEGIN handled_sequence_of_statements END ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to identifier_opt 97.1
   IDENTIFIER                         => shift and goto state 57
   default                            => ERROR

   identifier_opt                     goto state 290

   Minimal_Complete_Actions => (identifier_opt)

State 271:
    131.0:subprogram_body_stub <= subprogram_specification IS SEPARATE SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 4 tokens to subprogram_body_stub 131.0
   END                                => reduce 4 tokens to subprogram_body_stub 131.0
   FUNCTION                           => reduce 4 tokens to subprogram_body_stub 131.0
   PACKAGE                            => reduce 4 tokens to subprogram_body_stub 131.0
   PROCEDURE                          => reduce 4 tokens to subprogram_body_stub 131.0
   TYPE                               => reduce 4 tokens to subprogram_body_stub 131.0
   IDENTIFIER                         => reduce 4 tokens to subprogram_body_stub 131.0
   default                            => ERROR

   Minimal_Complete_Actions => (subprogram_body_stub)

State 272:
    101.0:loop_statement <= iteration_scheme LOOP sequence_of_statements_opt END LOOP identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 291
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 273:
    130.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 292
   default                            => ERROR

   Minimal_Complete_Actions => (END)

State 274:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements_opt ^, END/WHEN

   END                                => reduce 4 tokens to case_statement_alternative 68.0
   WHEN                               => reduce 4 tokens to case_statement_alternative 68.0
   default                            => ERROR

   Minimal_Complete_Actions => (case_statement_alternative)

State 275:
     67.0:case_statement <= CASE expression_opt IS case_statement_alternative_list END CASE SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 7 tokens to case_statement 67.0
   CASE                               => reduce 7 tokens to case_statement 67.0
   DECLARE                            => reduce 7 tokens to case_statement 67.0
   ELSE                               => reduce 7 tokens to case_statement 67.0
   ELSIF                              => reduce 7 tokens to case_statement 67.0
   END                                => reduce 7 tokens to case_statement 67.0
   EXIT                               => reduce 7 tokens to case_statement 67.0
   EXCEPTION                          => reduce 7 tokens to case_statement 67.0
   FOR                                => reduce 7 tokens to case_statement 67.0
   FUNCTION                           => reduce 7 tokens to case_statement 67.0
   IF                                 => reduce 7 tokens to case_statement 67.0
   LOOP                               => reduce 7 tokens to case_statement 67.0
   PACKAGE                            => reduce 7 tokens to case_statement 67.0
   PROCEDURE                          => reduce 7 tokens to case_statement 67.0
   RETURN                             => reduce 7 tokens to case_statement 67.0
   WHEN                               => reduce 7 tokens to case_statement 67.0
   IDENTIFIER                         => reduce 7 tokens to case_statement 67.0
   Wisi_EOI                           => reduce 7 tokens to case_statement 67.0
   default                            => ERROR

   Minimal_Complete_Actions => (case_statement)

State 276:
     99.0:index_constraint <= LEFT_PAREN discrete_subtype_definition RIGHT_PAREN ^, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LOOP                               => reduce 3 tokens to index_constraint 99.0
   RIGHT_PAREN                        => reduce 3 tokens to index_constraint 99.0
   COLON_EQUAL                        => reduce 3 tokens to index_constraint 99.0
   SEMICOLON                          => reduce 3 tokens to index_constraint 99.0
   default                            => ERROR

   Minimal_Complete_Actions => (index_constraint)

State 277:
    109.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL ^ expression_opt, RIGHT_PAREN/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36
   NOT                                => shift and goto state 37
   RIGHT_PAREN                        => reduce 0 tokens to expression_opt 88.1
   MINUS                              => shift and goto state 38
   PLUS                               => shift and goto state 39
   SEMICOLON                          => reduce 0 tokens to expression_opt 88.1
   STRING_LITERAL                     => shift and goto state 40
   NUMERIC_LITERAL                    => shift and goto state 41
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   expression                         goto state 43
   expression_opt                     goto state 293
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 29
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (expression_opt)

State 278:
     98.1:if_statement <= IF expression_opt THEN sequence_of_statements_opt ELSE sequence_of_statements_opt END ^ IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   IF                                 => shift and goto state 294
   default                            => ERROR

   Minimal_Complete_Actions => (IF)

State 279:
     78.0:elsif_statement_item <= ELSIF expression_opt THEN ^ sequence_of_statements_opt, ELSE/ELSIF/END

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   ELSE                               => reduce 0 tokens to sequence_of_statements_opt 125.1
   ELSIF                              => reduce 0 tokens to sequence_of_statements_opt 125.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 125.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 62
   sequence_of_statements_opt         goto state 295
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 64

   Minimal_Complete_Actions => (sequence_of_statements_opt)

State 280:
     98.3:if_statement <= IF expression_opt THEN sequence_of_statements_opt END IF SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 7 tokens to if_statement 98.3
   CASE                               => reduce 7 tokens to if_statement 98.3
   DECLARE                            => reduce 7 tokens to if_statement 98.3
   ELSE                               => reduce 7 tokens to if_statement 98.3
   ELSIF                              => reduce 7 tokens to if_statement 98.3
   END                                => reduce 7 tokens to if_statement 98.3
   EXIT                               => reduce 7 tokens to if_statement 98.3
   EXCEPTION                          => reduce 7 tokens to if_statement 98.3
   FOR                                => reduce 7 tokens to if_statement 98.3
   FUNCTION                           => reduce 7 tokens to if_statement 98.3
   IF                                 => reduce 7 tokens to if_statement 98.3
   LOOP                               => reduce 7 tokens to if_statement 98.3
   PACKAGE                            => reduce 7 tokens to if_statement 98.3
   PROCEDURE                          => reduce 7 tokens to if_statement 98.3
   RETURN                             => reduce 7 tokens to if_statement 98.3
   WHEN                               => reduce 7 tokens to if_statement 98.3
   IDENTIFIER                         => reduce 7 tokens to if_statement 98.3
   Wisi_EOI                           => reduce 7 tokens to if_statement 98.3
   default                            => ERROR

   Minimal_Complete_Actions => (if_statement)

State 281:
     98.0:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list ELSE sequence_of_statements_opt ^ END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 296
   default                            => ERROR

   Minimal_Complete_Actions => (END)

State 282:
     98.2:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list END IF ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 297
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 283:
    106.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 125.1
   EXIT                               => shift and goto state 2
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements_opt 125.1
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   handled_sequence_of_statements     goto state 298
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 62
   sequence_of_statements_opt         goto state 128
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 64

   Minimal_Complete_Actions => (handled_sequence_of_statements)

State 284:
    106.1:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt END ^ name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 104.1
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   name                               goto state 299
   name_opt                           goto state 300
   selected_component                 goto state 29

   Minimal_Complete_Actions => (name_opt)

State 285:
     83.0:exception_handler <= WHEN exception_choice EQUAL_GREATER ^ sequence_of_statements_opt, END/WHEN

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 125.1
   EXIT                               => shift and goto state 2
   FOR                                => shift and goto state 3
   IF                                 => shift and goto state 5
   LOOP                               => shift and goto state 6
   RETURN                             => shift and goto state 9
   WHEN                               => reduce 0 tokens to sequence_of_statements_opt 125.1
   IDENTIFIER                         => shift and goto state 10
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 27
   selected_component                 goto state 29
   sequence_of_statements             goto state 62
   sequence_of_statements_opt         goto state 301
   simple_return_statement            goto state 30
   simple_statement                   goto state 31
   statement                          goto state 64

   Minimal_Complete_Actions => (sequence_of_statements_opt)

State 286:
     80.1:enumeration_literal_list <= IDENTIFIER ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 1 tokens to enumeration_literal_list 80.1
   COMMA                              => reduce 1 tokens to enumeration_literal_list 80.1
   default                            => ERROR

   Minimal_Complete_Actions => (enumeration_literal_list)

State 287:
     80.0:enumeration_literal_list <= enumeration_literal_list ^ COMMA IDENTIFIER, RIGHT_PAREN/COMMA
     81.0:enumeration_type_definition <= LEFT_PAREN enumeration_literal_list ^ RIGHT_PAREN, SEMICOLON

   RIGHT_PAREN                        => shift and goto state 302
   COMMA                              => shift and goto state 303
   default                            => ERROR

   Minimal_Complete_Actions => (RIGHT_PAREN)

State 288:
     93.0:full_type_declaration <= TYPE IDENTIFIER IS type_definition SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 5 tokens to full_type_declaration 93.0
   END                                => reduce 5 tokens to full_type_declaration 93.0
   FUNCTION                           => reduce 5 tokens to full_type_declaration 93.0
   PACKAGE                            => reduce 5 tokens to full_type_declaration 93.0
   PROCEDURE                          => reduce 5 tokens to full_type_declaration 93.0
   TYPE                               => reduce 5 tokens to full_type_declaration 93.0
   IDENTIFIER                         => reduce 5 tokens to full_type_declaration 93.0
   default                            => ERROR

   Minimal_Complete_Actions => (full_type_declaration)

State 289:
    105.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression_opt ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   SEMICOLON                          => shift and goto state 304
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 290:
     64.0:block_statement <= block_label_opt DECLARE declarative_part_opt BEGIN handled_sequence_of_statements END identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 305
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 291:
    101.0:loop_statement <= iteration_scheme LOOP sequence_of_statements_opt END LOOP identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 7 tokens to loop_statement 101.0
   CASE                               => reduce 7 tokens to loop_statement 101.0
   DECLARE                            => reduce 7 tokens to loop_statement 101.0
   ELSE                               => reduce 7 tokens to loop_statement 101.0
   ELSIF                              => reduce 7 tokens to loop_statement 101.0
   END                                => reduce 7 tokens to loop_statement 101.0
   EXIT                               => reduce 7 tokens to loop_statement 101.0
   EXCEPTION                          => reduce 7 tokens to loop_statement 101.0
   FOR                                => reduce 7 tokens to loop_statement 101.0
   FUNCTION                           => reduce 7 tokens to loop_statement 101.0
   IF                                 => reduce 7 tokens to loop_statement 101.0
   LOOP                               => reduce 7 tokens to loop_statement 101.0
   PACKAGE                            => reduce 7 tokens to loop_statement 101.0
   PROCEDURE                          => reduce 7 tokens to loop_statement 101.0
   RETURN                             => reduce 7 tokens to loop_statement 101.0
   WHEN                               => reduce 7 tokens to loop_statement 101.0
   IDENTIFIER                         => reduce 7 tokens to loop_statement 101.0
   Wisi_EOI                           => reduce 7 tokens to loop_statement 101.0
   default                            => ERROR

   Minimal_Complete_Actions => (loop_statement)

State 292:
    130.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 104.1
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   name                               goto state 299
   name_opt                           goto state 306
   selected_component                 goto state 29

   Minimal_Complete_Actions => (name_opt)

State 293:
    109.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL expression_opt ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 5 tokens to parameter_specification 109.0
   SEMICOLON                          => reduce 5 tokens to parameter_specification 109.0
   default                            => ERROR

   Minimal_Complete_Actions => (parameter_specification)

State 294:
     98.1:if_statement <= IF expression_opt THEN sequence_of_statements_opt ELSE sequence_of_statements_opt END IF ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 307
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 295:
     78.0:elsif_statement_item <= ELSIF expression_opt THEN sequence_of_statements_opt ^, ELSE/ELSIF/END

   ELSE                               => reduce 4 tokens to elsif_statement_item 78.0
   ELSIF                              => reduce 4 tokens to elsif_statement_item 78.0
   END                                => reduce 4 tokens to elsif_statement_item 78.0
   default                            => ERROR

   Minimal_Complete_Actions => (elsif_statement_item)

State 296:
     98.0:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list ELSE sequence_of_statements_opt END ^ IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   IF                                 => shift and goto state 308
   default                            => ERROR

   Minimal_Complete_Actions => (IF)

State 297:
     98.2:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list END IF SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 8 tokens to if_statement 98.2
   CASE                               => reduce 8 tokens to if_statement 98.2
   DECLARE                            => reduce 8 tokens to if_statement 98.2
   ELSE                               => reduce 8 tokens to if_statement 98.2
   ELSIF                              => reduce 8 tokens to if_statement 98.2
   END                                => reduce 8 tokens to if_statement 98.2
   EXIT                               => reduce 8 tokens to if_statement 98.2
   EXCEPTION                          => reduce 8 tokens to if_statement 98.2
   FOR                                => reduce 8 tokens to if_statement 98.2
   FUNCTION                           => reduce 8 tokens to if_statement 98.2
   IF                                 => reduce 8 tokens to if_statement 98.2
   LOOP                               => reduce 8 tokens to if_statement 98.2
   PACKAGE                            => reduce 8 tokens to if_statement 98.2
   PROCEDURE                          => reduce 8 tokens to if_statement 98.2
   RETURN                             => reduce 8 tokens to if_statement 98.2
   WHEN                               => reduce 8 tokens to if_statement 98.2
   IDENTIFIER                         => reduce 8 tokens to if_statement 98.2
   Wisi_EOI                           => reduce 8 tokens to if_statement 98.2
   default                            => ERROR

   Minimal_Complete_Actions => (if_statement)

State 298:
    106.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 309
   default                            => ERROR

   Minimal_Complete_Actions => (END)

State 299:
    103.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/DOT/SEMICOLON
    103.1:name <= name ^ actual_parameter_part, LEFT_PAREN/DOT/SEMICOLON
    104.0:name_opt <= name ^, SEMICOLON
    123.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 77
   DOT                                => shift and goto state 79
   SEMICOLON                          => reduce 1 tokens to name_opt 104.0
   default                            => ERROR

   actual_parameter_part              goto state 81

   Minimal_Complete_Actions => (DOT, name_opt)

State 300:
    106.1:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt END name_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 310
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 301:
     83.0:exception_handler <= WHEN exception_choice EQUAL_GREATER sequence_of_statements_opt ^, END/WHEN

   END                                => reduce 4 tokens to exception_handler 83.0
   WHEN                               => reduce 4 tokens to exception_handler 83.0
   default                            => ERROR

   Minimal_Complete_Actions => (exception_handler)

State 302:
     81.0:enumeration_type_definition <= LEFT_PAREN enumeration_literal_list RIGHT_PAREN ^, SEMICOLON

   SEMICOLON                          => reduce 3 tokens to enumeration_type_definition 81.0
   default                            => ERROR

   Minimal_Complete_Actions => (enumeration_type_definition)

State 303:
     80.0:enumeration_literal_list <= enumeration_literal_list COMMA ^ IDENTIFIER, RIGHT_PAREN/COMMA

   IDENTIFIER                         => shift and goto state 311
   default                            => ERROR

   Minimal_Complete_Actions => (IDENTIFIER)

State 304:
    105.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression_opt SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 6 tokens to object_declaration 105.0
   END                                => reduce 6 tokens to object_declaration 105.0
   FUNCTION                           => reduce 6 tokens to object_declaration 105.0
   PACKAGE                            => reduce 6 tokens to object_declaration 105.0
   PROCEDURE                          => reduce 6 tokens to object_declaration 105.0
   TYPE                               => reduce 6 tokens to object_declaration 105.0
   IDENTIFIER                         => reduce 6 tokens to object_declaration 105.0
   default                            => ERROR

   Minimal_Complete_Actions => (object_declaration)

State 305:
     64.0:block_statement <= block_label_opt DECLARE declarative_part_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 8 tokens to block_statement 64.0
   CASE                               => reduce 8 tokens to block_statement 64.0
   DECLARE                            => reduce 8 tokens to block_statement 64.0
   ELSE                               => reduce 8 tokens to block_statement 64.0
   ELSIF                              => reduce 8 tokens to block_statement 64.0
   END                                => reduce 8 tokens to block_statement 64.0
   EXIT                               => reduce 8 tokens to block_statement 64.0
   EXCEPTION                          => reduce 8 tokens to block_statement 64.0
   FOR                                => reduce 8 tokens to block_statement 64.0
   FUNCTION                           => reduce 8 tokens to block_statement 64.0
   IF                                 => reduce 8 tokens to block_statement 64.0
   LOOP                               => reduce 8 tokens to block_statement 64.0
   PACKAGE                            => reduce 8 tokens to block_statement 64.0
   PROCEDURE                          => reduce 8 tokens to block_statement 64.0
   RETURN                             => reduce 8 tokens to block_statement 64.0
   WHEN                               => reduce 8 tokens to block_statement 64.0
   IDENTIFIER                         => reduce 8 tokens to block_statement 64.0
   Wisi_EOI                           => reduce 8 tokens to block_statement 64.0
   default                            => ERROR

   Minimal_Complete_Actions => (block_statement)

State 306:
    130.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 312
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 307:
     98.1:if_statement <= IF expression_opt THEN sequence_of_statements_opt ELSE sequence_of_statements_opt END IF SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 9 tokens to if_statement 98.1
   CASE                               => reduce 9 tokens to if_statement 98.1
   DECLARE                            => reduce 9 tokens to if_statement 98.1
   ELSE                               => reduce 9 tokens to if_statement 98.1
   ELSIF                              => reduce 9 tokens to if_statement 98.1
   END                                => reduce 9 tokens to if_statement 98.1
   EXIT                               => reduce 9 tokens to if_statement 98.1
   EXCEPTION                          => reduce 9 tokens to if_statement 98.1
   FOR                                => reduce 9 tokens to if_statement 98.1
   FUNCTION                           => reduce 9 tokens to if_statement 98.1
   IF                                 => reduce 9 tokens to if_statement 98.1
   LOOP                               => reduce 9 tokens to if_statement 98.1
   PACKAGE                            => reduce 9 tokens to if_statement 98.1
   PROCEDURE                          => reduce 9 tokens to if_statement 98.1
   RETURN                             => reduce 9 tokens to if_statement 98.1
   WHEN                               => reduce 9 tokens to if_statement 98.1
   IDENTIFIER                         => reduce 9 tokens to if_statement 98.1
   Wisi_EOI                           => reduce 9 tokens to if_statement 98.1
   default                            => ERROR

   Minimal_Complete_Actions => (if_statement)

State 308:
     98.0:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list ELSE sequence_of_statements_opt END IF ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 313
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 309:
    106.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 104.1
   IDENTIFIER                         => shift and goto state 42
   default                            => ERROR

   name                               goto state 299
   name_opt                           goto state 314
   selected_component                 goto state 29

   Minimal_Complete_Actions => (name_opt)

State 310:
    106.1:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt END name_opt SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 9 tokens to package_body 106.1
   CASE                               => reduce 9 tokens to package_body 106.1
   DECLARE                            => reduce 9 tokens to package_body 106.1
   END                                => reduce 9 tokens to package_body 106.1
   EXIT                               => reduce 9 tokens to package_body 106.1
   FOR                                => reduce 9 tokens to package_body 106.1
   FUNCTION                           => reduce 9 tokens to package_body 106.1
   IF                                 => reduce 9 tokens to package_body 106.1
   LOOP                               => reduce 9 tokens to package_body 106.1
   PACKAGE                            => reduce 9 tokens to package_body 106.1
   PROCEDURE                          => reduce 9 tokens to package_body 106.1
   RETURN                             => reduce 9 tokens to package_body 106.1
   TYPE                               => reduce 9 tokens to package_body 106.1
   IDENTIFIER                         => reduce 9 tokens to package_body 106.1
   Wisi_EOI                           => reduce 9 tokens to package_body 106.1
   default                            => ERROR

   Minimal_Complete_Actions => (package_body)

State 311:
     80.0:enumeration_literal_list <= enumeration_literal_list COMMA IDENTIFIER ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 3 tokens to enumeration_literal_list 80.0
   COMMA                              => reduce 3 tokens to enumeration_literal_list 80.0
   default                            => ERROR

   Minimal_Complete_Actions => (enumeration_literal_list)

State 312:
    130.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 9 tokens to subprogram_body 130.0
   CASE                               => reduce 9 tokens to subprogram_body 130.0
   DECLARE                            => reduce 9 tokens to subprogram_body 130.0
   END                                => reduce 9 tokens to subprogram_body 130.0
   EXIT                               => reduce 9 tokens to subprogram_body 130.0
   FOR                                => reduce 9 tokens to subprogram_body 130.0
   FUNCTION                           => reduce 9 tokens to subprogram_body 130.0
   IF                                 => reduce 9 tokens to subprogram_body 130.0
   LOOP                               => reduce 9 tokens to subprogram_body 130.0
   PACKAGE                            => reduce 9 tokens to subprogram_body 130.0
   PROCEDURE                          => reduce 9 tokens to subprogram_body 130.0
   RETURN                             => reduce 9 tokens to subprogram_body 130.0
   TYPE                               => reduce 9 tokens to subprogram_body 130.0
   IDENTIFIER                         => reduce 9 tokens to subprogram_body 130.0
   Wisi_EOI                           => reduce 9 tokens to subprogram_body 130.0
   default                            => ERROR

   Minimal_Complete_Actions => (subprogram_body)

State 313:
     98.0:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list ELSE sequence_of_statements_opt END IF SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/WHEN/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 10 tokens to if_statement 98.0
   CASE                               => reduce 10 tokens to if_statement 98.0
   DECLARE                            => reduce 10 tokens to if_statement 98.0
   ELSE                               => reduce 10 tokens to if_statement 98.0
   ELSIF                              => reduce 10 tokens to if_statement 98.0
   END                                => reduce 10 tokens to if_statement 98.0
   EXIT                               => reduce 10 tokens to if_statement 98.0
   EXCEPTION                          => reduce 10 tokens to if_statement 98.0
   FOR                                => reduce 10 tokens to if_statement 98.0
   FUNCTION                           => reduce 10 tokens to if_statement 98.0
   IF                                 => reduce 10 tokens to if_statement 98.0
   LOOP                               => reduce 10 tokens to if_statement 98.0
   PACKAGE                            => reduce 10 tokens to if_statement 98.0
   PROCEDURE                          => reduce 10 tokens to if_statement 98.0
   RETURN                             => reduce 10 tokens to if_statement 98.0
   WHEN                               => reduce 10 tokens to if_statement 98.0
   IDENTIFIER                         => reduce 10 tokens to if_statement 98.0
   Wisi_EOI                           => reduce 10 tokens to if_statement 98.0
   default                            => ERROR

   Minimal_Complete_Actions => (if_statement)

State 314:
    106.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 315
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON)

State 315:
    106.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^, BEGIN/CASE/DECLARE/END/EXIT/FOR/FUNCTION/IF/LOOP/PACKAGE/PROCEDURE/RETURN/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 11 tokens to package_body 106.0
   CASE                               => reduce 11 tokens to package_body 106.0
   DECLARE                            => reduce 11 tokens to package_body 106.0
   END                                => reduce 11 tokens to package_body 106.0
   EXIT                               => reduce 11 tokens to package_body 106.0
   FOR                                => reduce 11 tokens to package_body 106.0
   FUNCTION                           => reduce 11 tokens to package_body 106.0
   IF                                 => reduce 11 tokens to package_body 106.0
   LOOP                               => reduce 11 tokens to package_body 106.0
   PACKAGE                            => reduce 11 tokens to package_body 106.0
   PROCEDURE                          => reduce 11 tokens to package_body 106.0
   RETURN                             => reduce 11 tokens to package_body 106.0
   TYPE                               => reduce 11 tokens to package_body 106.0
   IDENTIFIER                         => reduce 11 tokens to package_body 106.0
   Wisi_EOI                           => reduce 11 tokens to package_body 106.0
   default                            => ERROR

   Minimal_Complete_Actions => (package_body)

States with multiple reduce in Minimal_Complete_Action: (112, 174, 246)
States with conflicts: 9 67 112 145 174 246

 83 rules, 13 user actions, 16 checks, 316 states, 2544 parse actions
 0 accept/reduce conflicts, 3 shift/reduce conflicts, 3 reduce/reduce conflicts
