 23 tokens lexed
 0: 0: (-1, 1:(LEFT_CURLY_BRACKET, (105 . 105))) : shift and goto state 1
 0: 1: (-1, 2:(Identifier, (107 . 107))) : shift and goto state 4
 0: 4: (-1, 3:(EQUAL, (109 . 109))) : reduce 1 tokens to LeftHandSide
(LeftHandSide_0, (107 . 107)) <= (2:(Identifier, (107 . 107)))
 ... goto state 6
 0: 6: (-1, 3:(EQUAL, (109 . 109))) : shift and goto state 16
 0: 16: (-1, 4:(Identifier, (111 . 120))) : shift and goto state 35
 0: 35: (-1, 5:(LEFT_PAREN, (122 . 122))) : shift and goto state 62
 0: 62: (-1, 6:(Identifier, (123 . 123))) : shift and goto state 21
 0: 21: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : ERROR
 0: 21: expecting: COMMA, DOT, EQUAL, LEFT_PAREN, MINUS, MINUS_GREATER, MINUS_MINUS, PERCENT, PLUS, PLUS_PLUS, RIGHT_PAREN, SLASH, STAR
 0: zombie

 McKenzie error recovery

parser 0: State 21 Current_Token (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) Resume_Token_Goal 11
LR_Parse_Action

 1 parallel tasks
new Worker_Task 1
 0: succeed 2, enqueue 19, check  5, cost:  1
spawn parser 1 from 0 (2 active)
 1:  1, ( 0 0 1 0 0 0 0 0 0), (93 : (RIGHT_PAREN))|(-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125)))|((INSERT, RIGHT_PAREN, 7))
 0:  1, ( 0 0 3 0 0 0 0 0 0), (93 : (RIGHT_PAREN))|(-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125)))|((INSERT, MINUS_GREATER, 7), (INSERT, Identifier, 7), (INSERT, RIGHT_PAREN, 7))

recover: succeed, parser count 2
 1: stack (1, (0, 0:(-)), (1, 1:(LEFT_CURLY_BRACKET, (105 . 105))), (6, -24:(LeftHandSide, (107 . 107))), (16, 3:(EQUAL, (109 . 109))), (35, 4:(Identifier, (111 . 120))), (62, 5:(LEFT_PAREN, (122 . 122))), ^(21, 6:(Identifier, (123 . 123))))
    Current_Token: (1, -25:(RIGHT_PAREN))
    Shared_Token: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125)))
    stream input: (1, (-1, -25:(RIGHT_PAREN)))
    recover_insert_delete:
    resume_active: True, token goal 11, inc_shared_stream_token: FALSE
 0: stack (0, (0, 0:(-)), (1, 1:(LEFT_CURLY_BRACKET, (105 . 105))), (6, -24:(LeftHandSide, (107 . 107))), (16, 3:(EQUAL, (109 . 109))), (35, 4:(Identifier, (111 . 120))), (62, 5:(LEFT_PAREN, (122 . 122))), ^(21, 6:(Identifier, (123 . 123))))
    Current_Token: (0, -26:(MINUS_GREATER))
    Shared_Token: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125)))
    stream input: (0, (-1, -26:(MINUS_GREATER)))
    recover_insert_delete:((INSERT, Identifier, 7), (INSERT, RIGHT_PAREN, 7))
    resume_active: True, token goal 11, inc_shared_stream_token: FALSE

 1: 21: (1, -25:(RIGHT_PAREN)) : reduce 1 tokens to ClassType
(ClassType_0, (123 . 123)) <= (6:(Identifier, (123 . 123)))
 ... goto state 32
 0: 21: (0, -26:(MINUS_GREATER)) : shift and goto state 50
 1: 32: (1, -25:(RIGHT_PAREN)) : reduce 1 tokens to PostfixExpression
(PostfixExpression_0, (123 . 123)) <= ((ClassType, (123 . 123)))
 ... goto state 29
 1: 29: (1, -25:(RIGHT_PAREN)) : reduce 1 tokens to MultiplicativeExpression
(MultiplicativeExpression_0, (123 . 123)) <= ((PostfixExpression, (123 . 123)))
 ... goto state 28
 1: 28: (1, -25:(RIGHT_PAREN)) : reduce 1 tokens to AdditiveExpression
(AdditiveExpression_0, (123 . 123)) <= ((MultiplicativeExpression, (123 . 123)))
 ... goto state 27
 1: 27: (1, -25:(RIGHT_PAREN)) : reduce 1 tokens to AssignmentExpression
(AssignmentExpression_0, (123 . 123)) <= ((AdditiveExpression, (123 . 123)))
 ... goto state 24
 1: 24: (1, -25:(RIGHT_PAREN)) : reduce 1 tokens to Expression
(Expression_1, (123 . 123)) <= ((AssignmentExpression, (123 . 123)))
 ... goto state 22
 1: 22: (1, -25:(RIGHT_PAREN)) : reduce 1 tokens to ArgumentList
(ArgumentList_0, (123 . 123)) <= ((Expression, (123 . 123)))
 ... goto state 83
 1: 83: (1, -25:(RIGHT_PAREN)) : shift and goto state 93
 1: 93: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : reduce 4 tokens to MethodInvocation
(MethodInvocation_0, (111 . 123)) <= (4:(Identifier, (111 . 120)), 5:(LEFT_PAREN, (122 . 122)), (ArgumentList, (123 . 123)), -25:(RIGHT_PAREN))
 ... goto state 46
 0: 50: (0, -34:(Identifier)) : shift and goto state 73
 1: 46: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : reduce 1 tokens to PostfixExpression
(PostfixExpression_1, (111 . 123)) <= ((MethodInvocation, (111 . 123)))
 ... goto state 42
 1: 42: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : reduce 1 tokens to MultiplicativeExpression
(MultiplicativeExpression_0, (111 . 123)) <= ((PostfixExpression, (111 . 123)))
 ... goto state 41
 1: 41: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : reduce 1 tokens to AdditiveExpression
(AdditiveExpression_0, (111 . 123)) <= ((MultiplicativeExpression, (111 . 123)))
 ... goto state 40
 1: 40: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : reduce 1 tokens to AssignmentExpression
(AssignmentExpression_0, (111 . 123)) <= ((AdditiveExpression, (111 . 123)))
 ... goto state 38
 1: 38: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : reduce 1 tokens to Expression
(Expression_1, (111 . 123)) <= ((AssignmentExpression, (111 . 123)))
 ... goto state 36
 1: 36: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : reduce 3 tokens to Assignment
(Assignment_0, (107 . 123)) <= ((LeftHandSide, (107 . 107)), 3:(EQUAL, (109 . 109)), (Expression, (111 . 123)))
 ... goto state 5
 1: 5: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : shift and goto state 15
 1: 15: (-1, 8:(LEFT_CURLY_BRACKET, (264 . 264))) : reduce 3 tokens to Statement
(Statement_0, (105 . 125)) <= (1:(LEFT_CURLY_BRACKET, (105 . 105)), (Assignment, (107 . 123)), 7:(RIGHT_CURLY_BRACKET, (125 . 125)))
 ... goto state 3
 0: 73: (0, -42:(RIGHT_PAREN)) : reduce 3 tokens to LambdaExpression
(LambdaExpression_0, (123 . 123)) <= (6:(Identifier, (123 . 123)), -26:(MINUS_GREATER), -34:(Identifier))
 ... goto state 23
 1: 3: (-1, 8:(LEFT_CURLY_BRACKET, (264 . 264))) : reduce 1 tokens to CompilationUnit
(CompilationUnit_0, (105 . 125)) <= ((Statement, (105 . 125)))
 ... goto state 2
 0: 23: (0, -42:(RIGHT_PAREN)) : reduce 1 tokens to Expression
(Expression_0, (123 . 123)) <= ((LambdaExpression, (123 . 123)))
 ... goto state 22
 1: 2: (-1, 8:(LEFT_CURLY_BRACKET, (264 . 264))) : shift and goto state 1
 0: 22: (0, -42:(RIGHT_PAREN)) : reduce 1 tokens to ArgumentList
(ArgumentList_0, (123 . 123)) <= ((Expression, (123 . 123)))
 ... goto state 83
 0: 83: (0, -42:(RIGHT_PAREN)) : shift and goto state 93
 1: 1: (-1, 9:(Identifier, (266 . 275))) : shift and goto state 4
 0: 93: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : reduce 4 tokens to MethodInvocation
(MethodInvocation_0, (111 . 123)) <= (4:(Identifier, (111 . 120)), 5:(LEFT_PAREN, (122 . 122)), (ArgumentList, (123 . 123)), -42:(RIGHT_PAREN))
 ... goto state 46
 0: 46: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : reduce 1 tokens to PostfixExpression
(PostfixExpression_1, (111 . 123)) <= ((MethodInvocation, (111 . 123)))
 ... goto state 42
 0: 42: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : reduce 1 tokens to MultiplicativeExpression
(MultiplicativeExpression_0, (111 . 123)) <= ((PostfixExpression, (111 . 123)))
 ... goto state 41
 0: 41: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : reduce 1 tokens to AdditiveExpression
(AdditiveExpression_0, (111 . 123)) <= ((MultiplicativeExpression, (111 . 123)))
 ... goto state 40
 0: 40: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : reduce 1 tokens to AssignmentExpression
(AssignmentExpression_0, (111 . 123)) <= ((AdditiveExpression, (111 . 123)))
 ... goto state 38
 0: 38: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : reduce 1 tokens to Expression
(Expression_1, (111 . 123)) <= ((AssignmentExpression, (111 . 123)))
 ... goto state 36
 0: 36: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : reduce 3 tokens to Assignment
(Assignment_0, (107 . 123)) <= ((LeftHandSide, (107 . 107)), 3:(EQUAL, (109 . 109)), (Expression, (111 . 123)))
 ... goto state 5
 0: 5: (-1, 7:(RIGHT_CURLY_BRACKET, (125 . 125))) : shift and goto state 15
 1: 4: (-1, 10:(LEFT_PAREN, (277 . 277))) : shift and goto state 14
 0: 15: (-1, 8:(LEFT_CURLY_BRACKET, (264 . 264))) : reduce 3 tokens to Statement
(Statement_0, (105 . 125)) <= (1:(LEFT_CURLY_BRACKET, (105 . 105)), (Assignment, (107 . 123)), 7:(RIGHT_CURLY_BRACKET, (125 . 125)))
 ... goto state 3
 0: 3: (-1, 8:(LEFT_CURLY_BRACKET, (264 . 264))) : reduce 1 tokens to CompilationUnit
(CompilationUnit_0, (105 . 125)) <= ((Statement, (105 . 125)))
 ... goto state 2
 0: 2: (-1, 8:(LEFT_CURLY_BRACKET, (264 . 264))) : shift and goto state 1
 1: 14: (-1, 11:(Identifier, (278 . 278))) : shift and goto state 21
 0: 1: (-1, 9:(Identifier, (266 . 275))) : shift and goto state 4
 1: resume_active: False
 0: 4: (-1, 10:(LEFT_PAREN, (277 . 277))) : shift and goto state 14
 0: 14: (-1, 11:(Identifier, (278 . 278))) : shift and goto state 21
 0: resume_active: False
 0: terminate (1 active): duplicate state: ops length (-1, 12:(RIGHT_PAREN, (279 . 279)))
 1: 21: (-1, 12:(RIGHT_PAREN, (279 . 279))) : reduce 1 tokens to ClassType
(ClassType_0, (278 . 278)) <= (11:(Identifier, (278 . 278)))
 ... goto state 32
 1: 32: (-1, 12:(RIGHT_PAREN, (279 . 279))) : reduce 1 tokens to PostfixExpression
(PostfixExpression_0, (278 . 278)) <= ((ClassType, (278 . 278)))
 ... goto state 29
 1: 29: (-1, 12:(RIGHT_PAREN, (279 . 279))) : reduce 1 tokens to MultiplicativeExpression
(MultiplicativeExpression_0, (278 . 278)) <= ((PostfixExpression, (278 . 278)))
 ... goto state 28
 1: 28: (-1, 12:(RIGHT_PAREN, (279 . 279))) : reduce 1 tokens to AdditiveExpression
(AdditiveExpression_0, (278 . 278)) <= ((MultiplicativeExpression, (278 . 278)))
 ... goto state 27
 1: 27: (-1, 12:(RIGHT_PAREN, (279 . 279))) : reduce 1 tokens to AssignmentExpression
(AssignmentExpression_0, (278 . 278)) <= ((AdditiveExpression, (278 . 278)))
 ... goto state 24
 1: 24: (-1, 12:(RIGHT_PAREN, (279 . 279))) : reduce 1 tokens to Expression
(Expression_1, (278 . 278)) <= ((AssignmentExpression, (278 . 278)))
 ... goto state 22
 1: 22: (-1, 12:(RIGHT_PAREN, (279 . 279))) : reduce 1 tokens to ArgumentList
(ArgumentList_0, (278 . 278)) <= ((Expression, (278 . 278)))
 ... goto state 34
 1: 34: (-1, 12:(RIGHT_PAREN, (279 . 279))) : shift and goto state 61
 1: 61: (-1, 13:(RIGHT_CURLY_BRACKET, (281 . 281))) : ERROR
 1: 61: expecting: MINUS_MINUS, PLUS_PLUS
 1: zombie

 McKenzie error recovery

parser 1: State 61 Current_Token (-1, 13:(RIGHT_CURLY_BRACKET, (281 . 281))) Resume_Token_Goal 17
LR_Parse_Action

 1 parallel tasks
 1: succeed 2, enqueue 186, check  49, cost:  6
spawn parser 2 from 1 (2 active)
 2:  6, ( 0 0 0 0 0 0 2 0 0), (20 : (SEMICOLON))|(-1, 13:(RIGHT_CURLY_BRACKET, (281 . 281)))|((INSERT, MINUS_MINUS, 13), (INSERT, SEMICOLON, 13))
 1:  6, ( 0 0 0 0 0 0 2 0 0), (20 : (SEMICOLON))|(-1, 13:(RIGHT_CURLY_BRACKET, (281 . 281)))|((INSERT, PLUS_PLUS, 13), (INSERT, SEMICOLON, 13))

recover: succeed, parser count 2
 2: stack (2, (0, 0:(-)), (2, -45:(CompilationUnit, (105 . 125))), (1, 8:(LEFT_CURLY_BRACKET, (264 . 264))), (4, 9:(Identifier, (266 . 275))), (14, 10:(LEFT_PAREN, (277 . 277))), (34, -63:(ArgumentList, (278 . 278))), ^(61, 12:(RIGHT_PAREN, (279 . 279))))
    Current_Token: (2, -64:(MINUS_MINUS))
    Shared_Token: (-1, 13:(RIGHT_CURLY_BRACKET, (281 . 281)))
    stream input: (2, (-1, -64:(MINUS_MINUS)))
    recover_insert_delete:((INSERT, SEMICOLON, 13))
    resume_active: True, token goal 17, inc_shared_stream_token: FALSE
 1: stack (1, (0, 0:(-)), (2, -45:(CompilationUnit, (105 . 125))), (1, 8:(LEFT_CURLY_BRACKET, (264 . 264))), (4, 9:(Identifier, (266 . 275))), (14, 10:(LEFT_PAREN, (277 . 277))), (34, -63:(ArgumentList, (278 . 278))), ^(61, 12:(RIGHT_PAREN, (279 . 279))))
    Current_Token: (1, -65:(PLUS_PLUS))
    Shared_Token: (-1, 13:(RIGHT_CURLY_BRACKET, (281 . 281)))
    stream input: (1, (-1, -65:(PLUS_PLUS)))
    recover_insert_delete:((INSERT, SEMICOLON, 13))
    resume_active: True, token goal 17, inc_shared_stream_token: FALSE

 2: 61: (2, -64:(MINUS_MINUS)) : reduce 4 tokens to MethodInvocation
(MethodInvocation_0, (266 . 279)) <= (9:(Identifier, (266 . 275)), 10:(LEFT_PAREN, (277 . 277)), (ArgumentList, (278 . 278)), 12:(RIGHT_PAREN, (279 . 279)))
 ... goto state 11
 1: 61: (1, -65:(PLUS_PLUS)) : reduce 4 tokens to MethodInvocation
(MethodInvocation_0, (266 . 279)) <= (9:(Identifier, (266 . 275)), 10:(LEFT_PAREN, (277 . 277)), (ArgumentList, (278 . 278)), 12:(RIGHT_PAREN, (279 . 279)))
 ... goto state 11
 2: 11: (2, -64:(MINUS_MINUS)) : reduce 1 tokens to PostfixExpression
(PostfixExpression_1, (266 . 279)) <= ((MethodInvocation, (266 . 279)))
 ... goto state 7
 1: 11: (1, -65:(PLUS_PLUS)) : reduce 1 tokens to PostfixExpression
(PostfixExpression_1, (266 . 279)) <= ((MethodInvocation, (266 . 279)))
 ... goto state 7
 2: 7: (2, -64:(MINUS_MINUS)) : shift and goto state 17
 1: 7: (1, -65:(PLUS_PLUS)) : shift and goto state 18
 2: 17: (2, -70:(SEMICOLON)) : reduce 2 tokens to PostDecrementExpression
(PostDecrementExpression_0, (266 . 279)) <= ((PostfixExpression, (266 . 279)), -64:(MINUS_MINUS))
 ... goto state 9
 1: 18: (1, -71:(SEMICOLON)) : reduce 2 tokens to PostIncrementExpression
(PostIncrementExpression_0, (266 . 279)) <= ((PostfixExpression, (266 . 279)), -65:(PLUS_PLUS))
 ... goto state 8
 2: 9: (2, -70:(SEMICOLON)) : reduce 1 tokens to StatementExpression
(StatementExpression_1, (266 . 279)) <= ((PostDecrementExpression, (266 . 279)))
 ... goto state 12
 1: 8: (1, -71:(SEMICOLON)) : reduce 1 tokens to StatementExpression
(StatementExpression_0, (266 . 279)) <= ((PostIncrementExpression, (266 . 279)))
 ... goto state 12
 2: 12: (2, -70:(SEMICOLON)) : shift and goto state 20
 1: 12: (1, -71:(SEMICOLON)) : shift and goto state 20
 2: 20: (-1, 13:(RIGHT_CURLY_BRACKET, (281 . 281))) : shift and goto state 48
 1: 20: (-1, 13:(RIGHT_CURLY_BRACKET, (281 . 281))) : shift and goto state 48
 2: 48: (-1, 14:(LEFT_CURLY_BRACKET, (343 . 343))) : reduce 4 tokens to Statement
(Statement_1, (264 . 281)) <= (8:(LEFT_CURLY_BRACKET, (264 . 264)), (StatementExpression, (266 . 279)), -70:(SEMICOLON), 13:(RIGHT_CURLY_BRACKET, (281 . 281)))
 ... goto state 13
 1: 48: (-1, 14:(LEFT_CURLY_BRACKET, (343 . 343))) : reduce 4 tokens to Statement
(Statement_1, (264 . 281)) <= (8:(LEFT_CURLY_BRACKET, (264 . 264)), (StatementExpression, (266 . 279)), -71:(SEMICOLON), 13:(RIGHT_CURLY_BRACKET, (281 . 281)))
 ... goto state 13
 2: 13: (-1, 14:(LEFT_CURLY_BRACKET, (343 . 343))) : reduce 2 tokens to CompilationUnit
(CompilationUnit_1, (105 . 281)) <= ((CompilationUnit, (105 . 125)), (Statement, (264 . 281)))
 ... goto state 2
 1: 13: (-1, 14:(LEFT_CURLY_BRACKET, (343 . 343))) : reduce 2 tokens to CompilationUnit
(CompilationUnit_1, (105 . 281)) <= ((CompilationUnit, (105 . 125)), (Statement, (264 . 281)))
 ... goto state 2
 2: 2: (-1, 14:(LEFT_CURLY_BRACKET, (343 . 343))) : shift and goto state 1
 1: 2: (-1, 14:(LEFT_CURLY_BRACKET, (343 . 343))) : shift and goto state 1
 2: 1: (-1, 15:(Identifier, (345 . 345))) : shift and goto state 4
 1: 1: (-1, 15:(Identifier, (345 . 345))) : shift and goto state 4
 2: 4: (-1, 16:(PLUS_PLUS, (346 . 347))) : reduce 1 tokens to ClassType
(ClassType_0, (345 . 345)) <= (15:(Identifier, (345 . 345)))
 ... goto state 10
 1: 4: (-1, 16:(PLUS_PLUS, (346 . 347))) : reduce 1 tokens to ClassType
(ClassType_0, (345 . 345)) <= (15:(Identifier, (345 . 345)))
 ... goto state 10
 2: 10: (-1, 16:(PLUS_PLUS, (346 . 347))) : reduce 1 tokens to PostfixExpression
(PostfixExpression_0, (345 . 345)) <= ((ClassType, (345 . 345)))
 ... goto state 7
 1: 10: (-1, 16:(PLUS_PLUS, (346 . 347))) : reduce 1 tokens to PostfixExpression
(PostfixExpression_0, (345 . 345)) <= ((ClassType, (345 . 345)))
 ... goto state 7
 2: 7: (-1, 16:(PLUS_PLUS, (346 . 347))) : shift and goto state 18
 1: 7: (-1, 16:(PLUS_PLUS, (346 . 347))) : shift and goto state 18
 2: 18: (-1, 17:(SEMICOLON, (348 . 348))) : reduce 2 tokens to PostIncrementExpression
(PostIncrementExpression_0, (345 . 347)) <= ((PostfixExpression, (345 . 345)), 16:(PLUS_PLUS, (346 . 347)))
 ... goto state 8
 1: 18: (-1, 17:(SEMICOLON, (348 . 348))) : reduce 2 tokens to PostIncrementExpression
(PostIncrementExpression_0, (345 . 347)) <= ((PostfixExpression, (345 . 345)), 16:(PLUS_PLUS, (346 . 347)))
 ... goto state 8
 2: 8: (-1, 17:(SEMICOLON, (348 . 348))) : reduce 1 tokens to StatementExpression
(StatementExpression_0, (345 . 347)) <= ((PostIncrementExpression, (345 . 347)))
 ... goto state 12
 1: 8: (-1, 17:(SEMICOLON, (348 . 348))) : reduce 1 tokens to StatementExpression
(StatementExpression_0, (345 . 347)) <= ((PostIncrementExpression, (345 . 347)))
 ... goto state 12
 2: 12: (-1, 17:(SEMICOLON, (348 . 348))) : shift and goto state 20
 1: 12: (-1, 17:(SEMICOLON, (348 . 348))) : shift and goto state 20
 2: resume_active: False
 1: resume_active: False
 1: terminate (1 active): duplicate state: random (-1, 17:(SEMICOLON, (348 . 348)))
 2: 20: (-1, 18:(RIGHT_CURLY_BRACKET, (349 . 349))) : shift and goto state 48
 2: 48: (-1, 19:(LEFT_CURLY_BRACKET, (411 . 411))) : reduce 4 tokens to Statement
(Statement_1, (343 . 349)) <= (14:(LEFT_CURLY_BRACKET, (343 . 343)), (StatementExpression, (345 . 347)), 17:(SEMICOLON, (348 . 348)), 18:(RIGHT_CURLY_BRACKET, (349 . 349)))
 ... goto state 13
 2: 13: (-1, 19:(LEFT_CURLY_BRACKET, (411 . 411))) : reduce 2 tokens to CompilationUnit
(CompilationUnit_1, (105 . 349)) <= ((CompilationUnit, (105 . 281)), (Statement, (343 . 349)))
 ... goto state 2
 2: 2: (-1, 19:(LEFT_CURLY_BRACKET, (411 . 411))) : shift and goto state 1
 2: 1: (-1, 20:(Identifier, (413 . 413))) : shift and goto state 4
 2: 4: (-1, 21:(EQUAL, (415 . 415))) : reduce 1 tokens to LeftHandSide
(LeftHandSide_0, (413 . 413)) <= (20:(Identifier, (413 . 413)))
 ... goto state 6
 2: 6: (-1, 21:(EQUAL, (415 . 415))) : shift and goto state 16
 2: 16: (-1, 22:(RIGHT_CURLY_BRACKET, (417 . 417))) : ERROR
 2: 16: expecting: Identifier
 2: zombie

 McKenzie error recovery

parser 2: State 16 Current_Token (-1, 22:(RIGHT_CURLY_BRACKET, (417 . 417))) Resume_Token_Goal 26
LR_Parse_Action

 1 parallel tasks
 2: succeed 1, enqueue 4, check  2, cost:  1
 2:  1, ( 0 0 1 0 0 0 0 0 0), (35 : (Identifier))|(-1, 22:(RIGHT_CURLY_BRACKET, (417 . 417)))|((INSERT, Identifier, 22))

recover: succeed, parser count 1
 2: stack (2, (0, 0:(-)), (2, -89:(CompilationUnit, (105 . 349))), (1, 19:(LEFT_CURLY_BRACKET, (411 . 411))), (6, -90:(LeftHandSide, (413 . 413))), ^(16, 21:(EQUAL, (415 . 415))))
    Current_Token: (2, -91:(Identifier))
    Shared_Token: (-1, 22:(RIGHT_CURLY_BRACKET, (417 . 417)))
    stream input: (2, (-1, -91:(Identifier)))
    recover_insert_delete:
    resume_active: True, token goal 26, inc_shared_stream_token: FALSE

 2: 16: (2, -91:(Identifier)) : shift and goto state 35
 2: 35: (-1, 22:(RIGHT_CURLY_BRACKET, (417 . 417))) : reduce 1 tokens to ClassType
(ClassType_0) <= (-91:(Identifier))
 ... goto state 45
 2: 45: (-1, 22:(RIGHT_CURLY_BRACKET, (417 . 417))) : reduce 1 tokens to PostfixExpression
(PostfixExpression_0) <= ((ClassType))
 ... goto state 42
 2: 42: (-1, 22:(RIGHT_CURLY_BRACKET, (417 . 417))) : reduce 1 tokens to MultiplicativeExpression
(MultiplicativeExpression_0) <= ((PostfixExpression))
 ... goto state 41
 2: 41: (-1, 22:(RIGHT_CURLY_BRACKET, (417 . 417))) : reduce 1 tokens to AdditiveExpression
(AdditiveExpression_0) <= ((MultiplicativeExpression))
 ... goto state 40
 2: 40: (-1, 22:(RIGHT_CURLY_BRACKET, (417 . 417))) : reduce 1 tokens to AssignmentExpression
(AssignmentExpression_0) <= ((AdditiveExpression))
 ... goto state 38
 2: 38: (-1, 22:(RIGHT_CURLY_BRACKET, (417 . 417))) : reduce 1 tokens to Expression
(Expression_1) <= ((AssignmentExpression))
 ... goto state 36
 2: 36: (-1, 22:(RIGHT_CURLY_BRACKET, (417 . 417))) : reduce 3 tokens to Assignment
(Assignment_0, (413 . 415)) <= ((LeftHandSide, (413 . 413)), 21:(EQUAL, (415 . 415)), (Expression))
 ... goto state 5
 2: 5: (-1, 22:(RIGHT_CURLY_BRACKET, (417 . 417))) : shift and goto state 15
 2: 15: (-1, 23:(Wisi_EOI, (434 . 433))) : reduce 3 tokens to Statement
(Statement_0, (411 . 417)) <= (19:(LEFT_CURLY_BRACKET, (411 . 411)), (Assignment, (413 . 415)), 22:(RIGHT_CURLY_BRACKET, (417 . 417)))
 ... goto state 13
 2: 13: (-1, 23:(Wisi_EOI, (434 . 433))) : reduce 2 tokens to CompilationUnit
(CompilationUnit_1, (105 . 417)) <= ((CompilationUnit, (105 . 349)), (Statement, (411 . 417)))
 ... goto state 2
 2: 2: (-1, 23:(Wisi_EOI, (434 . 433))) : accept it
(wisitoken_accept_0, (105 . 417)) <= ((CompilationUnit, (105 . 417)))
 2: succeed
java_expressions_ch19.input:2:21: syntax error: expecting COMMA, DOT, EQUAL, LEFT_PAREN, MINUS, MINUS_GREATER, MINUS_MINUS, PERCENT, PLUS, PLUS_PLUS, RIGHT_PAREN, SLASH, STAR, found '}'
   recovered: ((INSERT, RIGHT_PAREN, 7))
java_expressions_ch19.input:6:18: syntax error: expecting MINUS_MINUS, PLUS_PLUS, found '}'
   recovered: ((INSERT, MINUS_MINUS, 13), (INSERT, SEMICOLON, 13))
java_expressions_ch19.input:12:7: syntax error: expecting Identifier, found '}'
   recovered: ((INSERT, Identifier, 22))
