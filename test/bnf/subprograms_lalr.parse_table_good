Tokens:
 0 => WHITESPACE
 1 => NEW_LINE
 2 => COMMENT_1
 3 => COMMENT_2
 4 => BEGIN
 5 => END
 6 => EXCEPTION
 7 => FOR
 8 => FUNCTION
 9 => IN
 10 => LOOP
 11 => PROCEDURE
 12 => WHEN
 13 => USE
 14 => LEFT_PAREN
 15 => RIGHT_PAREN
 16 => COLON
 17 => COMMA
 18 => DOT
 19 => SEMICOLON
 20 => SYMBOL
 21 => Wisi_EOI
 22 => wisitoken_accept
 23 => block
 24 => compilation_unit
 25 => declarations
 26 => declaration
 27 => loop_statement
 28 => name
 29 => name_list
 30 => parameter_list
 31 => subprogram
 32 => subtype
 33 => use_clause
 34 => nonterminal_014

Productions:
22.0: wisitoken_accept <= compilation_unit Wisi_EOI
23.0: block <= SYMBOL COLON BEGIN loop_statement EXCEPTION WHEN name END SYMBOL
23.1: block <= SYMBOL COLON BEGIN loop_statement EXCEPTION WHEN name END
23.2: block <= SYMBOL COLON BEGIN loop_statement END SYMBOL
23.3: block <= SYMBOL COLON BEGIN loop_statement END
23.4: block <= BEGIN loop_statement EXCEPTION WHEN name END SYMBOL
23.5: block <= BEGIN loop_statement EXCEPTION WHEN name END
23.6: block <= BEGIN loop_statement END SYMBOL
23.7: block <= BEGIN loop_statement END
24.0: compilation_unit <= declarations
25.0: declarations <= declarations declaration ; (1 => Direct_Left)
25.1: declarations <= declaration
26.0: declaration <= subprogram
26.1: declaration <= use_clause
27.0: loop_statement <= FOR SYMBOL IN subtype LOOP SEMICOLON
28.0: name <= name DOT SYMBOL ; (1 => Direct_Left)
28.1: name <= SYMBOL
29.0: name_list <= name
29.1: name_list <= name_list COMMA name ; (1 => Direct_Left)
30.0: parameter_list <= LEFT_PAREN SYMBOL RIGHT_PAREN
30.1: parameter_list <= LEFT_PAREN RIGHT_PAREN
31.0: subprogram <= FUNCTION name parameter_list block SEMICOLON
31.1: subprogram <= FUNCTION name parameter_list SEMICOLON
31.2: subprogram <= FUNCTION name block SEMICOLON
31.3: subprogram <= FUNCTION name SEMICOLON
31.4: subprogram <= FUNCTION parameter_list block SEMICOLON
31.5: subprogram <= FUNCTION parameter_list SEMICOLON
31.6: subprogram <= FUNCTION block SEMICOLON
31.7: subprogram <= FUNCTION SEMICOLON
31.8: subprogram <= PROCEDURE name parameter_list END name SEMICOLON
32.0: subtype <= name
33.0: use_clause <= USE nonterminal_014 SEMICOLON
34.0: nonterminal_014 <= name_list

Recursions:
1 => (25 (0.1) -> )
2 => (28 (0.1) -> )
3 => (29 (1.1) -> )

McKenzie:
(Insert =>
 BEGIN       => 4,
 END         => 4,
 EXCEPTION   => 4,
 FOR         => 4,
 FUNCTION    => 4,
 IN          => 4,
 LOOP        => 4,
 PROCEDURE   => 4,
 WHEN        => 4,
 USE         => 4,
 LEFT_PAREN  => 4,
 RIGHT_PAREN => 4,
 COLON       => 4,
 COMMA       => 4,
 DOT         => 4,
 SEMICOLON   => 4,
 SYMBOL      => 4,
 Wisi_EOI    => 4)
(Delete =>
 BEGIN       => 4,
 END         => 4,
 EXCEPTION   => 4,
 FOR         => 4,
 FUNCTION    => 4,
 IN          => 4,
 LOOP        => 4,
 PROCEDURE   => 4,
 WHEN        => 4,
 USE         => 4,
 LEFT_PAREN  => 4,
 RIGHT_PAREN => 4,
 COLON       => 4,
 COMMA       => 4,
 DOT         => 4,
 SEMICOLON   => 4,
 SYMBOL      => 4,
 Wisi_EOI    => 4)
(Push_Back =>
 BEGIN       => 4,
 END         => 4,
 EXCEPTION   => 4,
 FOR         => 4,
 FUNCTION    => 4,
 IN          => 4,
 LOOP        => 4,
 PROCEDURE   => 4,
 WHEN        => 4,
 USE         => 4,
 LEFT_PAREN  => 4,
 RIGHT_PAREN => 4,
 COLON       => 4,
 COMMA       => 4,
 DOT         => 4,
 SEMICOLON   => 4,
 SYMBOL      => 4,
 Wisi_EOI    => 4,
 wisitoken_accept => 4,
 block            => 4,
 compilation_unit => 4,
 declarations     => 4,
 declaration      => 4,
 loop_statement   => 4,
 name             => 4,
 name_list        => 4,
 parameter_list   => 4,
 subprogram       => 4,
 subtype          => 4,
 use_clause       => 4,
 nonterminal_014  => 4)
(Undo_Reduce =>
 wisitoken_accept => 4,
 block            => 4,
 compilation_unit => 4,
 declarations     => 4,
 declaration      => 4,
 loop_statement   => 4,
 name             => 4,
 name_list        => 4,
 parameter_list   => 4,
 subprogram       => 4,
 subtype          => 4,
 use_clause       => 4,
 nonterminal_014  => 4)
Minimal_Complete_Cost_Delta => -1
Fast_Forward      =>  0
Matching_Begin    =>  0
Ignore_Check_Fail => 4
Task_Count        => 0
Check_Limit       => 3
Check_Delta_Limit => 200
Enqueue_Limit     => 10000

LALR Parse Table:
State 0:
     22.0:wisitoken_accept <= ^ compilation_unit Wisi_EOI

   FUNCTION         => shift and goto state 1 31.0
   PROCEDURE        => shift and goto state 2 31.8
   USE              => shift and goto state 3 33.0
   default          => ERROR

   compilation_unit goto state 4
   declarations     goto state 5
   declaration      goto state 6
   subprogram       goto state 7
   use_clause       goto state 8

   Minimal_Complete_Action => 

State 1:
     31.0:subprogram <= FUNCTION ^ name parameter_list block SEMICOLON
     31.1:subprogram <= FUNCTION ^ name parameter_list SEMICOLON
     31.2:subprogram <= FUNCTION ^ name block SEMICOLON
     31.3:subprogram <= FUNCTION ^ name SEMICOLON
     31.4:subprogram <= FUNCTION ^ parameter_list block SEMICOLON
     31.5:subprogram <= FUNCTION ^ parameter_list SEMICOLON
     31.6:subprogram <= FUNCTION ^ block SEMICOLON
     31.7:subprogram <= FUNCTION ^ SEMICOLON

   BEGIN            => shift and goto state 9 23.4
   LEFT_PAREN       => shift and goto state 10 30.0
   SEMICOLON        => shift and goto state 11 31.7
   SYMBOL           => shift and goto state 12 23.0
   default          => ERROR

   block            goto state 13
   name             goto state 14
   parameter_list   goto state 15

   Minimal_Complete_Action => SEMICOLON 31.7

State 2:
     31.8:subprogram <= PROCEDURE ^ name parameter_list END name SEMICOLON

   SYMBOL           => shift and goto state 16 28.1
   default          => ERROR

   name             goto state 17

   Minimal_Complete_Action => SYMBOL 28.1

State 3:
     33.0:use_clause <= USE ^ nonterminal_014 SEMICOLON

   SYMBOL           => shift and goto state 16 28.1
   default          => ERROR

   name             goto state 18
   name_list        goto state 19
   nonterminal_014  goto state 20

   Minimal_Complete_Action => SYMBOL 28.1

State 4:
     22.0:wisitoken_accept <= compilation_unit ^ Wisi_EOI

   Wisi_EOI         => accept it 22.0
   default          => ERROR

   Minimal_Complete_Action => 

State 5:
     24.0:compilation_unit <= declarations ^
     25.0:declarations <= declarations ^ declaration

   FUNCTION         => shift and goto state 1 31.0
   PROCEDURE        => shift and goto state 2 31.8
   USE              => shift and goto state 3 33.0
   Wisi_EOI         => reduce 1 tokens to compilation_unit 24.0
   default          => ERROR

   declaration      goto state 21
   subprogram       goto state 7
   use_clause       goto state 8

   Minimal_Complete_Action => compilation_unit 24.0

State 6:
     25.1:declarations <= declaration ^

   FUNCTION         => reduce 1 tokens to declarations 25.1
   PROCEDURE        => reduce 1 tokens to declarations 25.1
   USE              => reduce 1 tokens to declarations 25.1
   Wisi_EOI         => reduce 1 tokens to declarations 25.1
   default          => ERROR

   Minimal_Complete_Action => declarations 25.1

State 7:
     26.0:declaration <= subprogram ^

   FUNCTION         => reduce 1 tokens to declaration 26.0
   PROCEDURE        => reduce 1 tokens to declaration 26.0
   USE              => reduce 1 tokens to declaration 26.0
   Wisi_EOI         => reduce 1 tokens to declaration 26.0
   default          => ERROR

   Minimal_Complete_Action => declaration 26.0

State 8:
     26.1:declaration <= use_clause ^

   FUNCTION         => reduce 1 tokens to declaration 26.1
   PROCEDURE        => reduce 1 tokens to declaration 26.1
   USE              => reduce 1 tokens to declaration 26.1
   Wisi_EOI         => reduce 1 tokens to declaration 26.1
   default          => ERROR

   Minimal_Complete_Action => declaration 26.1

State 9:
     23.4:block <= BEGIN ^ loop_statement EXCEPTION WHEN name END SYMBOL
     23.5:block <= BEGIN ^ loop_statement EXCEPTION WHEN name END
     23.6:block <= BEGIN ^ loop_statement END SYMBOL
     23.7:block <= BEGIN ^ loop_statement END

   FOR              => shift and goto state 22 27.0
   default          => ERROR

   loop_statement   goto state 23

   Minimal_Complete_Action => FOR 27.0

State 10:
     30.0:parameter_list <= LEFT_PAREN ^ SYMBOL RIGHT_PAREN
     30.1:parameter_list <= LEFT_PAREN ^ RIGHT_PAREN

   RIGHT_PAREN      => shift and goto state 24 30.1
   SYMBOL           => shift and goto state 25 30.0
   default          => ERROR

   Minimal_Complete_Action => RIGHT_PAREN 30.1

State 11:
     31.7:subprogram <= FUNCTION SEMICOLON ^

   FUNCTION         => reduce 2 tokens to subprogram 31.7
   PROCEDURE        => reduce 2 tokens to subprogram 31.7
   USE              => reduce 2 tokens to subprogram 31.7
   Wisi_EOI         => reduce 2 tokens to subprogram 31.7
   default          => ERROR

   Minimal_Complete_Action => subprogram 31.7

State 12:
     23.0:block <= SYMBOL ^ COLON BEGIN loop_statement EXCEPTION WHEN name END SYMBOL
     23.1:block <= SYMBOL ^ COLON BEGIN loop_statement EXCEPTION WHEN name END
     23.2:block <= SYMBOL ^ COLON BEGIN loop_statement END SYMBOL
     23.3:block <= SYMBOL ^ COLON BEGIN loop_statement END
     28.1:name <= SYMBOL ^

   BEGIN            => reduce 1 tokens to name 28.1
   LEFT_PAREN       => reduce 1 tokens to name 28.1
   COLON            => shift and goto state 26 23.0
   DOT              => reduce 1 tokens to name 28.1
   SEMICOLON        => reduce 1 tokens to name 28.1
   SYMBOL           => reduce 1 tokens to name 28.1
   default          => ERROR

   Minimal_Complete_Action => (COLON 23.0, name 28.1)

State 13:
     31.6:subprogram <= FUNCTION block ^ SEMICOLON

   SEMICOLON        => shift and goto state 27 31.6
   default          => ERROR

   Minimal_Complete_Action => SEMICOLON 31.6

State 14:
     28.0:name <= name ^ DOT SYMBOL
     31.0:subprogram <= FUNCTION name ^ parameter_list block SEMICOLON
     31.1:subprogram <= FUNCTION name ^ parameter_list SEMICOLON
     31.2:subprogram <= FUNCTION name ^ block SEMICOLON
     31.3:subprogram <= FUNCTION name ^ SEMICOLON

   BEGIN            => shift and goto state 9 23.4
   LEFT_PAREN       => shift and goto state 10 30.0
   DOT              => shift and goto state 28 28.0
   SEMICOLON        => shift and goto state 29 31.3
   SYMBOL           => shift and goto state 30 23.0
   default          => ERROR

   block            goto state 31
   parameter_list   goto state 32

   Minimal_Complete_Action => SEMICOLON 31.3

State 15:
     31.4:subprogram <= FUNCTION parameter_list ^ block SEMICOLON
     31.5:subprogram <= FUNCTION parameter_list ^ SEMICOLON

   BEGIN            => shift and goto state 9 23.4
   SEMICOLON        => shift and goto state 33 31.5
   SYMBOL           => shift and goto state 30 23.0
   default          => ERROR

   block            goto state 34

   Minimal_Complete_Action => SEMICOLON 31.5

State 16:
     28.1:name <= SYMBOL ^

   END              => reduce 1 tokens to name 28.1
   LOOP             => reduce 1 tokens to name 28.1
   LEFT_PAREN       => reduce 1 tokens to name 28.1
   COMMA            => reduce 1 tokens to name 28.1
   DOT              => reduce 1 tokens to name 28.1
   SEMICOLON        => reduce 1 tokens to name 28.1
   default          => ERROR

   Minimal_Complete_Action => name 28.1

State 17:
     28.0:name <= name ^ DOT SYMBOL
     31.8:subprogram <= PROCEDURE name ^ parameter_list END name SEMICOLON

   LEFT_PAREN       => shift and goto state 10 30.0
   DOT              => shift and goto state 28 28.0
   default          => ERROR

   parameter_list   goto state 35

   Minimal_Complete_Action => LEFT_PAREN 30.0

State 18:
     28.0:name <= name ^ DOT SYMBOL
     29.0:name_list <= name ^

   COMMA            => reduce 1 tokens to name_list 29.0
   DOT              => shift and goto state 28 28.0
   SEMICOLON        => reduce 1 tokens to name_list 29.0
   default          => ERROR

   Minimal_Complete_Action => name_list 29.0

State 19:
     29.1:name_list <= name_list ^ COMMA name
     34.0:nonterminal_014 <= name_list ^

   COMMA            => shift and goto state 36 29.1
   SEMICOLON        => reduce 1 tokens to nonterminal_014 34.0
   default          => ERROR

   Minimal_Complete_Action => nonterminal_014 34.0

State 20:
     33.0:use_clause <= USE nonterminal_014 ^ SEMICOLON

   SEMICOLON        => shift and goto state 37 33.0
   default          => ERROR

   Minimal_Complete_Action => SEMICOLON 33.0

State 21:
     25.0:declarations <= declarations declaration ^

   FUNCTION         => reduce 2 tokens to declarations 25.0
   PROCEDURE        => reduce 2 tokens to declarations 25.0
   USE              => reduce 2 tokens to declarations 25.0
   Wisi_EOI         => reduce 2 tokens to declarations 25.0
   default          => ERROR

   Minimal_Complete_Action => declarations 25.0

State 22:
     27.0:loop_statement <= FOR ^ SYMBOL IN subtype LOOP SEMICOLON

   SYMBOL           => shift and goto state 38 27.0
   default          => ERROR

   Minimal_Complete_Action => SYMBOL 27.0

State 23:
     23.4:block <= BEGIN loop_statement ^ EXCEPTION WHEN name END SYMBOL
     23.5:block <= BEGIN loop_statement ^ EXCEPTION WHEN name END
     23.6:block <= BEGIN loop_statement ^ END SYMBOL
     23.7:block <= BEGIN loop_statement ^ END

   END              => shift and goto state 39 23.6
   EXCEPTION        => shift and goto state 40 23.4
   default          => ERROR

   Minimal_Complete_Action => END 23.6

State 24:
     30.1:parameter_list <= LEFT_PAREN RIGHT_PAREN ^

   BEGIN            => reduce 2 tokens to parameter_list 30.1
   END              => reduce 2 tokens to parameter_list 30.1
   SEMICOLON        => reduce 2 tokens to parameter_list 30.1
   SYMBOL           => reduce 2 tokens to parameter_list 30.1
   default          => ERROR

   Minimal_Complete_Action => parameter_list 30.1

State 25:
     30.0:parameter_list <= LEFT_PAREN SYMBOL ^ RIGHT_PAREN

   RIGHT_PAREN      => shift and goto state 41 30.0
   default          => ERROR

   Minimal_Complete_Action => RIGHT_PAREN 30.0

State 26:
     23.0:block <= SYMBOL COLON ^ BEGIN loop_statement EXCEPTION WHEN name END SYMBOL
     23.1:block <= SYMBOL COLON ^ BEGIN loop_statement EXCEPTION WHEN name END
     23.2:block <= SYMBOL COLON ^ BEGIN loop_statement END SYMBOL
     23.3:block <= SYMBOL COLON ^ BEGIN loop_statement END

   BEGIN            => shift and goto state 42 23.0
   default          => ERROR

   Minimal_Complete_Action => BEGIN 23.0

State 27:
     31.6:subprogram <= FUNCTION block SEMICOLON ^

   FUNCTION         => reduce 3 tokens to subprogram 31.6
   PROCEDURE        => reduce 3 tokens to subprogram 31.6
   USE              => reduce 3 tokens to subprogram 31.6
   Wisi_EOI         => reduce 3 tokens to subprogram 31.6
   default          => ERROR

   Minimal_Complete_Action => subprogram 31.6

State 28:
     28.0:name <= name DOT ^ SYMBOL

   SYMBOL           => shift and goto state 43 28.0
   default          => ERROR

   Minimal_Complete_Action => SYMBOL 28.0

State 29:
     31.3:subprogram <= FUNCTION name SEMICOLON ^

   FUNCTION         => reduce 3 tokens to subprogram 31.3
   PROCEDURE        => reduce 3 tokens to subprogram 31.3
   USE              => reduce 3 tokens to subprogram 31.3
   Wisi_EOI         => reduce 3 tokens to subprogram 31.3
   default          => ERROR

   Minimal_Complete_Action => subprogram 31.3

State 30:
     23.0:block <= SYMBOL ^ COLON BEGIN loop_statement EXCEPTION WHEN name END SYMBOL
     23.1:block <= SYMBOL ^ COLON BEGIN loop_statement EXCEPTION WHEN name END
     23.2:block <= SYMBOL ^ COLON BEGIN loop_statement END SYMBOL
     23.3:block <= SYMBOL ^ COLON BEGIN loop_statement END

   COLON            => shift and goto state 26 23.0
   default          => ERROR

   Minimal_Complete_Action => COLON 23.0

State 31:
     31.2:subprogram <= FUNCTION name block ^ SEMICOLON

   SEMICOLON        => shift and goto state 44 31.2
   default          => ERROR

   Minimal_Complete_Action => SEMICOLON 31.2

State 32:
     31.0:subprogram <= FUNCTION name parameter_list ^ block SEMICOLON
     31.1:subprogram <= FUNCTION name parameter_list ^ SEMICOLON

   BEGIN            => shift and goto state 9 23.4
   SEMICOLON        => shift and goto state 45 31.1
   SYMBOL           => shift and goto state 30 23.0
   default          => ERROR

   block            goto state 46

   Minimal_Complete_Action => SEMICOLON 31.1

State 33:
     31.5:subprogram <= FUNCTION parameter_list SEMICOLON ^

   FUNCTION         => reduce 3 tokens to subprogram 31.5
   PROCEDURE        => reduce 3 tokens to subprogram 31.5
   USE              => reduce 3 tokens to subprogram 31.5
   Wisi_EOI         => reduce 3 tokens to subprogram 31.5
   default          => ERROR

   Minimal_Complete_Action => subprogram 31.5

State 34:
     31.4:subprogram <= FUNCTION parameter_list block ^ SEMICOLON

   SEMICOLON        => shift and goto state 47 31.4
   default          => ERROR

   Minimal_Complete_Action => SEMICOLON 31.4

State 35:
     31.8:subprogram <= PROCEDURE name parameter_list ^ END name SEMICOLON

   END              => shift and goto state 48 31.8
   default          => ERROR

   Minimal_Complete_Action => END 31.8

State 36:
     29.1:name_list <= name_list COMMA ^ name

   SYMBOL           => shift and goto state 16 28.1
   default          => ERROR

   name             goto state 49

   Minimal_Complete_Action => SYMBOL 28.1

State 37:
     33.0:use_clause <= USE nonterminal_014 SEMICOLON ^

   FUNCTION         => reduce 3 tokens to use_clause 33.0
   PROCEDURE        => reduce 3 tokens to use_clause 33.0
   USE              => reduce 3 tokens to use_clause 33.0
   Wisi_EOI         => reduce 3 tokens to use_clause 33.0
   default          => ERROR

   Minimal_Complete_Action => use_clause 33.0

State 38:
     27.0:loop_statement <= FOR SYMBOL ^ IN subtype LOOP SEMICOLON

   IN               => shift and goto state 50 27.0
   default          => ERROR

   Minimal_Complete_Action => IN 27.0

State 39:
     23.6:block <= BEGIN loop_statement END ^ SYMBOL
     23.7:block <= BEGIN loop_statement END ^

   SEMICOLON        => reduce 3 tokens to block 23.7
   SYMBOL           => shift and goto state 51 23.6
   default          => ERROR

   Minimal_Complete_Action => (SYMBOL 23.6, block 23.7)

State 40:
     23.4:block <= BEGIN loop_statement EXCEPTION ^ WHEN name END SYMBOL
     23.5:block <= BEGIN loop_statement EXCEPTION ^ WHEN name END

   WHEN             => shift and goto state 52 23.4
   default          => ERROR

   Minimal_Complete_Action => WHEN 23.4

State 41:
     30.0:parameter_list <= LEFT_PAREN SYMBOL RIGHT_PAREN ^

   BEGIN            => reduce 3 tokens to parameter_list 30.0
   END              => reduce 3 tokens to parameter_list 30.0
   SEMICOLON        => reduce 3 tokens to parameter_list 30.0
   SYMBOL           => reduce 3 tokens to parameter_list 30.0
   default          => ERROR

   Minimal_Complete_Action => parameter_list 30.0

State 42:
     23.0:block <= SYMBOL COLON BEGIN ^ loop_statement EXCEPTION WHEN name END SYMBOL
     23.1:block <= SYMBOL COLON BEGIN ^ loop_statement EXCEPTION WHEN name END
     23.2:block <= SYMBOL COLON BEGIN ^ loop_statement END SYMBOL
     23.3:block <= SYMBOL COLON BEGIN ^ loop_statement END

   FOR              => shift and goto state 22 27.0
   default          => ERROR

   loop_statement   goto state 53

   Minimal_Complete_Action => FOR 27.0

State 43:
     28.0:name <= name DOT SYMBOL ^

   BEGIN            => reduce 3 tokens to name 28.0
   END              => reduce 3 tokens to name 28.0
   LOOP             => reduce 3 tokens to name 28.0
   LEFT_PAREN       => reduce 3 tokens to name 28.0
   COMMA            => reduce 3 tokens to name 28.0
   DOT              => reduce 3 tokens to name 28.0
   SEMICOLON        => reduce 3 tokens to name 28.0
   SYMBOL           => reduce 3 tokens to name 28.0
   default          => ERROR

   Minimal_Complete_Action => name 28.0

State 44:
     31.2:subprogram <= FUNCTION name block SEMICOLON ^

   FUNCTION         => reduce 4 tokens to subprogram 31.2
   PROCEDURE        => reduce 4 tokens to subprogram 31.2
   USE              => reduce 4 tokens to subprogram 31.2
   Wisi_EOI         => reduce 4 tokens to subprogram 31.2
   default          => ERROR

   Minimal_Complete_Action => subprogram 31.2

State 45:
     31.1:subprogram <= FUNCTION name parameter_list SEMICOLON ^

   FUNCTION         => reduce 4 tokens to subprogram 31.1
   PROCEDURE        => reduce 4 tokens to subprogram 31.1
   USE              => reduce 4 tokens to subprogram 31.1
   Wisi_EOI         => reduce 4 tokens to subprogram 31.1
   default          => ERROR

   Minimal_Complete_Action => subprogram 31.1

State 46:
     31.0:subprogram <= FUNCTION name parameter_list block ^ SEMICOLON

   SEMICOLON        => shift and goto state 54 31.0
   default          => ERROR

   Minimal_Complete_Action => SEMICOLON 31.0

State 47:
     31.4:subprogram <= FUNCTION parameter_list block SEMICOLON ^

   FUNCTION         => reduce 4 tokens to subprogram 31.4
   PROCEDURE        => reduce 4 tokens to subprogram 31.4
   USE              => reduce 4 tokens to subprogram 31.4
   Wisi_EOI         => reduce 4 tokens to subprogram 31.4
   default          => ERROR

   Minimal_Complete_Action => subprogram 31.4

State 48:
     31.8:subprogram <= PROCEDURE name parameter_list END ^ name SEMICOLON

   SYMBOL           => shift and goto state 16 28.1
   default          => ERROR

   name             goto state 55

   Minimal_Complete_Action => SYMBOL 28.1

State 49:
     28.0:name <= name ^ DOT SYMBOL
     29.1:name_list <= name_list COMMA name ^

   COMMA            => reduce 3 tokens to name_list 29.1
   DOT              => shift and goto state 28 28.0
   SEMICOLON        => reduce 3 tokens to name_list 29.1
   default          => ERROR

   Minimal_Complete_Action => name_list 29.1

State 50:
     27.0:loop_statement <= FOR SYMBOL IN ^ subtype LOOP SEMICOLON

   SYMBOL           => shift and goto state 16 28.1
   default          => ERROR

   name             goto state 56
   subtype          goto state 57

   Minimal_Complete_Action => SYMBOL 28.1

State 51:
     23.6:block <= BEGIN loop_statement END SYMBOL ^

   SEMICOLON        => reduce 4 tokens to block 23.6
   default          => ERROR

   Minimal_Complete_Action => block 23.6

State 52:
     23.4:block <= BEGIN loop_statement EXCEPTION WHEN ^ name END SYMBOL
     23.5:block <= BEGIN loop_statement EXCEPTION WHEN ^ name END

   SYMBOL           => shift and goto state 16 28.1
   default          => ERROR

   name             goto state 58

   Minimal_Complete_Action => SYMBOL 28.1

State 53:
     23.0:block <= SYMBOL COLON BEGIN loop_statement ^ EXCEPTION WHEN name END SYMBOL
     23.1:block <= SYMBOL COLON BEGIN loop_statement ^ EXCEPTION WHEN name END
     23.2:block <= SYMBOL COLON BEGIN loop_statement ^ END SYMBOL
     23.3:block <= SYMBOL COLON BEGIN loop_statement ^ END

   END              => shift and goto state 59 23.2
   EXCEPTION        => shift and goto state 60 23.0
   default          => ERROR

   Minimal_Complete_Action => END 23.2

State 54:
     31.0:subprogram <= FUNCTION name parameter_list block SEMICOLON ^

   FUNCTION         => reduce 5 tokens to subprogram 31.0
   PROCEDURE        => reduce 5 tokens to subprogram 31.0
   USE              => reduce 5 tokens to subprogram 31.0
   Wisi_EOI         => reduce 5 tokens to subprogram 31.0
   default          => ERROR

   Minimal_Complete_Action => subprogram 31.0

State 55:
     28.0:name <= name ^ DOT SYMBOL
     31.8:subprogram <= PROCEDURE name parameter_list END name ^ SEMICOLON

   DOT              => shift and goto state 28 28.0
   SEMICOLON        => shift and goto state 61 31.8
   default          => ERROR

   Minimal_Complete_Action => SEMICOLON 31.8

State 56:
     28.0:name <= name ^ DOT SYMBOL
     32.0:subtype <= name ^

   LOOP             => reduce 1 tokens to subtype 32.0
   DOT              => shift and goto state 28 28.0
   default          => ERROR

   Minimal_Complete_Action => subtype 32.0

State 57:
     27.0:loop_statement <= FOR SYMBOL IN subtype ^ LOOP SEMICOLON

   LOOP             => shift and goto state 62 27.0
   default          => ERROR

   Minimal_Complete_Action => LOOP 27.0

State 58:
     23.4:block <= BEGIN loop_statement EXCEPTION WHEN name ^ END SYMBOL
     23.5:block <= BEGIN loop_statement EXCEPTION WHEN name ^ END
     28.0:name <= name ^ DOT SYMBOL

   END              => shift and goto state 63 23.4
   DOT              => shift and goto state 28 28.0
   default          => ERROR

   Minimal_Complete_Action => END 23.4

State 59:
     23.2:block <= SYMBOL COLON BEGIN loop_statement END ^ SYMBOL
     23.3:block <= SYMBOL COLON BEGIN loop_statement END ^

   SEMICOLON        => reduce 5 tokens to block 23.3
   SYMBOL           => shift and goto state 64 23.2
   default          => ERROR

   Minimal_Complete_Action => (SYMBOL 23.2, block 23.3)

State 60:
     23.0:block <= SYMBOL COLON BEGIN loop_statement EXCEPTION ^ WHEN name END SYMBOL
     23.1:block <= SYMBOL COLON BEGIN loop_statement EXCEPTION ^ WHEN name END

   WHEN             => shift and goto state 65 23.0
   default          => ERROR

   Minimal_Complete_Action => WHEN 23.0

State 61:
     31.8:subprogram <= PROCEDURE name parameter_list END name SEMICOLON ^

   FUNCTION         => reduce 6 tokens to subprogram 31.8
   PROCEDURE        => reduce 6 tokens to subprogram 31.8
   USE              => reduce 6 tokens to subprogram 31.8
   Wisi_EOI         => reduce 6 tokens to subprogram 31.8
   default          => ERROR

   Minimal_Complete_Action => subprogram 31.8

State 62:
     27.0:loop_statement <= FOR SYMBOL IN subtype LOOP ^ SEMICOLON

   SEMICOLON        => shift and goto state 66 27.0
   default          => ERROR

   Minimal_Complete_Action => SEMICOLON 27.0

State 63:
     23.4:block <= BEGIN loop_statement EXCEPTION WHEN name END ^ SYMBOL
     23.5:block <= BEGIN loop_statement EXCEPTION WHEN name END ^

   SEMICOLON        => reduce 6 tokens to block 23.5
   SYMBOL           => shift and goto state 67 23.4
   default          => ERROR

   Minimal_Complete_Action => (SYMBOL 23.4, block 23.5)

State 64:
     23.2:block <= SYMBOL COLON BEGIN loop_statement END SYMBOL ^

   SEMICOLON        => reduce 6 tokens to block 23.2
   default          => ERROR

   Minimal_Complete_Action => block 23.2

State 65:
     23.0:block <= SYMBOL COLON BEGIN loop_statement EXCEPTION WHEN ^ name END SYMBOL
     23.1:block <= SYMBOL COLON BEGIN loop_statement EXCEPTION WHEN ^ name END

   SYMBOL           => shift and goto state 16 28.1
   default          => ERROR

   name             goto state 68

   Minimal_Complete_Action => SYMBOL 28.1

State 66:
     27.0:loop_statement <= FOR SYMBOL IN subtype LOOP SEMICOLON ^

   END              => reduce 6 tokens to loop_statement 27.0
   EXCEPTION        => reduce 6 tokens to loop_statement 27.0
   default          => ERROR

   Minimal_Complete_Action => loop_statement 27.0

State 67:
     23.4:block <= BEGIN loop_statement EXCEPTION WHEN name END SYMBOL ^

   SEMICOLON        => reduce 7 tokens to block 23.4
   default          => ERROR

   Minimal_Complete_Action => block 23.4

State 68:
     23.0:block <= SYMBOL COLON BEGIN loop_statement EXCEPTION WHEN name ^ END SYMBOL
     23.1:block <= SYMBOL COLON BEGIN loop_statement EXCEPTION WHEN name ^ END
     28.0:name <= name ^ DOT SYMBOL

   END              => shift and goto state 69 23.0
   DOT              => shift and goto state 28 28.0
   default          => ERROR

   Minimal_Complete_Action => END 23.0

State 69:
     23.0:block <= SYMBOL COLON BEGIN loop_statement EXCEPTION WHEN name END ^ SYMBOL
     23.1:block <= SYMBOL COLON BEGIN loop_statement EXCEPTION WHEN name END ^

   SEMICOLON        => reduce 8 tokens to block 23.1
   SYMBOL           => shift and goto state 70 23.0
   default          => ERROR

   Minimal_Complete_Action => (SYMBOL 23.0, block 23.1)

State 70:
     23.0:block <= SYMBOL COLON BEGIN loop_statement EXCEPTION WHEN name END SYMBOL ^

   SEMICOLON        => reduce 9 tokens to block 23.0
   default          => ERROR

   Minimal_Complete_Action => block 23.0

69 states with minimal_complete_actions; 74 total minimal_complete_actions.

 0 accept/reduce conflicts, 0 shift/reduce conflicts, 0 reduce/reduce conflicts

 12 rules, 27 user actions, 11 checks, 71 states
