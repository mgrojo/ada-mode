Tokens:
 0 => WHITESPACE
 1 => NEW_LINE
 2 => COMMENT_1
 3 => COMMENT_2
 4 => BEGIN
 5 => END
 6 => EXCEPTION
 7 => FOR
 8 => FUNCTION
 9 => IN
 10 => LOOP
 11 => PROCEDURE
 12 => WHEN
 13 => USE
 14 => LEFT_PAREN
 15 => RIGHT_PAREN
 16 => COMMA
 17 => DOT
 18 => SEMICOLON
 19 => SYMBOL
 20 => Wisi_EOI
 21 => wisitoken_accept
 22 => block
 23 => compilation_unit
 24 => declarations
 25 => declaration
 26 => loop_statement
 27 => name
 28 => name_list
 29 => parameter_list
 30 => subprogram
 31 => subtype
 32 => use_clause

Productions:
21.0: wisitoken_accept <= compilation_unit Wisi_EOI
22.0: block <= BEGIN loop_statement EXCEPTION WHEN name END
22.1: block <= BEGIN loop_statement END
23.0: compilation_unit <= declarations
24.0: declarations <= declarations declaration ; (1) LEFT
24.1: declarations <= declaration
25.0: declaration <= subprogram
25.1: declaration <= use_clause
26.0: loop_statement <= FOR SYMBOL IN subtype LOOP SEMICOLON
27.0: name <= name DOT SYMBOL ; (2) LEFT
27.1: name <= SYMBOL
28.0: name_list <= name
28.1: name_list <= name_list COMMA name ; (3) LEFT
29.0: parameter_list <= LEFT_PAREN SYMBOL RIGHT_PAREN
29.1: parameter_list <= LEFT_PAREN RIGHT_PAREN
30.0: subprogram <= FUNCTION name parameter_list block SEMICOLON
30.1: subprogram <= FUNCTION name parameter_list SEMICOLON
30.2: subprogram <= FUNCTION name block SEMICOLON
30.3: subprogram <= FUNCTION name SEMICOLON
30.4: subprogram <= FUNCTION parameter_list block SEMICOLON
30.5: subprogram <= FUNCTION parameter_list SEMICOLON
30.6: subprogram <= FUNCTION block SEMICOLON
30.7: subprogram <= FUNCTION SEMICOLON
30.8: subprogram <= PROCEDURE name parameter_list END name SEMICOLON
31.0: subtype <= name
32.0: use_clause <= USE name_list SEMICOLON

Recursions:
1 => (24 (0 LEFT) -> )
2 => (27 (0 LEFT) -> )
3 => (28 (1 LEFT) -> )

McKenzie:
(Insert =>
 BEGIN       => 4,
 END         => 4,
 EXCEPTION   => 4,
 FOR         => 4,
 FUNCTION    => 4,
 IN          => 4,
 LOOP        => 4,
 PROCEDURE   => 4,
 WHEN        => 4,
 USE         => 4,
 LEFT_PAREN  => 4,
 RIGHT_PAREN => 4,
 COMMA       => 4,
 DOT         => 4,
 SEMICOLON   => 4,
 SYMBOL      => 4,
 Wisi_EOI    => 4)
(Delete =>
 BEGIN       => 4,
 END         => 4,
 EXCEPTION   => 4,
 FOR         => 4,
 FUNCTION    => 4,
 IN          => 4,
 LOOP        => 4,
 PROCEDURE   => 4,
 WHEN        => 4,
 USE         => 4,
 LEFT_PAREN  => 4,
 RIGHT_PAREN => 4,
 COMMA       => 4,
 DOT         => 4,
 SEMICOLON   => 4,
 SYMBOL      => 4,
 Wisi_EOI    => 4)
(Push_Back =>
 BEGIN       => 4,
 END         => 4,
 EXCEPTION   => 4,
 FOR         => 4,
 FUNCTION    => 4,
 IN          => 4,
 LOOP        => 4,
 PROCEDURE   => 4,
 WHEN        => 4,
 USE         => 4,
 LEFT_PAREN  => 4,
 RIGHT_PAREN => 4,
 COMMA       => 4,
 DOT         => 4,
 SEMICOLON   => 4,
 SYMBOL      => 4,
 Wisi_EOI    => 4,
 wisitoken_accept => 4,
 block            => 4,
 compilation_unit => 4,
 declarations     => 4,
 declaration      => 4,
 loop_statement   => 4,
 name             => 4,
 name_list        => 4,
 parameter_list   => 4,
 subprogram       => 4,
 subtype          => 4,
 use_clause       => 4)
(Undo_Reduce =>
 wisitoken_accept => 4,
 block            => 4,
 compilation_unit => 4,
 declarations     => 4,
 declaration      => 4,
 loop_statement   => 4,
 name             => 4,
 name_list        => 4,
 parameter_list   => 4,
 subprogram       => 4,
 subtype          => 4,
 use_clause       => 4)
Minimal_Complete_Cost_Delta => -1
Fast_Forward      =>  0
Matching_Begin    =>  0
Ignore_Check_Fail => 4
Task_Count        => 0
Check_Limit       => 3
Check_Delta_Limit => 200
Enqueue_Limit     => 10000

LALR Parse Table:
State 0:
     21.0:wisitoken_accept <= ^ compilation_unit Wisi_EOI, 

   FUNCTION         => shift and goto state 1
   PROCEDURE        => shift and goto state 2
   USE              => shift and goto state 3
   default          => ERROR

   compilation_unit goto state 4
   declarations     goto state 5
   declaration      goto state 6
   subprogram       goto state 7
   use_clause       goto state 8

   Minimal_Complete_Action => FUNCTION

State 1:
     30.0:subprogram <= FUNCTION ^ name parameter_list block SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI
     30.1:subprogram <= FUNCTION ^ name parameter_list SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI
     30.2:subprogram <= FUNCTION ^ name block SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI
     30.3:subprogram <= FUNCTION ^ name SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI
     30.4:subprogram <= FUNCTION ^ parameter_list block SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI
     30.5:subprogram <= FUNCTION ^ parameter_list SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI
     30.6:subprogram <= FUNCTION ^ block SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI
     30.7:subprogram <= FUNCTION ^ SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI

   BEGIN            => shift and goto state 9
   LEFT_PAREN       => shift and goto state 10
   SEMICOLON        => shift and goto state 11
   SYMBOL           => shift and goto state 12
   default          => ERROR

   block            goto state 13
   name             goto state 14
   parameter_list   goto state 15

   Minimal_Complete_Action => SEMICOLON

State 2:
     30.8:subprogram <= PROCEDURE ^ name parameter_list END name SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI

   SYMBOL           => shift and goto state 12
   default          => ERROR

   name             goto state 16

   Minimal_Complete_Action => SYMBOL

State 3:
     32.0:use_clause <= USE ^ name_list SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI

   SYMBOL           => shift and goto state 12
   default          => ERROR

   name             goto state 17
   name_list        goto state 18

   Minimal_Complete_Action => SYMBOL

State 4:
     21.0:wisitoken_accept <= compilation_unit ^ Wisi_EOI, 

   Wisi_EOI         => accept it 21.0
   default          => ERROR

   Minimal_Complete_Action => 

State 5:
     23.0:compilation_unit <= declarations ^, Wisi_EOI
     24.0:declarations <= declarations ^ declaration, FUNCTION/PROCEDURE/USE/Wisi_EOI

   FUNCTION         => shift and goto state 1
   PROCEDURE        => shift and goto state 2
   USE              => shift and goto state 3
   Wisi_EOI         => reduce 1 tokens to compilation_unit 23.0
   default          => ERROR

   declaration      goto state 19
   subprogram       goto state 7
   use_clause       goto state 8

   Minimal_Complete_Action => compilation_unit

State 6:
     24.1:declarations <= declaration ^, FUNCTION/PROCEDURE/USE/Wisi_EOI

   FUNCTION         => reduce 1 tokens to declarations 24.1
   PROCEDURE        => reduce 1 tokens to declarations 24.1
   USE              => reduce 1 tokens to declarations 24.1
   Wisi_EOI         => reduce 1 tokens to declarations 24.1
   default          => ERROR

   Minimal_Complete_Action => declarations

State 7:
     25.0:declaration <= subprogram ^, FUNCTION/PROCEDURE/USE/Wisi_EOI

   FUNCTION         => reduce 1 tokens to declaration 25.0
   PROCEDURE        => reduce 1 tokens to declaration 25.0
   USE              => reduce 1 tokens to declaration 25.0
   Wisi_EOI         => reduce 1 tokens to declaration 25.0
   default          => ERROR

   Minimal_Complete_Action => declaration

State 8:
     25.1:declaration <= use_clause ^, FUNCTION/PROCEDURE/USE/Wisi_EOI

   FUNCTION         => reduce 1 tokens to declaration 25.1
   PROCEDURE        => reduce 1 tokens to declaration 25.1
   USE              => reduce 1 tokens to declaration 25.1
   Wisi_EOI         => reduce 1 tokens to declaration 25.1
   default          => ERROR

   Minimal_Complete_Action => declaration

State 9:
     22.0:block <= BEGIN ^ loop_statement EXCEPTION WHEN name END, SEMICOLON
     22.1:block <= BEGIN ^ loop_statement END, SEMICOLON

   FOR              => shift and goto state 20
   default          => ERROR

   loop_statement   goto state 21

   Minimal_Complete_Action => FOR

State 10:
     29.0:parameter_list <= LEFT_PAREN ^ SYMBOL RIGHT_PAREN, BEGIN/END/SEMICOLON
     29.1:parameter_list <= LEFT_PAREN ^ RIGHT_PAREN, BEGIN/END/SEMICOLON

   RIGHT_PAREN      => shift and goto state 22
   SYMBOL           => shift and goto state 23
   default          => ERROR

   Minimal_Complete_Action => RIGHT_PAREN

State 11:
     30.7:subprogram <= FUNCTION SEMICOLON ^, FUNCTION/PROCEDURE/USE/Wisi_EOI

   FUNCTION         => reduce 2 tokens to subprogram 30.7
   PROCEDURE        => reduce 2 tokens to subprogram 30.7
   USE              => reduce 2 tokens to subprogram 30.7
   Wisi_EOI         => reduce 2 tokens to subprogram 30.7
   default          => ERROR

   Minimal_Complete_Action => subprogram

State 12:
     27.1:name <= SYMBOL ^, BEGIN/END/LOOP/LEFT_PAREN/COMMA/DOT/SEMICOLON

   BEGIN            => reduce 1 tokens to name 27.1
   END              => reduce 1 tokens to name 27.1
   LOOP             => reduce 1 tokens to name 27.1
   LEFT_PAREN       => reduce 1 tokens to name 27.1
   COMMA            => reduce 1 tokens to name 27.1
   DOT              => reduce 1 tokens to name 27.1
   SEMICOLON        => reduce 1 tokens to name 27.1
   default          => ERROR

   Minimal_Complete_Action => name

State 13:
     30.6:subprogram <= FUNCTION block ^ SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI

   SEMICOLON        => shift and goto state 24
   default          => ERROR

   Minimal_Complete_Action => SEMICOLON

State 14:
     27.0:name <= name ^ DOT SYMBOL, BEGIN/LEFT_PAREN/DOT/SEMICOLON
     30.0:subprogram <= FUNCTION name ^ parameter_list block SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI
     30.1:subprogram <= FUNCTION name ^ parameter_list SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI
     30.2:subprogram <= FUNCTION name ^ block SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI
     30.3:subprogram <= FUNCTION name ^ SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI

   BEGIN            => shift and goto state 9
   LEFT_PAREN       => shift and goto state 10
   DOT              => shift and goto state 25
   SEMICOLON        => shift and goto state 26
   default          => ERROR

   block            goto state 27
   parameter_list   goto state 28

   Minimal_Complete_Action => SEMICOLON

State 15:
     30.4:subprogram <= FUNCTION parameter_list ^ block SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI
     30.5:subprogram <= FUNCTION parameter_list ^ SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI

   BEGIN            => shift and goto state 9
   SEMICOLON        => shift and goto state 29
   default          => ERROR

   block            goto state 30

   Minimal_Complete_Action => SEMICOLON

State 16:
     27.0:name <= name ^ DOT SYMBOL, LEFT_PAREN/DOT
     30.8:subprogram <= PROCEDURE name ^ parameter_list END name SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI

   LEFT_PAREN       => shift and goto state 10
   DOT              => shift and goto state 25
   default          => ERROR

   parameter_list   goto state 31

   Minimal_Complete_Action => LEFT_PAREN

State 17:
     27.0:name <= name ^ DOT SYMBOL, COMMA/DOT/SEMICOLON
     28.0:name_list <= name ^, COMMA/SEMICOLON

   COMMA            => reduce 1 tokens to name_list 28.0
   DOT              => shift and goto state 25
   SEMICOLON        => reduce 1 tokens to name_list 28.0
   default          => ERROR

   Minimal_Complete_Action => name_list

State 18:
     28.1:name_list <= name_list ^ COMMA name, COMMA/SEMICOLON
     32.0:use_clause <= USE name_list ^ SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI

   COMMA            => shift and goto state 32
   SEMICOLON        => shift and goto state 33
   default          => ERROR

   Minimal_Complete_Action => SEMICOLON

State 19:
     24.0:declarations <= declarations declaration ^, FUNCTION/PROCEDURE/USE/Wisi_EOI

   FUNCTION         => reduce 2 tokens to declarations 24.0
   PROCEDURE        => reduce 2 tokens to declarations 24.0
   USE              => reduce 2 tokens to declarations 24.0
   Wisi_EOI         => reduce 2 tokens to declarations 24.0
   default          => ERROR

   Minimal_Complete_Action => declarations recursive

State 20:
     26.0:loop_statement <= FOR ^ SYMBOL IN subtype LOOP SEMICOLON, END/EXCEPTION

   SYMBOL           => shift and goto state 34
   default          => ERROR

   Minimal_Complete_Action => SYMBOL

State 21:
     22.0:block <= BEGIN loop_statement ^ EXCEPTION WHEN name END, SEMICOLON
     22.1:block <= BEGIN loop_statement ^ END, SEMICOLON

   END              => shift and goto state 35
   EXCEPTION        => shift and goto state 36
   default          => ERROR

   Minimal_Complete_Action => END

State 22:
     29.1:parameter_list <= LEFT_PAREN RIGHT_PAREN ^, BEGIN/END/SEMICOLON

   BEGIN            => reduce 2 tokens to parameter_list 29.1
   END              => reduce 2 tokens to parameter_list 29.1
   SEMICOLON        => reduce 2 tokens to parameter_list 29.1
   default          => ERROR

   Minimal_Complete_Action => parameter_list

State 23:
     29.0:parameter_list <= LEFT_PAREN SYMBOL ^ RIGHT_PAREN, BEGIN/END/SEMICOLON

   RIGHT_PAREN      => shift and goto state 37
   default          => ERROR

   Minimal_Complete_Action => RIGHT_PAREN

State 24:
     30.6:subprogram <= FUNCTION block SEMICOLON ^, FUNCTION/PROCEDURE/USE/Wisi_EOI

   FUNCTION         => reduce 3 tokens to subprogram 30.6
   PROCEDURE        => reduce 3 tokens to subprogram 30.6
   USE              => reduce 3 tokens to subprogram 30.6
   Wisi_EOI         => reduce 3 tokens to subprogram 30.6
   default          => ERROR

   Minimal_Complete_Action => subprogram

State 25:
     27.0:name <= name DOT ^ SYMBOL, BEGIN/END/LOOP/LEFT_PAREN/COMMA/DOT/SEMICOLON

   SYMBOL           => shift and goto state 38
   default          => ERROR

   Minimal_Complete_Action => SYMBOL recursive

State 26:
     30.3:subprogram <= FUNCTION name SEMICOLON ^, FUNCTION/PROCEDURE/USE/Wisi_EOI

   FUNCTION         => reduce 3 tokens to subprogram 30.3
   PROCEDURE        => reduce 3 tokens to subprogram 30.3
   USE              => reduce 3 tokens to subprogram 30.3
   Wisi_EOI         => reduce 3 tokens to subprogram 30.3
   default          => ERROR

   Minimal_Complete_Action => subprogram

State 27:
     30.2:subprogram <= FUNCTION name block ^ SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI

   SEMICOLON        => shift and goto state 39
   default          => ERROR

   Minimal_Complete_Action => SEMICOLON

State 28:
     30.0:subprogram <= FUNCTION name parameter_list ^ block SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI
     30.1:subprogram <= FUNCTION name parameter_list ^ SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI

   BEGIN            => shift and goto state 9
   SEMICOLON        => shift and goto state 40
   default          => ERROR

   block            goto state 41

   Minimal_Complete_Action => SEMICOLON

State 29:
     30.5:subprogram <= FUNCTION parameter_list SEMICOLON ^, FUNCTION/PROCEDURE/USE/Wisi_EOI

   FUNCTION         => reduce 3 tokens to subprogram 30.5
   PROCEDURE        => reduce 3 tokens to subprogram 30.5
   USE              => reduce 3 tokens to subprogram 30.5
   Wisi_EOI         => reduce 3 tokens to subprogram 30.5
   default          => ERROR

   Minimal_Complete_Action => subprogram

State 30:
     30.4:subprogram <= FUNCTION parameter_list block ^ SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI

   SEMICOLON        => shift and goto state 42
   default          => ERROR

   Minimal_Complete_Action => SEMICOLON

State 31:
     30.8:subprogram <= PROCEDURE name parameter_list ^ END name SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI

   END              => shift and goto state 43
   default          => ERROR

   Minimal_Complete_Action => END

State 32:
     28.1:name_list <= name_list COMMA ^ name, COMMA/SEMICOLON

   SYMBOL           => shift and goto state 12
   default          => ERROR

   name             goto state 44

   Minimal_Complete_Action => SYMBOL recursive

State 33:
     32.0:use_clause <= USE name_list SEMICOLON ^, FUNCTION/PROCEDURE/USE/Wisi_EOI

   FUNCTION         => reduce 3 tokens to use_clause 32.0
   PROCEDURE        => reduce 3 tokens to use_clause 32.0
   USE              => reduce 3 tokens to use_clause 32.0
   Wisi_EOI         => reduce 3 tokens to use_clause 32.0
   default          => ERROR

   Minimal_Complete_Action => use_clause

State 34:
     26.0:loop_statement <= FOR SYMBOL ^ IN subtype LOOP SEMICOLON, END/EXCEPTION

   IN               => shift and goto state 45
   default          => ERROR

   Minimal_Complete_Action => IN

State 35:
     22.1:block <= BEGIN loop_statement END ^, SEMICOLON

   SEMICOLON        => reduce 3 tokens to block 22.1
   default          => ERROR

   Minimal_Complete_Action => block

State 36:
     22.0:block <= BEGIN loop_statement EXCEPTION ^ WHEN name END, SEMICOLON

   WHEN             => shift and goto state 46
   default          => ERROR

   Minimal_Complete_Action => WHEN

State 37:
     29.0:parameter_list <= LEFT_PAREN SYMBOL RIGHT_PAREN ^, BEGIN/END/SEMICOLON

   BEGIN            => reduce 3 tokens to parameter_list 29.0
   END              => reduce 3 tokens to parameter_list 29.0
   SEMICOLON        => reduce 3 tokens to parameter_list 29.0
   default          => ERROR

   Minimal_Complete_Action => parameter_list

State 38:
     27.0:name <= name DOT SYMBOL ^, BEGIN/END/LOOP/LEFT_PAREN/COMMA/DOT/SEMICOLON

   BEGIN            => reduce 3 tokens to name 27.0
   END              => reduce 3 tokens to name 27.0
   LOOP             => reduce 3 tokens to name 27.0
   LEFT_PAREN       => reduce 3 tokens to name 27.0
   COMMA            => reduce 3 tokens to name 27.0
   DOT              => reduce 3 tokens to name 27.0
   SEMICOLON        => reduce 3 tokens to name 27.0
   default          => ERROR

   Minimal_Complete_Action => name recursive

State 39:
     30.2:subprogram <= FUNCTION name block SEMICOLON ^, FUNCTION/PROCEDURE/USE/Wisi_EOI

   FUNCTION         => reduce 4 tokens to subprogram 30.2
   PROCEDURE        => reduce 4 tokens to subprogram 30.2
   USE              => reduce 4 tokens to subprogram 30.2
   Wisi_EOI         => reduce 4 tokens to subprogram 30.2
   default          => ERROR

   Minimal_Complete_Action => subprogram

State 40:
     30.1:subprogram <= FUNCTION name parameter_list SEMICOLON ^, FUNCTION/PROCEDURE/USE/Wisi_EOI

   FUNCTION         => reduce 4 tokens to subprogram 30.1
   PROCEDURE        => reduce 4 tokens to subprogram 30.1
   USE              => reduce 4 tokens to subprogram 30.1
   Wisi_EOI         => reduce 4 tokens to subprogram 30.1
   default          => ERROR

   Minimal_Complete_Action => subprogram

State 41:
     30.0:subprogram <= FUNCTION name parameter_list block ^ SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI

   SEMICOLON        => shift and goto state 47
   default          => ERROR

   Minimal_Complete_Action => SEMICOLON

State 42:
     30.4:subprogram <= FUNCTION parameter_list block SEMICOLON ^, FUNCTION/PROCEDURE/USE/Wisi_EOI

   FUNCTION         => reduce 4 tokens to subprogram 30.4
   PROCEDURE        => reduce 4 tokens to subprogram 30.4
   USE              => reduce 4 tokens to subprogram 30.4
   Wisi_EOI         => reduce 4 tokens to subprogram 30.4
   default          => ERROR

   Minimal_Complete_Action => subprogram

State 43:
     30.8:subprogram <= PROCEDURE name parameter_list END ^ name SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI

   SYMBOL           => shift and goto state 12
   default          => ERROR

   name             goto state 48

   Minimal_Complete_Action => SYMBOL

State 44:
     27.0:name <= name ^ DOT SYMBOL, COMMA/DOT/SEMICOLON
     28.1:name_list <= name_list COMMA name ^, COMMA/SEMICOLON

   COMMA            => reduce 3 tokens to name_list 28.1
   DOT              => shift and goto state 25
   SEMICOLON        => reduce 3 tokens to name_list 28.1
   default          => ERROR

   Minimal_Complete_Action => name_list recursive

State 45:
     26.0:loop_statement <= FOR SYMBOL IN ^ subtype LOOP SEMICOLON, END/EXCEPTION

   SYMBOL           => shift and goto state 12
   default          => ERROR

   name             goto state 49
   subtype          goto state 50

   Minimal_Complete_Action => SYMBOL

State 46:
     22.0:block <= BEGIN loop_statement EXCEPTION WHEN ^ name END, SEMICOLON

   SYMBOL           => shift and goto state 12
   default          => ERROR

   name             goto state 51

   Minimal_Complete_Action => SYMBOL

State 47:
     30.0:subprogram <= FUNCTION name parameter_list block SEMICOLON ^, FUNCTION/PROCEDURE/USE/Wisi_EOI

   FUNCTION         => reduce 5 tokens to subprogram 30.0
   PROCEDURE        => reduce 5 tokens to subprogram 30.0
   USE              => reduce 5 tokens to subprogram 30.0
   Wisi_EOI         => reduce 5 tokens to subprogram 30.0
   default          => ERROR

   Minimal_Complete_Action => subprogram

State 48:
     27.0:name <= name ^ DOT SYMBOL, DOT/SEMICOLON
     30.8:subprogram <= PROCEDURE name parameter_list END name ^ SEMICOLON, FUNCTION/PROCEDURE/USE/Wisi_EOI

   DOT              => shift and goto state 25
   SEMICOLON        => shift and goto state 52
   default          => ERROR

   Minimal_Complete_Action => SEMICOLON

State 49:
     27.0:name <= name ^ DOT SYMBOL, LOOP/DOT
     31.0:subtype <= name ^, LOOP

   LOOP             => reduce 1 tokens to subtype 31.0
   DOT              => shift and goto state 25
   default          => ERROR

   Minimal_Complete_Action => subtype

State 50:
     26.0:loop_statement <= FOR SYMBOL IN subtype ^ LOOP SEMICOLON, END/EXCEPTION

   LOOP             => shift and goto state 53
   default          => ERROR

   Minimal_Complete_Action => LOOP

State 51:
     22.0:block <= BEGIN loop_statement EXCEPTION WHEN name ^ END, SEMICOLON
     27.0:name <= name ^ DOT SYMBOL, END/DOT

   END              => shift and goto state 54
   DOT              => shift and goto state 25
   default          => ERROR

   Minimal_Complete_Action => END

State 52:
     30.8:subprogram <= PROCEDURE name parameter_list END name SEMICOLON ^, FUNCTION/PROCEDURE/USE/Wisi_EOI

   FUNCTION         => reduce 6 tokens to subprogram 30.8
   PROCEDURE        => reduce 6 tokens to subprogram 30.8
   USE              => reduce 6 tokens to subprogram 30.8
   Wisi_EOI         => reduce 6 tokens to subprogram 30.8
   default          => ERROR

   Minimal_Complete_Action => subprogram

State 53:
     26.0:loop_statement <= FOR SYMBOL IN subtype LOOP ^ SEMICOLON, END/EXCEPTION

   SEMICOLON        => shift and goto state 55
   default          => ERROR

   Minimal_Complete_Action => SEMICOLON

State 54:
     22.0:block <= BEGIN loop_statement EXCEPTION WHEN name END ^, SEMICOLON

   SEMICOLON        => reduce 6 tokens to block 22.0
   default          => ERROR

   Minimal_Complete_Action => block

State 55:
     26.0:loop_statement <= FOR SYMBOL IN subtype LOOP SEMICOLON ^, END/EXCEPTION

   END              => reduce 6 tokens to loop_statement 26.0
   EXCEPTION        => reduce 6 tokens to loop_statement 26.0
   default          => ERROR

   Minimal_Complete_Action => loop_statement

 0 accept/reduce conflicts, 0 shift/reduce conflicts, 0 reduce/reduce conflicts

 11 rules, 20 user actions, 3 checks, 56 states
