;;; generated from java_ebnf.wy
;;;
;; Examples of EBNF syntax used in the Java grammar file
;; https://github.com/antlr/grammars-v4/tree/master/java
;;
;; Note that the only *.*_good file is java_ebnf_bnf.wy_good, and that
;; this file does not declare all used tokens; we are only testing the
;; translation from EBNF to BNF.

%meta_syntax BNF

%token <punctuation> LEFT_BRACE "{"
%token <punctuation> COMMA ","
%token <punctuation> RIGHT_BRACE "}"
%token <punctuation> SEMICOLON ";"
%token <punctuation> DOT "."
%token <punctuation> PLUS_PLUS "++"
%token <punctuation> MINUS_MINUS "--"
%start compilationUnit

;; IDENTIFIER QUESTION | IDENTIFIER STAR
compilationUnit
  : packageDeclaration nonterminal_008_list_opt nonterminal_011_list_opt EOF
  | nonterminal_008_list_opt nonterminal_011_list_opt EOF
  ;

statement
  : blockLabel=block
  | TRY block nonterminal_038
  | SWITCH parExpression LEFT_BRACE nonterminal_016_list_opt nonterminal_019_list_opt RIGHT_BRACE
  ;

;; rhs_group_item QUESTION | STRING_LITERAL_2 QUESTION
enumDeclaration
  : ENUM IDENTIFIER nonterminal_035 LEFT_BRACE enumConstants COMMA enumBodyDeclarations RIGHT_BRACE
  | ENUM IDENTIFIER LEFT_BRACE enumConstants COMMA enumBodyDeclarations RIGHT_BRACE
  | ENUM IDENTIFIER nonterminal_042 LEFT_BRACE COMMA enumBodyDeclarations RIGHT_BRACE
  | ENUM IDENTIFIER LEFT_BRACE COMMA enumBodyDeclarations RIGHT_BRACE
  | ENUM IDENTIFIER nonterminal_041 LEFT_BRACE enumConstants enumBodyDeclarations RIGHT_BRACE
  | ENUM IDENTIFIER nonterminal_041 LEFT_BRACE enumBodyDeclarations RIGHT_BRACE
  | ENUM IDENTIFIER LEFT_BRACE enumConstants enumBodyDeclarations RIGHT_BRACE
  | ENUM IDENTIFIER LEFT_BRACE enumBodyDeclarations RIGHT_BRACE
  | ENUM IDENTIFIER nonterminal_040 LEFT_BRACE enumConstants COMMA RIGHT_BRACE
  | ENUM IDENTIFIER nonterminal_040 LEFT_BRACE enumConstants RIGHT_BRACE
  | ENUM IDENTIFIER nonterminal_040 LEFT_BRACE COMMA RIGHT_BRACE
  | ENUM IDENTIFIER nonterminal_040 LEFT_BRACE RIGHT_BRACE
  | ENUM IDENTIFIER LEFT_BRACE enumConstants COMMA RIGHT_BRACE
  | ENUM IDENTIFIER LEFT_BRACE enumConstants RIGHT_BRACE
  | ENUM IDENTIFIER LEFT_BRACE COMMA RIGHT_BRACE
  | ENUM IDENTIFIER LEFT_BRACE RIGHT_BRACE
  ;

;; labeled rhs_optional_item
forControl
  : enhancedForControl
  | forInit SEMICOLON expression SEMICOLON forUpdate=expressionList
  | SEMICOLON expression SEMICOLON forUpdate=expressionList
  | forInit SEMICOLON SEMICOLON forUpdate=expressionList
  | SEMICOLON SEMICOLON forUpdate=expressionList
  | forInit SEMICOLON expression SEMICOLON
  | forInit SEMICOLON SEMICOLON
  | SEMICOLON expression SEMICOLON
  | SEMICOLON SEMICOLON
  ;

;; labeled STRING_LITERAL_2, non-trivial rhs_alternative_list, labeled rhs_group_item
expression
  : primary
  | expression bop=DOT nonterminal_026
  | expression postfix=nonterminal_021
  ;

;; end of file
nonterminal_009
  : importDeclaration
  ;
nonterminal_008_list_opt
  : ;; empty
  | nonterminal_007_list
  ;
nonterminal_007_list
  : nonterminal_009
  | nonterminal_007_list nonterminal_009
  ;
nonterminal_012
  : typeDeclaration
  ;
nonterminal_011_list_opt
  : ;; empty
  | nonterminal_010_list
  ;
nonterminal_010_list
  : nonterminal_012
  | nonterminal_010_list nonterminal_012
  ;
nonterminal_014
  : catchClause
  ;
nonterminal_013_list
  : nonterminal_014
  | nonterminal_013_list nonterminal_014
  ;
nonterminal_017
  : switchBlockStatementGroup
  ;
nonterminal_016_list_opt
  : ;; empty
  | nonterminal_015_list
  ;
nonterminal_015_list
  : nonterminal_017
  | nonterminal_015_list nonterminal_017
  ;
nonterminal_020
  : switchLabel
  ;
nonterminal_019_list_opt
  : ;; empty
  | nonterminal_018_list
  ;
nonterminal_018_list
  : nonterminal_020
  | nonterminal_018_list nonterminal_020
  ;
nonterminal_021
  : PLUS_PLUS
  | MINUS_MINUS
  ;
nonterminal_026
  : THIS
  | NEW nonWildcardTypeArguments innerCreator
  | NEW innerCreator
  | SUPER superSuffix
  | explicitGenericInvocation
  ;
nonterminal_035
  : IMPLEMENTS typeList
  ;
nonterminal_038
  : nonterminal_013_list finallyBlock
  | nonterminal_013_list
  | finallyBlock
  ;
nonterminal_040
  : IMPLEMENTS typeList
  ;
nonterminal_041
  : IMPLEMENTS typeList
  ;
nonterminal_042
  : IMPLEMENTS typeList
  ;
