;;; generated from java_ebnf.wy
;;;
;; Examples of EBNF syntax used in the Java grammar file
;; https://github.com/antlr/grammars-v4/tree/master/java
;;
;; Note that the only *.*_good file is java_ebnf_bnf.wy_good, and that
;; this file does not declare all used tokens; we are only testing the
;; translation from EBNF to BNF.

%meta_syntax BNF

%start compilationUnit
%generate None

%token <punctuation> LBRACE '{'
%token <punctuation> RBRACE '}'
%token <punctuation> INC '++'
%token <punctuation> DEC '--'
%token <punctuation> DOT '.'
%token <punctuation> COMMA ','
%token <punctuation> SEMI ';'

;; IDENTIFIER QUESTION | IDENTIFIER STAR
compilationUnit
  : packageDeclaration nonterminal_004_list_opt nonterminal_007_list_opt EOF
  | nonterminal_004_list_opt nonterminal_007_list_opt EOF
  ;

statement
  : blockLabel=block
  | TRY block nonterminal_030
  | SWITCH parExpression LBRACE nonterminal_012_list_opt nonterminal_015_list_opt RBRACE
  ;

;; rhs_group_item QUESTION | STRING_LITERAL_2 QUESTION
enumDeclaration
  : ENUM IDENTIFIER nonterminal_026 LBRACE enumConstants COMMA enumBodyDeclarations RBRACE
  | ENUM IDENTIFIER LBRACE enumConstants COMMA enumBodyDeclarations RBRACE
  | ENUM IDENTIFIER nonterminal_043 LBRACE COMMA enumBodyDeclarations RBRACE
  | ENUM IDENTIFIER LBRACE COMMA enumBodyDeclarations RBRACE
  | ENUM IDENTIFIER nonterminal_041 LBRACE enumConstants enumBodyDeclarations RBRACE
  | ENUM IDENTIFIER nonterminal_041 LBRACE enumBodyDeclarations RBRACE
  | ENUM IDENTIFIER LBRACE enumConstants enumBodyDeclarations RBRACE
  | ENUM IDENTIFIER LBRACE enumBodyDeclarations RBRACE
  | ENUM IDENTIFIER nonterminal_037 LBRACE enumConstants COMMA RBRACE
  | ENUM IDENTIFIER nonterminal_037 LBRACE enumConstants RBRACE
  | ENUM IDENTIFIER nonterminal_037 LBRACE COMMA RBRACE
  | ENUM IDENTIFIER nonterminal_037 LBRACE RBRACE
  | ENUM IDENTIFIER LBRACE enumConstants COMMA RBRACE
  | ENUM IDENTIFIER LBRACE enumConstants RBRACE
  | ENUM IDENTIFIER LBRACE COMMA RBRACE
  | ENUM IDENTIFIER LBRACE RBRACE
  ;

;; labeled rhs_optional_item
forControl
  : enhancedForControl
  | forInit SEMI expression SEMI forUpdate=expressionList
  | SEMI expression SEMI forUpdate=expressionList
  | forInit SEMI SEMI forUpdate=expressionList
  | SEMI SEMI forUpdate=expressionList
  | forInit SEMI expression SEMI
  | forInit SEMI SEMI
  | SEMI expression SEMI
  | SEMI SEMI
  ;

;; labeled STRING_LITERAL_2, non-trivial rhs_alternative_list, labeled rhs_group_item
expression
  : primary
  | expression bop=DOT nonterminal_020
  | expression postfix=nonterminal_017
  ;

;; end of file
nonterminal_005
  : importDeclaration
  ;
nonterminal_004_list_opt
  : ;; empty
  | nonterminal_003_list
  ;
nonterminal_003_list
  : nonterminal_005
  | nonterminal_003_list nonterminal_005
  ;
nonterminal_008
  : typeDeclaration
  ;
nonterminal_007_list_opt
  : ;; empty
  | nonterminal_006_list
  ;
nonterminal_006_list
  : nonterminal_008
  | nonterminal_006_list nonterminal_008
  ;
nonterminal_010
  : catchClause
  ;
nonterminal_009_list
  : nonterminal_010
  | nonterminal_009_list nonterminal_010
  ;
nonterminal_013
  : switchBlockStatementGroup
  ;
nonterminal_012_list_opt
  : ;; empty
  | nonterminal_011_list
  ;
nonterminal_011_list
  : nonterminal_013
  | nonterminal_011_list nonterminal_013
  ;
nonterminal_016
  : switchLabel
  ;
nonterminal_015_list_opt
  : ;; empty
  | nonterminal_014_list
  ;
nonterminal_014_list
  : nonterminal_016
  | nonterminal_014_list nonterminal_016
  ;
nonterminal_017
  : INC
  | DEC
  ;
nonterminal_020
  : THIS
  | NEW nonWildcardTypeArguments innerCreator
  | NEW innerCreator
  | SUPER superSuffix
  | explicitGenericInvocation
  ;
nonterminal_026
  : IMPLEMENTS typeList
  ;
nonterminal_030
  : nonterminal_009_list finallyBlock
  | nonterminal_009_list
  | finallyBlock
  ;
nonterminal_037
  : IMPLEMENTS typeList
  ;
nonterminal_041
  : IMPLEMENTS typeList
  ;
nonterminal_043
  : IMPLEMENTS typeList
  ;
