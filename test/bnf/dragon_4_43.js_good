// generated from dragon_4_43.wy -*- buffer-read-only:t js-indent-level:3 -*-

// 
// ;;  Copyright (C) 2018, 2020, 2021, 2022, 2023 Stephen Leake.  All Rights Reserved.
// 
// ;;  This program is free software; you can redistribute it and/or
// ;;  modify it under the terms of the GNU General Public License as
// ;;  published by the Free Software Foundation; either version 3, or (at
// ;;  your option) any later version.
// ;;
// ;;  This software is distributed in the hope that it will be useful,
// ;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
// ;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// ;;  General Public License for more details.
// ;;
// ;;  You should have received a copy of the GNU General Public License
// ;;  along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.
const reserved = regex => token(prec(2, new RegExp(regex)));
const caseInsensitive = word => word.split('') .map(letter => `[${letter}${letter.toUpperCase()}]`) .join('');
const reservedInsensitive = word => alias(reserved(caseInsensitive(word)), word) ;

module.exports = grammar({
   name: 'Dragon_4_43',

   rules: {
      upper_s: $ => seq($.upper_c, $.upper_c),

      LOWER_C: $ => reserved("c"),

      LOWER_D: $ => reserved("d"),

      COMMENT: $ => token(seq("--", /.*/)),

      upper_c: $ => choice(seq($.LOWER_C, $.upper_c), $.LOWER_D),

  },
  extras: $ => [
      $.COMMENT,
      /\s|\\\r?\n/,
  ],
}
);
