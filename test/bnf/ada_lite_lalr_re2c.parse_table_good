Tokens:
 0 => COMMENT
 1 => WHITESPACE
 2 => NEW_LINE
 3 => AND
 4 => BEGIN
 5 => BODY
 6 => CASE
 7 => DECLARE
 8 => ELSE
 9 => ELSIF
 10 => END
 11 => EXIT
 12 => EXCEPTION
 13 => FOR
 14 => FUNCTION
 15 => IF
 16 => IN
 17 => IS
 18 => LEFT_PAREN
 19 => LOOP
 20 => NEW
 21 => NOT
 22 => OR
 23 => PACKAGE
 24 => PROCEDURE
 25 => RANGE
 26 => RETURN
 27 => RIGHT_PAREN
 28 => SEPARATE
 29 => THEN
 30 => TYPE
 31 => WHEN
 32 => WITH
 33 => XOR
 34 => AMPERSAND
 35 => COLON
 36 => COLON_EQUAL
 37 => COMMA
 38 => DOT
 39 => DOT_DOT
 40 => EQUAL
 41 => EQUAL_GREATER
 42 => GREATER
 43 => GREATER_EQUAL
 44 => LESS
 45 => LESS_EQUAL
 46 => MINUS
 47 => PLUS
 48 => SEMICOLON
 49 => SLASH
 50 => SLASH_EQUAL
 51 => STAR
 52 => STRING_LITERAL
 53 => IDENTIFIER
 54 => NUMERIC_LITERAL
 55 => Wisi_EOI
 56 => wisitoken_accept
 57 => actual_parameter_part
 58 => aspect_specification_opt
 59 => assignment_statement
 60 => association_opt
 61 => association_list
 62 => binary_adding_operator
 63 => block_label_opt
 64 => block_statement
 65 => body_g
 66 => body_stub
 67 => case_statement
 68 => case_statement_alternative
 69 => case_statement_alternative_list
 70 => compilation_unit
 71 => compilation_unit_list
 72 => compound_statement
 73 => constraint
 74 => declaration
 75 => declarations
 76 => declarative_part
 77 => discrete_subtype_definition
 78 => elsif_statement_item
 79 => elsif_statement_list
 80 => enumeration_literal_list
 81 => enumeration_type_definition
 82 => exception_choice
 83 => exception_handler
 84 => exception_handler_list
 85 => exception_handler_list_opt
 86 => exit_statement
 87 => expression
 88 => extended_return_object_declaration
 89 => extended_return_statement
 90 => factor
 91 => formal_part
 92 => full_type_declaration
 93 => function_specification
 94 => generic_instantiation
 95 => handled_sequence_of_statements
 96 => identifier_opt
 97 => if_statement
 98 => index_constraint
 99 => iteration_scheme
 100 => loop_statement
 101 => multiplying_operator
 102 => name
 103 => name_opt
 104 => object_declaration
 105 => package_body
 106 => package_specification
 107 => parameter_and_result_profile
 108 => parameter_profile_opt
 109 => parameter_specification
 110 => parameter_specification_list
 111 => paren_expression
 112 => primary
 113 => procedure_call_statement
 114 => procedure_specification
 115 => proper_body
 116 => range_g
 117 => range_list
 118 => relation_and_list
 119 => relation_or_list
 120 => relation_xor_list
 121 => relation
 122 => relational_operator
 123 => selected_component
 124 => sequence_of_statements_list
 125 => sequence_of_statements
 126 => simple_expression
 127 => simple_return_statement
 128 => simple_statement
 129 => statement
 130 => subprogram_body
 131 => subprogram_body_stub
 132 => subprogram_declaration
 133 => subprogram_specification
 134 => subtype_indication
 135 => term
 136 => term_list
 137 => type_declaration
 138 => type_definition
 139 => unary_adding_operator

Productions:
56.0: wisitoken_accept <= compilation_unit_list Wisi_EOI
57.0: actual_parameter_part <= LEFT_PAREN association_list RIGHT_PAREN ; (2 => Other)
58.0: aspect_specification_opt <= WITH association_list
58.1: aspect_specification_opt <=
59.0: assignment_statement <= name COLON_EQUAL expression SEMICOLON
60.0: association_opt <= IDENTIFIER EQUAL_GREATER expression ; (3 => Other_Right)
60.1: association_opt <= expression ; (1 => Other_Left)
60.2: association_opt <=
61.0: association_list <= association_list COMMA association_opt ; (1 => Direct_Left, 3 => Other_Right)
61.1: association_list <= association_opt ; (1 => Other_Left)
62.0: binary_adding_operator <= PLUS
62.1: binary_adding_operator <= MINUS
62.2: binary_adding_operator <= AMPERSAND
63.0: block_label_opt <= IDENTIFIER COLON
63.1: block_label_opt <=
64.0: block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ; (3 => Other, 5 => Other)
64.1: block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ; (3 => Other)
65.0: body_g <= proper_body ; (1 => Other_Left)
65.1: body_g <= body_stub
66.0: body_stub <= subprogram_body_stub
67.0: case_statement <= CASE expression IS case_statement_alternative_list END CASE SEMICOLON ; (4 => Other)
68.0: case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements ; (4 => Other_Right)
69.0: case_statement_alternative_list <= case_statement_alternative_list case_statement_alternative ; (1 => Direct_Left, 2 => Other_Right)
69.1: case_statement_alternative_list <= case_statement_alternative ; (1 => Other_Left)
70.0: compilation_unit <= package_specification
70.1: compilation_unit <= package_body
70.2: compilation_unit <= subprogram_declaration
70.3: compilation_unit <= subprogram_body
70.4: compilation_unit <= generic_instantiation
70.5: compilation_unit <= statement
71.0: compilation_unit_list <= compilation_unit_list compilation_unit ; (1 => Direct_Left)
71.1: compilation_unit_list <= compilation_unit
72.0: compound_statement <= if_statement ; (1 => Other_Left)
72.1: compound_statement <= case_statement ; (1 => Other_Left)
72.2: compound_statement <= loop_statement ; (1 => Other_Left)
72.3: compound_statement <= block_statement ; (1 => Other_Left)
72.4: compound_statement <= extended_return_statement
73.0: constraint <= RANGE range_g
73.1: constraint <= index_constraint ; (1 => Other_Left)
74.0: declaration <= body_g ; (1 => Other_Left)
74.1: declaration <= object_declaration
74.2: declaration <= subprogram_declaration
74.3: declaration <= type_declaration
75.0: declarations <= declarations declaration ; (1 => Direct_Left, 2 => Other_Right)
75.1: declarations <= declaration ; (1 => Other_Left)
76.0: declarative_part <= declarations ; (1 => Other_Left)
76.1: declarative_part <=
77.0: discrete_subtype_definition <= subtype_indication ; (1 => Other_Left)
77.1: discrete_subtype_definition <= range_g
78.0: elsif_statement_item <= ELSIF expression THEN sequence_of_statements ; (4 => Other_Right)
79.0: elsif_statement_list <= elsif_statement_list elsif_statement_item ; (1 => Direct_Left, 2 => Other_Right)
79.1: elsif_statement_list <= elsif_statement_item ; (1 => Other_Left)
80.0: enumeration_literal_list <= enumeration_literal_list COMMA IDENTIFIER ; (1 => Direct_Left)
80.1: enumeration_literal_list <= IDENTIFIER
81.0: enumeration_type_definition <= LEFT_PAREN enumeration_literal_list RIGHT_PAREN
82.0: exception_choice <= name
83.0: exception_handler <= WHEN exception_choice EQUAL_GREATER sequence_of_statements ; (4 => Other_Right)
84.0: exception_handler_list <= exception_handler_list exception_handler ; (1 => Direct_Left, 2 => Other_Right)
84.1: exception_handler_list <= exception_handler ; (1 => Other_Left)
85.0: exception_handler_list_opt <= exception_handler_list ; (1 => Other_Left)
85.1: exception_handler_list_opt <=
86.0: exit_statement <= EXIT identifier_opt WHEN expression SEMICOLON
86.1: exit_statement <= EXIT identifier_opt SEMICOLON
87.0: expression <= relation ; (1 => Other_Left)
87.1: expression <= relation_and_list ; (1 => Other_Left)
87.2: expression <= relation_or_list ; (1 => Other_Left)
87.3: expression <= relation_xor_list ; (1 => Other_Left)
88.0: extended_return_object_declaration <= IDENTIFIER COLON subtype_indication
89.0: extended_return_statement <= RETURN extended_return_object_declaration SEMICOLON
90.0: factor <= primary ; (1 => Other_Left)
90.1: factor <= NOT primary ; (2 => Other_Right)
91.0: formal_part <= LEFT_PAREN parameter_specification_list RIGHT_PAREN
92.0: full_type_declaration <= TYPE IDENTIFIER IS type_definition SEMICOLON
93.0: function_specification <= FUNCTION name parameter_and_result_profile
94.0: generic_instantiation <= PACKAGE name IS NEW name SEMICOLON
94.1: generic_instantiation <= PROCEDURE name IS NEW name SEMICOLON
95.0: handled_sequence_of_statements <= sequence_of_statements EXCEPTION exception_handler_list_opt ; (1 => Other_Left, 3 => Other_Right)
95.1: handled_sequence_of_statements <= sequence_of_statements ; (1 => Other_Left)
96.0: identifier_opt <= IDENTIFIER
96.1: identifier_opt <=
97.0: if_statement <= IF expression THEN sequence_of_statements elsif_statement_list ELSE sequence_of_statements END IF SEMICOLON ; (4 => Other, 5 => Other, 7 => Other)
97.1: if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON ; (4 => Other, 6 => Other)
97.2: if_statement <= IF expression THEN sequence_of_statements elsif_statement_list END IF SEMICOLON ; (4 => Other, 5 => Other)
97.3: if_statement <= IF expression THEN sequence_of_statements END IF SEMICOLON ; (4 => Other)
98.0: index_constraint <= LEFT_PAREN discrete_subtype_definition RIGHT_PAREN ; (2 => Other)
99.0: iteration_scheme <= FOR IDENTIFIER IN discrete_subtype_definition
100.0: loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ; (3 => Other)
100.1: loop_statement <= LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ; (2 => Other)
101.0: multiplying_operator <= STAR
101.1: multiplying_operator <= SLASH
102.0: name <= name LEFT_PAREN range_list RIGHT_PAREN ; (1 => Direct_Left, 3 => Other)
102.1: name <= name actual_parameter_part ; (1 => Direct_Left, 2 => Other_Right)
102.2: name <= IDENTIFIER
102.3: name <= selected_component ; (1 => Other_Left)
103.0: name_opt <= name
103.1: name_opt <=
104.0: object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression SEMICOLON
104.1: object_declaration <= IDENTIFIER COLON subtype_indication SEMICOLON
105.0: package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ; (6 => Other, 8 => Other)
105.1: package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part END name_opt SEMICOLON ; (6 => Other)
106.0: package_specification <= PACKAGE name aspect_specification_opt IS declarative_part END name_opt SEMICOLON
107.0: parameter_and_result_profile <= formal_part RETURN IDENTIFIER
107.1: parameter_and_result_profile <= RETURN IDENTIFIER
108.0: parameter_profile_opt <= formal_part
108.1: parameter_profile_opt <=
109.0: parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL expression
109.1: parameter_specification <= IDENTIFIER COLON IDENTIFIER
109.2: parameter_specification <=
110.0: parameter_specification_list <= parameter_specification_list SEMICOLON parameter_specification ; (1 => Direct_Left)
110.1: parameter_specification_list <= parameter_specification
111.0: paren_expression <= LEFT_PAREN expression RIGHT_PAREN ; (2 => Other)
112.0: primary <= NUMERIC_LITERAL
112.1: primary <= STRING_LITERAL
112.2: primary <= name ; (1 => Other_Left)
112.3: primary <= paren_expression ; (1 => Other_Left)
113.0: procedure_call_statement <= name SEMICOLON
114.0: procedure_specification <= PROCEDURE name parameter_profile_opt
115.0: proper_body <= package_body ; (1 => Other_Left)
115.1: proper_body <= subprogram_body ; (1 => Other_Left)
116.0: range_g <= simple_expression DOT_DOT simple_expression ; (1 => Other_Left, 3 => Other_Right)
117.0: range_list <= range_list COMMA range_g ; (1 => Direct_Left, 3 => Other_Right)
117.1: range_list <= range_g ; (1 => Other_Left)
118.0: relation_and_list <= relation_and_list AND relation ; (1 => Direct_Left, 3 => Other_Right)
118.1: relation_and_list <= relation AND relation ; (1 => Other_Left, 3 => Other_Right)
119.0: relation_or_list <= relation_or_list OR relation ; (1 => Direct_Left, 3 => Other_Right)
119.1: relation_or_list <= relation OR relation ; (1 => Other_Left, 3 => Other_Right)
120.0: relation_xor_list <= relation_xor_list XOR relation ; (1 => Direct_Left, 3 => Other_Right)
120.1: relation_xor_list <= relation XOR relation ; (1 => Other_Left, 3 => Other_Right)
121.0: relation <= simple_expression relational_operator simple_expression ; (1 => Other_Left, 3 => Other_Right)
121.1: relation <= simple_expression ; (1 => Other_Left)
122.0: relational_operator <= EQUAL
122.1: relational_operator <= SLASH_EQUAL
122.2: relational_operator <= LESS
122.3: relational_operator <= LESS_EQUAL
122.4: relational_operator <= GREATER
122.5: relational_operator <= GREATER_EQUAL
123.0: selected_component <= name DOT IDENTIFIER ; (1 => Other_Left)
124.0: sequence_of_statements_list <= sequence_of_statements_list statement ; (1 => Direct_Left, 2 => Other_Right)
124.1: sequence_of_statements_list <= statement ; (1 => Other_Left)
125.0: sequence_of_statements <= sequence_of_statements_list ; (1 => Other_Left)
125.1: sequence_of_statements <=
126.0: simple_expression <= unary_adding_operator term_list ; (2 => Other_Right)
126.1: simple_expression <= term_list ; (1 => Other_Left)
127.0: simple_return_statement <= RETURN expression SEMICOLON
128.0: simple_statement <= assignment_statement
128.1: simple_statement <= exit_statement
128.2: simple_statement <= procedure_call_statement
128.3: simple_statement <= simple_return_statement
129.0: statement <= simple_statement
129.1: statement <= compound_statement ; (1 => Other_Left)
130.0: subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ; (4 => Other, 6 => Other)
131.0: subprogram_body_stub <= subprogram_specification IS SEPARATE SEMICOLON
132.0: subprogram_declaration <= subprogram_specification SEMICOLON
133.0: subprogram_specification <= procedure_specification
133.1: subprogram_specification <= function_specification
134.0: subtype_indication <= name constraint ; (2 => Other_Right)
134.1: subtype_indication <= name
135.0: term <= term multiplying_operator factor ; (1 => Direct_Left, 3 => Other_Right)
135.1: term <= factor ; (1 => Other_Left)
136.0: term_list <= term_list binary_adding_operator term ; (1 => Direct_Left, 3 => Other_Right)
136.1: term_list <= term ; (1 => Other_Left)
137.0: type_declaration <= full_type_declaration
138.0: type_definition <= enumeration_type_definition
139.0: unary_adding_operator <= PLUS
139.1: unary_adding_operator <= MINUS

Recursions:
1 => (57 (0.2) -> 61 (0.3, 1.1) -> 60 (0.3, 1.1) -> 87 (1.1) -> 118 (0.3, 1.1, 1.3) -> 121 (0.1, 0.3, 1.1) -> 126 (0.2, 1.1) -> 136 (0.3, 1.1) -> 135 (0.3, 1.1) -> 90 (0.1, 1.2) -> 112 (2.1) -> 102 (1.2) -> )
2 => (57 (0.2) -> 61 (0.3, 1.1) -> 60 (0.3, 1.1) -> 87 (2.1) -> 119 (0.3, 1.1, 1.3) -> 121 (0.1, 0.3, 1.1) -> 126 (0.2, 1.1) -> 136 (0.3, 1.1) -> 135 (0.3, 1.1) -> 90 (0.1, 1.2) -> 112 (2.1) -> 102 (1.2) -> )
3 => (57 (0.2) -> 61 (0.3, 1.1) -> 60 (0.3, 1.1) -> 87 (3.1) -> 120 (0.3, 1.1, 1.3) -> 121 (0.1, 0.3, 1.1) -> 126 (0.2, 1.1) -> 136 (0.3, 1.1) -> 135 (0.3, 1.1) -> 90 (0.1, 1.2) -> 112 (2.1) -> 102 (1.2) -> )
4 => (57 (0.2) -> 61 (0.3, 1.1) -> 60 (0.3, 1.1) -> 87 (0.1) -> 121 (0.1, 0.3, 1.1) -> 126 (0.2, 1.1) -> 136 (0.3, 1.1) -> 135 (0.3, 1.1) -> 90 (0.1, 1.2) -> 112 (2.1) -> 102 (1.2) -> )
5 => (61 (0.1) -> )
6 => (64 (0.3) -> 76 (0.1) -> 75 (0.2, 1.1) -> 74 (0.1) -> 65 (0.1) -> 115 (0.1) -> 105 (0.8) -> 95 (0.3) -> 85 (0.1) -> 84 (0.2, 1.1) -> 83 (0.4) -> 125 (0.1) -> 124 (0.2, 1.1) -> 129 (1.1) -> 72 (3.1) -> )
7 => (64 (0.3) -> 76 (0.1) -> 75 (0.2, 1.1) -> 74 (0.1) -> 65 (0.1) -> 115 (0.1) -> 105 (0.8) -> 95 (0.1, 1.1) -> 125 (0.1) -> 124 (0.2, 1.1) -> 129 (1.1) -> 72 (3.1) -> )
8 => (64 (0.3) -> 76 (0.1) -> 75 (0.2, 1.1) -> 74 (0.1) -> 65 (0.1) -> 115 (1.1) -> 130 (0.6) -> 95 (0.3) -> 85 (0.1) -> 84 (0.2, 1.1) -> 83 (0.4) -> 125 (0.1) -> 124 (0.2, 1.1) -> 129 (1.1) -> 72 (3.1) -> )
9 => (64 (0.3) -> 76 (0.1) -> 75 (0.2, 1.1) -> 74 (0.1) -> 65 (0.1) -> 115 (1.1) -> 130 (0.6) -> 95 (0.1, 1.1) -> 125 (0.1) -> 124 (0.2, 1.1) -> 129 (1.1) -> 72 (3.1) -> )
10 => (64 (0.5, 1.3) -> 95 (0.3) -> 85 (0.1) -> 84 (0.2, 1.1) -> 83 (0.4) -> 125 (0.1) -> 124 (0.2, 1.1) -> 129 (1.1) -> 72 (3.1) -> )
11 => (64 (0.5, 1.3) -> 95 (0.1, 1.1) -> 125 (0.1) -> 124 (0.2, 1.1) -> 129 (1.1) -> 72 (3.1) -> )
12 => (65 (0.1) -> 115 (0.1) -> 105 (0.6, 1.6) -> 76 (0.1) -> 75 (0.2, 1.1) -> 74 (0.1) -> )
13 => (65 (0.1) -> 115 (1.1) -> 130 (0.4) -> 76 (0.1) -> 75 (0.2, 1.1) -> 74 (0.1) -> )
14 => (67 (0.4) -> 69 (0.2, 1.1) -> 68 (0.4) -> 125 (0.1) -> 124 (0.2, 1.1) -> 129 (1.1) -> 72 (1.1) -> )
15 => (69 (0.1) -> )
16 => (71 (0.1) -> )
17 => (72 (0.1) -> 97 (0.5, 2.5) -> 79 (0.2, 1.1) -> 78 (0.4) -> 125 (0.1) -> 124 (0.2, 1.1) -> 129 (1.1) -> )
18 => (72 (0.1) -> 97 (0.4, 0.7, 1.4, 1.6, 2.4, 3.4) -> 125 (0.1) -> 124 (0.2, 1.1) -> 129 (1.1) -> )
19 => (72 (2.1) -> 100 (0.3, 1.2) -> 125 (0.1) -> 124 (0.2, 1.1) -> 129 (1.1) -> )
20 => (73 (1.1) -> 98 (0.2) -> 77 (0.1) -> 134 (0.2) -> )
21 => (75 (0.1) -> )
22 => (79 (0.1) -> )
23 => (80 (0.1) -> )
24 => (84 (0.1) -> )
25 => (87 (1.1) -> 118 (0.3, 1.1, 1.3) -> 121 (0.1, 0.3, 1.1) -> 126 (0.2, 1.1) -> 136 (0.3, 1.1) -> 135 (0.3, 1.1) -> 90 (0.1, 1.2) -> 112 (3.1) -> 111 (0.2) -> )
26 => (87 (2.1) -> 119 (0.3, 1.1, 1.3) -> 121 (0.1, 0.3, 1.1) -> 126 (0.2, 1.1) -> 136 (0.3, 1.1) -> 135 (0.3, 1.1) -> 90 (0.1, 1.2) -> 112 (3.1) -> 111 (0.2) -> )
27 => (87 (3.1) -> 120 (0.3, 1.1, 1.3) -> 121 (0.1, 0.3, 1.1) -> 126 (0.2, 1.1) -> 136 (0.3, 1.1) -> 135 (0.3, 1.1) -> 90 (0.1, 1.2) -> 112 (3.1) -> 111 (0.2) -> )
28 => (87 (0.1) -> 121 (0.1, 0.3, 1.1) -> 126 (0.2, 1.1) -> 136 (0.3, 1.1) -> 135 (0.3, 1.1) -> 90 (0.1, 1.2) -> 112 (3.1) -> 111 (0.2) -> )
29 => (90 (0.1, 1.2) -> 112 (2.1) -> 102 (0.3) -> 117 (0.3, 1.1) -> 116 (0.1, 0.3) -> 126 (0.2, 1.1) -> 136 (0.3, 1.1) -> 135 (0.3, 1.1) -> )
30 => (102 (0.1, 1.1) -> )
31 => (102 (3.1) -> 123 (0.1) -> )
32 => (110 (0.1) -> )
33 => (117 (0.1) -> )
34 => (118 (0.1) -> )
35 => (119 (0.1) -> )
36 => (120 (0.1) -> )
37 => (124 (0.1) -> )
38 => (135 (0.1) -> )
39 => (136 (0.1) -> )

McKenzie:
(Insert =>
 AND             => 4,
 BEGIN           => 4,
 BODY            => 4,
 CASE            => 4,
 DECLARE         => 4,
 ELSE            => 4,
 ELSIF           => 4,
 END             => 4,
 EXIT            => 4,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 4,
 IF              => 4,
 IN              => 4,
 IS              => 4,
 LEFT_PAREN      => 4,
 LOOP            => 4,
 NEW             => 4,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 4,
 RANGE           => 4,
 RETURN          => 4,
 RIGHT_PAREN     => 4,
 SEPARATE        => 4,
 THEN            => 4,
 TYPE            => 4,
 WHEN            => 4,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 4,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 4,
 IDENTIFIER      => 4,
 NUMERIC_LITERAL => 4,
 Wisi_EOI        => 4)
(Delete =>
 AND             => 4,
 BEGIN           => 1,
 BODY            => 4,
 CASE            => 4,
 DECLARE         => 4,
 ELSE            => 4,
 ELSIF           => 4,
 END             => 2,
 EXIT            => 4,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 4,
 IF              => 4,
 IN              => 4,
 IS              => 4,
 LEFT_PAREN      => 4,
 LOOP            => 4,
 NEW             => 4,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 4,
 RANGE           => 4,
 RETURN          => 4,
 RIGHT_PAREN     => 4,
 SEPARATE        => 4,
 THEN            => 4,
 TYPE            => 4,
 WHEN            => 4,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 2,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 2,
 IDENTIFIER      => 4,
 NUMERIC_LITERAL => 4,
 Wisi_EOI        => 4)
(Push_Back =>
 AND             => 4,
 BEGIN           => 1,
 BODY            => 4,
 CASE            => 4,
 DECLARE         => 4,
 ELSE            => 4,
 ELSIF           => 4,
 END             => 2,
 EXIT            => 4,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 4,
 IF              => 4,
 IN              => 4,
 IS              => 4,
 LEFT_PAREN      => 4,
 LOOP            => 4,
 NEW             => 4,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 4,
 RANGE           => 4,
 RETURN          => 4,
 RIGHT_PAREN     => 4,
 SEPARATE        => 4,
 THEN            => 4,
 TYPE            => 4,
 WHEN            => 4,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 4,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 4,
 IDENTIFIER      => 4,
 NUMERIC_LITERAL => 4,
 Wisi_EOI        => 4,
 wisitoken_accept                   => 4,
 actual_parameter_part              => 4,
 aspect_specification_opt           => 4,
 assignment_statement               => 4,
 association_opt                    => 4,
 association_list                   => 4,
 binary_adding_operator             => 4,
 block_label_opt                    => 4,
 block_statement                    => 4,
 body_g                             => 4,
 body_stub                          => 4,
 case_statement                     => 4,
 case_statement_alternative         => 4,
 case_statement_alternative_list    => 4,
 compilation_unit                   => 4,
 compilation_unit_list              => 4,
 compound_statement                 => 4,
 constraint                         => 4,
 declaration                        => 4,
 declarations                       => 4,
 declarative_part                   => 0,
 discrete_subtype_definition        => 4,
 elsif_statement_item               => 4,
 elsif_statement_list               => 4,
 enumeration_literal_list           => 4,
 enumeration_type_definition        => 4,
 exception_choice                   => 4,
 exception_handler                  => 4,
 exception_handler_list             => 4,
 exception_handler_list_opt         => 4,
 exit_statement                     => 4,
 expression                         => 4,
 extended_return_object_declaration => 4,
 extended_return_statement          => 4,
 factor                             => 4,
 formal_part                        => 4,
 full_type_declaration              => 4,
 function_specification             => 4,
 generic_instantiation              => 4,
 handled_sequence_of_statements     => 0,
 identifier_opt                     => 4,
 if_statement                       => 4,
 index_constraint                   => 4,
 iteration_scheme                   => 4,
 loop_statement                     => 4,
 multiplying_operator               => 4,
 name                               => 4,
 name_opt                           => 4,
 object_declaration                 => 4,
 package_body                       => 4,
 package_specification              => 4,
 parameter_and_result_profile       => 4,
 parameter_profile_opt              => 4,
 parameter_specification            => 4,
 parameter_specification_list       => 4,
 paren_expression                   => 4,
 primary                            => 4,
 procedure_call_statement           => 4,
 procedure_specification            => 4,
 proper_body                        => 4,
 range_g                            => 4,
 range_list                         => 4,
 relation_and_list                  => 4,
 relation_or_list                   => 4,
 relation_xor_list                  => 4,
 relation                           => 4,
 relational_operator                => 4,
 selected_component                 => 4,
 sequence_of_statements_list        => 4,
 sequence_of_statements             => 0,
 simple_expression                  => 4,
 simple_return_statement            => 4,
 simple_statement                   => 4,
 statement                          => 4,
 subprogram_body                    => 4,
 subprogram_body_stub               => 4,
 subprogram_declaration             => 4,
 subprogram_specification           => 4,
 subtype_indication                 => 4,
 term                               => 4,
 term_list                          => 4,
 type_declaration                   => 4,
 type_definition                    => 4,
 unary_adding_operator              => 4)
(Undo_Reduce =>
 wisitoken_accept                   => 4,
 actual_parameter_part              => 4,
 aspect_specification_opt           => 4,
 assignment_statement               => 4,
 association_opt                    => 4,
 association_list                   => 4,
 binary_adding_operator             => 4,
 block_label_opt                    => 4,
 block_statement                    => 4,
 body_g                             => 4,
 body_stub                          => 4,
 case_statement                     => 4,
 case_statement_alternative         => 4,
 case_statement_alternative_list    => 4,
 compilation_unit                   => 4,
 compilation_unit_list              => 4,
 compound_statement                 => 4,
 constraint                         => 4,
 declaration                        => 4,
 declarations                       => 4,
 declarative_part                   => 4,
 discrete_subtype_definition        => 4,
 elsif_statement_item               => 4,
 elsif_statement_list               => 4,
 enumeration_literal_list           => 4,
 enumeration_type_definition        => 4,
 exception_choice                   => 4,
 exception_handler                  => 4,
 exception_handler_list             => 4,
 exception_handler_list_opt         => 4,
 exit_statement                     => 4,
 expression                         => 4,
 extended_return_object_declaration => 4,
 extended_return_statement          => 4,
 factor                             => 4,
 formal_part                        => 4,
 full_type_declaration              => 4,
 function_specification             => 4,
 generic_instantiation              => 4,
 handled_sequence_of_statements     => 4,
 identifier_opt                     => 4,
 if_statement                       => 4,
 index_constraint                   => 4,
 iteration_scheme                   => 4,
 loop_statement                     => 4,
 multiplying_operator               => 4,
 name                               => 4,
 name_opt                           => 4,
 object_declaration                 => 4,
 package_body                       => 4,
 package_specification              => 4,
 parameter_and_result_profile       => 4,
 parameter_profile_opt              => 4,
 parameter_specification            => 4,
 parameter_specification_list       => 4,
 paren_expression                   => 4,
 primary                            => 4,
 procedure_call_statement           => 4,
 procedure_specification            => 4,
 proper_body                        => 4,
 range_g                            => 4,
 range_list                         => 4,
 relation_and_list                  => 4,
 relation_or_list                   => 4,
 relation_xor_list                  => 4,
 relation                           => 4,
 relational_operator                => 4,
 selected_component                 => 4,
 sequence_of_statements_list        => 4,
 sequence_of_statements             => 4,
 simple_expression                  => 4,
 simple_return_statement            => 4,
 simple_statement                   => 4,
 statement                          => 4,
 subprogram_body                    => 4,
 subprogram_body_stub               => 4,
 subprogram_declaration             => 4,
 subprogram_specification           => 4,
 subtype_indication                 => 4,
 term                               => 4,
 term_list                          => 4,
 type_declaration                   => 4,
 type_definition                    => 4,
 unary_adding_operator              => 4)
Minimal_Complete_Cost_Delta => -3
Fast_Forward      =>  0
Matching_Begin    =>  0
Ignore_Check_Fail => 2
Task_Count        => 0
Check_Limit       => 3
Check_Delta_Limit => 2147483647
Enqueue_Limit     => 1000

LALR Parse Table:
State 0:
     56.0:wisitoken_accept <= ^ compilation_unit_list Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1 67.0
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   EXIT                               => shift and goto state 2 86.0
   FOR                                => shift and goto state 3 99.0
   FUNCTION                           => shift and goto state 4 93.0
   IF                                 => shift and goto state 5 97.0
   LOOP                               => shift and goto state 6 100.1
   PACKAGE                            => shift and goto state 7 94.0
   PROCEDURE                          => shift and goto state 8 94.1
   RETURN                             => shift and goto state 9 89.0
   IDENTIFIER                         => shift and goto state 10 63.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compilation_unit                   goto state 15
   compilation_unit_list              goto state 16
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   function_specification             goto state 20
   generic_instantiation              goto state 21
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   package_body                       goto state 26
   package_specification              goto state 27
   procedure_call_statement           goto state 28
   procedure_specification            goto state 29
   selected_component                 goto state 30
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 33
   subprogram_body                    goto state 34
   subprogram_declaration             goto state 35
   subprogram_specification           goto state 36

   Minimal_Complete_Actions => 

State 1:
     67.0:case_statement <= CASE ^ expression IS case_statement_alternative_list END CASE SEMICOLON

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   expression                         goto state 44
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 2:
     86.0:exit_statement <= EXIT ^ identifier_opt WHEN expression SEMICOLON
     86.1:exit_statement <= EXIT ^ identifier_opt SEMICOLON

   WHEN                               => reduce 0 tokens to identifier_opt 96.1
   SEMICOLON                          => reduce 0 tokens to identifier_opt 96.1
   IDENTIFIER                         => shift and goto state 57 96.0
   default                            => ERROR

   identifier_opt                     goto state 58

   Minimal_Complete_Actions => (0 identifier_opt 96.1)

State 3:
     99.0:iteration_scheme <= FOR ^ IDENTIFIER IN discrete_subtype_definition

   IDENTIFIER                         => shift and goto state 59 99.0
   default                            => ERROR

   Minimal_Complete_Actions => (IDENTIFIER 99.0)

State 4:
     93.0:function_specification <= FUNCTION ^ name parameter_and_result_profile

   IDENTIFIER                         => shift and goto state 42 102.2
   default                            => ERROR

   name                               goto state 60
   selected_component                 goto state 30

   Minimal_Complete_Actions => (IDENTIFIER 102.2)

State 5:
     97.0:if_statement <= IF ^ expression THEN sequence_of_statements elsif_statement_list ELSE sequence_of_statements END IF SEMICOLON
     97.1:if_statement <= IF ^ expression THEN sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON
     97.2:if_statement <= IF ^ expression THEN sequence_of_statements elsif_statement_list END IF SEMICOLON
     97.3:if_statement <= IF ^ expression THEN sequence_of_statements END IF SEMICOLON

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   expression                         goto state 61
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 6:
    100.1:loop_statement <= LOOP ^ sequence_of_statements END LOOP identifier_opt SEMICOLON

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1 67.0
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 125.1
   EXIT                               => shift and goto state 2 86.0
   FOR                                => shift and goto state 3 99.0
   IF                                 => shift and goto state 5 97.0
   LOOP                               => shift and goto state 6 100.1
   RETURN                             => shift and goto state 9 89.0
   IDENTIFIER                         => shift and goto state 10 63.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements_list        goto state 62
   sequence_of_statements             goto state 63
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 64

   Minimal_Complete_Actions => (0 sequence_of_statements 125.1)

State 7:
     94.0:generic_instantiation <= PACKAGE ^ name IS NEW name SEMICOLON
    105.0:package_body <= PACKAGE ^ BODY name aspect_specification_opt IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    105.1:package_body <= PACKAGE ^ BODY name aspect_specification_opt IS declarative_part END name_opt SEMICOLON
    106.0:package_specification <= PACKAGE ^ name aspect_specification_opt IS declarative_part END name_opt SEMICOLON

   BODY                               => shift and goto state 65 105.0
   IDENTIFIER                         => shift and goto state 42 102.2
   default                            => ERROR

   name                               goto state 66
   selected_component                 goto state 30

   Minimal_Complete_Actions => (IDENTIFIER 102.2)

State 8:
     94.1:generic_instantiation <= PROCEDURE ^ name IS NEW name SEMICOLON
    114.0:procedure_specification <= PROCEDURE ^ name parameter_profile_opt

   IDENTIFIER                         => shift and goto state 42 102.2
   default                            => ERROR

   name                               goto state 67
   selected_component                 goto state 30

   Minimal_Complete_Actions => (IDENTIFIER 102.2)

State 9:
     89.0:extended_return_statement <= RETURN ^ extended_return_object_declaration SEMICOLON
    127.0:simple_return_statement <= RETURN ^ expression SEMICOLON

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 68 88.0
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   expression                         goto state 69
   extended_return_object_declaration goto state 70
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 10:
     63.0:block_label_opt <= IDENTIFIER ^ COLON
    102.2:name <= IDENTIFIER ^

   LEFT_PAREN                         => reduce 1 tokens to name 102.2
   COLON                              => shift and goto state 71 63.0
   COLON_EQUAL                        => reduce 1 tokens to name 102.2
   DOT                                => reduce 1 tokens to name 102.2
   SEMICOLON                          => reduce 1 tokens to name 102.2
   default                            => ERROR

   Minimal_Complete_Actions => ((COLON 63.0), (1 name 102.2))

State 11:
    128.0:simple_statement <= assignment_statement ^

   BEGIN                              => reduce 1 tokens to simple_statement 128.0
   CASE                               => reduce 1 tokens to simple_statement 128.0
   DECLARE                            => reduce 1 tokens to simple_statement 128.0
   ELSE                               => reduce 1 tokens to simple_statement 128.0
   ELSIF                              => reduce 1 tokens to simple_statement 128.0
   END                                => reduce 1 tokens to simple_statement 128.0
   EXIT                               => reduce 1 tokens to simple_statement 128.0
   EXCEPTION                          => reduce 1 tokens to simple_statement 128.0
   FOR                                => reduce 1 tokens to simple_statement 128.0
   FUNCTION                           => reduce 1 tokens to simple_statement 128.0
   IF                                 => reduce 1 tokens to simple_statement 128.0
   LOOP                               => reduce 1 tokens to simple_statement 128.0
   PACKAGE                            => reduce 1 tokens to simple_statement 128.0
   PROCEDURE                          => reduce 1 tokens to simple_statement 128.0
   RETURN                             => reduce 1 tokens to simple_statement 128.0
   WHEN                               => reduce 1 tokens to simple_statement 128.0
   IDENTIFIER                         => reduce 1 tokens to simple_statement 128.0
   Wisi_EOI                           => reduce 1 tokens to simple_statement 128.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 simple_statement 128.0)

State 12:
     64.0:block_statement <= block_label_opt ^ DECLARE declarative_part BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON
     64.1:block_statement <= block_label_opt ^ BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON

   BEGIN                              => shift and goto state 72 64.1
   DECLARE                            => shift and goto state 73 64.0
   default                            => ERROR

   Minimal_Complete_Actions => (BEGIN 64.1)

State 13:
     72.3:compound_statement <= block_statement ^

   BEGIN                              => reduce 1 tokens to compound_statement 72.3
   CASE                               => reduce 1 tokens to compound_statement 72.3
   DECLARE                            => reduce 1 tokens to compound_statement 72.3
   ELSE                               => reduce 1 tokens to compound_statement 72.3
   ELSIF                              => reduce 1 tokens to compound_statement 72.3
   END                                => reduce 1 tokens to compound_statement 72.3
   EXIT                               => reduce 1 tokens to compound_statement 72.3
   EXCEPTION                          => reduce 1 tokens to compound_statement 72.3
   FOR                                => reduce 1 tokens to compound_statement 72.3
   FUNCTION                           => reduce 1 tokens to compound_statement 72.3
   IF                                 => reduce 1 tokens to compound_statement 72.3
   LOOP                               => reduce 1 tokens to compound_statement 72.3
   PACKAGE                            => reduce 1 tokens to compound_statement 72.3
   PROCEDURE                          => reduce 1 tokens to compound_statement 72.3
   RETURN                             => reduce 1 tokens to compound_statement 72.3
   WHEN                               => reduce 1 tokens to compound_statement 72.3
   IDENTIFIER                         => reduce 1 tokens to compound_statement 72.3
   Wisi_EOI                           => reduce 1 tokens to compound_statement 72.3
   default                            => ERROR

   Minimal_Complete_Actions => (1 compound_statement 72.3)

State 14:
     72.1:compound_statement <= case_statement ^

   BEGIN                              => reduce 1 tokens to compound_statement 72.1
   CASE                               => reduce 1 tokens to compound_statement 72.1
   DECLARE                            => reduce 1 tokens to compound_statement 72.1
   ELSE                               => reduce 1 tokens to compound_statement 72.1
   ELSIF                              => reduce 1 tokens to compound_statement 72.1
   END                                => reduce 1 tokens to compound_statement 72.1
   EXIT                               => reduce 1 tokens to compound_statement 72.1
   EXCEPTION                          => reduce 1 tokens to compound_statement 72.1
   FOR                                => reduce 1 tokens to compound_statement 72.1
   FUNCTION                           => reduce 1 tokens to compound_statement 72.1
   IF                                 => reduce 1 tokens to compound_statement 72.1
   LOOP                               => reduce 1 tokens to compound_statement 72.1
   PACKAGE                            => reduce 1 tokens to compound_statement 72.1
   PROCEDURE                          => reduce 1 tokens to compound_statement 72.1
   RETURN                             => reduce 1 tokens to compound_statement 72.1
   WHEN                               => reduce 1 tokens to compound_statement 72.1
   IDENTIFIER                         => reduce 1 tokens to compound_statement 72.1
   Wisi_EOI                           => reduce 1 tokens to compound_statement 72.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 compound_statement 72.1)

State 15:
     71.1:compilation_unit_list <= compilation_unit ^

   BEGIN                              => reduce 1 tokens to compilation_unit_list 71.1
   CASE                               => reduce 1 tokens to compilation_unit_list 71.1
   DECLARE                            => reduce 1 tokens to compilation_unit_list 71.1
   EXIT                               => reduce 1 tokens to compilation_unit_list 71.1
   FOR                                => reduce 1 tokens to compilation_unit_list 71.1
   FUNCTION                           => reduce 1 tokens to compilation_unit_list 71.1
   IF                                 => reduce 1 tokens to compilation_unit_list 71.1
   LOOP                               => reduce 1 tokens to compilation_unit_list 71.1
   PACKAGE                            => reduce 1 tokens to compilation_unit_list 71.1
   PROCEDURE                          => reduce 1 tokens to compilation_unit_list 71.1
   RETURN                             => reduce 1 tokens to compilation_unit_list 71.1
   IDENTIFIER                         => reduce 1 tokens to compilation_unit_list 71.1
   Wisi_EOI                           => reduce 1 tokens to compilation_unit_list 71.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 compilation_unit_list 71.1)

State 16:
     56.0:wisitoken_accept <= compilation_unit_list ^ Wisi_EOI
     71.0:compilation_unit_list <= compilation_unit_list ^ compilation_unit

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1 67.0
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   EXIT                               => shift and goto state 2 86.0
   FOR                                => shift and goto state 3 99.0
   FUNCTION                           => shift and goto state 4 93.0
   IF                                 => shift and goto state 5 97.0
   LOOP                               => shift and goto state 6 100.1
   PACKAGE                            => shift and goto state 7 94.0
   PROCEDURE                          => shift and goto state 8 94.1
   RETURN                             => shift and goto state 9 89.0
   IDENTIFIER                         => shift and goto state 10 63.0
   Wisi_EOI                           => accept it 56.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compilation_unit                   goto state 74
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   function_specification             goto state 20
   generic_instantiation              goto state 21
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   package_body                       goto state 26
   package_specification              goto state 27
   procedure_call_statement           goto state 28
   procedure_specification            goto state 29
   selected_component                 goto state 30
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 33
   subprogram_body                    goto state 34
   subprogram_declaration             goto state 35
   subprogram_specification           goto state 36

   Minimal_Complete_Actions => 

State 17:
    129.1:statement <= compound_statement ^

   BEGIN                              => reduce 1 tokens to statement 129.1
   CASE                               => reduce 1 tokens to statement 129.1
   DECLARE                            => reduce 1 tokens to statement 129.1
   ELSE                               => reduce 1 tokens to statement 129.1
   ELSIF                              => reduce 1 tokens to statement 129.1
   END                                => reduce 1 tokens to statement 129.1
   EXIT                               => reduce 1 tokens to statement 129.1
   EXCEPTION                          => reduce 1 tokens to statement 129.1
   FOR                                => reduce 1 tokens to statement 129.1
   FUNCTION                           => reduce 1 tokens to statement 129.1
   IF                                 => reduce 1 tokens to statement 129.1
   LOOP                               => reduce 1 tokens to statement 129.1
   PACKAGE                            => reduce 1 tokens to statement 129.1
   PROCEDURE                          => reduce 1 tokens to statement 129.1
   RETURN                             => reduce 1 tokens to statement 129.1
   WHEN                               => reduce 1 tokens to statement 129.1
   IDENTIFIER                         => reduce 1 tokens to statement 129.1
   Wisi_EOI                           => reduce 1 tokens to statement 129.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 statement 129.1)

State 18:
    128.1:simple_statement <= exit_statement ^

   BEGIN                              => reduce 1 tokens to simple_statement 128.1
   CASE                               => reduce 1 tokens to simple_statement 128.1
   DECLARE                            => reduce 1 tokens to simple_statement 128.1
   ELSE                               => reduce 1 tokens to simple_statement 128.1
   ELSIF                              => reduce 1 tokens to simple_statement 128.1
   END                                => reduce 1 tokens to simple_statement 128.1
   EXIT                               => reduce 1 tokens to simple_statement 128.1
   EXCEPTION                          => reduce 1 tokens to simple_statement 128.1
   FOR                                => reduce 1 tokens to simple_statement 128.1
   FUNCTION                           => reduce 1 tokens to simple_statement 128.1
   IF                                 => reduce 1 tokens to simple_statement 128.1
   LOOP                               => reduce 1 tokens to simple_statement 128.1
   PACKAGE                            => reduce 1 tokens to simple_statement 128.1
   PROCEDURE                          => reduce 1 tokens to simple_statement 128.1
   RETURN                             => reduce 1 tokens to simple_statement 128.1
   WHEN                               => reduce 1 tokens to simple_statement 128.1
   IDENTIFIER                         => reduce 1 tokens to simple_statement 128.1
   Wisi_EOI                           => reduce 1 tokens to simple_statement 128.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 simple_statement 128.1)

State 19:
     72.4:compound_statement <= extended_return_statement ^

   BEGIN                              => reduce 1 tokens to compound_statement 72.4
   CASE                               => reduce 1 tokens to compound_statement 72.4
   DECLARE                            => reduce 1 tokens to compound_statement 72.4
   ELSE                               => reduce 1 tokens to compound_statement 72.4
   ELSIF                              => reduce 1 tokens to compound_statement 72.4
   END                                => reduce 1 tokens to compound_statement 72.4
   EXIT                               => reduce 1 tokens to compound_statement 72.4
   EXCEPTION                          => reduce 1 tokens to compound_statement 72.4
   FOR                                => reduce 1 tokens to compound_statement 72.4
   FUNCTION                           => reduce 1 tokens to compound_statement 72.4
   IF                                 => reduce 1 tokens to compound_statement 72.4
   LOOP                               => reduce 1 tokens to compound_statement 72.4
   PACKAGE                            => reduce 1 tokens to compound_statement 72.4
   PROCEDURE                          => reduce 1 tokens to compound_statement 72.4
   RETURN                             => reduce 1 tokens to compound_statement 72.4
   WHEN                               => reduce 1 tokens to compound_statement 72.4
   IDENTIFIER                         => reduce 1 tokens to compound_statement 72.4
   Wisi_EOI                           => reduce 1 tokens to compound_statement 72.4
   default                            => ERROR

   Minimal_Complete_Actions => (1 compound_statement 72.4)

State 20:
    133.1:subprogram_specification <= function_specification ^

   IS                                 => reduce 1 tokens to subprogram_specification 133.1
   WITH                               => reduce 1 tokens to subprogram_specification 133.1
   SEMICOLON                          => reduce 1 tokens to subprogram_specification 133.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 subprogram_specification 133.1)

State 21:
     70.4:compilation_unit <= generic_instantiation ^

   BEGIN                              => reduce 1 tokens to compilation_unit 70.4
   CASE                               => reduce 1 tokens to compilation_unit 70.4
   DECLARE                            => reduce 1 tokens to compilation_unit 70.4
   EXIT                               => reduce 1 tokens to compilation_unit 70.4
   FOR                                => reduce 1 tokens to compilation_unit 70.4
   FUNCTION                           => reduce 1 tokens to compilation_unit 70.4
   IF                                 => reduce 1 tokens to compilation_unit 70.4
   LOOP                               => reduce 1 tokens to compilation_unit 70.4
   PACKAGE                            => reduce 1 tokens to compilation_unit 70.4
   PROCEDURE                          => reduce 1 tokens to compilation_unit 70.4
   RETURN                             => reduce 1 tokens to compilation_unit 70.4
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 70.4
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 70.4
   default                            => ERROR

   Minimal_Complete_Actions => (1 compilation_unit 70.4)

State 22:
     72.0:compound_statement <= if_statement ^

   BEGIN                              => reduce 1 tokens to compound_statement 72.0
   CASE                               => reduce 1 tokens to compound_statement 72.0
   DECLARE                            => reduce 1 tokens to compound_statement 72.0
   ELSE                               => reduce 1 tokens to compound_statement 72.0
   ELSIF                              => reduce 1 tokens to compound_statement 72.0
   END                                => reduce 1 tokens to compound_statement 72.0
   EXIT                               => reduce 1 tokens to compound_statement 72.0
   EXCEPTION                          => reduce 1 tokens to compound_statement 72.0
   FOR                                => reduce 1 tokens to compound_statement 72.0
   FUNCTION                           => reduce 1 tokens to compound_statement 72.0
   IF                                 => reduce 1 tokens to compound_statement 72.0
   LOOP                               => reduce 1 tokens to compound_statement 72.0
   PACKAGE                            => reduce 1 tokens to compound_statement 72.0
   PROCEDURE                          => reduce 1 tokens to compound_statement 72.0
   RETURN                             => reduce 1 tokens to compound_statement 72.0
   WHEN                               => reduce 1 tokens to compound_statement 72.0
   IDENTIFIER                         => reduce 1 tokens to compound_statement 72.0
   Wisi_EOI                           => reduce 1 tokens to compound_statement 72.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 compound_statement 72.0)

State 23:
    100.0:loop_statement <= iteration_scheme ^ LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON

   LOOP                               => shift and goto state 75 100.0
   default                            => ERROR

   Minimal_Complete_Actions => (LOOP 100.0)

State 24:
     72.2:compound_statement <= loop_statement ^

   BEGIN                              => reduce 1 tokens to compound_statement 72.2
   CASE                               => reduce 1 tokens to compound_statement 72.2
   DECLARE                            => reduce 1 tokens to compound_statement 72.2
   ELSE                               => reduce 1 tokens to compound_statement 72.2
   ELSIF                              => reduce 1 tokens to compound_statement 72.2
   END                                => reduce 1 tokens to compound_statement 72.2
   EXIT                               => reduce 1 tokens to compound_statement 72.2
   EXCEPTION                          => reduce 1 tokens to compound_statement 72.2
   FOR                                => reduce 1 tokens to compound_statement 72.2
   FUNCTION                           => reduce 1 tokens to compound_statement 72.2
   IF                                 => reduce 1 tokens to compound_statement 72.2
   LOOP                               => reduce 1 tokens to compound_statement 72.2
   PACKAGE                            => reduce 1 tokens to compound_statement 72.2
   PROCEDURE                          => reduce 1 tokens to compound_statement 72.2
   RETURN                             => reduce 1 tokens to compound_statement 72.2
   WHEN                               => reduce 1 tokens to compound_statement 72.2
   IDENTIFIER                         => reduce 1 tokens to compound_statement 72.2
   Wisi_EOI                           => reduce 1 tokens to compound_statement 72.2
   default                            => ERROR

   Minimal_Complete_Actions => (1 compound_statement 72.2)

State 25:
     59.0:assignment_statement <= name ^ COLON_EQUAL expression SEMICOLON
    102.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
    102.1:name <= name ^ actual_parameter_part
    113.0:procedure_call_statement <= name ^ SEMICOLON
    123.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                         => shift and goto state 76 57.0
   COLON_EQUAL                        => shift and goto state 77 59.0
   DOT                                => shift and goto state 78 123.0
   SEMICOLON                          => shift and goto state 79 113.0
   default                            => ERROR

   actual_parameter_part              goto state 80

   Minimal_Complete_Actions => (SEMICOLON 113.0)

State 26:
     70.1:compilation_unit <= package_body ^

   BEGIN                              => reduce 1 tokens to compilation_unit 70.1
   CASE                               => reduce 1 tokens to compilation_unit 70.1
   DECLARE                            => reduce 1 tokens to compilation_unit 70.1
   EXIT                               => reduce 1 tokens to compilation_unit 70.1
   FOR                                => reduce 1 tokens to compilation_unit 70.1
   FUNCTION                           => reduce 1 tokens to compilation_unit 70.1
   IF                                 => reduce 1 tokens to compilation_unit 70.1
   LOOP                               => reduce 1 tokens to compilation_unit 70.1
   PACKAGE                            => reduce 1 tokens to compilation_unit 70.1
   PROCEDURE                          => reduce 1 tokens to compilation_unit 70.1
   RETURN                             => reduce 1 tokens to compilation_unit 70.1
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 70.1
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 70.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 compilation_unit 70.1)

State 27:
     70.0:compilation_unit <= package_specification ^

   BEGIN                              => reduce 1 tokens to compilation_unit 70.0
   CASE                               => reduce 1 tokens to compilation_unit 70.0
   DECLARE                            => reduce 1 tokens to compilation_unit 70.0
   EXIT                               => reduce 1 tokens to compilation_unit 70.0
   FOR                                => reduce 1 tokens to compilation_unit 70.0
   FUNCTION                           => reduce 1 tokens to compilation_unit 70.0
   IF                                 => reduce 1 tokens to compilation_unit 70.0
   LOOP                               => reduce 1 tokens to compilation_unit 70.0
   PACKAGE                            => reduce 1 tokens to compilation_unit 70.0
   PROCEDURE                          => reduce 1 tokens to compilation_unit 70.0
   RETURN                             => reduce 1 tokens to compilation_unit 70.0
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 70.0
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 70.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 compilation_unit 70.0)

State 28:
    128.2:simple_statement <= procedure_call_statement ^

   BEGIN                              => reduce 1 tokens to simple_statement 128.2
   CASE                               => reduce 1 tokens to simple_statement 128.2
   DECLARE                            => reduce 1 tokens to simple_statement 128.2
   ELSE                               => reduce 1 tokens to simple_statement 128.2
   ELSIF                              => reduce 1 tokens to simple_statement 128.2
   END                                => reduce 1 tokens to simple_statement 128.2
   EXIT                               => reduce 1 tokens to simple_statement 128.2
   EXCEPTION                          => reduce 1 tokens to simple_statement 128.2
   FOR                                => reduce 1 tokens to simple_statement 128.2
   FUNCTION                           => reduce 1 tokens to simple_statement 128.2
   IF                                 => reduce 1 tokens to simple_statement 128.2
   LOOP                               => reduce 1 tokens to simple_statement 128.2
   PACKAGE                            => reduce 1 tokens to simple_statement 128.2
   PROCEDURE                          => reduce 1 tokens to simple_statement 128.2
   RETURN                             => reduce 1 tokens to simple_statement 128.2
   WHEN                               => reduce 1 tokens to simple_statement 128.2
   IDENTIFIER                         => reduce 1 tokens to simple_statement 128.2
   Wisi_EOI                           => reduce 1 tokens to simple_statement 128.2
   default                            => ERROR

   Minimal_Complete_Actions => (1 simple_statement 128.2)

State 29:
    133.0:subprogram_specification <= procedure_specification ^

   IS                                 => reduce 1 tokens to subprogram_specification 133.0
   WITH                               => reduce 1 tokens to subprogram_specification 133.0
   SEMICOLON                          => reduce 1 tokens to subprogram_specification 133.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 subprogram_specification 133.0)

State 30:
    102.3:name <= selected_component ^

   AND                                => reduce 1 tokens to name 102.3
   IS                                 => reduce 1 tokens to name 102.3
   LEFT_PAREN                         => reduce 1 tokens to name 102.3
   LOOP                               => reduce 1 tokens to name 102.3
   OR                                 => reduce 1 tokens to name 102.3
   RANGE                              => reduce 1 tokens to name 102.3
   RETURN                             => reduce 1 tokens to name 102.3
   RIGHT_PAREN                        => reduce 1 tokens to name 102.3
   THEN                               => reduce 1 tokens to name 102.3
   WITH                               => reduce 1 tokens to name 102.3
   XOR                                => reduce 1 tokens to name 102.3
   AMPERSAND                          => reduce 1 tokens to name 102.3
   COLON_EQUAL                        => reduce 1 tokens to name 102.3
   COMMA                              => reduce 1 tokens to name 102.3
   DOT                                => reduce 1 tokens to name 102.3
   DOT_DOT                            => reduce 1 tokens to name 102.3
   EQUAL                              => reduce 1 tokens to name 102.3
   EQUAL_GREATER                      => reduce 1 tokens to name 102.3
   GREATER                            => reduce 1 tokens to name 102.3
   GREATER_EQUAL                      => reduce 1 tokens to name 102.3
   LESS                               => reduce 1 tokens to name 102.3
   LESS_EQUAL                         => reduce 1 tokens to name 102.3
   MINUS                              => reduce 1 tokens to name 102.3
   PLUS                               => reduce 1 tokens to name 102.3
   SEMICOLON                          => reduce 1 tokens to name 102.3
   SLASH                              => reduce 1 tokens to name 102.3
   SLASH_EQUAL                        => reduce 1 tokens to name 102.3
   STAR                               => reduce 1 tokens to name 102.3
   default                            => ERROR

   Minimal_Complete_Actions => (1 name 102.3)

State 31:
    128.3:simple_statement <= simple_return_statement ^

   BEGIN                              => reduce 1 tokens to simple_statement 128.3
   CASE                               => reduce 1 tokens to simple_statement 128.3
   DECLARE                            => reduce 1 tokens to simple_statement 128.3
   ELSE                               => reduce 1 tokens to simple_statement 128.3
   ELSIF                              => reduce 1 tokens to simple_statement 128.3
   END                                => reduce 1 tokens to simple_statement 128.3
   EXIT                               => reduce 1 tokens to simple_statement 128.3
   EXCEPTION                          => reduce 1 tokens to simple_statement 128.3
   FOR                                => reduce 1 tokens to simple_statement 128.3
   FUNCTION                           => reduce 1 tokens to simple_statement 128.3
   IF                                 => reduce 1 tokens to simple_statement 128.3
   LOOP                               => reduce 1 tokens to simple_statement 128.3
   PACKAGE                            => reduce 1 tokens to simple_statement 128.3
   PROCEDURE                          => reduce 1 tokens to simple_statement 128.3
   RETURN                             => reduce 1 tokens to simple_statement 128.3
   WHEN                               => reduce 1 tokens to simple_statement 128.3
   IDENTIFIER                         => reduce 1 tokens to simple_statement 128.3
   Wisi_EOI                           => reduce 1 tokens to simple_statement 128.3
   default                            => ERROR

   Minimal_Complete_Actions => (1 simple_statement 128.3)

State 32:
    129.0:statement <= simple_statement ^

   BEGIN                              => reduce 1 tokens to statement 129.0
   CASE                               => reduce 1 tokens to statement 129.0
   DECLARE                            => reduce 1 tokens to statement 129.0
   ELSE                               => reduce 1 tokens to statement 129.0
   ELSIF                              => reduce 1 tokens to statement 129.0
   END                                => reduce 1 tokens to statement 129.0
   EXIT                               => reduce 1 tokens to statement 129.0
   EXCEPTION                          => reduce 1 tokens to statement 129.0
   FOR                                => reduce 1 tokens to statement 129.0
   FUNCTION                           => reduce 1 tokens to statement 129.0
   IF                                 => reduce 1 tokens to statement 129.0
   LOOP                               => reduce 1 tokens to statement 129.0
   PACKAGE                            => reduce 1 tokens to statement 129.0
   PROCEDURE                          => reduce 1 tokens to statement 129.0
   RETURN                             => reduce 1 tokens to statement 129.0
   WHEN                               => reduce 1 tokens to statement 129.0
   IDENTIFIER                         => reduce 1 tokens to statement 129.0
   Wisi_EOI                           => reduce 1 tokens to statement 129.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 statement 129.0)

State 33:
     70.5:compilation_unit <= statement ^

   BEGIN                              => reduce 1 tokens to compilation_unit 70.5
   CASE                               => reduce 1 tokens to compilation_unit 70.5
   DECLARE                            => reduce 1 tokens to compilation_unit 70.5
   EXIT                               => reduce 1 tokens to compilation_unit 70.5
   FOR                                => reduce 1 tokens to compilation_unit 70.5
   FUNCTION                           => reduce 1 tokens to compilation_unit 70.5
   IF                                 => reduce 1 tokens to compilation_unit 70.5
   LOOP                               => reduce 1 tokens to compilation_unit 70.5
   PACKAGE                            => reduce 1 tokens to compilation_unit 70.5
   PROCEDURE                          => reduce 1 tokens to compilation_unit 70.5
   RETURN                             => reduce 1 tokens to compilation_unit 70.5
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 70.5
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 70.5
   default                            => ERROR

   Minimal_Complete_Actions => (1 compilation_unit 70.5)

State 34:
     70.3:compilation_unit <= subprogram_body ^

   BEGIN                              => reduce 1 tokens to compilation_unit 70.3
   CASE                               => reduce 1 tokens to compilation_unit 70.3
   DECLARE                            => reduce 1 tokens to compilation_unit 70.3
   EXIT                               => reduce 1 tokens to compilation_unit 70.3
   FOR                                => reduce 1 tokens to compilation_unit 70.3
   FUNCTION                           => reduce 1 tokens to compilation_unit 70.3
   IF                                 => reduce 1 tokens to compilation_unit 70.3
   LOOP                               => reduce 1 tokens to compilation_unit 70.3
   PACKAGE                            => reduce 1 tokens to compilation_unit 70.3
   PROCEDURE                          => reduce 1 tokens to compilation_unit 70.3
   RETURN                             => reduce 1 tokens to compilation_unit 70.3
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 70.3
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 70.3
   default                            => ERROR

   Minimal_Complete_Actions => (1 compilation_unit 70.3)

State 35:
     70.2:compilation_unit <= subprogram_declaration ^

   BEGIN                              => reduce 1 tokens to compilation_unit 70.2
   CASE                               => reduce 1 tokens to compilation_unit 70.2
   DECLARE                            => reduce 1 tokens to compilation_unit 70.2
   EXIT                               => reduce 1 tokens to compilation_unit 70.2
   FOR                                => reduce 1 tokens to compilation_unit 70.2
   FUNCTION                           => reduce 1 tokens to compilation_unit 70.2
   IF                                 => reduce 1 tokens to compilation_unit 70.2
   LOOP                               => reduce 1 tokens to compilation_unit 70.2
   PACKAGE                            => reduce 1 tokens to compilation_unit 70.2
   PROCEDURE                          => reduce 1 tokens to compilation_unit 70.2
   RETURN                             => reduce 1 tokens to compilation_unit 70.2
   IDENTIFIER                         => reduce 1 tokens to compilation_unit 70.2
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 70.2
   default                            => ERROR

   Minimal_Complete_Actions => (1 compilation_unit 70.2)

State 36:
    130.0:subprogram_body <= subprogram_specification ^ aspect_specification_opt IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    132.0:subprogram_declaration <= subprogram_specification ^ SEMICOLON

   IS                                 => reduce 0 tokens to aspect_specification_opt 58.1
   WITH                               => shift and goto state 81 58.0
   SEMICOLON                          => shift and goto state 82 132.0
   default                            => ERROR

   aspect_specification_opt           goto state 83

   Minimal_Complete_Actions => (SEMICOLON 132.0)

State 37:
    111.0:paren_expression <= LEFT_PAREN ^ expression RIGHT_PAREN

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   expression                         goto state 84
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 38:
     90.1:factor <= NOT ^ primary

   LEFT_PAREN                         => shift and goto state 37 111.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 85
   selected_component                 goto state 30

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 39:
    139.1:unary_adding_operator <= MINUS ^

   LEFT_PAREN                         => reduce 1 tokens to unary_adding_operator 139.1
   NOT                                => reduce 1 tokens to unary_adding_operator 139.1
   STRING_LITERAL                     => reduce 1 tokens to unary_adding_operator 139.1
   IDENTIFIER                         => reduce 1 tokens to unary_adding_operator 139.1
   NUMERIC_LITERAL                    => reduce 1 tokens to unary_adding_operator 139.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 unary_adding_operator 139.1)

State 40:
    139.0:unary_adding_operator <= PLUS ^

   LEFT_PAREN                         => reduce 1 tokens to unary_adding_operator 139.0
   NOT                                => reduce 1 tokens to unary_adding_operator 139.0
   STRING_LITERAL                     => reduce 1 tokens to unary_adding_operator 139.0
   IDENTIFIER                         => reduce 1 tokens to unary_adding_operator 139.0
   NUMERIC_LITERAL                    => reduce 1 tokens to unary_adding_operator 139.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 unary_adding_operator 139.0)

State 41:
    112.1:primary <= STRING_LITERAL ^

   AND                                => reduce 1 tokens to primary 112.1
   IS                                 => reduce 1 tokens to primary 112.1
   LOOP                               => reduce 1 tokens to primary 112.1
   OR                                 => reduce 1 tokens to primary 112.1
   RIGHT_PAREN                        => reduce 1 tokens to primary 112.1
   THEN                               => reduce 1 tokens to primary 112.1
   XOR                                => reduce 1 tokens to primary 112.1
   AMPERSAND                          => reduce 1 tokens to primary 112.1
   COLON_EQUAL                        => reduce 1 tokens to primary 112.1
   COMMA                              => reduce 1 tokens to primary 112.1
   DOT_DOT                            => reduce 1 tokens to primary 112.1
   EQUAL                              => reduce 1 tokens to primary 112.1
   GREATER                            => reduce 1 tokens to primary 112.1
   GREATER_EQUAL                      => reduce 1 tokens to primary 112.1
   LESS                               => reduce 1 tokens to primary 112.1
   LESS_EQUAL                         => reduce 1 tokens to primary 112.1
   MINUS                              => reduce 1 tokens to primary 112.1
   PLUS                               => reduce 1 tokens to primary 112.1
   SEMICOLON                          => reduce 1 tokens to primary 112.1
   SLASH                              => reduce 1 tokens to primary 112.1
   SLASH_EQUAL                        => reduce 1 tokens to primary 112.1
   STAR                               => reduce 1 tokens to primary 112.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 primary 112.1)

State 42:
    102.2:name <= IDENTIFIER ^

   AND                                => reduce 1 tokens to name 102.2
   IS                                 => reduce 1 tokens to name 102.2
   LEFT_PAREN                         => reduce 1 tokens to name 102.2
   LOOP                               => reduce 1 tokens to name 102.2
   OR                                 => reduce 1 tokens to name 102.2
   RANGE                              => reduce 1 tokens to name 102.2
   RETURN                             => reduce 1 tokens to name 102.2
   RIGHT_PAREN                        => reduce 1 tokens to name 102.2
   THEN                               => reduce 1 tokens to name 102.2
   WITH                               => reduce 1 tokens to name 102.2
   XOR                                => reduce 1 tokens to name 102.2
   AMPERSAND                          => reduce 1 tokens to name 102.2
   COLON_EQUAL                        => reduce 1 tokens to name 102.2
   COMMA                              => reduce 1 tokens to name 102.2
   DOT                                => reduce 1 tokens to name 102.2
   DOT_DOT                            => reduce 1 tokens to name 102.2
   EQUAL                              => reduce 1 tokens to name 102.2
   EQUAL_GREATER                      => reduce 1 tokens to name 102.2
   GREATER                            => reduce 1 tokens to name 102.2
   GREATER_EQUAL                      => reduce 1 tokens to name 102.2
   LESS                               => reduce 1 tokens to name 102.2
   LESS_EQUAL                         => reduce 1 tokens to name 102.2
   MINUS                              => reduce 1 tokens to name 102.2
   PLUS                               => reduce 1 tokens to name 102.2
   SEMICOLON                          => reduce 1 tokens to name 102.2
   SLASH                              => reduce 1 tokens to name 102.2
   SLASH_EQUAL                        => reduce 1 tokens to name 102.2
   STAR                               => reduce 1 tokens to name 102.2
   default                            => ERROR

   Minimal_Complete_Actions => (1 name 102.2)

State 43:
    112.0:primary <= NUMERIC_LITERAL ^

   AND                                => reduce 1 tokens to primary 112.0
   IS                                 => reduce 1 tokens to primary 112.0
   LOOP                               => reduce 1 tokens to primary 112.0
   OR                                 => reduce 1 tokens to primary 112.0
   RIGHT_PAREN                        => reduce 1 tokens to primary 112.0
   THEN                               => reduce 1 tokens to primary 112.0
   XOR                                => reduce 1 tokens to primary 112.0
   AMPERSAND                          => reduce 1 tokens to primary 112.0
   COLON_EQUAL                        => reduce 1 tokens to primary 112.0
   COMMA                              => reduce 1 tokens to primary 112.0
   DOT_DOT                            => reduce 1 tokens to primary 112.0
   EQUAL                              => reduce 1 tokens to primary 112.0
   GREATER                            => reduce 1 tokens to primary 112.0
   GREATER_EQUAL                      => reduce 1 tokens to primary 112.0
   LESS                               => reduce 1 tokens to primary 112.0
   LESS_EQUAL                         => reduce 1 tokens to primary 112.0
   MINUS                              => reduce 1 tokens to primary 112.0
   PLUS                               => reduce 1 tokens to primary 112.0
   SEMICOLON                          => reduce 1 tokens to primary 112.0
   SLASH                              => reduce 1 tokens to primary 112.0
   SLASH_EQUAL                        => reduce 1 tokens to primary 112.0
   STAR                               => reduce 1 tokens to primary 112.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 primary 112.0)

State 44:
     67.0:case_statement <= CASE expression ^ IS case_statement_alternative_list END CASE SEMICOLON

   IS                                 => shift and goto state 86 67.0
   default                            => ERROR

   Minimal_Complete_Actions => (IS 67.0)

State 45:
    135.1:term <= factor ^

   AND                                => reduce 1 tokens to term 135.1
   IS                                 => reduce 1 tokens to term 135.1
   LOOP                               => reduce 1 tokens to term 135.1
   OR                                 => reduce 1 tokens to term 135.1
   RIGHT_PAREN                        => reduce 1 tokens to term 135.1
   THEN                               => reduce 1 tokens to term 135.1
   XOR                                => reduce 1 tokens to term 135.1
   AMPERSAND                          => reduce 1 tokens to term 135.1
   COLON_EQUAL                        => reduce 1 tokens to term 135.1
   COMMA                              => reduce 1 tokens to term 135.1
   DOT_DOT                            => reduce 1 tokens to term 135.1
   EQUAL                              => reduce 1 tokens to term 135.1
   GREATER                            => reduce 1 tokens to term 135.1
   GREATER_EQUAL                      => reduce 1 tokens to term 135.1
   LESS                               => reduce 1 tokens to term 135.1
   LESS_EQUAL                         => reduce 1 tokens to term 135.1
   MINUS                              => reduce 1 tokens to term 135.1
   PLUS                               => reduce 1 tokens to term 135.1
   SEMICOLON                          => reduce 1 tokens to term 135.1
   SLASH                              => reduce 1 tokens to term 135.1
   SLASH_EQUAL                        => reduce 1 tokens to term 135.1
   STAR                               => reduce 1 tokens to term 135.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 term 135.1)

State 46:
    102.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
    102.1:name <= name ^ actual_parameter_part
    112.2:primary <= name ^
    123.0:selected_component <= name ^ DOT IDENTIFIER

   AND                                => reduce 1 tokens to primary 112.2
   IS                                 => reduce 1 tokens to primary 112.2
   LEFT_PAREN                         => shift and goto state 76 57.0
   LOOP                               => reduce 1 tokens to primary 112.2
   OR                                 => reduce 1 tokens to primary 112.2
   RIGHT_PAREN                        => reduce 1 tokens to primary 112.2
   THEN                               => reduce 1 tokens to primary 112.2
   XOR                                => reduce 1 tokens to primary 112.2
   AMPERSAND                          => reduce 1 tokens to primary 112.2
   COLON_EQUAL                        => reduce 1 tokens to primary 112.2
   COMMA                              => reduce 1 tokens to primary 112.2
   DOT                                => shift and goto state 78 123.0
   DOT_DOT                            => reduce 1 tokens to primary 112.2
   EQUAL                              => reduce 1 tokens to primary 112.2
   GREATER                            => reduce 1 tokens to primary 112.2
   GREATER_EQUAL                      => reduce 1 tokens to primary 112.2
   LESS                               => reduce 1 tokens to primary 112.2
   LESS_EQUAL                         => reduce 1 tokens to primary 112.2
   MINUS                              => reduce 1 tokens to primary 112.2
   PLUS                               => reduce 1 tokens to primary 112.2
   SEMICOLON                          => reduce 1 tokens to primary 112.2
   SLASH                              => reduce 1 tokens to primary 112.2
   SLASH_EQUAL                        => reduce 1 tokens to primary 112.2
   STAR                               => reduce 1 tokens to primary 112.2
   default                            => ERROR

   actual_parameter_part              goto state 80

   Minimal_Complete_Actions => (1 primary 112.2)

State 47:
    112.3:primary <= paren_expression ^

   AND                                => reduce 1 tokens to primary 112.3
   IS                                 => reduce 1 tokens to primary 112.3
   LOOP                               => reduce 1 tokens to primary 112.3
   OR                                 => reduce 1 tokens to primary 112.3
   RIGHT_PAREN                        => reduce 1 tokens to primary 112.3
   THEN                               => reduce 1 tokens to primary 112.3
   XOR                                => reduce 1 tokens to primary 112.3
   AMPERSAND                          => reduce 1 tokens to primary 112.3
   COLON_EQUAL                        => reduce 1 tokens to primary 112.3
   COMMA                              => reduce 1 tokens to primary 112.3
   DOT_DOT                            => reduce 1 tokens to primary 112.3
   EQUAL                              => reduce 1 tokens to primary 112.3
   GREATER                            => reduce 1 tokens to primary 112.3
   GREATER_EQUAL                      => reduce 1 tokens to primary 112.3
   LESS                               => reduce 1 tokens to primary 112.3
   LESS_EQUAL                         => reduce 1 tokens to primary 112.3
   MINUS                              => reduce 1 tokens to primary 112.3
   PLUS                               => reduce 1 tokens to primary 112.3
   SEMICOLON                          => reduce 1 tokens to primary 112.3
   SLASH                              => reduce 1 tokens to primary 112.3
   SLASH_EQUAL                        => reduce 1 tokens to primary 112.3
   STAR                               => reduce 1 tokens to primary 112.3
   default                            => ERROR

   Minimal_Complete_Actions => (1 primary 112.3)

State 48:
     90.0:factor <= primary ^

   AND                                => reduce 1 tokens to factor 90.0
   IS                                 => reduce 1 tokens to factor 90.0
   LOOP                               => reduce 1 tokens to factor 90.0
   OR                                 => reduce 1 tokens to factor 90.0
   RIGHT_PAREN                        => reduce 1 tokens to factor 90.0
   THEN                               => reduce 1 tokens to factor 90.0
   XOR                                => reduce 1 tokens to factor 90.0
   AMPERSAND                          => reduce 1 tokens to factor 90.0
   COLON_EQUAL                        => reduce 1 tokens to factor 90.0
   COMMA                              => reduce 1 tokens to factor 90.0
   DOT_DOT                            => reduce 1 tokens to factor 90.0
   EQUAL                              => reduce 1 tokens to factor 90.0
   GREATER                            => reduce 1 tokens to factor 90.0
   GREATER_EQUAL                      => reduce 1 tokens to factor 90.0
   LESS                               => reduce 1 tokens to factor 90.0
   LESS_EQUAL                         => reduce 1 tokens to factor 90.0
   MINUS                              => reduce 1 tokens to factor 90.0
   PLUS                               => reduce 1 tokens to factor 90.0
   SEMICOLON                          => reduce 1 tokens to factor 90.0
   SLASH                              => reduce 1 tokens to factor 90.0
   SLASH_EQUAL                        => reduce 1 tokens to factor 90.0
   STAR                               => reduce 1 tokens to factor 90.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 factor 90.0)

State 49:
     87.1:expression <= relation_and_list ^
    118.0:relation_and_list <= relation_and_list ^ AND relation

   AND                                => shift and goto state 87 118.0
   IS                                 => reduce 1 tokens to expression 87.1
   RIGHT_PAREN                        => reduce 1 tokens to expression 87.1
   THEN                               => reduce 1 tokens to expression 87.1
   COMMA                              => reduce 1 tokens to expression 87.1
   SEMICOLON                          => reduce 1 tokens to expression 87.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 expression 87.1)

State 50:
     87.2:expression <= relation_or_list ^
    119.0:relation_or_list <= relation_or_list ^ OR relation

   IS                                 => reduce 1 tokens to expression 87.2
   OR                                 => shift and goto state 88 119.0
   RIGHT_PAREN                        => reduce 1 tokens to expression 87.2
   THEN                               => reduce 1 tokens to expression 87.2
   COMMA                              => reduce 1 tokens to expression 87.2
   SEMICOLON                          => reduce 1 tokens to expression 87.2
   default                            => ERROR

   Minimal_Complete_Actions => (1 expression 87.2)

State 51:
     87.3:expression <= relation_xor_list ^
    120.0:relation_xor_list <= relation_xor_list ^ XOR relation

   IS                                 => reduce 1 tokens to expression 87.3
   RIGHT_PAREN                        => reduce 1 tokens to expression 87.3
   THEN                               => reduce 1 tokens to expression 87.3
   XOR                                => shift and goto state 89 120.0
   COMMA                              => reduce 1 tokens to expression 87.3
   SEMICOLON                          => reduce 1 tokens to expression 87.3
   default                            => ERROR

   Minimal_Complete_Actions => (1 expression 87.3)

State 52:
     87.0:expression <= relation ^
    118.1:relation_and_list <= relation ^ AND relation
    119.1:relation_or_list <= relation ^ OR relation
    120.1:relation_xor_list <= relation ^ XOR relation

   AND                                => shift and goto state 90 118.1
   IS                                 => reduce 1 tokens to expression 87.0
   OR                                 => shift and goto state 91 119.1
   RIGHT_PAREN                        => reduce 1 tokens to expression 87.0
   THEN                               => reduce 1 tokens to expression 87.0
   XOR                                => shift and goto state 92 120.1
   COMMA                              => reduce 1 tokens to expression 87.0
   SEMICOLON                          => reduce 1 tokens to expression 87.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 expression 87.0)

State 53:
    121.0:relation <= simple_expression ^ relational_operator simple_expression
    121.1:relation <= simple_expression ^

   AND                                => reduce 1 tokens to relation 121.1
   IS                                 => reduce 1 tokens to relation 121.1
   OR                                 => reduce 1 tokens to relation 121.1
   RIGHT_PAREN                        => reduce 1 tokens to relation 121.1
   THEN                               => reduce 1 tokens to relation 121.1
   XOR                                => reduce 1 tokens to relation 121.1
   COMMA                              => reduce 1 tokens to relation 121.1
   EQUAL                              => shift and goto state 93 122.0
   GREATER                            => shift and goto state 94 122.4
   GREATER_EQUAL                      => shift and goto state 95 122.5
   LESS                               => shift and goto state 96 122.2
   LESS_EQUAL                         => shift and goto state 97 122.3
   SEMICOLON                          => reduce 1 tokens to relation 121.1
   SLASH_EQUAL                        => shift and goto state 98 122.1
   default                            => ERROR

   relational_operator                goto state 99

   Minimal_Complete_Actions => (1 relation 121.1)

State 54:
    135.0:term <= term ^ multiplying_operator factor
    136.1:term_list <= term ^

   AND                                => reduce 1 tokens to term_list 136.1
   IS                                 => reduce 1 tokens to term_list 136.1
   LOOP                               => reduce 1 tokens to term_list 136.1
   OR                                 => reduce 1 tokens to term_list 136.1
   RIGHT_PAREN                        => reduce 1 tokens to term_list 136.1
   THEN                               => reduce 1 tokens to term_list 136.1
   XOR                                => reduce 1 tokens to term_list 136.1
   AMPERSAND                          => reduce 1 tokens to term_list 136.1
   COLON_EQUAL                        => reduce 1 tokens to term_list 136.1
   COMMA                              => reduce 1 tokens to term_list 136.1
   DOT_DOT                            => reduce 1 tokens to term_list 136.1
   EQUAL                              => reduce 1 tokens to term_list 136.1
   GREATER                            => reduce 1 tokens to term_list 136.1
   GREATER_EQUAL                      => reduce 1 tokens to term_list 136.1
   LESS                               => reduce 1 tokens to term_list 136.1
   LESS_EQUAL                         => reduce 1 tokens to term_list 136.1
   MINUS                              => reduce 1 tokens to term_list 136.1
   PLUS                               => reduce 1 tokens to term_list 136.1
   SEMICOLON                          => reduce 1 tokens to term_list 136.1
   SLASH                              => shift and goto state 100 101.1
   SLASH_EQUAL                        => reduce 1 tokens to term_list 136.1
   STAR                               => shift and goto state 101 101.0
   default                            => ERROR

   multiplying_operator               goto state 102

   Minimal_Complete_Actions => (1 term_list 136.1)

State 55:
    126.1:simple_expression <= term_list ^
    136.0:term_list <= term_list ^ binary_adding_operator term

   AND                                => reduce 1 tokens to simple_expression 126.1
   IS                                 => reduce 1 tokens to simple_expression 126.1
   LOOP                               => reduce 1 tokens to simple_expression 126.1
   OR                                 => reduce 1 tokens to simple_expression 126.1
   RIGHT_PAREN                        => reduce 1 tokens to simple_expression 126.1
   THEN                               => reduce 1 tokens to simple_expression 126.1
   XOR                                => reduce 1 tokens to simple_expression 126.1
   AMPERSAND                          => shift and goto state 103 62.2
   COLON_EQUAL                        => reduce 1 tokens to simple_expression 126.1
   COMMA                              => reduce 1 tokens to simple_expression 126.1
   DOT_DOT                            => reduce 1 tokens to simple_expression 126.1
   EQUAL                              => reduce 1 tokens to simple_expression 126.1
   GREATER                            => reduce 1 tokens to simple_expression 126.1
   GREATER_EQUAL                      => reduce 1 tokens to simple_expression 126.1
   LESS                               => reduce 1 tokens to simple_expression 126.1
   LESS_EQUAL                         => reduce 1 tokens to simple_expression 126.1
   MINUS                              => shift and goto state 104 62.1
   PLUS                               => shift and goto state 105 62.0
   SEMICOLON                          => reduce 1 tokens to simple_expression 126.1
   SLASH_EQUAL                        => reduce 1 tokens to simple_expression 126.1
   default                            => ERROR

   binary_adding_operator             goto state 106

   Minimal_Complete_Actions => (1 simple_expression 126.1)

State 56:
    126.0:simple_expression <= unary_adding_operator ^ term_list

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   selected_component                 goto state 30
   term                               goto state 54
   term_list                          goto state 107

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 57:
     96.0:identifier_opt <= IDENTIFIER ^

   WHEN                               => reduce 1 tokens to identifier_opt 96.0
   SEMICOLON                          => reduce 1 tokens to identifier_opt 96.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 identifier_opt 96.0)

State 58:
     86.0:exit_statement <= EXIT identifier_opt ^ WHEN expression SEMICOLON
     86.1:exit_statement <= EXIT identifier_opt ^ SEMICOLON

   WHEN                               => shift and goto state 108 86.0
   SEMICOLON                          => shift and goto state 109 86.1
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 86.1)

State 59:
     99.0:iteration_scheme <= FOR IDENTIFIER ^ IN discrete_subtype_definition

   IN                                 => shift and goto state 110 99.0
   default                            => ERROR

   Minimal_Complete_Actions => (IN 99.0)

State 60:
     93.0:function_specification <= FUNCTION name ^ parameter_and_result_profile
    102.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
    102.1:name <= name ^ actual_parameter_part
    123.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                         => shift and goto state 111 57.0
   RETURN                             => shift and goto state 112 107.1
   DOT                                => shift and goto state 78 123.0
   default                            => ERROR

   actual_parameter_part              goto state 80
   formal_part                        goto state 113
   parameter_and_result_profile       goto state 114

   Minimal_Complete_Actions => (RETURN 107.1)

State 61:
     97.0:if_statement <= IF expression ^ THEN sequence_of_statements elsif_statement_list ELSE sequence_of_statements END IF SEMICOLON
     97.1:if_statement <= IF expression ^ THEN sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON
     97.2:if_statement <= IF expression ^ THEN sequence_of_statements elsif_statement_list END IF SEMICOLON
     97.3:if_statement <= IF expression ^ THEN sequence_of_statements END IF SEMICOLON

   THEN                               => shift and goto state 115 97.0
   default                            => ERROR

   Minimal_Complete_Actions => (THEN 97.0)

State 62:
    124.0:sequence_of_statements_list <= sequence_of_statements_list ^ statement
    125.0:sequence_of_statements <= sequence_of_statements_list ^

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1 67.0
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   ELSE                               => reduce 1 tokens to sequence_of_statements 125.0
   ELSIF                              => reduce 1 tokens to sequence_of_statements 125.0
   END                                => reduce 1 tokens to sequence_of_statements 125.0
   EXIT                               => shift and goto state 2 86.0
   EXCEPTION                          => reduce 1 tokens to sequence_of_statements 125.0
   FOR                                => shift and goto state 3 99.0
   IF                                 => shift and goto state 5 97.0
   LOOP                               => shift and goto state 6 100.1
   RETURN                             => shift and goto state 9 89.0
   WHEN                               => reduce 1 tokens to sequence_of_statements 125.0
   IDENTIFIER                         => shift and goto state 10 63.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 116

   Minimal_Complete_Actions => (1 sequence_of_statements 125.0)

State 63:
    100.1:loop_statement <= LOOP sequence_of_statements ^ END LOOP identifier_opt SEMICOLON

   END                                => shift and goto state 117 100.1
   default                            => ERROR

   Minimal_Complete_Actions => (END 100.1)

State 64:
    124.1:sequence_of_statements_list <= statement ^

   BEGIN                              => reduce 1 tokens to sequence_of_statements_list 124.1
   CASE                               => reduce 1 tokens to sequence_of_statements_list 124.1
   DECLARE                            => reduce 1 tokens to sequence_of_statements_list 124.1
   ELSE                               => reduce 1 tokens to sequence_of_statements_list 124.1
   ELSIF                              => reduce 1 tokens to sequence_of_statements_list 124.1
   END                                => reduce 1 tokens to sequence_of_statements_list 124.1
   EXIT                               => reduce 1 tokens to sequence_of_statements_list 124.1
   EXCEPTION                          => reduce 1 tokens to sequence_of_statements_list 124.1
   FOR                                => reduce 1 tokens to sequence_of_statements_list 124.1
   IF                                 => reduce 1 tokens to sequence_of_statements_list 124.1
   LOOP                               => reduce 1 tokens to sequence_of_statements_list 124.1
   RETURN                             => reduce 1 tokens to sequence_of_statements_list 124.1
   WHEN                               => reduce 1 tokens to sequence_of_statements_list 124.1
   IDENTIFIER                         => reduce 1 tokens to sequence_of_statements_list 124.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 sequence_of_statements_list 124.1)

State 65:
    105.0:package_body <= PACKAGE BODY ^ name aspect_specification_opt IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    105.1:package_body <= PACKAGE BODY ^ name aspect_specification_opt IS declarative_part END name_opt SEMICOLON

   IDENTIFIER                         => shift and goto state 42 102.2
   default                            => ERROR

   name                               goto state 118
   selected_component                 goto state 30

   Minimal_Complete_Actions => (IDENTIFIER 102.2)

State 66:
     94.0:generic_instantiation <= PACKAGE name ^ IS NEW name SEMICOLON
    102.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
    102.1:name <= name ^ actual_parameter_part
    106.0:package_specification <= PACKAGE name ^ aspect_specification_opt IS declarative_part END name_opt SEMICOLON
    123.0:selected_component <= name ^ DOT IDENTIFIER

   IS                                 => shift and goto state 119 94.0,
                                         reduce 0 tokens to aspect_specification_opt 58.1
   LEFT_PAREN                         => shift and goto state 76 57.0
   WITH                               => shift and goto state 81 58.0
   DOT                                => shift and goto state 78 123.0
   default                            => ERROR

   actual_parameter_part              goto state 80
   aspect_specification_opt           goto state 120

   Minimal_Complete_Actions => (0 aspect_specification_opt 58.1)

State 67:
     94.1:generic_instantiation <= PROCEDURE name ^ IS NEW name SEMICOLON
    102.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
    102.1:name <= name ^ actual_parameter_part
    114.0:procedure_specification <= PROCEDURE name ^ parameter_profile_opt
    123.0:selected_component <= name ^ DOT IDENTIFIER

   IS                                 => shift and goto state 121 94.1,
                                         reduce 0 tokens to parameter_profile_opt 108.1
   LEFT_PAREN                         => shift and goto state 111 57.0
   WITH                               => reduce 0 tokens to parameter_profile_opt 108.1
   DOT                                => shift and goto state 78 123.0
   SEMICOLON                          => reduce 0 tokens to parameter_profile_opt 108.1
   default                            => ERROR

   actual_parameter_part              goto state 80
   formal_part                        goto state 122
   parameter_profile_opt              goto state 123

   Minimal_Complete_Actions => ((IS 94.1), (0 parameter_profile_opt 108.1))

State 68:
     88.0:extended_return_object_declaration <= IDENTIFIER ^ COLON subtype_indication
    102.2:name <= IDENTIFIER ^

   AND                                => reduce 1 tokens to name 102.2
   LEFT_PAREN                         => reduce 1 tokens to name 102.2
   OR                                 => reduce 1 tokens to name 102.2
   XOR                                => reduce 1 tokens to name 102.2
   AMPERSAND                          => reduce 1 tokens to name 102.2
   COLON                              => shift and goto state 124 88.0
   DOT                                => reduce 1 tokens to name 102.2
   EQUAL                              => reduce 1 tokens to name 102.2
   GREATER                            => reduce 1 tokens to name 102.2
   GREATER_EQUAL                      => reduce 1 tokens to name 102.2
   LESS                               => reduce 1 tokens to name 102.2
   LESS_EQUAL                         => reduce 1 tokens to name 102.2
   MINUS                              => reduce 1 tokens to name 102.2
   PLUS                               => reduce 1 tokens to name 102.2
   SEMICOLON                          => reduce 1 tokens to name 102.2
   SLASH                              => reduce 1 tokens to name 102.2
   SLASH_EQUAL                        => reduce 1 tokens to name 102.2
   STAR                               => reduce 1 tokens to name 102.2
   default                            => ERROR

   Minimal_Complete_Actions => ((COLON 88.0), (1 name 102.2))

State 69:
    127.0:simple_return_statement <= RETURN expression ^ SEMICOLON

   SEMICOLON                          => shift and goto state 125 127.0
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 127.0)

State 70:
     89.0:extended_return_statement <= RETURN extended_return_object_declaration ^ SEMICOLON

   SEMICOLON                          => shift and goto state 126 89.0
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 89.0)

State 71:
     63.0:block_label_opt <= IDENTIFIER COLON ^

   BEGIN                              => reduce 2 tokens to block_label_opt 63.0
   DECLARE                            => reduce 2 tokens to block_label_opt 63.0
   default                            => ERROR

   Minimal_Complete_Actions => (2 block_label_opt 63.0)

State 72:
     64.1:block_statement <= block_label_opt BEGIN ^ handled_sequence_of_statements END identifier_opt SEMICOLON

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1 67.0
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 125.1
   EXIT                               => shift and goto state 2 86.0
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements 125.1
   FOR                                => shift and goto state 3 99.0
   IF                                 => shift and goto state 5 97.0
   LOOP                               => shift and goto state 6 100.1
   RETURN                             => shift and goto state 9 89.0
   IDENTIFIER                         => shift and goto state 10 63.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   handled_sequence_of_statements     goto state 127
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements_list        goto state 62
   sequence_of_statements             goto state 128
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 64

   Minimal_Complete_Actions => (0 handled_sequence_of_statements 95.1)

State 73:
     64.0:block_statement <= block_label_opt DECLARE ^ declarative_part BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON

   BEGIN                              => reduce 0 tokens to declarative_part 76.1
   FUNCTION                           => shift and goto state 4 93.0
   PACKAGE                            => shift and goto state 129 105.0
   PROCEDURE                          => shift and goto state 130 114.0
   TYPE                               => shift and goto state 131 92.0
   IDENTIFIER                         => shift and goto state 132 104.0
   default                            => ERROR

   body_g                             goto state 133
   body_stub                          goto state 134
   declaration                        goto state 135
   declarations                       goto state 136
   declarative_part                   goto state 137
   full_type_declaration              goto state 138
   function_specification             goto state 20
   object_declaration                 goto state 139
   package_body                       goto state 140
   procedure_specification            goto state 29
   proper_body                        goto state 141
   subprogram_body                    goto state 142
   subprogram_body_stub               goto state 143
   subprogram_declaration             goto state 144
   subprogram_specification           goto state 145
   type_declaration                   goto state 146

   Minimal_Complete_Actions => (0 declarative_part 76.1)

State 74:
     71.0:compilation_unit_list <= compilation_unit_list compilation_unit ^

   BEGIN                              => reduce 2 tokens to compilation_unit_list 71.0
   CASE                               => reduce 2 tokens to compilation_unit_list 71.0
   DECLARE                            => reduce 2 tokens to compilation_unit_list 71.0
   EXIT                               => reduce 2 tokens to compilation_unit_list 71.0
   FOR                                => reduce 2 tokens to compilation_unit_list 71.0
   FUNCTION                           => reduce 2 tokens to compilation_unit_list 71.0
   IF                                 => reduce 2 tokens to compilation_unit_list 71.0
   LOOP                               => reduce 2 tokens to compilation_unit_list 71.0
   PACKAGE                            => reduce 2 tokens to compilation_unit_list 71.0
   PROCEDURE                          => reduce 2 tokens to compilation_unit_list 71.0
   RETURN                             => reduce 2 tokens to compilation_unit_list 71.0
   IDENTIFIER                         => reduce 2 tokens to compilation_unit_list 71.0
   Wisi_EOI                           => reduce 2 tokens to compilation_unit_list 71.0
   default                            => ERROR

   Minimal_Complete_Actions => (2 compilation_unit_list 71.0)

State 75:
    100.0:loop_statement <= iteration_scheme LOOP ^ sequence_of_statements END LOOP identifier_opt SEMICOLON

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1 67.0
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 125.1
   EXIT                               => shift and goto state 2 86.0
   FOR                                => shift and goto state 3 99.0
   IF                                 => shift and goto state 5 97.0
   LOOP                               => shift and goto state 6 100.1
   RETURN                             => shift and goto state 9 89.0
   IDENTIFIER                         => shift and goto state 10 63.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements_list        goto state 62
   sequence_of_statements             goto state 147
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 64

   Minimal_Complete_Actions => (0 sequence_of_statements 125.1)

State 76:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN
    102.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   RIGHT_PAREN                        => reduce 0 tokens to association_opt 60.2
   COMMA                              => reduce 0 tokens to association_opt 60.2
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 148 60.0
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   association_opt                    goto state 149
   association_list                   goto state 150
   expression                         goto state 151
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 152
   range_list                         goto state 153
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 30
   simple_expression                  goto state 154
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (0 association_list 61.1)

State 77:
     59.0:assignment_statement <= name COLON_EQUAL ^ expression SEMICOLON

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   expression                         goto state 155
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 78:
    123.0:selected_component <= name DOT ^ IDENTIFIER

   IDENTIFIER                         => shift and goto state 156 123.0
   default                            => ERROR

   Minimal_Complete_Actions => (IDENTIFIER 123.0)

State 79:
    113.0:procedure_call_statement <= name SEMICOLON ^

   BEGIN                              => reduce 2 tokens to procedure_call_statement 113.0
   CASE                               => reduce 2 tokens to procedure_call_statement 113.0
   DECLARE                            => reduce 2 tokens to procedure_call_statement 113.0
   ELSE                               => reduce 2 tokens to procedure_call_statement 113.0
   ELSIF                              => reduce 2 tokens to procedure_call_statement 113.0
   END                                => reduce 2 tokens to procedure_call_statement 113.0
   EXIT                               => reduce 2 tokens to procedure_call_statement 113.0
   EXCEPTION                          => reduce 2 tokens to procedure_call_statement 113.0
   FOR                                => reduce 2 tokens to procedure_call_statement 113.0
   FUNCTION                           => reduce 2 tokens to procedure_call_statement 113.0
   IF                                 => reduce 2 tokens to procedure_call_statement 113.0
   LOOP                               => reduce 2 tokens to procedure_call_statement 113.0
   PACKAGE                            => reduce 2 tokens to procedure_call_statement 113.0
   PROCEDURE                          => reduce 2 tokens to procedure_call_statement 113.0
   RETURN                             => reduce 2 tokens to procedure_call_statement 113.0
   WHEN                               => reduce 2 tokens to procedure_call_statement 113.0
   IDENTIFIER                         => reduce 2 tokens to procedure_call_statement 113.0
   Wisi_EOI                           => reduce 2 tokens to procedure_call_statement 113.0
   default                            => ERROR

   Minimal_Complete_Actions => (2 procedure_call_statement 113.0)

State 80:
    102.1:name <= name actual_parameter_part ^

   AND                                => reduce 2 tokens to name 102.1
   IS                                 => reduce 2 tokens to name 102.1
   LEFT_PAREN                         => reduce 2 tokens to name 102.1
   LOOP                               => reduce 2 tokens to name 102.1
   OR                                 => reduce 2 tokens to name 102.1
   RANGE                              => reduce 2 tokens to name 102.1
   RETURN                             => reduce 2 tokens to name 102.1
   RIGHT_PAREN                        => reduce 2 tokens to name 102.1
   THEN                               => reduce 2 tokens to name 102.1
   WITH                               => reduce 2 tokens to name 102.1
   XOR                                => reduce 2 tokens to name 102.1
   AMPERSAND                          => reduce 2 tokens to name 102.1
   COLON_EQUAL                        => reduce 2 tokens to name 102.1
   COMMA                              => reduce 2 tokens to name 102.1
   DOT                                => reduce 2 tokens to name 102.1
   DOT_DOT                            => reduce 2 tokens to name 102.1
   EQUAL                              => reduce 2 tokens to name 102.1
   EQUAL_GREATER                      => reduce 2 tokens to name 102.1
   GREATER                            => reduce 2 tokens to name 102.1
   GREATER_EQUAL                      => reduce 2 tokens to name 102.1
   LESS                               => reduce 2 tokens to name 102.1
   LESS_EQUAL                         => reduce 2 tokens to name 102.1
   MINUS                              => reduce 2 tokens to name 102.1
   PLUS                               => reduce 2 tokens to name 102.1
   SEMICOLON                          => reduce 2 tokens to name 102.1
   SLASH                              => reduce 2 tokens to name 102.1
   SLASH_EQUAL                        => reduce 2 tokens to name 102.1
   STAR                               => reduce 2 tokens to name 102.1
   default                            => ERROR

   Minimal_Complete_Actions => (2 name 102.1)

State 81:
     58.0:aspect_specification_opt <= WITH ^ association_list

   IS                                 => reduce 0 tokens to association_opt 60.2
   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   COMMA                              => reduce 0 tokens to association_opt 60.2
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 148 60.0
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   association_opt                    goto state 149
   association_list                   goto state 157
   expression                         goto state 151
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (0 association_list 61.1)

State 82:
    132.0:subprogram_declaration <= subprogram_specification SEMICOLON ^

   BEGIN                              => reduce 2 tokens to subprogram_declaration 132.0
   CASE                               => reduce 2 tokens to subprogram_declaration 132.0
   DECLARE                            => reduce 2 tokens to subprogram_declaration 132.0
   END                                => reduce 2 tokens to subprogram_declaration 132.0
   EXIT                               => reduce 2 tokens to subprogram_declaration 132.0
   FOR                                => reduce 2 tokens to subprogram_declaration 132.0
   FUNCTION                           => reduce 2 tokens to subprogram_declaration 132.0
   IF                                 => reduce 2 tokens to subprogram_declaration 132.0
   LOOP                               => reduce 2 tokens to subprogram_declaration 132.0
   PACKAGE                            => reduce 2 tokens to subprogram_declaration 132.0
   PROCEDURE                          => reduce 2 tokens to subprogram_declaration 132.0
   RETURN                             => reduce 2 tokens to subprogram_declaration 132.0
   TYPE                               => reduce 2 tokens to subprogram_declaration 132.0
   IDENTIFIER                         => reduce 2 tokens to subprogram_declaration 132.0
   Wisi_EOI                           => reduce 2 tokens to subprogram_declaration 132.0
   default                            => ERROR

   Minimal_Complete_Actions => (2 subprogram_declaration 132.0)

State 83:
    130.0:subprogram_body <= subprogram_specification aspect_specification_opt ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON

   IS                                 => shift and goto state 158 130.0
   default                            => ERROR

   Minimal_Complete_Actions => (IS 130.0)

State 84:
    111.0:paren_expression <= LEFT_PAREN expression ^ RIGHT_PAREN

   RIGHT_PAREN                        => shift and goto state 159 111.0
   default                            => ERROR

   Minimal_Complete_Actions => (RIGHT_PAREN 111.0)

State 85:
     90.1:factor <= NOT primary ^

   AND                                => reduce 2 tokens to factor 90.1
   IS                                 => reduce 2 tokens to factor 90.1
   LOOP                               => reduce 2 tokens to factor 90.1
   OR                                 => reduce 2 tokens to factor 90.1
   RIGHT_PAREN                        => reduce 2 tokens to factor 90.1
   THEN                               => reduce 2 tokens to factor 90.1
   XOR                                => reduce 2 tokens to factor 90.1
   AMPERSAND                          => reduce 2 tokens to factor 90.1
   COLON_EQUAL                        => reduce 2 tokens to factor 90.1
   COMMA                              => reduce 2 tokens to factor 90.1
   DOT_DOT                            => reduce 2 tokens to factor 90.1
   EQUAL                              => reduce 2 tokens to factor 90.1
   GREATER                            => reduce 2 tokens to factor 90.1
   GREATER_EQUAL                      => reduce 2 tokens to factor 90.1
   LESS                               => reduce 2 tokens to factor 90.1
   LESS_EQUAL                         => reduce 2 tokens to factor 90.1
   MINUS                              => reduce 2 tokens to factor 90.1
   PLUS                               => reduce 2 tokens to factor 90.1
   SEMICOLON                          => reduce 2 tokens to factor 90.1
   SLASH                              => reduce 2 tokens to factor 90.1
   SLASH_EQUAL                        => reduce 2 tokens to factor 90.1
   STAR                               => reduce 2 tokens to factor 90.1
   default                            => ERROR

   Minimal_Complete_Actions => (2 factor 90.1)

State 86:
     67.0:case_statement <= CASE expression IS ^ case_statement_alternative_list END CASE SEMICOLON

   WHEN                               => shift and goto state 160 68.0
   default                            => ERROR

   case_statement_alternative         goto state 161
   case_statement_alternative_list    goto state 162

   Minimal_Complete_Actions => (WHEN 68.0)

State 87:
    118.0:relation_and_list <= relation_and_list AND ^ relation

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 163
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 88:
    119.0:relation_or_list <= relation_or_list OR ^ relation

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 164
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 89:
    120.0:relation_xor_list <= relation_xor_list XOR ^ relation

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 165
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 90:
    118.1:relation_and_list <= relation AND ^ relation

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 166
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 91:
    119.1:relation_or_list <= relation OR ^ relation

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 167
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 92:
    120.1:relation_xor_list <= relation XOR ^ relation

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation                           goto state 168
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 93:
    122.0:relational_operator <= EQUAL ^

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 122.0
   NOT                                => reduce 1 tokens to relational_operator 122.0
   MINUS                              => reduce 1 tokens to relational_operator 122.0
   PLUS                               => reduce 1 tokens to relational_operator 122.0
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 122.0
   IDENTIFIER                         => reduce 1 tokens to relational_operator 122.0
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 122.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 relational_operator 122.0)

State 94:
    122.4:relational_operator <= GREATER ^

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 122.4
   NOT                                => reduce 1 tokens to relational_operator 122.4
   MINUS                              => reduce 1 tokens to relational_operator 122.4
   PLUS                               => reduce 1 tokens to relational_operator 122.4
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 122.4
   IDENTIFIER                         => reduce 1 tokens to relational_operator 122.4
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 122.4
   default                            => ERROR

   Minimal_Complete_Actions => (1 relational_operator 122.4)

State 95:
    122.5:relational_operator <= GREATER_EQUAL ^

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 122.5
   NOT                                => reduce 1 tokens to relational_operator 122.5
   MINUS                              => reduce 1 tokens to relational_operator 122.5
   PLUS                               => reduce 1 tokens to relational_operator 122.5
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 122.5
   IDENTIFIER                         => reduce 1 tokens to relational_operator 122.5
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 122.5
   default                            => ERROR

   Minimal_Complete_Actions => (1 relational_operator 122.5)

State 96:
    122.2:relational_operator <= LESS ^

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 122.2
   NOT                                => reduce 1 tokens to relational_operator 122.2
   MINUS                              => reduce 1 tokens to relational_operator 122.2
   PLUS                               => reduce 1 tokens to relational_operator 122.2
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 122.2
   IDENTIFIER                         => reduce 1 tokens to relational_operator 122.2
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 122.2
   default                            => ERROR

   Minimal_Complete_Actions => (1 relational_operator 122.2)

State 97:
    122.3:relational_operator <= LESS_EQUAL ^

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 122.3
   NOT                                => reduce 1 tokens to relational_operator 122.3
   MINUS                              => reduce 1 tokens to relational_operator 122.3
   PLUS                               => reduce 1 tokens to relational_operator 122.3
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 122.3
   IDENTIFIER                         => reduce 1 tokens to relational_operator 122.3
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 122.3
   default                            => ERROR

   Minimal_Complete_Actions => (1 relational_operator 122.3)

State 98:
    122.1:relational_operator <= SLASH_EQUAL ^

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 122.1
   NOT                                => reduce 1 tokens to relational_operator 122.1
   MINUS                              => reduce 1 tokens to relational_operator 122.1
   PLUS                               => reduce 1 tokens to relational_operator 122.1
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 122.1
   IDENTIFIER                         => reduce 1 tokens to relational_operator 122.1
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 122.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 relational_operator 122.1)

State 99:
    121.0:relation <= simple_expression relational_operator ^ simple_expression

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   selected_component                 goto state 30
   simple_expression                  goto state 169
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 100:
    101.1:multiplying_operator <= SLASH ^

   LEFT_PAREN                         => reduce 1 tokens to multiplying_operator 101.1
   NOT                                => reduce 1 tokens to multiplying_operator 101.1
   STRING_LITERAL                     => reduce 1 tokens to multiplying_operator 101.1
   IDENTIFIER                         => reduce 1 tokens to multiplying_operator 101.1
   NUMERIC_LITERAL                    => reduce 1 tokens to multiplying_operator 101.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 multiplying_operator 101.1)

State 101:
    101.0:multiplying_operator <= STAR ^

   LEFT_PAREN                         => reduce 1 tokens to multiplying_operator 101.0
   NOT                                => reduce 1 tokens to multiplying_operator 101.0
   STRING_LITERAL                     => reduce 1 tokens to multiplying_operator 101.0
   IDENTIFIER                         => reduce 1 tokens to multiplying_operator 101.0
   NUMERIC_LITERAL                    => reduce 1 tokens to multiplying_operator 101.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 multiplying_operator 101.0)

State 102:
    135.0:term <= term multiplying_operator ^ factor

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   factor                             goto state 170
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   selected_component                 goto state 30

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 103:
     62.2:binary_adding_operator <= AMPERSAND ^

   LEFT_PAREN                         => reduce 1 tokens to binary_adding_operator 62.2
   NOT                                => reduce 1 tokens to binary_adding_operator 62.2
   STRING_LITERAL                     => reduce 1 tokens to binary_adding_operator 62.2
   IDENTIFIER                         => reduce 1 tokens to binary_adding_operator 62.2
   NUMERIC_LITERAL                    => reduce 1 tokens to binary_adding_operator 62.2
   default                            => ERROR

   Minimal_Complete_Actions => (1 binary_adding_operator 62.2)

State 104:
     62.1:binary_adding_operator <= MINUS ^

   LEFT_PAREN                         => reduce 1 tokens to binary_adding_operator 62.1
   NOT                                => reduce 1 tokens to binary_adding_operator 62.1
   STRING_LITERAL                     => reduce 1 tokens to binary_adding_operator 62.1
   IDENTIFIER                         => reduce 1 tokens to binary_adding_operator 62.1
   NUMERIC_LITERAL                    => reduce 1 tokens to binary_adding_operator 62.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 binary_adding_operator 62.1)

State 105:
     62.0:binary_adding_operator <= PLUS ^

   LEFT_PAREN                         => reduce 1 tokens to binary_adding_operator 62.0
   NOT                                => reduce 1 tokens to binary_adding_operator 62.0
   STRING_LITERAL                     => reduce 1 tokens to binary_adding_operator 62.0
   IDENTIFIER                         => reduce 1 tokens to binary_adding_operator 62.0
   NUMERIC_LITERAL                    => reduce 1 tokens to binary_adding_operator 62.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 binary_adding_operator 62.0)

State 106:
    136.0:term_list <= term_list binary_adding_operator ^ term

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   selected_component                 goto state 30
   term                               goto state 171

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 107:
    126.0:simple_expression <= unary_adding_operator term_list ^
    136.0:term_list <= term_list ^ binary_adding_operator term

   AND                                => reduce 2 tokens to simple_expression 126.0
   IS                                 => reduce 2 tokens to simple_expression 126.0
   LOOP                               => reduce 2 tokens to simple_expression 126.0
   OR                                 => reduce 2 tokens to simple_expression 126.0
   RIGHT_PAREN                        => reduce 2 tokens to simple_expression 126.0
   THEN                               => reduce 2 tokens to simple_expression 126.0
   XOR                                => reduce 2 tokens to simple_expression 126.0
   AMPERSAND                          => shift and goto state 103 62.2
   COLON_EQUAL                        => reduce 2 tokens to simple_expression 126.0
   COMMA                              => reduce 2 tokens to simple_expression 126.0
   DOT_DOT                            => reduce 2 tokens to simple_expression 126.0
   EQUAL                              => reduce 2 tokens to simple_expression 126.0
   GREATER                            => reduce 2 tokens to simple_expression 126.0
   GREATER_EQUAL                      => reduce 2 tokens to simple_expression 126.0
   LESS                               => reduce 2 tokens to simple_expression 126.0
   LESS_EQUAL                         => reduce 2 tokens to simple_expression 126.0
   MINUS                              => shift and goto state 104 62.1
   PLUS                               => shift and goto state 105 62.0
   SEMICOLON                          => reduce 2 tokens to simple_expression 126.0
   SLASH_EQUAL                        => reduce 2 tokens to simple_expression 126.0
   default                            => ERROR

   binary_adding_operator             goto state 106

   Minimal_Complete_Actions => (2 simple_expression 126.0)

State 108:
     86.0:exit_statement <= EXIT identifier_opt WHEN ^ expression SEMICOLON

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   expression                         goto state 172
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 109:
     86.1:exit_statement <= EXIT identifier_opt SEMICOLON ^

   BEGIN                              => reduce 3 tokens to exit_statement 86.1
   CASE                               => reduce 3 tokens to exit_statement 86.1
   DECLARE                            => reduce 3 tokens to exit_statement 86.1
   ELSE                               => reduce 3 tokens to exit_statement 86.1
   ELSIF                              => reduce 3 tokens to exit_statement 86.1
   END                                => reduce 3 tokens to exit_statement 86.1
   EXIT                               => reduce 3 tokens to exit_statement 86.1
   EXCEPTION                          => reduce 3 tokens to exit_statement 86.1
   FOR                                => reduce 3 tokens to exit_statement 86.1
   FUNCTION                           => reduce 3 tokens to exit_statement 86.1
   IF                                 => reduce 3 tokens to exit_statement 86.1
   LOOP                               => reduce 3 tokens to exit_statement 86.1
   PACKAGE                            => reduce 3 tokens to exit_statement 86.1
   PROCEDURE                          => reduce 3 tokens to exit_statement 86.1
   RETURN                             => reduce 3 tokens to exit_statement 86.1
   WHEN                               => reduce 3 tokens to exit_statement 86.1
   IDENTIFIER                         => reduce 3 tokens to exit_statement 86.1
   Wisi_EOI                           => reduce 3 tokens to exit_statement 86.1
   default                            => ERROR

   Minimal_Complete_Actions => (3 exit_statement 86.1)

State 110:
     99.0:iteration_scheme <= FOR IDENTIFIER IN ^ discrete_subtype_definition

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   discrete_subtype_definition        goto state 173
   factor                             goto state 45
   name                               goto state 174
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 175
   selected_component                 goto state 30
   simple_expression                  goto state 176
   subtype_indication                 goto state 177
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (IDENTIFIER 102.2)

State 111:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN
     91.0:formal_part <= LEFT_PAREN ^ parameter_specification_list RIGHT_PAREN
    102.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   RIGHT_PAREN                        => reduce 0 tokens to association_opt 60.2,
                                         reduce 0 tokens to parameter_specification 109.2
   COMMA                              => reduce 0 tokens to association_opt 60.2
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   SEMICOLON                          => reduce 0 tokens to parameter_specification 109.2
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 178 60.0
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   association_opt                    goto state 149
   association_list                   goto state 150
   expression                         goto state 151
   factor                             goto state 45
   name                               goto state 46
   parameter_specification            goto state 179
   parameter_specification_list       goto state 180
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 152
   range_list                         goto state 153
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 30
   simple_expression                  goto state 154
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => ((0 association_list 61.1), (0 parameter_specification_list 110.1))

State 112:
    107.1:parameter_and_result_profile <= RETURN ^ IDENTIFIER

   IDENTIFIER                         => shift and goto state 181 107.1
   default                            => ERROR

   Minimal_Complete_Actions => (IDENTIFIER 107.1)

State 113:
    107.0:parameter_and_result_profile <= formal_part ^ RETURN IDENTIFIER

   RETURN                             => shift and goto state 182 107.0
   default                            => ERROR

   Minimal_Complete_Actions => (RETURN 107.0)

State 114:
     93.0:function_specification <= FUNCTION name parameter_and_result_profile ^

   IS                                 => reduce 3 tokens to function_specification 93.0
   WITH                               => reduce 3 tokens to function_specification 93.0
   SEMICOLON                          => reduce 3 tokens to function_specification 93.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 function_specification 93.0)

State 115:
     97.0:if_statement <= IF expression THEN ^ sequence_of_statements elsif_statement_list ELSE sequence_of_statements END IF SEMICOLON
     97.1:if_statement <= IF expression THEN ^ sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON
     97.2:if_statement <= IF expression THEN ^ sequence_of_statements elsif_statement_list END IF SEMICOLON
     97.3:if_statement <= IF expression THEN ^ sequence_of_statements END IF SEMICOLON

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1 67.0
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   ELSE                               => reduce 0 tokens to sequence_of_statements 125.1
   ELSIF                              => reduce 0 tokens to sequence_of_statements 125.1
   END                                => reduce 0 tokens to sequence_of_statements 125.1
   EXIT                               => shift and goto state 2 86.0
   FOR                                => shift and goto state 3 99.0
   IF                                 => shift and goto state 5 97.0
   LOOP                               => shift and goto state 6 100.1
   RETURN                             => shift and goto state 9 89.0
   IDENTIFIER                         => shift and goto state 10 63.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements_list        goto state 62
   sequence_of_statements             goto state 183
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 64

   Minimal_Complete_Actions => (0 sequence_of_statements 125.1)

State 116:
    124.0:sequence_of_statements_list <= sequence_of_statements_list statement ^

   BEGIN                              => reduce 2 tokens to sequence_of_statements_list 124.0
   CASE                               => reduce 2 tokens to sequence_of_statements_list 124.0
   DECLARE                            => reduce 2 tokens to sequence_of_statements_list 124.0
   ELSE                               => reduce 2 tokens to sequence_of_statements_list 124.0
   ELSIF                              => reduce 2 tokens to sequence_of_statements_list 124.0
   END                                => reduce 2 tokens to sequence_of_statements_list 124.0
   EXIT                               => reduce 2 tokens to sequence_of_statements_list 124.0
   EXCEPTION                          => reduce 2 tokens to sequence_of_statements_list 124.0
   FOR                                => reduce 2 tokens to sequence_of_statements_list 124.0
   IF                                 => reduce 2 tokens to sequence_of_statements_list 124.0
   LOOP                               => reduce 2 tokens to sequence_of_statements_list 124.0
   RETURN                             => reduce 2 tokens to sequence_of_statements_list 124.0
   WHEN                               => reduce 2 tokens to sequence_of_statements_list 124.0
   IDENTIFIER                         => reduce 2 tokens to sequence_of_statements_list 124.0
   default                            => ERROR

   Minimal_Complete_Actions => (2 sequence_of_statements_list 124.0)

State 117:
    100.1:loop_statement <= LOOP sequence_of_statements END ^ LOOP identifier_opt SEMICOLON

   LOOP                               => shift and goto state 184 100.1
   default                            => ERROR

   Minimal_Complete_Actions => (LOOP 100.1)

State 118:
    102.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
    102.1:name <= name ^ actual_parameter_part
    105.0:package_body <= PACKAGE BODY name ^ aspect_specification_opt IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    105.1:package_body <= PACKAGE BODY name ^ aspect_specification_opt IS declarative_part END name_opt SEMICOLON
    123.0:selected_component <= name ^ DOT IDENTIFIER

   IS                                 => reduce 0 tokens to aspect_specification_opt 58.1
   LEFT_PAREN                         => shift and goto state 76 57.0
   WITH                               => shift and goto state 81 58.0
   DOT                                => shift and goto state 78 123.0
   default                            => ERROR

   actual_parameter_part              goto state 80
   aspect_specification_opt           goto state 185

   Minimal_Complete_Actions => (0 aspect_specification_opt 58.1)

State 119:
     94.0:generic_instantiation <= PACKAGE name IS ^ NEW name SEMICOLON

   NEW                                => shift and goto state 186 94.0
   default                            => ERROR

   Minimal_Complete_Actions => (NEW 94.0)

State 120:
    106.0:package_specification <= PACKAGE name aspect_specification_opt ^ IS declarative_part END name_opt SEMICOLON

   IS                                 => shift and goto state 187 106.0
   default                            => ERROR

   Minimal_Complete_Actions => (IS 106.0)

State 121:
     94.1:generic_instantiation <= PROCEDURE name IS ^ NEW name SEMICOLON

   NEW                                => shift and goto state 188 94.1
   default                            => ERROR

   Minimal_Complete_Actions => (NEW 94.1)

State 122:
    108.0:parameter_profile_opt <= formal_part ^

   IS                                 => reduce 1 tokens to parameter_profile_opt 108.0
   WITH                               => reduce 1 tokens to parameter_profile_opt 108.0
   SEMICOLON                          => reduce 1 tokens to parameter_profile_opt 108.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 parameter_profile_opt 108.0)

State 123:
    114.0:procedure_specification <= PROCEDURE name parameter_profile_opt ^

   IS                                 => reduce 3 tokens to procedure_specification 114.0
   WITH                               => reduce 3 tokens to procedure_specification 114.0
   SEMICOLON                          => reduce 3 tokens to procedure_specification 114.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 procedure_specification 114.0)

State 124:
     88.0:extended_return_object_declaration <= IDENTIFIER COLON ^ subtype_indication

   IDENTIFIER                         => shift and goto state 42 102.2
   default                            => ERROR

   name                               goto state 189
   selected_component                 goto state 30
   subtype_indication                 goto state 190

   Minimal_Complete_Actions => (IDENTIFIER 102.2)

State 125:
    127.0:simple_return_statement <= RETURN expression SEMICOLON ^

   BEGIN                              => reduce 3 tokens to simple_return_statement 127.0
   CASE                               => reduce 3 tokens to simple_return_statement 127.0
   DECLARE                            => reduce 3 tokens to simple_return_statement 127.0
   ELSE                               => reduce 3 tokens to simple_return_statement 127.0
   ELSIF                              => reduce 3 tokens to simple_return_statement 127.0
   END                                => reduce 3 tokens to simple_return_statement 127.0
   EXIT                               => reduce 3 tokens to simple_return_statement 127.0
   EXCEPTION                          => reduce 3 tokens to simple_return_statement 127.0
   FOR                                => reduce 3 tokens to simple_return_statement 127.0
   FUNCTION                           => reduce 3 tokens to simple_return_statement 127.0
   IF                                 => reduce 3 tokens to simple_return_statement 127.0
   LOOP                               => reduce 3 tokens to simple_return_statement 127.0
   PACKAGE                            => reduce 3 tokens to simple_return_statement 127.0
   PROCEDURE                          => reduce 3 tokens to simple_return_statement 127.0
   RETURN                             => reduce 3 tokens to simple_return_statement 127.0
   WHEN                               => reduce 3 tokens to simple_return_statement 127.0
   IDENTIFIER                         => reduce 3 tokens to simple_return_statement 127.0
   Wisi_EOI                           => reduce 3 tokens to simple_return_statement 127.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 simple_return_statement 127.0)

State 126:
     89.0:extended_return_statement <= RETURN extended_return_object_declaration SEMICOLON ^

   BEGIN                              => reduce 3 tokens to extended_return_statement 89.0
   CASE                               => reduce 3 tokens to extended_return_statement 89.0
   DECLARE                            => reduce 3 tokens to extended_return_statement 89.0
   ELSE                               => reduce 3 tokens to extended_return_statement 89.0
   ELSIF                              => reduce 3 tokens to extended_return_statement 89.0
   END                                => reduce 3 tokens to extended_return_statement 89.0
   EXIT                               => reduce 3 tokens to extended_return_statement 89.0
   EXCEPTION                          => reduce 3 tokens to extended_return_statement 89.0
   FOR                                => reduce 3 tokens to extended_return_statement 89.0
   FUNCTION                           => reduce 3 tokens to extended_return_statement 89.0
   IF                                 => reduce 3 tokens to extended_return_statement 89.0
   LOOP                               => reduce 3 tokens to extended_return_statement 89.0
   PACKAGE                            => reduce 3 tokens to extended_return_statement 89.0
   PROCEDURE                          => reduce 3 tokens to extended_return_statement 89.0
   RETURN                             => reduce 3 tokens to extended_return_statement 89.0
   WHEN                               => reduce 3 tokens to extended_return_statement 89.0
   IDENTIFIER                         => reduce 3 tokens to extended_return_statement 89.0
   Wisi_EOI                           => reduce 3 tokens to extended_return_statement 89.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 extended_return_statement 89.0)

State 127:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements ^ END identifier_opt SEMICOLON

   END                                => shift and goto state 191 64.1
   default                            => ERROR

   Minimal_Complete_Actions => (END 64.1)

State 128:
     95.0:handled_sequence_of_statements <= sequence_of_statements ^ EXCEPTION exception_handler_list_opt
     95.1:handled_sequence_of_statements <= sequence_of_statements ^

   END                                => reduce 1 tokens to handled_sequence_of_statements 95.1
   EXCEPTION                          => shift and goto state 192 95.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 handled_sequence_of_statements 95.1)

State 129:
    105.0:package_body <= PACKAGE ^ BODY name aspect_specification_opt IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    105.1:package_body <= PACKAGE ^ BODY name aspect_specification_opt IS declarative_part END name_opt SEMICOLON

   BODY                               => shift and goto state 65 105.0
   default                            => ERROR

   Minimal_Complete_Actions => (BODY 105.0)

State 130:
    114.0:procedure_specification <= PROCEDURE ^ name parameter_profile_opt

   IDENTIFIER                         => shift and goto state 42 102.2
   default                            => ERROR

   name                               goto state 193
   selected_component                 goto state 30

   Minimal_Complete_Actions => (IDENTIFIER 102.2)

State 131:
     92.0:full_type_declaration <= TYPE ^ IDENTIFIER IS type_definition SEMICOLON

   IDENTIFIER                         => shift and goto state 194 92.0
   default                            => ERROR

   Minimal_Complete_Actions => (IDENTIFIER 92.0)

State 132:
    104.0:object_declaration <= IDENTIFIER ^ COLON subtype_indication COLON_EQUAL expression SEMICOLON
    104.1:object_declaration <= IDENTIFIER ^ COLON subtype_indication SEMICOLON

   COLON                              => shift and goto state 195 104.0
   default                            => ERROR

   Minimal_Complete_Actions => (COLON 104.0)

State 133:
     74.0:declaration <= body_g ^

   BEGIN                              => reduce 1 tokens to declaration 74.0
   END                                => reduce 1 tokens to declaration 74.0
   FUNCTION                           => reduce 1 tokens to declaration 74.0
   PACKAGE                            => reduce 1 tokens to declaration 74.0
   PROCEDURE                          => reduce 1 tokens to declaration 74.0
   TYPE                               => reduce 1 tokens to declaration 74.0
   IDENTIFIER                         => reduce 1 tokens to declaration 74.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 declaration 74.0)

State 134:
     65.1:body_g <= body_stub ^

   BEGIN                              => reduce 1 tokens to body_g 65.1
   END                                => reduce 1 tokens to body_g 65.1
   FUNCTION                           => reduce 1 tokens to body_g 65.1
   PACKAGE                            => reduce 1 tokens to body_g 65.1
   PROCEDURE                          => reduce 1 tokens to body_g 65.1
   TYPE                               => reduce 1 tokens to body_g 65.1
   IDENTIFIER                         => reduce 1 tokens to body_g 65.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 body_g 65.1)

State 135:
     75.1:declarations <= declaration ^

   BEGIN                              => reduce 1 tokens to declarations 75.1
   END                                => reduce 1 tokens to declarations 75.1
   FUNCTION                           => reduce 1 tokens to declarations 75.1
   PACKAGE                            => reduce 1 tokens to declarations 75.1
   PROCEDURE                          => reduce 1 tokens to declarations 75.1
   TYPE                               => reduce 1 tokens to declarations 75.1
   IDENTIFIER                         => reduce 1 tokens to declarations 75.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 declarations 75.1)

State 136:
     75.0:declarations <= declarations ^ declaration
     76.0:declarative_part <= declarations ^

   BEGIN                              => reduce 1 tokens to declarative_part 76.0
   END                                => reduce 1 tokens to declarative_part 76.0
   FUNCTION                           => shift and goto state 4 93.0
   PACKAGE                            => shift and goto state 129 105.0
   PROCEDURE                          => shift and goto state 130 114.0
   TYPE                               => shift and goto state 131 92.0
   IDENTIFIER                         => shift and goto state 132 104.0
   default                            => ERROR

   body_g                             goto state 133
   body_stub                          goto state 134
   declaration                        goto state 196
   full_type_declaration              goto state 138
   function_specification             goto state 20
   object_declaration                 goto state 139
   package_body                       goto state 140
   procedure_specification            goto state 29
   proper_body                        goto state 141
   subprogram_body                    goto state 142
   subprogram_body_stub               goto state 143
   subprogram_declaration             goto state 144
   subprogram_specification           goto state 145
   type_declaration                   goto state 146

   Minimal_Complete_Actions => (1 declarative_part 76.0)

State 137:
     64.0:block_statement <= block_label_opt DECLARE declarative_part ^ BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON

   BEGIN                              => shift and goto state 197 64.0
   default                            => ERROR

   Minimal_Complete_Actions => (BEGIN 64.0)

State 138:
    137.0:type_declaration <= full_type_declaration ^

   BEGIN                              => reduce 1 tokens to type_declaration 137.0
   END                                => reduce 1 tokens to type_declaration 137.0
   FUNCTION                           => reduce 1 tokens to type_declaration 137.0
   PACKAGE                            => reduce 1 tokens to type_declaration 137.0
   PROCEDURE                          => reduce 1 tokens to type_declaration 137.0
   TYPE                               => reduce 1 tokens to type_declaration 137.0
   IDENTIFIER                         => reduce 1 tokens to type_declaration 137.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 type_declaration 137.0)

State 139:
     74.1:declaration <= object_declaration ^

   BEGIN                              => reduce 1 tokens to declaration 74.1
   END                                => reduce 1 tokens to declaration 74.1
   FUNCTION                           => reduce 1 tokens to declaration 74.1
   PACKAGE                            => reduce 1 tokens to declaration 74.1
   PROCEDURE                          => reduce 1 tokens to declaration 74.1
   TYPE                               => reduce 1 tokens to declaration 74.1
   IDENTIFIER                         => reduce 1 tokens to declaration 74.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 declaration 74.1)

State 140:
    115.0:proper_body <= package_body ^

   BEGIN                              => reduce 1 tokens to proper_body 115.0
   END                                => reduce 1 tokens to proper_body 115.0
   FUNCTION                           => reduce 1 tokens to proper_body 115.0
   PACKAGE                            => reduce 1 tokens to proper_body 115.0
   PROCEDURE                          => reduce 1 tokens to proper_body 115.0
   TYPE                               => reduce 1 tokens to proper_body 115.0
   IDENTIFIER                         => reduce 1 tokens to proper_body 115.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 proper_body 115.0)

State 141:
     65.0:body_g <= proper_body ^

   BEGIN                              => reduce 1 tokens to body_g 65.0
   END                                => reduce 1 tokens to body_g 65.0
   FUNCTION                           => reduce 1 tokens to body_g 65.0
   PACKAGE                            => reduce 1 tokens to body_g 65.0
   PROCEDURE                          => reduce 1 tokens to body_g 65.0
   TYPE                               => reduce 1 tokens to body_g 65.0
   IDENTIFIER                         => reduce 1 tokens to body_g 65.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 body_g 65.0)

State 142:
    115.1:proper_body <= subprogram_body ^

   BEGIN                              => reduce 1 tokens to proper_body 115.1
   END                                => reduce 1 tokens to proper_body 115.1
   FUNCTION                           => reduce 1 tokens to proper_body 115.1
   PACKAGE                            => reduce 1 tokens to proper_body 115.1
   PROCEDURE                          => reduce 1 tokens to proper_body 115.1
   TYPE                               => reduce 1 tokens to proper_body 115.1
   IDENTIFIER                         => reduce 1 tokens to proper_body 115.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 proper_body 115.1)

State 143:
     66.0:body_stub <= subprogram_body_stub ^

   BEGIN                              => reduce 1 tokens to body_stub 66.0
   END                                => reduce 1 tokens to body_stub 66.0
   FUNCTION                           => reduce 1 tokens to body_stub 66.0
   PACKAGE                            => reduce 1 tokens to body_stub 66.0
   PROCEDURE                          => reduce 1 tokens to body_stub 66.0
   TYPE                               => reduce 1 tokens to body_stub 66.0
   IDENTIFIER                         => reduce 1 tokens to body_stub 66.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 body_stub 66.0)

State 144:
     74.2:declaration <= subprogram_declaration ^

   BEGIN                              => reduce 1 tokens to declaration 74.2
   END                                => reduce 1 tokens to declaration 74.2
   FUNCTION                           => reduce 1 tokens to declaration 74.2
   PACKAGE                            => reduce 1 tokens to declaration 74.2
   PROCEDURE                          => reduce 1 tokens to declaration 74.2
   TYPE                               => reduce 1 tokens to declaration 74.2
   IDENTIFIER                         => reduce 1 tokens to declaration 74.2
   default                            => ERROR

   Minimal_Complete_Actions => (1 declaration 74.2)

State 145:
    130.0:subprogram_body <= subprogram_specification ^ aspect_specification_opt IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    131.0:subprogram_body_stub <= subprogram_specification ^ IS SEPARATE SEMICOLON
    132.0:subprogram_declaration <= subprogram_specification ^ SEMICOLON

   IS                                 => shift and goto state 198 131.0,
                                         reduce 0 tokens to aspect_specification_opt 58.1
   WITH                               => shift and goto state 81 58.0
   SEMICOLON                          => shift and goto state 82 132.0
   default                            => ERROR

   aspect_specification_opt           goto state 83

   Minimal_Complete_Actions => (SEMICOLON 132.0)

State 146:
     74.3:declaration <= type_declaration ^

   BEGIN                              => reduce 1 tokens to declaration 74.3
   END                                => reduce 1 tokens to declaration 74.3
   FUNCTION                           => reduce 1 tokens to declaration 74.3
   PACKAGE                            => reduce 1 tokens to declaration 74.3
   PROCEDURE                          => reduce 1 tokens to declaration 74.3
   TYPE                               => reduce 1 tokens to declaration 74.3
   IDENTIFIER                         => reduce 1 tokens to declaration 74.3
   default                            => ERROR

   Minimal_Complete_Actions => (1 declaration 74.3)

State 147:
    100.0:loop_statement <= iteration_scheme LOOP sequence_of_statements ^ END LOOP identifier_opt SEMICOLON

   END                                => shift and goto state 199 100.0
   default                            => ERROR

   Minimal_Complete_Actions => (END 100.0)

State 148:
     60.0:association_opt <= IDENTIFIER ^ EQUAL_GREATER expression
    102.2:name <= IDENTIFIER ^

   AND                                => reduce 1 tokens to name 102.2
   IS                                 => reduce 1 tokens to name 102.2
   LEFT_PAREN                         => reduce 1 tokens to name 102.2
   OR                                 => reduce 1 tokens to name 102.2
   RANGE                              => reduce 1 tokens to name 102.2
   RIGHT_PAREN                        => reduce 1 tokens to name 102.2
   XOR                                => reduce 1 tokens to name 102.2
   AMPERSAND                          => reduce 1 tokens to name 102.2
   COMMA                              => reduce 1 tokens to name 102.2
   DOT                                => reduce 1 tokens to name 102.2
   DOT_DOT                            => reduce 1 tokens to name 102.2
   EQUAL                              => reduce 1 tokens to name 102.2
   EQUAL_GREATER                      => shift and goto state 200 60.0
   GREATER                            => reduce 1 tokens to name 102.2
   GREATER_EQUAL                      => reduce 1 tokens to name 102.2
   LESS                               => reduce 1 tokens to name 102.2
   LESS_EQUAL                         => reduce 1 tokens to name 102.2
   MINUS                              => reduce 1 tokens to name 102.2
   PLUS                               => reduce 1 tokens to name 102.2
   SLASH                              => reduce 1 tokens to name 102.2
   SLASH_EQUAL                        => reduce 1 tokens to name 102.2
   STAR                               => reduce 1 tokens to name 102.2
   default                            => ERROR

   Minimal_Complete_Actions => ((EQUAL_GREATER 60.0), (1 name 102.2))

State 149:
     61.1:association_list <= association_opt ^

   IS                                 => reduce 1 tokens to association_list 61.1
   RIGHT_PAREN                        => reduce 1 tokens to association_list 61.1
   COMMA                              => reduce 1 tokens to association_list 61.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 association_list 61.1)

State 150:
     57.0:actual_parameter_part <= LEFT_PAREN association_list ^ RIGHT_PAREN
     61.0:association_list <= association_list ^ COMMA association_opt

   RIGHT_PAREN                        => shift and goto state 201 57.0
   COMMA                              => shift and goto state 202 61.0
   default                            => ERROR

   Minimal_Complete_Actions => (RIGHT_PAREN 57.0)

State 151:
     60.1:association_opt <= expression ^

   IS                                 => reduce 1 tokens to association_opt 60.1
   RIGHT_PAREN                        => reduce 1 tokens to association_opt 60.1
   COMMA                              => reduce 1 tokens to association_opt 60.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 association_opt 60.1)

State 152:
    117.1:range_list <= range_g ^

   RIGHT_PAREN                        => reduce 1 tokens to range_list 117.1
   COMMA                              => reduce 1 tokens to range_list 117.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 range_list 117.1)

State 153:
    102.0:name <= name LEFT_PAREN range_list ^ RIGHT_PAREN
    117.0:range_list <= range_list ^ COMMA range_g

   RIGHT_PAREN                        => shift and goto state 203 102.0
   COMMA                              => shift and goto state 204 117.0
   default                            => ERROR

   Minimal_Complete_Actions => 

State 154:
    116.0:range_g <= simple_expression ^ DOT_DOT simple_expression
    121.0:relation <= simple_expression ^ relational_operator simple_expression
    121.1:relation <= simple_expression ^

   AND                                => reduce 1 tokens to relation 121.1
   OR                                 => reduce 1 tokens to relation 121.1
   RIGHT_PAREN                        => reduce 1 tokens to relation 121.1
   XOR                                => reduce 1 tokens to relation 121.1
   COMMA                              => reduce 1 tokens to relation 121.1
   DOT_DOT                            => shift and goto state 205 116.0
   EQUAL                              => shift and goto state 93 122.0
   GREATER                            => shift and goto state 94 122.4
   GREATER_EQUAL                      => shift and goto state 95 122.5
   LESS                               => shift and goto state 96 122.2
   LESS_EQUAL                         => shift and goto state 97 122.3
   SLASH_EQUAL                        => shift and goto state 98 122.1
   default                            => ERROR

   relational_operator                goto state 99

   Minimal_Complete_Actions => (1 relation 121.1)

State 155:
     59.0:assignment_statement <= name COLON_EQUAL expression ^ SEMICOLON

   SEMICOLON                          => shift and goto state 206 59.0
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 59.0)

State 156:
    123.0:selected_component <= name DOT IDENTIFIER ^

   AND                                => reduce 3 tokens to selected_component 123.0
   IS                                 => reduce 3 tokens to selected_component 123.0
   LEFT_PAREN                         => reduce 3 tokens to selected_component 123.0
   LOOP                               => reduce 3 tokens to selected_component 123.0
   OR                                 => reduce 3 tokens to selected_component 123.0
   RANGE                              => reduce 3 tokens to selected_component 123.0
   RETURN                             => reduce 3 tokens to selected_component 123.0
   RIGHT_PAREN                        => reduce 3 tokens to selected_component 123.0
   THEN                               => reduce 3 tokens to selected_component 123.0
   WITH                               => reduce 3 tokens to selected_component 123.0
   XOR                                => reduce 3 tokens to selected_component 123.0
   AMPERSAND                          => reduce 3 tokens to selected_component 123.0
   COLON_EQUAL                        => reduce 3 tokens to selected_component 123.0
   COMMA                              => reduce 3 tokens to selected_component 123.0
   DOT                                => reduce 3 tokens to selected_component 123.0
   DOT_DOT                            => reduce 3 tokens to selected_component 123.0
   EQUAL                              => reduce 3 tokens to selected_component 123.0
   EQUAL_GREATER                      => reduce 3 tokens to selected_component 123.0
   GREATER                            => reduce 3 tokens to selected_component 123.0
   GREATER_EQUAL                      => reduce 3 tokens to selected_component 123.0
   LESS                               => reduce 3 tokens to selected_component 123.0
   LESS_EQUAL                         => reduce 3 tokens to selected_component 123.0
   MINUS                              => reduce 3 tokens to selected_component 123.0
   PLUS                               => reduce 3 tokens to selected_component 123.0
   SEMICOLON                          => reduce 3 tokens to selected_component 123.0
   SLASH                              => reduce 3 tokens to selected_component 123.0
   SLASH_EQUAL                        => reduce 3 tokens to selected_component 123.0
   STAR                               => reduce 3 tokens to selected_component 123.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 selected_component 123.0)

State 157:
     58.0:aspect_specification_opt <= WITH association_list ^
     61.0:association_list <= association_list ^ COMMA association_opt

   IS                                 => reduce 2 tokens to aspect_specification_opt 58.0
   COMMA                              => shift and goto state 202 61.0
   default                            => ERROR

   Minimal_Complete_Actions => (2 aspect_specification_opt 58.0)

State 158:
    130.0:subprogram_body <= subprogram_specification aspect_specification_opt IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON

   BEGIN                              => reduce 0 tokens to declarative_part 76.1
   FUNCTION                           => shift and goto state 4 93.0
   PACKAGE                            => shift and goto state 129 105.0
   PROCEDURE                          => shift and goto state 130 114.0
   TYPE                               => shift and goto state 131 92.0
   IDENTIFIER                         => shift and goto state 132 104.0
   default                            => ERROR

   body_g                             goto state 133
   body_stub                          goto state 134
   declaration                        goto state 135
   declarations                       goto state 136
   declarative_part                   goto state 207
   full_type_declaration              goto state 138
   function_specification             goto state 20
   object_declaration                 goto state 139
   package_body                       goto state 140
   procedure_specification            goto state 29
   proper_body                        goto state 141
   subprogram_body                    goto state 142
   subprogram_body_stub               goto state 143
   subprogram_declaration             goto state 144
   subprogram_specification           goto state 145
   type_declaration                   goto state 146

   Minimal_Complete_Actions => (0 declarative_part 76.1)

State 159:
    111.0:paren_expression <= LEFT_PAREN expression RIGHT_PAREN ^

   AND                                => reduce 3 tokens to paren_expression 111.0
   IS                                 => reduce 3 tokens to paren_expression 111.0
   LOOP                               => reduce 3 tokens to paren_expression 111.0
   OR                                 => reduce 3 tokens to paren_expression 111.0
   RIGHT_PAREN                        => reduce 3 tokens to paren_expression 111.0
   THEN                               => reduce 3 tokens to paren_expression 111.0
   XOR                                => reduce 3 tokens to paren_expression 111.0
   AMPERSAND                          => reduce 3 tokens to paren_expression 111.0
   COLON_EQUAL                        => reduce 3 tokens to paren_expression 111.0
   COMMA                              => reduce 3 tokens to paren_expression 111.0
   DOT_DOT                            => reduce 3 tokens to paren_expression 111.0
   EQUAL                              => reduce 3 tokens to paren_expression 111.0
   GREATER                            => reduce 3 tokens to paren_expression 111.0
   GREATER_EQUAL                      => reduce 3 tokens to paren_expression 111.0
   LESS                               => reduce 3 tokens to paren_expression 111.0
   LESS_EQUAL                         => reduce 3 tokens to paren_expression 111.0
   MINUS                              => reduce 3 tokens to paren_expression 111.0
   PLUS                               => reduce 3 tokens to paren_expression 111.0
   SEMICOLON                          => reduce 3 tokens to paren_expression 111.0
   SLASH                              => reduce 3 tokens to paren_expression 111.0
   SLASH_EQUAL                        => reduce 3 tokens to paren_expression 111.0
   STAR                               => reduce 3 tokens to paren_expression 111.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 paren_expression 111.0)

State 160:
     68.0:case_statement_alternative <= WHEN ^ NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements

   NUMERIC_LITERAL                    => shift and goto state 208 68.0
   default                            => ERROR

   Minimal_Complete_Actions => (NUMERIC_LITERAL 68.0)

State 161:
     69.1:case_statement_alternative_list <= case_statement_alternative ^

   END                                => reduce 1 tokens to case_statement_alternative_list 69.1
   WHEN                               => reduce 1 tokens to case_statement_alternative_list 69.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 case_statement_alternative_list 69.1)

State 162:
     67.0:case_statement <= CASE expression IS case_statement_alternative_list ^ END CASE SEMICOLON
     69.0:case_statement_alternative_list <= case_statement_alternative_list ^ case_statement_alternative

   END                                => shift and goto state 209 67.0
   WHEN                               => shift and goto state 160 68.0
   default                            => ERROR

   case_statement_alternative         goto state 210

   Minimal_Complete_Actions => (END 67.0)

State 163:
    118.0:relation_and_list <= relation_and_list AND relation ^

   AND                                => reduce 3 tokens to relation_and_list 118.0
   IS                                 => reduce 3 tokens to relation_and_list 118.0
   RIGHT_PAREN                        => reduce 3 tokens to relation_and_list 118.0
   THEN                               => reduce 3 tokens to relation_and_list 118.0
   COMMA                              => reduce 3 tokens to relation_and_list 118.0
   SEMICOLON                          => reduce 3 tokens to relation_and_list 118.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 relation_and_list 118.0)

State 164:
    119.0:relation_or_list <= relation_or_list OR relation ^

   IS                                 => reduce 3 tokens to relation_or_list 119.0
   OR                                 => reduce 3 tokens to relation_or_list 119.0
   RIGHT_PAREN                        => reduce 3 tokens to relation_or_list 119.0
   THEN                               => reduce 3 tokens to relation_or_list 119.0
   COMMA                              => reduce 3 tokens to relation_or_list 119.0
   SEMICOLON                          => reduce 3 tokens to relation_or_list 119.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 relation_or_list 119.0)

State 165:
    120.0:relation_xor_list <= relation_xor_list XOR relation ^

   IS                                 => reduce 3 tokens to relation_xor_list 120.0
   RIGHT_PAREN                        => reduce 3 tokens to relation_xor_list 120.0
   THEN                               => reduce 3 tokens to relation_xor_list 120.0
   XOR                                => reduce 3 tokens to relation_xor_list 120.0
   COMMA                              => reduce 3 tokens to relation_xor_list 120.0
   SEMICOLON                          => reduce 3 tokens to relation_xor_list 120.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 relation_xor_list 120.0)

State 166:
    118.1:relation_and_list <= relation AND relation ^

   AND                                => reduce 3 tokens to relation_and_list 118.1
   IS                                 => reduce 3 tokens to relation_and_list 118.1
   RIGHT_PAREN                        => reduce 3 tokens to relation_and_list 118.1
   THEN                               => reduce 3 tokens to relation_and_list 118.1
   COMMA                              => reduce 3 tokens to relation_and_list 118.1
   SEMICOLON                          => reduce 3 tokens to relation_and_list 118.1
   default                            => ERROR

   Minimal_Complete_Actions => (3 relation_and_list 118.1)

State 167:
    119.1:relation_or_list <= relation OR relation ^

   IS                                 => reduce 3 tokens to relation_or_list 119.1
   OR                                 => reduce 3 tokens to relation_or_list 119.1
   RIGHT_PAREN                        => reduce 3 tokens to relation_or_list 119.1
   THEN                               => reduce 3 tokens to relation_or_list 119.1
   COMMA                              => reduce 3 tokens to relation_or_list 119.1
   SEMICOLON                          => reduce 3 tokens to relation_or_list 119.1
   default                            => ERROR

   Minimal_Complete_Actions => (3 relation_or_list 119.1)

State 168:
    120.1:relation_xor_list <= relation XOR relation ^

   IS                                 => reduce 3 tokens to relation_xor_list 120.1
   RIGHT_PAREN                        => reduce 3 tokens to relation_xor_list 120.1
   THEN                               => reduce 3 tokens to relation_xor_list 120.1
   XOR                                => reduce 3 tokens to relation_xor_list 120.1
   COMMA                              => reduce 3 tokens to relation_xor_list 120.1
   SEMICOLON                          => reduce 3 tokens to relation_xor_list 120.1
   default                            => ERROR

   Minimal_Complete_Actions => (3 relation_xor_list 120.1)

State 169:
    121.0:relation <= simple_expression relational_operator simple_expression ^

   AND                                => reduce 3 tokens to relation 121.0
   IS                                 => reduce 3 tokens to relation 121.0
   OR                                 => reduce 3 tokens to relation 121.0
   RIGHT_PAREN                        => reduce 3 tokens to relation 121.0
   THEN                               => reduce 3 tokens to relation 121.0
   XOR                                => reduce 3 tokens to relation 121.0
   COMMA                              => reduce 3 tokens to relation 121.0
   SEMICOLON                          => reduce 3 tokens to relation 121.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 relation 121.0)

State 170:
    135.0:term <= term multiplying_operator factor ^

   AND                                => reduce 3 tokens to term 135.0
   IS                                 => reduce 3 tokens to term 135.0
   LOOP                               => reduce 3 tokens to term 135.0
   OR                                 => reduce 3 tokens to term 135.0
   RIGHT_PAREN                        => reduce 3 tokens to term 135.0
   THEN                               => reduce 3 tokens to term 135.0
   XOR                                => reduce 3 tokens to term 135.0
   AMPERSAND                          => reduce 3 tokens to term 135.0
   COLON_EQUAL                        => reduce 3 tokens to term 135.0
   COMMA                              => reduce 3 tokens to term 135.0
   DOT_DOT                            => reduce 3 tokens to term 135.0
   EQUAL                              => reduce 3 tokens to term 135.0
   GREATER                            => reduce 3 tokens to term 135.0
   GREATER_EQUAL                      => reduce 3 tokens to term 135.0
   LESS                               => reduce 3 tokens to term 135.0
   LESS_EQUAL                         => reduce 3 tokens to term 135.0
   MINUS                              => reduce 3 tokens to term 135.0
   PLUS                               => reduce 3 tokens to term 135.0
   SEMICOLON                          => reduce 3 tokens to term 135.0
   SLASH                              => reduce 3 tokens to term 135.0
   SLASH_EQUAL                        => reduce 3 tokens to term 135.0
   STAR                               => reduce 3 tokens to term 135.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 term 135.0)

State 171:
    135.0:term <= term ^ multiplying_operator factor
    136.0:term_list <= term_list binary_adding_operator term ^

   AND                                => reduce 3 tokens to term_list 136.0
   IS                                 => reduce 3 tokens to term_list 136.0
   LOOP                               => reduce 3 tokens to term_list 136.0
   OR                                 => reduce 3 tokens to term_list 136.0
   RIGHT_PAREN                        => reduce 3 tokens to term_list 136.0
   THEN                               => reduce 3 tokens to term_list 136.0
   XOR                                => reduce 3 tokens to term_list 136.0
   AMPERSAND                          => reduce 3 tokens to term_list 136.0
   COLON_EQUAL                        => reduce 3 tokens to term_list 136.0
   COMMA                              => reduce 3 tokens to term_list 136.0
   DOT_DOT                            => reduce 3 tokens to term_list 136.0
   EQUAL                              => reduce 3 tokens to term_list 136.0
   GREATER                            => reduce 3 tokens to term_list 136.0
   GREATER_EQUAL                      => reduce 3 tokens to term_list 136.0
   LESS                               => reduce 3 tokens to term_list 136.0
   LESS_EQUAL                         => reduce 3 tokens to term_list 136.0
   MINUS                              => reduce 3 tokens to term_list 136.0
   PLUS                               => reduce 3 tokens to term_list 136.0
   SEMICOLON                          => reduce 3 tokens to term_list 136.0
   SLASH                              => shift and goto state 100 101.1
   SLASH_EQUAL                        => reduce 3 tokens to term_list 136.0
   STAR                               => shift and goto state 101 101.0
   default                            => ERROR

   multiplying_operator               goto state 102

   Minimal_Complete_Actions => (3 term_list 136.0)

State 172:
     86.0:exit_statement <= EXIT identifier_opt WHEN expression ^ SEMICOLON

   SEMICOLON                          => shift and goto state 211 86.0
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 86.0)

State 173:
     99.0:iteration_scheme <= FOR IDENTIFIER IN discrete_subtype_definition ^

   LOOP                               => reduce 4 tokens to iteration_scheme 99.0
   default                            => ERROR

   Minimal_Complete_Actions => (4 iteration_scheme 99.0)

State 174:
    102.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
    102.1:name <= name ^ actual_parameter_part
    112.2:primary <= name ^
    123.0:selected_component <= name ^ DOT IDENTIFIER
    134.0:subtype_indication <= name ^ constraint
    134.1:subtype_indication <= name ^

   AND                                => reduce 1 tokens to primary 112.2
   LEFT_PAREN                         => shift and goto state 212 57.0
   LOOP                               => reduce 1 tokens to subtype_indication 134.1
   OR                                 => reduce 1 tokens to primary 112.2
   RANGE                              => shift and goto state 213 73.0
   RIGHT_PAREN                        => reduce 1 tokens to primary 112.2,
                                         reduce 1 tokens to subtype_indication 134.1
   XOR                                => reduce 1 tokens to primary 112.2
   AMPERSAND                          => reduce 1 tokens to primary 112.2
   COMMA                              => reduce 1 tokens to primary 112.2
   DOT                                => shift and goto state 78 123.0
   DOT_DOT                            => reduce 1 tokens to primary 112.2
   EQUAL                              => reduce 1 tokens to primary 112.2
   GREATER                            => reduce 1 tokens to primary 112.2
   GREATER_EQUAL                      => reduce 1 tokens to primary 112.2
   LESS                               => reduce 1 tokens to primary 112.2
   LESS_EQUAL                         => reduce 1 tokens to primary 112.2
   MINUS                              => reduce 1 tokens to primary 112.2
   PLUS                               => reduce 1 tokens to primary 112.2
   SLASH                              => reduce 1 tokens to primary 112.2
   SLASH_EQUAL                        => reduce 1 tokens to primary 112.2
   STAR                               => reduce 1 tokens to primary 112.2
   default                            => ERROR

   actual_parameter_part              goto state 80
   constraint                         goto state 214
   index_constraint                   goto state 215

   Minimal_Complete_Actions => ((1 primary 112.2), (RANGE 73.0), (1 subtype_indication 134.1))

State 175:
     77.1:discrete_subtype_definition <= range_g ^

   LOOP                               => reduce 1 tokens to discrete_subtype_definition 77.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 discrete_subtype_definition 77.1)

State 176:
    116.0:range_g <= simple_expression ^ DOT_DOT simple_expression

   DOT_DOT                            => shift and goto state 205 116.0
   default                            => ERROR

   Minimal_Complete_Actions => (DOT_DOT 116.0)

State 177:
     77.0:discrete_subtype_definition <= subtype_indication ^

   LOOP                               => reduce 1 tokens to discrete_subtype_definition 77.0
   RIGHT_PAREN                        => reduce 1 tokens to discrete_subtype_definition 77.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 discrete_subtype_definition 77.0)

State 178:
     60.0:association_opt <= IDENTIFIER ^ EQUAL_GREATER expression
    102.2:name <= IDENTIFIER ^
    109.0:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER COLON_EQUAL expression
    109.1:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER

   AND                                => reduce 1 tokens to name 102.2
   LEFT_PAREN                         => reduce 1 tokens to name 102.2
   OR                                 => reduce 1 tokens to name 102.2
   RIGHT_PAREN                        => reduce 1 tokens to name 102.2
   XOR                                => reduce 1 tokens to name 102.2
   AMPERSAND                          => reduce 1 tokens to name 102.2
   COLON                              => shift and goto state 216 109.0
   COMMA                              => reduce 1 tokens to name 102.2
   DOT                                => reduce 1 tokens to name 102.2
   DOT_DOT                            => reduce 1 tokens to name 102.2
   EQUAL                              => reduce 1 tokens to name 102.2
   EQUAL_GREATER                      => shift and goto state 200 60.0
   GREATER                            => reduce 1 tokens to name 102.2
   GREATER_EQUAL                      => reduce 1 tokens to name 102.2
   LESS                               => reduce 1 tokens to name 102.2
   LESS_EQUAL                         => reduce 1 tokens to name 102.2
   MINUS                              => reduce 1 tokens to name 102.2
   PLUS                               => reduce 1 tokens to name 102.2
   SLASH                              => reduce 1 tokens to name 102.2
   SLASH_EQUAL                        => reduce 1 tokens to name 102.2
   STAR                               => reduce 1 tokens to name 102.2
   default                            => ERROR

   Minimal_Complete_Actions => ((EQUAL_GREATER 60.0), (1 name 102.2), (COLON 109.0))

State 179:
    110.1:parameter_specification_list <= parameter_specification ^

   RIGHT_PAREN                        => reduce 1 tokens to parameter_specification_list 110.1
   SEMICOLON                          => reduce 1 tokens to parameter_specification_list 110.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 parameter_specification_list 110.1)

State 180:
     91.0:formal_part <= LEFT_PAREN parameter_specification_list ^ RIGHT_PAREN
    110.0:parameter_specification_list <= parameter_specification_list ^ SEMICOLON parameter_specification

   RIGHT_PAREN                        => shift and goto state 217 91.0
   SEMICOLON                          => shift and goto state 218 110.0
   default                            => ERROR

   Minimal_Complete_Actions => (RIGHT_PAREN 91.0)

State 181:
    107.1:parameter_and_result_profile <= RETURN IDENTIFIER ^

   IS                                 => reduce 2 tokens to parameter_and_result_profile 107.1
   WITH                               => reduce 2 tokens to parameter_and_result_profile 107.1
   SEMICOLON                          => reduce 2 tokens to parameter_and_result_profile 107.1
   default                            => ERROR

   Minimal_Complete_Actions => (2 parameter_and_result_profile 107.1)

State 182:
    107.0:parameter_and_result_profile <= formal_part RETURN ^ IDENTIFIER

   IDENTIFIER                         => shift and goto state 219 107.0
   default                            => ERROR

   Minimal_Complete_Actions => (IDENTIFIER 107.0)

State 183:
     97.0:if_statement <= IF expression THEN sequence_of_statements ^ elsif_statement_list ELSE sequence_of_statements END IF SEMICOLON
     97.1:if_statement <= IF expression THEN sequence_of_statements ^ ELSE sequence_of_statements END IF SEMICOLON
     97.2:if_statement <= IF expression THEN sequence_of_statements ^ elsif_statement_list END IF SEMICOLON
     97.3:if_statement <= IF expression THEN sequence_of_statements ^ END IF SEMICOLON

   ELSE                               => shift and goto state 220 97.1
   ELSIF                              => shift and goto state 221 78.0
   END                                => shift and goto state 222 97.3
   default                            => ERROR

   elsif_statement_item               goto state 223
   elsif_statement_list               goto state 224

   Minimal_Complete_Actions => (END 97.3)

State 184:
    100.1:loop_statement <= LOOP sequence_of_statements END LOOP ^ identifier_opt SEMICOLON

   SEMICOLON                          => reduce 0 tokens to identifier_opt 96.1
   IDENTIFIER                         => shift and goto state 57 96.0
   default                            => ERROR

   identifier_opt                     goto state 225

   Minimal_Complete_Actions => (0 identifier_opt 96.1)

State 185:
    105.0:package_body <= PACKAGE BODY name aspect_specification_opt ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    105.1:package_body <= PACKAGE BODY name aspect_specification_opt ^ IS declarative_part END name_opt SEMICOLON

   IS                                 => shift and goto state 226 105.0
   default                            => ERROR

   Minimal_Complete_Actions => (IS 105.0)

State 186:
     94.0:generic_instantiation <= PACKAGE name IS NEW ^ name SEMICOLON

   IDENTIFIER                         => shift and goto state 42 102.2
   default                            => ERROR

   name                               goto state 227
   selected_component                 goto state 30

   Minimal_Complete_Actions => (IDENTIFIER 102.2)

State 187:
    106.0:package_specification <= PACKAGE name aspect_specification_opt IS ^ declarative_part END name_opt SEMICOLON

   END                                => reduce 0 tokens to declarative_part 76.1
   FUNCTION                           => shift and goto state 4 93.0
   PACKAGE                            => shift and goto state 129 105.0
   PROCEDURE                          => shift and goto state 130 114.0
   TYPE                               => shift and goto state 131 92.0
   IDENTIFIER                         => shift and goto state 132 104.0
   default                            => ERROR

   body_g                             goto state 133
   body_stub                          goto state 134
   declaration                        goto state 135
   declarations                       goto state 136
   declarative_part                   goto state 228
   full_type_declaration              goto state 138
   function_specification             goto state 20
   object_declaration                 goto state 139
   package_body                       goto state 140
   procedure_specification            goto state 29
   proper_body                        goto state 141
   subprogram_body                    goto state 142
   subprogram_body_stub               goto state 143
   subprogram_declaration             goto state 144
   subprogram_specification           goto state 145
   type_declaration                   goto state 146

   Minimal_Complete_Actions => (0 declarative_part 76.1)

State 188:
     94.1:generic_instantiation <= PROCEDURE name IS NEW ^ name SEMICOLON

   IDENTIFIER                         => shift and goto state 42 102.2
   default                            => ERROR

   name                               goto state 229
   selected_component                 goto state 30

   Minimal_Complete_Actions => (IDENTIFIER 102.2)

State 189:
    102.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
    102.1:name <= name ^ actual_parameter_part
    123.0:selected_component <= name ^ DOT IDENTIFIER
    134.0:subtype_indication <= name ^ constraint
    134.1:subtype_indication <= name ^

   LEFT_PAREN                         => shift and goto state 212 57.0
   RANGE                              => shift and goto state 213 73.0
   COLON_EQUAL                        => reduce 1 tokens to subtype_indication 134.1
   DOT                                => shift and goto state 78 123.0
   SEMICOLON                          => reduce 1 tokens to subtype_indication 134.1
   default                            => ERROR

   actual_parameter_part              goto state 80
   constraint                         goto state 214
   index_constraint                   goto state 215

   Minimal_Complete_Actions => ((RANGE 73.0), (1 subtype_indication 134.1))

State 190:
     88.0:extended_return_object_declaration <= IDENTIFIER COLON subtype_indication ^

   SEMICOLON                          => reduce 3 tokens to extended_return_object_declaration 88.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 extended_return_object_declaration 88.0)

State 191:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END ^ identifier_opt SEMICOLON

   SEMICOLON                          => reduce 0 tokens to identifier_opt 96.1
   IDENTIFIER                         => shift and goto state 57 96.0
   default                            => ERROR

   identifier_opt                     goto state 230

   Minimal_Complete_Actions => (0 identifier_opt 96.1)

State 192:
     95.0:handled_sequence_of_statements <= sequence_of_statements EXCEPTION ^ exception_handler_list_opt

   END                                => reduce 0 tokens to exception_handler_list_opt 85.1
   WHEN                               => shift and goto state 231 83.0
   default                            => ERROR

   exception_handler                  goto state 232
   exception_handler_list             goto state 233
   exception_handler_list_opt         goto state 234

   Minimal_Complete_Actions => (0 exception_handler_list_opt 85.1)

State 193:
    102.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
    102.1:name <= name ^ actual_parameter_part
    114.0:procedure_specification <= PROCEDURE name ^ parameter_profile_opt
    123.0:selected_component <= name ^ DOT IDENTIFIER

   IS                                 => reduce 0 tokens to parameter_profile_opt 108.1
   LEFT_PAREN                         => shift and goto state 111 57.0
   WITH                               => reduce 0 tokens to parameter_profile_opt 108.1
   DOT                                => shift and goto state 78 123.0
   SEMICOLON                          => reduce 0 tokens to parameter_profile_opt 108.1
   default                            => ERROR

   actual_parameter_part              goto state 80
   formal_part                        goto state 122
   parameter_profile_opt              goto state 123

   Minimal_Complete_Actions => (0 parameter_profile_opt 108.1)

State 194:
     92.0:full_type_declaration <= TYPE IDENTIFIER ^ IS type_definition SEMICOLON

   IS                                 => shift and goto state 235 92.0
   default                            => ERROR

   Minimal_Complete_Actions => (IS 92.0)

State 195:
    104.0:object_declaration <= IDENTIFIER COLON ^ subtype_indication COLON_EQUAL expression SEMICOLON
    104.1:object_declaration <= IDENTIFIER COLON ^ subtype_indication SEMICOLON

   IDENTIFIER                         => shift and goto state 42 102.2
   default                            => ERROR

   name                               goto state 189
   selected_component                 goto state 30
   subtype_indication                 goto state 236

   Minimal_Complete_Actions => (IDENTIFIER 102.2)

State 196:
     75.0:declarations <= declarations declaration ^

   BEGIN                              => reduce 2 tokens to declarations 75.0
   END                                => reduce 2 tokens to declarations 75.0
   FUNCTION                           => reduce 2 tokens to declarations 75.0
   PACKAGE                            => reduce 2 tokens to declarations 75.0
   PROCEDURE                          => reduce 2 tokens to declarations 75.0
   TYPE                               => reduce 2 tokens to declarations 75.0
   IDENTIFIER                         => reduce 2 tokens to declarations 75.0
   default                            => ERROR

   Minimal_Complete_Actions => (2 declarations 75.0)

State 197:
     64.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN ^ handled_sequence_of_statements END identifier_opt SEMICOLON

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1 67.0
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 125.1
   EXIT                               => shift and goto state 2 86.0
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements 125.1
   FOR                                => shift and goto state 3 99.0
   IF                                 => shift and goto state 5 97.0
   LOOP                               => shift and goto state 6 100.1
   RETURN                             => shift and goto state 9 89.0
   IDENTIFIER                         => shift and goto state 10 63.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   handled_sequence_of_statements     goto state 237
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements_list        goto state 62
   sequence_of_statements             goto state 128
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 64

   Minimal_Complete_Actions => (0 handled_sequence_of_statements 95.1)

State 198:
    131.0:subprogram_body_stub <= subprogram_specification IS ^ SEPARATE SEMICOLON

   SEPARATE                           => shift and goto state 238 131.0
   default                            => ERROR

   Minimal_Complete_Actions => (SEPARATE 131.0)

State 199:
    100.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END ^ LOOP identifier_opt SEMICOLON

   LOOP                               => shift and goto state 239 100.0
   default                            => ERROR

   Minimal_Complete_Actions => (LOOP 100.0)

State 200:
     60.0:association_opt <= IDENTIFIER EQUAL_GREATER ^ expression

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   expression                         goto state 240
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 201:
     57.0:actual_parameter_part <= LEFT_PAREN association_list RIGHT_PAREN ^

   AND                                => reduce 3 tokens to actual_parameter_part 57.0
   IS                                 => reduce 3 tokens to actual_parameter_part 57.0
   LEFT_PAREN                         => reduce 3 tokens to actual_parameter_part 57.0
   LOOP                               => reduce 3 tokens to actual_parameter_part 57.0
   OR                                 => reduce 3 tokens to actual_parameter_part 57.0
   RANGE                              => reduce 3 tokens to actual_parameter_part 57.0
   RETURN                             => reduce 3 tokens to actual_parameter_part 57.0
   RIGHT_PAREN                        => reduce 3 tokens to actual_parameter_part 57.0
   THEN                               => reduce 3 tokens to actual_parameter_part 57.0
   WITH                               => reduce 3 tokens to actual_parameter_part 57.0
   XOR                                => reduce 3 tokens to actual_parameter_part 57.0
   AMPERSAND                          => reduce 3 tokens to actual_parameter_part 57.0
   COLON_EQUAL                        => reduce 3 tokens to actual_parameter_part 57.0
   COMMA                              => reduce 3 tokens to actual_parameter_part 57.0
   DOT                                => reduce 3 tokens to actual_parameter_part 57.0
   DOT_DOT                            => reduce 3 tokens to actual_parameter_part 57.0
   EQUAL                              => reduce 3 tokens to actual_parameter_part 57.0
   EQUAL_GREATER                      => reduce 3 tokens to actual_parameter_part 57.0
   GREATER                            => reduce 3 tokens to actual_parameter_part 57.0
   GREATER_EQUAL                      => reduce 3 tokens to actual_parameter_part 57.0
   LESS                               => reduce 3 tokens to actual_parameter_part 57.0
   LESS_EQUAL                         => reduce 3 tokens to actual_parameter_part 57.0
   MINUS                              => reduce 3 tokens to actual_parameter_part 57.0
   PLUS                               => reduce 3 tokens to actual_parameter_part 57.0
   SEMICOLON                          => reduce 3 tokens to actual_parameter_part 57.0
   SLASH                              => reduce 3 tokens to actual_parameter_part 57.0
   SLASH_EQUAL                        => reduce 3 tokens to actual_parameter_part 57.0
   STAR                               => reduce 3 tokens to actual_parameter_part 57.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 actual_parameter_part 57.0)

State 202:
     61.0:association_list <= association_list COMMA ^ association_opt

   IS                                 => reduce 0 tokens to association_opt 60.2
   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   RIGHT_PAREN                        => reduce 0 tokens to association_opt 60.2
   COMMA                              => reduce 0 tokens to association_opt 60.2
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 148 60.0
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   association_opt                    goto state 241
   expression                         goto state 151
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (0 association_opt 60.2)

State 203:
    102.0:name <= name LEFT_PAREN range_list RIGHT_PAREN ^

   AND                                => reduce 4 tokens to name 102.0
   IS                                 => reduce 4 tokens to name 102.0
   LEFT_PAREN                         => reduce 4 tokens to name 102.0
   LOOP                               => reduce 4 tokens to name 102.0
   OR                                 => reduce 4 tokens to name 102.0
   RANGE                              => reduce 4 tokens to name 102.0
   RETURN                             => reduce 4 tokens to name 102.0
   RIGHT_PAREN                        => reduce 4 tokens to name 102.0
   THEN                               => reduce 4 tokens to name 102.0
   WITH                               => reduce 4 tokens to name 102.0
   XOR                                => reduce 4 tokens to name 102.0
   AMPERSAND                          => reduce 4 tokens to name 102.0
   COLON_EQUAL                        => reduce 4 tokens to name 102.0
   COMMA                              => reduce 4 tokens to name 102.0
   DOT                                => reduce 4 tokens to name 102.0
   DOT_DOT                            => reduce 4 tokens to name 102.0
   EQUAL                              => reduce 4 tokens to name 102.0
   EQUAL_GREATER                      => reduce 4 tokens to name 102.0
   GREATER                            => reduce 4 tokens to name 102.0
   GREATER_EQUAL                      => reduce 4 tokens to name 102.0
   LESS                               => reduce 4 tokens to name 102.0
   LESS_EQUAL                         => reduce 4 tokens to name 102.0
   MINUS                              => reduce 4 tokens to name 102.0
   PLUS                               => reduce 4 tokens to name 102.0
   SEMICOLON                          => reduce 4 tokens to name 102.0
   SLASH                              => reduce 4 tokens to name 102.0
   SLASH_EQUAL                        => reduce 4 tokens to name 102.0
   STAR                               => reduce 4 tokens to name 102.0
   default                            => ERROR

   Minimal_Complete_Actions => (4 name 102.0)

State 204:
    117.0:range_list <= range_list COMMA ^ range_g

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 242
   selected_component                 goto state 30
   simple_expression                  goto state 176
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 205:
    116.0:range_g <= simple_expression DOT_DOT ^ simple_expression

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   selected_component                 goto state 30
   simple_expression                  goto state 243
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 206:
     59.0:assignment_statement <= name COLON_EQUAL expression SEMICOLON ^

   BEGIN                              => reduce 4 tokens to assignment_statement 59.0
   CASE                               => reduce 4 tokens to assignment_statement 59.0
   DECLARE                            => reduce 4 tokens to assignment_statement 59.0
   ELSE                               => reduce 4 tokens to assignment_statement 59.0
   ELSIF                              => reduce 4 tokens to assignment_statement 59.0
   END                                => reduce 4 tokens to assignment_statement 59.0
   EXIT                               => reduce 4 tokens to assignment_statement 59.0
   EXCEPTION                          => reduce 4 tokens to assignment_statement 59.0
   FOR                                => reduce 4 tokens to assignment_statement 59.0
   FUNCTION                           => reduce 4 tokens to assignment_statement 59.0
   IF                                 => reduce 4 tokens to assignment_statement 59.0
   LOOP                               => reduce 4 tokens to assignment_statement 59.0
   PACKAGE                            => reduce 4 tokens to assignment_statement 59.0
   PROCEDURE                          => reduce 4 tokens to assignment_statement 59.0
   RETURN                             => reduce 4 tokens to assignment_statement 59.0
   WHEN                               => reduce 4 tokens to assignment_statement 59.0
   IDENTIFIER                         => reduce 4 tokens to assignment_statement 59.0
   Wisi_EOI                           => reduce 4 tokens to assignment_statement 59.0
   default                            => ERROR

   Minimal_Complete_Actions => (4 assignment_statement 59.0)

State 207:
    130.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON

   BEGIN                              => shift and goto state 244 130.0
   default                            => ERROR

   Minimal_Complete_Actions => (BEGIN 130.0)

State 208:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL ^ EQUAL_GREATER sequence_of_statements

   EQUAL_GREATER                      => shift and goto state 245 68.0
   default                            => ERROR

   Minimal_Complete_Actions => (EQUAL_GREATER 68.0)

State 209:
     67.0:case_statement <= CASE expression IS case_statement_alternative_list END ^ CASE SEMICOLON

   CASE                               => shift and goto state 246 67.0
   default                            => ERROR

   Minimal_Complete_Actions => (CASE 67.0)

State 210:
     69.0:case_statement_alternative_list <= case_statement_alternative_list case_statement_alternative ^

   END                                => reduce 2 tokens to case_statement_alternative_list 69.0
   WHEN                               => reduce 2 tokens to case_statement_alternative_list 69.0
   default                            => ERROR

   Minimal_Complete_Actions => (2 case_statement_alternative_list 69.0)

State 211:
     86.0:exit_statement <= EXIT identifier_opt WHEN expression SEMICOLON ^

   BEGIN                              => reduce 5 tokens to exit_statement 86.0
   CASE                               => reduce 5 tokens to exit_statement 86.0
   DECLARE                            => reduce 5 tokens to exit_statement 86.0
   ELSE                               => reduce 5 tokens to exit_statement 86.0
   ELSIF                              => reduce 5 tokens to exit_statement 86.0
   END                                => reduce 5 tokens to exit_statement 86.0
   EXIT                               => reduce 5 tokens to exit_statement 86.0
   EXCEPTION                          => reduce 5 tokens to exit_statement 86.0
   FOR                                => reduce 5 tokens to exit_statement 86.0
   FUNCTION                           => reduce 5 tokens to exit_statement 86.0
   IF                                 => reduce 5 tokens to exit_statement 86.0
   LOOP                               => reduce 5 tokens to exit_statement 86.0
   PACKAGE                            => reduce 5 tokens to exit_statement 86.0
   PROCEDURE                          => reduce 5 tokens to exit_statement 86.0
   RETURN                             => reduce 5 tokens to exit_statement 86.0
   WHEN                               => reduce 5 tokens to exit_statement 86.0
   IDENTIFIER                         => reduce 5 tokens to exit_statement 86.0
   Wisi_EOI                           => reduce 5 tokens to exit_statement 86.0
   default                            => ERROR

   Minimal_Complete_Actions => (5 exit_statement 86.0)

State 212:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN
     98.0:index_constraint <= LEFT_PAREN ^ discrete_subtype_definition RIGHT_PAREN
    102.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   RIGHT_PAREN                        => reduce 0 tokens to association_opt 60.2
   COMMA                              => reduce 0 tokens to association_opt 60.2
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 148 60.0
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   association_opt                    goto state 149
   association_list                   goto state 150
   discrete_subtype_definition        goto state 247
   expression                         goto state 151
   factor                             goto state 45
   name                               goto state 174
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 248
   range_list                         goto state 153
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 30
   simple_expression                  goto state 154
   subtype_indication                 goto state 177
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (0 association_list 61.1)

State 213:
     73.0:constraint <= RANGE ^ range_g

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   range_g                            goto state 249
   selected_component                 goto state 30
   simple_expression                  goto state 176
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 214:
    134.0:subtype_indication <= name constraint ^

   LOOP                               => reduce 2 tokens to subtype_indication 134.0
   RIGHT_PAREN                        => reduce 2 tokens to subtype_indication 134.0
   COLON_EQUAL                        => reduce 2 tokens to subtype_indication 134.0
   SEMICOLON                          => reduce 2 tokens to subtype_indication 134.0
   default                            => ERROR

   Minimal_Complete_Actions => (2 subtype_indication 134.0)

State 215:
     73.1:constraint <= index_constraint ^

   LOOP                               => reduce 1 tokens to constraint 73.1
   RIGHT_PAREN                        => reduce 1 tokens to constraint 73.1
   COLON_EQUAL                        => reduce 1 tokens to constraint 73.1
   SEMICOLON                          => reduce 1 tokens to constraint 73.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 constraint 73.1)

State 216:
    109.0:parameter_specification <= IDENTIFIER COLON ^ IDENTIFIER COLON_EQUAL expression
    109.1:parameter_specification <= IDENTIFIER COLON ^ IDENTIFIER

   IDENTIFIER                         => shift and goto state 250 109.0
   default                            => ERROR

   Minimal_Complete_Actions => (IDENTIFIER 109.0)

State 217:
     91.0:formal_part <= LEFT_PAREN parameter_specification_list RIGHT_PAREN ^

   IS                                 => reduce 3 tokens to formal_part 91.0
   RETURN                             => reduce 3 tokens to formal_part 91.0
   WITH                               => reduce 3 tokens to formal_part 91.0
   SEMICOLON                          => reduce 3 tokens to formal_part 91.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 formal_part 91.0)

State 218:
    110.0:parameter_specification_list <= parameter_specification_list SEMICOLON ^ parameter_specification

   RIGHT_PAREN                        => reduce 0 tokens to parameter_specification 109.2
   SEMICOLON                          => reduce 0 tokens to parameter_specification 109.2
   IDENTIFIER                         => shift and goto state 251 109.0
   default                            => ERROR

   parameter_specification            goto state 252

   Minimal_Complete_Actions => (0 parameter_specification 109.2)

State 219:
    107.0:parameter_and_result_profile <= formal_part RETURN IDENTIFIER ^

   IS                                 => reduce 3 tokens to parameter_and_result_profile 107.0
   WITH                               => reduce 3 tokens to parameter_and_result_profile 107.0
   SEMICOLON                          => reduce 3 tokens to parameter_and_result_profile 107.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 parameter_and_result_profile 107.0)

State 220:
     97.1:if_statement <= IF expression THEN sequence_of_statements ELSE ^ sequence_of_statements END IF SEMICOLON

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1 67.0
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 125.1
   EXIT                               => shift and goto state 2 86.0
   FOR                                => shift and goto state 3 99.0
   IF                                 => shift and goto state 5 97.0
   LOOP                               => shift and goto state 6 100.1
   RETURN                             => shift and goto state 9 89.0
   IDENTIFIER                         => shift and goto state 10 63.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements_list        goto state 62
   sequence_of_statements             goto state 253
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 64

   Minimal_Complete_Actions => (0 sequence_of_statements 125.1)

State 221:
     78.0:elsif_statement_item <= ELSIF ^ expression THEN sequence_of_statements

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   expression                         goto state 254
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 222:
     97.3:if_statement <= IF expression THEN sequence_of_statements END ^ IF SEMICOLON

   IF                                 => shift and goto state 255 97.3
   default                            => ERROR

   Minimal_Complete_Actions => (IF 97.3)

State 223:
     79.1:elsif_statement_list <= elsif_statement_item ^

   ELSE                               => reduce 1 tokens to elsif_statement_list 79.1
   ELSIF                              => reduce 1 tokens to elsif_statement_list 79.1
   END                                => reduce 1 tokens to elsif_statement_list 79.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 elsif_statement_list 79.1)

State 224:
     79.0:elsif_statement_list <= elsif_statement_list ^ elsif_statement_item
     97.0:if_statement <= IF expression THEN sequence_of_statements elsif_statement_list ^ ELSE sequence_of_statements END IF SEMICOLON
     97.2:if_statement <= IF expression THEN sequence_of_statements elsif_statement_list ^ END IF SEMICOLON

   ELSE                               => shift and goto state 256 97.0
   ELSIF                              => shift and goto state 221 78.0
   END                                => shift and goto state 257 97.2
   default                            => ERROR

   elsif_statement_item               goto state 258

   Minimal_Complete_Actions => (END 97.2)

State 225:
    100.1:loop_statement <= LOOP sequence_of_statements END LOOP identifier_opt ^ SEMICOLON

   SEMICOLON                          => shift and goto state 259 100.1
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 100.1)

State 226:
    105.0:package_body <= PACKAGE BODY name aspect_specification_opt IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    105.1:package_body <= PACKAGE BODY name aspect_specification_opt IS ^ declarative_part END name_opt SEMICOLON

   BEGIN                              => reduce 0 tokens to declarative_part 76.1
   END                                => reduce 0 tokens to declarative_part 76.1
   FUNCTION                           => shift and goto state 4 93.0
   PACKAGE                            => shift and goto state 129 105.0
   PROCEDURE                          => shift and goto state 130 114.0
   TYPE                               => shift and goto state 131 92.0
   IDENTIFIER                         => shift and goto state 132 104.0
   default                            => ERROR

   body_g                             goto state 133
   body_stub                          goto state 134
   declaration                        goto state 135
   declarations                       goto state 136
   declarative_part                   goto state 260
   full_type_declaration              goto state 138
   function_specification             goto state 20
   object_declaration                 goto state 139
   package_body                       goto state 140
   procedure_specification            goto state 29
   proper_body                        goto state 141
   subprogram_body                    goto state 142
   subprogram_body_stub               goto state 143
   subprogram_declaration             goto state 144
   subprogram_specification           goto state 145
   type_declaration                   goto state 146

   Minimal_Complete_Actions => (0 declarative_part 76.1)

State 227:
     94.0:generic_instantiation <= PACKAGE name IS NEW name ^ SEMICOLON
    102.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
    102.1:name <= name ^ actual_parameter_part
    123.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                         => shift and goto state 76 57.0
   DOT                                => shift and goto state 78 123.0
   SEMICOLON                          => shift and goto state 261 94.0
   default                            => ERROR

   actual_parameter_part              goto state 80

   Minimal_Complete_Actions => (SEMICOLON 94.0)

State 228:
    106.0:package_specification <= PACKAGE name aspect_specification_opt IS declarative_part ^ END name_opt SEMICOLON

   END                                => shift and goto state 262 106.0
   default                            => ERROR

   Minimal_Complete_Actions => (END 106.0)

State 229:
     94.1:generic_instantiation <= PROCEDURE name IS NEW name ^ SEMICOLON
    102.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
    102.1:name <= name ^ actual_parameter_part
    123.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                         => shift and goto state 76 57.0
   DOT                                => shift and goto state 78 123.0
   SEMICOLON                          => shift and goto state 263 94.1
   default                            => ERROR

   actual_parameter_part              goto state 80

   Minimal_Complete_Actions => (SEMICOLON 94.1)

State 230:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt ^ SEMICOLON

   SEMICOLON                          => shift and goto state 264 64.1
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 64.1)

State 231:
     83.0:exception_handler <= WHEN ^ exception_choice EQUAL_GREATER sequence_of_statements

   IDENTIFIER                         => shift and goto state 42 102.2
   default                            => ERROR

   exception_choice                   goto state 265
   name                               goto state 266
   selected_component                 goto state 30

   Minimal_Complete_Actions => (IDENTIFIER 102.2)

State 232:
     84.1:exception_handler_list <= exception_handler ^

   END                                => reduce 1 tokens to exception_handler_list 84.1
   WHEN                               => reduce 1 tokens to exception_handler_list 84.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 exception_handler_list 84.1)

State 233:
     84.0:exception_handler_list <= exception_handler_list ^ exception_handler
     85.0:exception_handler_list_opt <= exception_handler_list ^

   END                                => reduce 1 tokens to exception_handler_list_opt 85.0
   WHEN                               => shift and goto state 231 83.0
   default                            => ERROR

   exception_handler                  goto state 267

   Minimal_Complete_Actions => (1 exception_handler_list_opt 85.0)

State 234:
     95.0:handled_sequence_of_statements <= sequence_of_statements EXCEPTION exception_handler_list_opt ^

   END                                => reduce 3 tokens to handled_sequence_of_statements 95.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 handled_sequence_of_statements 95.0)

State 235:
     92.0:full_type_declaration <= TYPE IDENTIFIER IS ^ type_definition SEMICOLON

   LEFT_PAREN                         => shift and goto state 268 81.0
   default                            => ERROR

   enumeration_type_definition        goto state 269
   type_definition                    goto state 270

   Minimal_Complete_Actions => (LEFT_PAREN 81.0)

State 236:
    104.0:object_declaration <= IDENTIFIER COLON subtype_indication ^ COLON_EQUAL expression SEMICOLON
    104.1:object_declaration <= IDENTIFIER COLON subtype_indication ^ SEMICOLON

   COLON_EQUAL                        => shift and goto state 271 104.0
   SEMICOLON                          => shift and goto state 272 104.1
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 104.1)

State 237:
     64.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements ^ END identifier_opt SEMICOLON

   END                                => shift and goto state 273 64.0
   default                            => ERROR

   Minimal_Complete_Actions => (END 64.0)

State 238:
    131.0:subprogram_body_stub <= subprogram_specification IS SEPARATE ^ SEMICOLON

   SEMICOLON                          => shift and goto state 274 131.0
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 131.0)

State 239:
    100.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP ^ identifier_opt SEMICOLON

   SEMICOLON                          => reduce 0 tokens to identifier_opt 96.1
   IDENTIFIER                         => shift and goto state 57 96.0
   default                            => ERROR

   identifier_opt                     goto state 275

   Minimal_Complete_Actions => (0 identifier_opt 96.1)

State 240:
     60.0:association_opt <= IDENTIFIER EQUAL_GREATER expression ^

   IS                                 => reduce 3 tokens to association_opt 60.0
   RIGHT_PAREN                        => reduce 3 tokens to association_opt 60.0
   COMMA                              => reduce 3 tokens to association_opt 60.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 association_opt 60.0)

State 241:
     61.0:association_list <= association_list COMMA association_opt ^

   IS                                 => reduce 3 tokens to association_list 61.0
   RIGHT_PAREN                        => reduce 3 tokens to association_list 61.0
   COMMA                              => reduce 3 tokens to association_list 61.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 association_list 61.0)

State 242:
    117.0:range_list <= range_list COMMA range_g ^

   RIGHT_PAREN                        => reduce 3 tokens to range_list 117.0
   COMMA                              => reduce 3 tokens to range_list 117.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 range_list 117.0)

State 243:
    116.0:range_g <= simple_expression DOT_DOT simple_expression ^

   LOOP                               => reduce 3 tokens to range_g 116.0
   RIGHT_PAREN                        => reduce 3 tokens to range_g 116.0
   COLON_EQUAL                        => reduce 3 tokens to range_g 116.0
   COMMA                              => reduce 3 tokens to range_g 116.0
   SEMICOLON                          => reduce 3 tokens to range_g 116.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 range_g 116.0)

State 244:
    130.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1 67.0
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 125.1
   EXIT                               => shift and goto state 2 86.0
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements 125.1
   FOR                                => shift and goto state 3 99.0
   IF                                 => shift and goto state 5 97.0
   LOOP                               => shift and goto state 6 100.1
   RETURN                             => shift and goto state 9 89.0
   IDENTIFIER                         => shift and goto state 10 63.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   handled_sequence_of_statements     goto state 276
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements_list        goto state 62
   sequence_of_statements             goto state 128
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 64

   Minimal_Complete_Actions => (0 handled_sequence_of_statements 95.1)

State 245:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER ^ sequence_of_statements

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1 67.0
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 125.1
   EXIT                               => shift and goto state 2 86.0
   FOR                                => shift and goto state 3 99.0
   IF                                 => shift and goto state 5 97.0
   LOOP                               => shift and goto state 6 100.1
   RETURN                             => shift and goto state 9 89.0
   WHEN                               => reduce 0 tokens to sequence_of_statements 125.1
   IDENTIFIER                         => shift and goto state 10 63.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements_list        goto state 62
   sequence_of_statements             goto state 277
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 64

   Minimal_Complete_Actions => (0 sequence_of_statements 125.1)

State 246:
     67.0:case_statement <= CASE expression IS case_statement_alternative_list END CASE ^ SEMICOLON

   SEMICOLON                          => shift and goto state 278 67.0
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 67.0)

State 247:
     98.0:index_constraint <= LEFT_PAREN discrete_subtype_definition ^ RIGHT_PAREN

   RIGHT_PAREN                        => shift and goto state 279 98.0
   default                            => ERROR

   Minimal_Complete_Actions => (RIGHT_PAREN 98.0)

State 248:
     77.1:discrete_subtype_definition <= range_g ^
    117.1:range_list <= range_g ^

   RIGHT_PAREN                        => reduce 1 tokens to discrete_subtype_definition 77.1,
                                         reduce 1 tokens to range_list 117.1
   COMMA                              => reduce 1 tokens to range_list 117.1
   default                            => ERROR

   Minimal_Complete_Actions => ((1 discrete_subtype_definition 77.1), (1 range_list 117.1))

State 249:
     73.0:constraint <= RANGE range_g ^

   LOOP                               => reduce 2 tokens to constraint 73.0
   RIGHT_PAREN                        => reduce 2 tokens to constraint 73.0
   COLON_EQUAL                        => reduce 2 tokens to constraint 73.0
   SEMICOLON                          => reduce 2 tokens to constraint 73.0
   default                            => ERROR

   Minimal_Complete_Actions => (2 constraint 73.0)

State 250:
    109.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER ^ COLON_EQUAL expression
    109.1:parameter_specification <= IDENTIFIER COLON IDENTIFIER ^

   RIGHT_PAREN                        => reduce 3 tokens to parameter_specification 109.1
   COLON_EQUAL                        => shift and goto state 280 109.0
   SEMICOLON                          => reduce 3 tokens to parameter_specification 109.1
   default                            => ERROR

   Minimal_Complete_Actions => ((COLON_EQUAL 109.0), (3 parameter_specification 109.1))

State 251:
    109.0:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER COLON_EQUAL expression
    109.1:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER

   COLON                              => shift and goto state 216 109.0
   default                            => ERROR

   Minimal_Complete_Actions => (COLON 109.0)

State 252:
    110.0:parameter_specification_list <= parameter_specification_list SEMICOLON parameter_specification ^

   RIGHT_PAREN                        => reduce 3 tokens to parameter_specification_list 110.0
   SEMICOLON                          => reduce 3 tokens to parameter_specification_list 110.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 parameter_specification_list 110.0)

State 253:
     97.1:if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements ^ END IF SEMICOLON

   END                                => shift and goto state 281 97.1
   default                            => ERROR

   Minimal_Complete_Actions => (END 97.1)

State 254:
     78.0:elsif_statement_item <= ELSIF expression ^ THEN sequence_of_statements

   THEN                               => shift and goto state 282 78.0
   default                            => ERROR

   Minimal_Complete_Actions => (THEN 78.0)

State 255:
     97.3:if_statement <= IF expression THEN sequence_of_statements END IF ^ SEMICOLON

   SEMICOLON                          => shift and goto state 283 97.3
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 97.3)

State 256:
     97.0:if_statement <= IF expression THEN sequence_of_statements elsif_statement_list ELSE ^ sequence_of_statements END IF SEMICOLON

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1 67.0
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 125.1
   EXIT                               => shift and goto state 2 86.0
   FOR                                => shift and goto state 3 99.0
   IF                                 => shift and goto state 5 97.0
   LOOP                               => shift and goto state 6 100.1
   RETURN                             => shift and goto state 9 89.0
   IDENTIFIER                         => shift and goto state 10 63.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements_list        goto state 62
   sequence_of_statements             goto state 284
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 64

   Minimal_Complete_Actions => (0 sequence_of_statements 125.1)

State 257:
     97.2:if_statement <= IF expression THEN sequence_of_statements elsif_statement_list END ^ IF SEMICOLON

   IF                                 => shift and goto state 285 97.2
   default                            => ERROR

   Minimal_Complete_Actions => (IF 97.2)

State 258:
     79.0:elsif_statement_list <= elsif_statement_list elsif_statement_item ^

   ELSE                               => reduce 2 tokens to elsif_statement_list 79.0
   ELSIF                              => reduce 2 tokens to elsif_statement_list 79.0
   END                                => reduce 2 tokens to elsif_statement_list 79.0
   default                            => ERROR

   Minimal_Complete_Actions => (2 elsif_statement_list 79.0)

State 259:
    100.1:loop_statement <= LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ^

   BEGIN                              => reduce 6 tokens to loop_statement 100.1
   CASE                               => reduce 6 tokens to loop_statement 100.1
   DECLARE                            => reduce 6 tokens to loop_statement 100.1
   ELSE                               => reduce 6 tokens to loop_statement 100.1
   ELSIF                              => reduce 6 tokens to loop_statement 100.1
   END                                => reduce 6 tokens to loop_statement 100.1
   EXIT                               => reduce 6 tokens to loop_statement 100.1
   EXCEPTION                          => reduce 6 tokens to loop_statement 100.1
   FOR                                => reduce 6 tokens to loop_statement 100.1
   FUNCTION                           => reduce 6 tokens to loop_statement 100.1
   IF                                 => reduce 6 tokens to loop_statement 100.1
   LOOP                               => reduce 6 tokens to loop_statement 100.1
   PACKAGE                            => reduce 6 tokens to loop_statement 100.1
   PROCEDURE                          => reduce 6 tokens to loop_statement 100.1
   RETURN                             => reduce 6 tokens to loop_statement 100.1
   WHEN                               => reduce 6 tokens to loop_statement 100.1
   IDENTIFIER                         => reduce 6 tokens to loop_statement 100.1
   Wisi_EOI                           => reduce 6 tokens to loop_statement 100.1
   default                            => ERROR

   Minimal_Complete_Actions => (6 loop_statement 100.1)

State 260:
    105.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    105.1:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part ^ END name_opt SEMICOLON

   BEGIN                              => shift and goto state 286 105.0
   END                                => shift and goto state 287 105.1
   default                            => ERROR

   Minimal_Complete_Actions => (END 105.1)

State 261:
     94.0:generic_instantiation <= PACKAGE name IS NEW name SEMICOLON ^

   BEGIN                              => reduce 6 tokens to generic_instantiation 94.0
   CASE                               => reduce 6 tokens to generic_instantiation 94.0
   DECLARE                            => reduce 6 tokens to generic_instantiation 94.0
   EXIT                               => reduce 6 tokens to generic_instantiation 94.0
   FOR                                => reduce 6 tokens to generic_instantiation 94.0
   FUNCTION                           => reduce 6 tokens to generic_instantiation 94.0
   IF                                 => reduce 6 tokens to generic_instantiation 94.0
   LOOP                               => reduce 6 tokens to generic_instantiation 94.0
   PACKAGE                            => reduce 6 tokens to generic_instantiation 94.0
   PROCEDURE                          => reduce 6 tokens to generic_instantiation 94.0
   RETURN                             => reduce 6 tokens to generic_instantiation 94.0
   IDENTIFIER                         => reduce 6 tokens to generic_instantiation 94.0
   Wisi_EOI                           => reduce 6 tokens to generic_instantiation 94.0
   default                            => ERROR

   Minimal_Complete_Actions => (6 generic_instantiation 94.0)

State 262:
    106.0:package_specification <= PACKAGE name aspect_specification_opt IS declarative_part END ^ name_opt SEMICOLON

   SEMICOLON                          => reduce 0 tokens to name_opt 103.1
   IDENTIFIER                         => shift and goto state 42 102.2
   default                            => ERROR

   name                               goto state 288
   name_opt                           goto state 289
   selected_component                 goto state 30

   Minimal_Complete_Actions => (0 name_opt 103.1)

State 263:
     94.1:generic_instantiation <= PROCEDURE name IS NEW name SEMICOLON ^

   BEGIN                              => reduce 6 tokens to generic_instantiation 94.1
   CASE                               => reduce 6 tokens to generic_instantiation 94.1
   DECLARE                            => reduce 6 tokens to generic_instantiation 94.1
   EXIT                               => reduce 6 tokens to generic_instantiation 94.1
   FOR                                => reduce 6 tokens to generic_instantiation 94.1
   FUNCTION                           => reduce 6 tokens to generic_instantiation 94.1
   IF                                 => reduce 6 tokens to generic_instantiation 94.1
   LOOP                               => reduce 6 tokens to generic_instantiation 94.1
   PACKAGE                            => reduce 6 tokens to generic_instantiation 94.1
   PROCEDURE                          => reduce 6 tokens to generic_instantiation 94.1
   RETURN                             => reduce 6 tokens to generic_instantiation 94.1
   IDENTIFIER                         => reduce 6 tokens to generic_instantiation 94.1
   Wisi_EOI                           => reduce 6 tokens to generic_instantiation 94.1
   default                            => ERROR

   Minimal_Complete_Actions => (6 generic_instantiation 94.1)

State 264:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ^

   BEGIN                              => reduce 6 tokens to block_statement 64.1
   CASE                               => reduce 6 tokens to block_statement 64.1
   DECLARE                            => reduce 6 tokens to block_statement 64.1
   ELSE                               => reduce 6 tokens to block_statement 64.1
   ELSIF                              => reduce 6 tokens to block_statement 64.1
   END                                => reduce 6 tokens to block_statement 64.1
   EXIT                               => reduce 6 tokens to block_statement 64.1
   EXCEPTION                          => reduce 6 tokens to block_statement 64.1
   FOR                                => reduce 6 tokens to block_statement 64.1
   FUNCTION                           => reduce 6 tokens to block_statement 64.1
   IF                                 => reduce 6 tokens to block_statement 64.1
   LOOP                               => reduce 6 tokens to block_statement 64.1
   PACKAGE                            => reduce 6 tokens to block_statement 64.1
   PROCEDURE                          => reduce 6 tokens to block_statement 64.1
   RETURN                             => reduce 6 tokens to block_statement 64.1
   WHEN                               => reduce 6 tokens to block_statement 64.1
   IDENTIFIER                         => reduce 6 tokens to block_statement 64.1
   Wisi_EOI                           => reduce 6 tokens to block_statement 64.1
   default                            => ERROR

   Minimal_Complete_Actions => (6 block_statement 64.1)

State 265:
     83.0:exception_handler <= WHEN exception_choice ^ EQUAL_GREATER sequence_of_statements

   EQUAL_GREATER                      => shift and goto state 290 83.0
   default                            => ERROR

   Minimal_Complete_Actions => (EQUAL_GREATER 83.0)

State 266:
     82.0:exception_choice <= name ^
    102.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
    102.1:name <= name ^ actual_parameter_part
    123.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                         => shift and goto state 76 57.0
   DOT                                => shift and goto state 78 123.0
   EQUAL_GREATER                      => reduce 1 tokens to exception_choice 82.0
   default                            => ERROR

   actual_parameter_part              goto state 80

   Minimal_Complete_Actions => (1 exception_choice 82.0)

State 267:
     84.0:exception_handler_list <= exception_handler_list exception_handler ^

   END                                => reduce 2 tokens to exception_handler_list 84.0
   WHEN                               => reduce 2 tokens to exception_handler_list 84.0
   default                            => ERROR

   Minimal_Complete_Actions => (2 exception_handler_list 84.0)

State 268:
     81.0:enumeration_type_definition <= LEFT_PAREN ^ enumeration_literal_list RIGHT_PAREN

   IDENTIFIER                         => shift and goto state 291 80.1
   default                            => ERROR

   enumeration_literal_list           goto state 292

   Minimal_Complete_Actions => (IDENTIFIER 80.1)

State 269:
    138.0:type_definition <= enumeration_type_definition ^

   SEMICOLON                          => reduce 1 tokens to type_definition 138.0
   default                            => ERROR

   Minimal_Complete_Actions => (1 type_definition 138.0)

State 270:
     92.0:full_type_declaration <= TYPE IDENTIFIER IS type_definition ^ SEMICOLON

   SEMICOLON                          => shift and goto state 293 92.0
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 92.0)

State 271:
    104.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL ^ expression SEMICOLON

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   expression                         goto state 294
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 272:
    104.1:object_declaration <= IDENTIFIER COLON subtype_indication SEMICOLON ^

   BEGIN                              => reduce 4 tokens to object_declaration 104.1
   END                                => reduce 4 tokens to object_declaration 104.1
   FUNCTION                           => reduce 4 tokens to object_declaration 104.1
   PACKAGE                            => reduce 4 tokens to object_declaration 104.1
   PROCEDURE                          => reduce 4 tokens to object_declaration 104.1
   TYPE                               => reduce 4 tokens to object_declaration 104.1
   IDENTIFIER                         => reduce 4 tokens to object_declaration 104.1
   default                            => ERROR

   Minimal_Complete_Actions => (4 object_declaration 104.1)

State 273:
     64.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements END ^ identifier_opt SEMICOLON

   SEMICOLON                          => reduce 0 tokens to identifier_opt 96.1
   IDENTIFIER                         => shift and goto state 57 96.0
   default                            => ERROR

   identifier_opt                     goto state 295

   Minimal_Complete_Actions => (0 identifier_opt 96.1)

State 274:
    131.0:subprogram_body_stub <= subprogram_specification IS SEPARATE SEMICOLON ^

   BEGIN                              => reduce 4 tokens to subprogram_body_stub 131.0
   END                                => reduce 4 tokens to subprogram_body_stub 131.0
   FUNCTION                           => reduce 4 tokens to subprogram_body_stub 131.0
   PACKAGE                            => reduce 4 tokens to subprogram_body_stub 131.0
   PROCEDURE                          => reduce 4 tokens to subprogram_body_stub 131.0
   TYPE                               => reduce 4 tokens to subprogram_body_stub 131.0
   IDENTIFIER                         => reduce 4 tokens to subprogram_body_stub 131.0
   default                            => ERROR

   Minimal_Complete_Actions => (4 subprogram_body_stub 131.0)

State 275:
    100.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP identifier_opt ^ SEMICOLON

   SEMICOLON                          => shift and goto state 296 100.0
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 100.0)

State 276:
    130.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON

   END                                => shift and goto state 297 130.0
   default                            => ERROR

   Minimal_Complete_Actions => (END 130.0)

State 277:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements ^

   END                                => reduce 4 tokens to case_statement_alternative 68.0
   WHEN                               => reduce 4 tokens to case_statement_alternative 68.0
   default                            => ERROR

   Minimal_Complete_Actions => (4 case_statement_alternative 68.0)

State 278:
     67.0:case_statement <= CASE expression IS case_statement_alternative_list END CASE SEMICOLON ^

   BEGIN                              => reduce 7 tokens to case_statement 67.0
   CASE                               => reduce 7 tokens to case_statement 67.0
   DECLARE                            => reduce 7 tokens to case_statement 67.0
   ELSE                               => reduce 7 tokens to case_statement 67.0
   ELSIF                              => reduce 7 tokens to case_statement 67.0
   END                                => reduce 7 tokens to case_statement 67.0
   EXIT                               => reduce 7 tokens to case_statement 67.0
   EXCEPTION                          => reduce 7 tokens to case_statement 67.0
   FOR                                => reduce 7 tokens to case_statement 67.0
   FUNCTION                           => reduce 7 tokens to case_statement 67.0
   IF                                 => reduce 7 tokens to case_statement 67.0
   LOOP                               => reduce 7 tokens to case_statement 67.0
   PACKAGE                            => reduce 7 tokens to case_statement 67.0
   PROCEDURE                          => reduce 7 tokens to case_statement 67.0
   RETURN                             => reduce 7 tokens to case_statement 67.0
   WHEN                               => reduce 7 tokens to case_statement 67.0
   IDENTIFIER                         => reduce 7 tokens to case_statement 67.0
   Wisi_EOI                           => reduce 7 tokens to case_statement 67.0
   default                            => ERROR

   Minimal_Complete_Actions => (7 case_statement 67.0)

State 279:
     98.0:index_constraint <= LEFT_PAREN discrete_subtype_definition RIGHT_PAREN ^

   LOOP                               => reduce 3 tokens to index_constraint 98.0
   RIGHT_PAREN                        => reduce 3 tokens to index_constraint 98.0
   COLON_EQUAL                        => reduce 3 tokens to index_constraint 98.0
   SEMICOLON                          => reduce 3 tokens to index_constraint 98.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 index_constraint 98.0)

State 280:
    109.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL ^ expression

   LEFT_PAREN                         => shift and goto state 37 111.0
   NOT                                => shift and goto state 38 90.1
   MINUS                              => shift and goto state 39 139.1
   PLUS                               => shift and goto state 40 139.0
   STRING_LITERAL                     => shift and goto state 41 112.1
   IDENTIFIER                         => shift and goto state 42 102.2
   NUMERIC_LITERAL                    => shift and goto state 43 112.0
   default                            => ERROR

   expression                         goto state 298
   factor                             goto state 45
   name                               goto state 46
   paren_expression                   goto state 47
   primary                            goto state 48
   relation_and_list                  goto state 49
   relation_or_list                   goto state 50
   relation_xor_list                  goto state 51
   relation                           goto state 52
   selected_component                 goto state 30
   simple_expression                  goto state 53
   term                               goto state 54
   term_list                          goto state 55
   unary_adding_operator              goto state 56

   Minimal_Complete_Actions => (NUMERIC_LITERAL 112.0)

State 281:
     97.1:if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements END ^ IF SEMICOLON

   IF                                 => shift and goto state 299 97.1
   default                            => ERROR

   Minimal_Complete_Actions => (IF 97.1)

State 282:
     78.0:elsif_statement_item <= ELSIF expression THEN ^ sequence_of_statements

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1 67.0
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   ELSE                               => reduce 0 tokens to sequence_of_statements 125.1
   ELSIF                              => reduce 0 tokens to sequence_of_statements 125.1
   END                                => reduce 0 tokens to sequence_of_statements 125.1
   EXIT                               => shift and goto state 2 86.0
   FOR                                => shift and goto state 3 99.0
   IF                                 => shift and goto state 5 97.0
   LOOP                               => shift and goto state 6 100.1
   RETURN                             => shift and goto state 9 89.0
   IDENTIFIER                         => shift and goto state 10 63.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements_list        goto state 62
   sequence_of_statements             goto state 300
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 64

   Minimal_Complete_Actions => (0 sequence_of_statements 125.1)

State 283:
     97.3:if_statement <= IF expression THEN sequence_of_statements END IF SEMICOLON ^

   BEGIN                              => reduce 7 tokens to if_statement 97.3
   CASE                               => reduce 7 tokens to if_statement 97.3
   DECLARE                            => reduce 7 tokens to if_statement 97.3
   ELSE                               => reduce 7 tokens to if_statement 97.3
   ELSIF                              => reduce 7 tokens to if_statement 97.3
   END                                => reduce 7 tokens to if_statement 97.3
   EXIT                               => reduce 7 tokens to if_statement 97.3
   EXCEPTION                          => reduce 7 tokens to if_statement 97.3
   FOR                                => reduce 7 tokens to if_statement 97.3
   FUNCTION                           => reduce 7 tokens to if_statement 97.3
   IF                                 => reduce 7 tokens to if_statement 97.3
   LOOP                               => reduce 7 tokens to if_statement 97.3
   PACKAGE                            => reduce 7 tokens to if_statement 97.3
   PROCEDURE                          => reduce 7 tokens to if_statement 97.3
   RETURN                             => reduce 7 tokens to if_statement 97.3
   WHEN                               => reduce 7 tokens to if_statement 97.3
   IDENTIFIER                         => reduce 7 tokens to if_statement 97.3
   Wisi_EOI                           => reduce 7 tokens to if_statement 97.3
   default                            => ERROR

   Minimal_Complete_Actions => (7 if_statement 97.3)

State 284:
     97.0:if_statement <= IF expression THEN sequence_of_statements elsif_statement_list ELSE sequence_of_statements ^ END IF SEMICOLON

   END                                => shift and goto state 301 97.0
   default                            => ERROR

   Minimal_Complete_Actions => (END 97.0)

State 285:
     97.2:if_statement <= IF expression THEN sequence_of_statements elsif_statement_list END IF ^ SEMICOLON

   SEMICOLON                          => shift and goto state 302 97.2
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 97.2)

State 286:
    105.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1 67.0
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 125.1
   EXIT                               => shift and goto state 2 86.0
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements 125.1
   FOR                                => shift and goto state 3 99.0
   IF                                 => shift and goto state 5 97.0
   LOOP                               => shift and goto state 6 100.1
   RETURN                             => shift and goto state 9 89.0
   IDENTIFIER                         => shift and goto state 10 63.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   handled_sequence_of_statements     goto state 303
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements_list        goto state 62
   sequence_of_statements             goto state 128
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 64

   Minimal_Complete_Actions => (0 handled_sequence_of_statements 95.1)

State 287:
    105.1:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part END ^ name_opt SEMICOLON

   SEMICOLON                          => reduce 0 tokens to name_opt 103.1
   IDENTIFIER                         => shift and goto state 42 102.2
   default                            => ERROR

   name                               goto state 288
   name_opt                           goto state 304
   selected_component                 goto state 30

   Minimal_Complete_Actions => (0 name_opt 103.1)

State 288:
    102.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
    102.1:name <= name ^ actual_parameter_part
    103.0:name_opt <= name ^
    123.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                         => shift and goto state 76 57.0
   DOT                                => shift and goto state 78 123.0
   SEMICOLON                          => reduce 1 tokens to name_opt 103.0
   default                            => ERROR

   actual_parameter_part              goto state 80

   Minimal_Complete_Actions => (1 name_opt 103.0)

State 289:
    106.0:package_specification <= PACKAGE name aspect_specification_opt IS declarative_part END name_opt ^ SEMICOLON

   SEMICOLON                          => shift and goto state 305 106.0
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 106.0)

State 290:
     83.0:exception_handler <= WHEN exception_choice EQUAL_GREATER ^ sequence_of_statements

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 1 67.0
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements 125.1
   EXIT                               => shift and goto state 2 86.0
   FOR                                => shift and goto state 3 99.0
   IF                                 => shift and goto state 5 97.0
   LOOP                               => shift and goto state 6 100.1
   RETURN                             => shift and goto state 9 89.0
   WHEN                               => reduce 0 tokens to sequence_of_statements 125.1
   IDENTIFIER                         => shift and goto state 10 63.0
   default                            => ERROR

   assignment_statement               goto state 11
   block_label_opt                    goto state 12
   block_statement                    goto state 13
   case_statement                     goto state 14
   compound_statement                 goto state 17
   exit_statement                     goto state 18
   extended_return_statement          goto state 19
   if_statement                       goto state 22
   iteration_scheme                   goto state 23
   loop_statement                     goto state 24
   name                               goto state 25
   procedure_call_statement           goto state 28
   selected_component                 goto state 30
   sequence_of_statements_list        goto state 62
   sequence_of_statements             goto state 306
   simple_return_statement            goto state 31
   simple_statement                   goto state 32
   statement                          goto state 64

   Minimal_Complete_Actions => (0 sequence_of_statements 125.1)

State 291:
     80.1:enumeration_literal_list <= IDENTIFIER ^

   RIGHT_PAREN                        => reduce 1 tokens to enumeration_literal_list 80.1
   COMMA                              => reduce 1 tokens to enumeration_literal_list 80.1
   default                            => ERROR

   Minimal_Complete_Actions => (1 enumeration_literal_list 80.1)

State 292:
     80.0:enumeration_literal_list <= enumeration_literal_list ^ COMMA IDENTIFIER
     81.0:enumeration_type_definition <= LEFT_PAREN enumeration_literal_list ^ RIGHT_PAREN

   RIGHT_PAREN                        => shift and goto state 307 81.0
   COMMA                              => shift and goto state 308 80.0
   default                            => ERROR

   Minimal_Complete_Actions => (RIGHT_PAREN 81.0)

State 293:
     92.0:full_type_declaration <= TYPE IDENTIFIER IS type_definition SEMICOLON ^

   BEGIN                              => reduce 5 tokens to full_type_declaration 92.0
   END                                => reduce 5 tokens to full_type_declaration 92.0
   FUNCTION                           => reduce 5 tokens to full_type_declaration 92.0
   PACKAGE                            => reduce 5 tokens to full_type_declaration 92.0
   PROCEDURE                          => reduce 5 tokens to full_type_declaration 92.0
   TYPE                               => reduce 5 tokens to full_type_declaration 92.0
   IDENTIFIER                         => reduce 5 tokens to full_type_declaration 92.0
   default                            => ERROR

   Minimal_Complete_Actions => (5 full_type_declaration 92.0)

State 294:
    104.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression ^ SEMICOLON

   SEMICOLON                          => shift and goto state 309 104.0
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 104.0)

State 295:
     64.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements END identifier_opt ^ SEMICOLON

   SEMICOLON                          => shift and goto state 310 64.0
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 64.0)

State 296:
    100.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ^

   BEGIN                              => reduce 7 tokens to loop_statement 100.0
   CASE                               => reduce 7 tokens to loop_statement 100.0
   DECLARE                            => reduce 7 tokens to loop_statement 100.0
   ELSE                               => reduce 7 tokens to loop_statement 100.0
   ELSIF                              => reduce 7 tokens to loop_statement 100.0
   END                                => reduce 7 tokens to loop_statement 100.0
   EXIT                               => reduce 7 tokens to loop_statement 100.0
   EXCEPTION                          => reduce 7 tokens to loop_statement 100.0
   FOR                                => reduce 7 tokens to loop_statement 100.0
   FUNCTION                           => reduce 7 tokens to loop_statement 100.0
   IF                                 => reduce 7 tokens to loop_statement 100.0
   LOOP                               => reduce 7 tokens to loop_statement 100.0
   PACKAGE                            => reduce 7 tokens to loop_statement 100.0
   PROCEDURE                          => reduce 7 tokens to loop_statement 100.0
   RETURN                             => reduce 7 tokens to loop_statement 100.0
   WHEN                               => reduce 7 tokens to loop_statement 100.0
   IDENTIFIER                         => reduce 7 tokens to loop_statement 100.0
   Wisi_EOI                           => reduce 7 tokens to loop_statement 100.0
   default                            => ERROR

   Minimal_Complete_Actions => (7 loop_statement 100.0)

State 297:
    130.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON

   SEMICOLON                          => reduce 0 tokens to name_opt 103.1
   IDENTIFIER                         => shift and goto state 42 102.2
   default                            => ERROR

   name                               goto state 288
   name_opt                           goto state 311
   selected_component                 goto state 30

   Minimal_Complete_Actions => (0 name_opt 103.1)

State 298:
    109.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL expression ^

   RIGHT_PAREN                        => reduce 5 tokens to parameter_specification 109.0
   SEMICOLON                          => reduce 5 tokens to parameter_specification 109.0
   default                            => ERROR

   Minimal_Complete_Actions => (5 parameter_specification 109.0)

State 299:
     97.1:if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements END IF ^ SEMICOLON

   SEMICOLON                          => shift and goto state 312 97.1
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 97.1)

State 300:
     78.0:elsif_statement_item <= ELSIF expression THEN sequence_of_statements ^

   ELSE                               => reduce 4 tokens to elsif_statement_item 78.0
   ELSIF                              => reduce 4 tokens to elsif_statement_item 78.0
   END                                => reduce 4 tokens to elsif_statement_item 78.0
   default                            => ERROR

   Minimal_Complete_Actions => (4 elsif_statement_item 78.0)

State 301:
     97.0:if_statement <= IF expression THEN sequence_of_statements elsif_statement_list ELSE sequence_of_statements END ^ IF SEMICOLON

   IF                                 => shift and goto state 313 97.0
   default                            => ERROR

   Minimal_Complete_Actions => (IF 97.0)

State 302:
     97.2:if_statement <= IF expression THEN sequence_of_statements elsif_statement_list END IF SEMICOLON ^

   BEGIN                              => reduce 8 tokens to if_statement 97.2
   CASE                               => reduce 8 tokens to if_statement 97.2
   DECLARE                            => reduce 8 tokens to if_statement 97.2
   ELSE                               => reduce 8 tokens to if_statement 97.2
   ELSIF                              => reduce 8 tokens to if_statement 97.2
   END                                => reduce 8 tokens to if_statement 97.2
   EXIT                               => reduce 8 tokens to if_statement 97.2
   EXCEPTION                          => reduce 8 tokens to if_statement 97.2
   FOR                                => reduce 8 tokens to if_statement 97.2
   FUNCTION                           => reduce 8 tokens to if_statement 97.2
   IF                                 => reduce 8 tokens to if_statement 97.2
   LOOP                               => reduce 8 tokens to if_statement 97.2
   PACKAGE                            => reduce 8 tokens to if_statement 97.2
   PROCEDURE                          => reduce 8 tokens to if_statement 97.2
   RETURN                             => reduce 8 tokens to if_statement 97.2
   WHEN                               => reduce 8 tokens to if_statement 97.2
   IDENTIFIER                         => reduce 8 tokens to if_statement 97.2
   Wisi_EOI                           => reduce 8 tokens to if_statement 97.2
   default                            => ERROR

   Minimal_Complete_Actions => (8 if_statement 97.2)

State 303:
    105.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON

   END                                => shift and goto state 314 105.0
   default                            => ERROR

   Minimal_Complete_Actions => (END 105.0)

State 304:
    105.1:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part END name_opt ^ SEMICOLON

   SEMICOLON                          => shift and goto state 315 105.1
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 105.1)

State 305:
    106.0:package_specification <= PACKAGE name aspect_specification_opt IS declarative_part END name_opt SEMICOLON ^

   BEGIN                              => reduce 8 tokens to package_specification 106.0
   CASE                               => reduce 8 tokens to package_specification 106.0
   DECLARE                            => reduce 8 tokens to package_specification 106.0
   EXIT                               => reduce 8 tokens to package_specification 106.0
   FOR                                => reduce 8 tokens to package_specification 106.0
   FUNCTION                           => reduce 8 tokens to package_specification 106.0
   IF                                 => reduce 8 tokens to package_specification 106.0
   LOOP                               => reduce 8 tokens to package_specification 106.0
   PACKAGE                            => reduce 8 tokens to package_specification 106.0
   PROCEDURE                          => reduce 8 tokens to package_specification 106.0
   RETURN                             => reduce 8 tokens to package_specification 106.0
   IDENTIFIER                         => reduce 8 tokens to package_specification 106.0
   Wisi_EOI                           => reduce 8 tokens to package_specification 106.0
   default                            => ERROR

   Minimal_Complete_Actions => (8 package_specification 106.0)

State 306:
     83.0:exception_handler <= WHEN exception_choice EQUAL_GREATER sequence_of_statements ^

   END                                => reduce 4 tokens to exception_handler 83.0
   WHEN                               => reduce 4 tokens to exception_handler 83.0
   default                            => ERROR

   Minimal_Complete_Actions => (4 exception_handler 83.0)

State 307:
     81.0:enumeration_type_definition <= LEFT_PAREN enumeration_literal_list RIGHT_PAREN ^

   SEMICOLON                          => reduce 3 tokens to enumeration_type_definition 81.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 enumeration_type_definition 81.0)

State 308:
     80.0:enumeration_literal_list <= enumeration_literal_list COMMA ^ IDENTIFIER

   IDENTIFIER                         => shift and goto state 316 80.0
   default                            => ERROR

   Minimal_Complete_Actions => (IDENTIFIER 80.0)

State 309:
    104.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression SEMICOLON ^

   BEGIN                              => reduce 6 tokens to object_declaration 104.0
   END                                => reduce 6 tokens to object_declaration 104.0
   FUNCTION                           => reduce 6 tokens to object_declaration 104.0
   PACKAGE                            => reduce 6 tokens to object_declaration 104.0
   PROCEDURE                          => reduce 6 tokens to object_declaration 104.0
   TYPE                               => reduce 6 tokens to object_declaration 104.0
   IDENTIFIER                         => reduce 6 tokens to object_declaration 104.0
   default                            => ERROR

   Minimal_Complete_Actions => (6 object_declaration 104.0)

State 310:
     64.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ^

   BEGIN                              => reduce 8 tokens to block_statement 64.0
   CASE                               => reduce 8 tokens to block_statement 64.0
   DECLARE                            => reduce 8 tokens to block_statement 64.0
   ELSE                               => reduce 8 tokens to block_statement 64.0
   ELSIF                              => reduce 8 tokens to block_statement 64.0
   END                                => reduce 8 tokens to block_statement 64.0
   EXIT                               => reduce 8 tokens to block_statement 64.0
   EXCEPTION                          => reduce 8 tokens to block_statement 64.0
   FOR                                => reduce 8 tokens to block_statement 64.0
   FUNCTION                           => reduce 8 tokens to block_statement 64.0
   IF                                 => reduce 8 tokens to block_statement 64.0
   LOOP                               => reduce 8 tokens to block_statement 64.0
   PACKAGE                            => reduce 8 tokens to block_statement 64.0
   PROCEDURE                          => reduce 8 tokens to block_statement 64.0
   RETURN                             => reduce 8 tokens to block_statement 64.0
   WHEN                               => reduce 8 tokens to block_statement 64.0
   IDENTIFIER                         => reduce 8 tokens to block_statement 64.0
   Wisi_EOI                           => reduce 8 tokens to block_statement 64.0
   default                            => ERROR

   Minimal_Complete_Actions => (8 block_statement 64.0)

State 311:
    130.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON

   SEMICOLON                          => shift and goto state 317 130.0
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 130.0)

State 312:
     97.1:if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON ^

   BEGIN                              => reduce 9 tokens to if_statement 97.1
   CASE                               => reduce 9 tokens to if_statement 97.1
   DECLARE                            => reduce 9 tokens to if_statement 97.1
   ELSE                               => reduce 9 tokens to if_statement 97.1
   ELSIF                              => reduce 9 tokens to if_statement 97.1
   END                                => reduce 9 tokens to if_statement 97.1
   EXIT                               => reduce 9 tokens to if_statement 97.1
   EXCEPTION                          => reduce 9 tokens to if_statement 97.1
   FOR                                => reduce 9 tokens to if_statement 97.1
   FUNCTION                           => reduce 9 tokens to if_statement 97.1
   IF                                 => reduce 9 tokens to if_statement 97.1
   LOOP                               => reduce 9 tokens to if_statement 97.1
   PACKAGE                            => reduce 9 tokens to if_statement 97.1
   PROCEDURE                          => reduce 9 tokens to if_statement 97.1
   RETURN                             => reduce 9 tokens to if_statement 97.1
   WHEN                               => reduce 9 tokens to if_statement 97.1
   IDENTIFIER                         => reduce 9 tokens to if_statement 97.1
   Wisi_EOI                           => reduce 9 tokens to if_statement 97.1
   default                            => ERROR

   Minimal_Complete_Actions => (9 if_statement 97.1)

State 313:
     97.0:if_statement <= IF expression THEN sequence_of_statements elsif_statement_list ELSE sequence_of_statements END IF ^ SEMICOLON

   SEMICOLON                          => shift and goto state 318 97.0
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 97.0)

State 314:
    105.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON

   SEMICOLON                          => reduce 0 tokens to name_opt 103.1
   IDENTIFIER                         => shift and goto state 42 102.2
   default                            => ERROR

   name                               goto state 288
   name_opt                           goto state 319
   selected_component                 goto state 30

   Minimal_Complete_Actions => (0 name_opt 103.1)

State 315:
    105.1:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part END name_opt SEMICOLON ^

   BEGIN                              => reduce 9 tokens to package_body 105.1
   CASE                               => reduce 9 tokens to package_body 105.1
   DECLARE                            => reduce 9 tokens to package_body 105.1
   END                                => reduce 9 tokens to package_body 105.1
   EXIT                               => reduce 9 tokens to package_body 105.1
   FOR                                => reduce 9 tokens to package_body 105.1
   FUNCTION                           => reduce 9 tokens to package_body 105.1
   IF                                 => reduce 9 tokens to package_body 105.1
   LOOP                               => reduce 9 tokens to package_body 105.1
   PACKAGE                            => reduce 9 tokens to package_body 105.1
   PROCEDURE                          => reduce 9 tokens to package_body 105.1
   RETURN                             => reduce 9 tokens to package_body 105.1
   TYPE                               => reduce 9 tokens to package_body 105.1
   IDENTIFIER                         => reduce 9 tokens to package_body 105.1
   Wisi_EOI                           => reduce 9 tokens to package_body 105.1
   default                            => ERROR

   Minimal_Complete_Actions => (9 package_body 105.1)

State 316:
     80.0:enumeration_literal_list <= enumeration_literal_list COMMA IDENTIFIER ^

   RIGHT_PAREN                        => reduce 3 tokens to enumeration_literal_list 80.0
   COMMA                              => reduce 3 tokens to enumeration_literal_list 80.0
   default                            => ERROR

   Minimal_Complete_Actions => (3 enumeration_literal_list 80.0)

State 317:
    130.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^

   BEGIN                              => reduce 9 tokens to subprogram_body 130.0
   CASE                               => reduce 9 tokens to subprogram_body 130.0
   DECLARE                            => reduce 9 tokens to subprogram_body 130.0
   END                                => reduce 9 tokens to subprogram_body 130.0
   EXIT                               => reduce 9 tokens to subprogram_body 130.0
   FOR                                => reduce 9 tokens to subprogram_body 130.0
   FUNCTION                           => reduce 9 tokens to subprogram_body 130.0
   IF                                 => reduce 9 tokens to subprogram_body 130.0
   LOOP                               => reduce 9 tokens to subprogram_body 130.0
   PACKAGE                            => reduce 9 tokens to subprogram_body 130.0
   PROCEDURE                          => reduce 9 tokens to subprogram_body 130.0
   RETURN                             => reduce 9 tokens to subprogram_body 130.0
   TYPE                               => reduce 9 tokens to subprogram_body 130.0
   IDENTIFIER                         => reduce 9 tokens to subprogram_body 130.0
   Wisi_EOI                           => reduce 9 tokens to subprogram_body 130.0
   default                            => ERROR

   Minimal_Complete_Actions => (9 subprogram_body 130.0)

State 318:
     97.0:if_statement <= IF expression THEN sequence_of_statements elsif_statement_list ELSE sequence_of_statements END IF SEMICOLON ^

   BEGIN                              => reduce 10 tokens to if_statement 97.0
   CASE                               => reduce 10 tokens to if_statement 97.0
   DECLARE                            => reduce 10 tokens to if_statement 97.0
   ELSE                               => reduce 10 tokens to if_statement 97.0
   ELSIF                              => reduce 10 tokens to if_statement 97.0
   END                                => reduce 10 tokens to if_statement 97.0
   EXIT                               => reduce 10 tokens to if_statement 97.0
   EXCEPTION                          => reduce 10 tokens to if_statement 97.0
   FOR                                => reduce 10 tokens to if_statement 97.0
   FUNCTION                           => reduce 10 tokens to if_statement 97.0
   IF                                 => reduce 10 tokens to if_statement 97.0
   LOOP                               => reduce 10 tokens to if_statement 97.0
   PACKAGE                            => reduce 10 tokens to if_statement 97.0
   PROCEDURE                          => reduce 10 tokens to if_statement 97.0
   RETURN                             => reduce 10 tokens to if_statement 97.0
   WHEN                               => reduce 10 tokens to if_statement 97.0
   IDENTIFIER                         => reduce 10 tokens to if_statement 97.0
   Wisi_EOI                           => reduce 10 tokens to if_statement 97.0
   default                            => ERROR

   Minimal_Complete_Actions => (10 if_statement 97.0)

State 319:
    105.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON

   SEMICOLON                          => shift and goto state 320 105.0
   default                            => ERROR

   Minimal_Complete_Actions => (SEMICOLON 105.0)

State 320:
    105.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^

   BEGIN                              => reduce 11 tokens to package_body 105.0
   CASE                               => reduce 11 tokens to package_body 105.0
   DECLARE                            => reduce 11 tokens to package_body 105.0
   END                                => reduce 11 tokens to package_body 105.0
   EXIT                               => reduce 11 tokens to package_body 105.0
   FOR                                => reduce 11 tokens to package_body 105.0
   FUNCTION                           => reduce 11 tokens to package_body 105.0
   IF                                 => reduce 11 tokens to package_body 105.0
   LOOP                               => reduce 11 tokens to package_body 105.0
   PACKAGE                            => reduce 11 tokens to package_body 105.0
   PROCEDURE                          => reduce 11 tokens to package_body 105.0
   RETURN                             => reduce 11 tokens to package_body 105.0
   TYPE                               => reduce 11 tokens to package_body 105.0
   IDENTIFIER                         => reduce 11 tokens to package_body 105.0
   Wisi_EOI                           => reduce 11 tokens to package_body 105.0
   default                            => ERROR

   Minimal_Complete_Actions => (11 package_body 105.0)

318 states with minimal_complete_actions; 330 total minimal_complete_actions.

6 states with conflicts: 66 67 111 145 174 248

 0 accept/reduce conflicts, 3 shift/reduce conflicts, 3 reduce/reduce conflicts

 83 rules, 0 user actions, 17 checks, 321 states
