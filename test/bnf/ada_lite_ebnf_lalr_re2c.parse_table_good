Tokens:
 0 => COMMENT
 1 => WHITESPACE
 2 => NEW_LINE
 3 => PRAGMA
 4 => AND
 5 => BEGIN
 6 => BODY
 7 => CASE
 8 => DECLARE
 9 => ELSE
 10 => ELSIF
 11 => END
 12 => EXIT
 13 => EXCEPTION
 14 => FOR
 15 => FUNCTION
 16 => IF
 17 => IN
 18 => IS
 19 => LEFT_PAREN
 20 => LOOP
 21 => NEW
 22 => NOT
 23 => OR
 24 => PACKAGE
 25 => PROCEDURE
 26 => RANGE
 27 => RETURN
 28 => RIGHT_PAREN
 29 => SEPARATE
 30 => THEN
 31 => TYPE
 32 => WHEN
 33 => WITH
 34 => XOR
 35 => AMPERSAND
 36 => COLON
 37 => COLON_EQUAL
 38 => COMMA
 39 => DOT
 40 => DOT_DOT
 41 => EQUAL
 42 => EQUAL_GREATER
 43 => GREATER
 44 => GREATER_EQUAL
 45 => LESS
 46 => LESS_EQUAL
 47 => MINUS
 48 => PLUS
 49 => SEMICOLON
 50 => SLASH
 51 => SLASH_EQUAL
 52 => STAR
 53 => STRING_LITERAL
 54 => IDENTIFIER
 55 => NUMERIC_LITERAL
 56 => Wisi_EOI
 57 => wisitoken_accept
 58 => actual_parameter_part
 59 => aspect_specification
 60 => assignment_statement
 61 => association
 62 => association_list
 63 => binary_adding_operator
 64 => block_label_opt
 65 => block_statement
 66 => body_g
 67 => body_stub
 68 => case_statement
 69 => case_statement_alternative
 70 => compilation_unit
 71 => compilation_unit_list
 72 => compound_statement
 73 => constraint
 74 => declaration
 75 => declarative_part
 76 => discrete_subtype_definition
 77 => enumeration_type_definition
 78 => exception_choice
 79 => exception_handler
 80 => exit_statement
 81 => expression
 82 => extended_return_object_declaration
 83 => extended_return_statement
 84 => factor
 85 => formal_part
 86 => full_type_declaration
 87 => function_specification
 88 => generic_instantiation
 89 => handled_sequence_of_statements
 90 => identifier_opt
 91 => if_statement
 92 => index_constraint
 93 => iteration_scheme
 94 => loop_statement
 95 => multiplying_operator
 96 => name
 97 => name_opt
 98 => object_declaration
 99 => package_body
 100 => parameter_and_result_profile
 101 => parameter_profile
 102 => parameter_specification
 103 => paren_expression
 104 => pragma_g
 105 => primary
 106 => procedure_call_statement
 107 => procedure_specification
 108 => proper_body
 109 => range_g
 110 => range_list
 111 => relation
 112 => relational_operator
 113 => selected_component
 114 => sequence_of_statements
 115 => simple_expression
 116 => simple_return_statement
 117 => simple_statement
 118 => statement
 119 => subprogram_body
 120 => subprogram_body_stub
 121 => subprogram_declaration
 122 => subprogram_specification
 123 => subtype_indication
 124 => term
 125 => type_declaration
 126 => type_definition
 127 => unary_adding_operator
 128 => case_statement_alternative_list
 129 => declaration_list
 130 => IDENTIFIER_COMMA_list
 131 => AND_relation_list
 132 => OR_relation_list
 133 => XOR_relation_list
 134 => parameter_specification_SEMICOLON_list
 135 => exception_handler_list
 136 => ELSIF_expression_list
 137 => term_binary_adding_operator_list

Productions:
57.0: wisitoken_accept <= compilation_unit_list Wisi_EOI
58.0: actual_parameter_part <= LEFT_PAREN association_list RIGHT_PAREN ; (2 => Other)
59.0: aspect_specification <= WITH association_list
60.0: assignment_statement <= name COLON_EQUAL expression SEMICOLON
61.0: association <= IDENTIFIER EQUAL_GREATER expression ; (3 => Other_Right)
61.1: association <= expression ; (1 => Other_Left)
62.0: association_list <= association ; (1 => Other_Left)
62.1: association_list <= association_list COMMA association ; (1 => Direct_Left, 3 => Other_Right)
62.2: association_list <= association_list COMMA association_list ; (1 => Direct_Left, 3 => Direct_Right)
63.0: binary_adding_operator <= PLUS
63.1: binary_adding_operator <= MINUS
63.2: binary_adding_operator <= AMPERSAND
64.0: block_label_opt <= IDENTIFIER COLON
64.1: block_label_opt <=
65.0: block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ; (3 => Other, 5 => Other)
65.1: block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ; (3 => Other)
66.0: body_g <= proper_body ; (1 => Other_Left)
66.1: body_g <= body_stub
67.0: body_stub <= subprogram_body_stub
68.0: case_statement <= CASE expression IS case_statement_alternative_list END CASE SEMICOLON ; (4 => Other)
69.0: case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements ; (4 => Other_Right)
70.0: compilation_unit <= declaration
70.1: compilation_unit <= statement
71.0: compilation_unit_list <= compilation_unit
71.1: compilation_unit_list <= compilation_unit_list compilation_unit ; (1 => Direct_Left)
72.0: compound_statement <= if_statement ; (1 => Other_Left)
72.1: compound_statement <= case_statement ; (1 => Other_Left)
72.2: compound_statement <= loop_statement ; (1 => Other_Left)
72.3: compound_statement <= block_statement ; (1 => Other_Left)
72.4: compound_statement <= extended_return_statement
73.0: constraint <= RANGE range_g
73.1: constraint <= index_constraint ; (1 => Other_Left)
74.0: declaration <= body_g ; (1 => Other_Left)
74.1: declaration <= generic_instantiation
74.2: declaration <= object_declaration
74.3: declaration <= pragma_g
74.4: declaration <= subprogram_declaration
74.5: declaration <= type_declaration
75.0: declarative_part <= declaration_list ; (1 => Other_Left)
75.1: declarative_part <=
76.0: discrete_subtype_definition <= subtype_indication ; (1 => Other_Left)
76.1: discrete_subtype_definition <= range_g
77.0: enumeration_type_definition <= LEFT_PAREN IDENTIFIER_COMMA_list RIGHT_PAREN
78.0: exception_choice <= name
79.0: exception_handler <= WHEN exception_choice EQUAL_GREATER sequence_of_statements ; (4 => Other_Right)
80.0: exit_statement <= EXIT IDENTIFIER WHEN expression SEMICOLON
80.1: exit_statement <= EXIT IDENTIFIER SEMICOLON
80.2: exit_statement <= EXIT WHEN expression SEMICOLON
80.3: exit_statement <= EXIT SEMICOLON
81.0: expression <= relation ; (1 => Other_Left)
81.1: expression <= relation AND_relation_list ; (1 => Other_Left, 2 => Other_Right)
81.2: expression <= relation OR_relation_list ; (1 => Other_Left, 2 => Other_Right)
81.3: expression <= relation XOR_relation_list ; (1 => Other_Left, 2 => Other_Right)
82.0: extended_return_object_declaration <= IDENTIFIER COLON subtype_indication
83.0: extended_return_statement <= RETURN extended_return_object_declaration SEMICOLON
84.0: factor <= primary ; (1 => Other_Left)
84.1: factor <= NOT primary ; (2 => Other_Right)
85.0: formal_part <= LEFT_PAREN parameter_specification_SEMICOLON_list RIGHT_PAREN
86.0: full_type_declaration <= TYPE IDENTIFIER IS type_definition SEMICOLON
87.0: function_specification <= FUNCTION name parameter_and_result_profile
88.0: generic_instantiation <= PACKAGE name IS NEW name SEMICOLON
88.1: generic_instantiation <= PROCEDURE name IS NEW name SEMICOLON
89.0: handled_sequence_of_statements <= sequence_of_statements EXCEPTION exception_handler_list ; (1 => Other_Left, 3 => Other_Right)
89.1: handled_sequence_of_statements <= sequence_of_statements EXCEPTION ; (1 => Other_Left)
89.2: handled_sequence_of_statements <= sequence_of_statements ; (1 => Other_Left)
90.0: identifier_opt <= IDENTIFIER
90.1: identifier_opt <=
91.0: if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list ELSE sequence_of_statements END IF SEMICOLON ; (4 => Other, 5 => Other, 7 => Other)
91.1: if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list END IF SEMICOLON ; (4 => Other, 5 => Other)
91.2: if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON ; (4 => Other, 6 => Other)
91.3: if_statement <= IF expression THEN sequence_of_statements END IF SEMICOLON ; (4 => Other)
92.0: index_constraint <= LEFT_PAREN discrete_subtype_definition RIGHT_PAREN ; (2 => Other)
93.0: iteration_scheme <= FOR IDENTIFIER IN discrete_subtype_definition
94.0: loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ; (3 => Other)
94.1: loop_statement <= LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ; (2 => Other)
95.0: multiplying_operator <= STAR
95.1: multiplying_operator <= SLASH
96.0: name <= name LEFT_PAREN range_list RIGHT_PAREN ; (1 => Direct_Left, 3 => Other)
96.1: name <= name actual_parameter_part ; (1 => Direct_Left, 2 => Other_Right)
96.2: name <= IDENTIFIER
96.3: name <= selected_component ; (1 => Other_Left)
97.0: name_opt <= name
97.1: name_opt <=
98.0: object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression SEMICOLON
98.1: object_declaration <= IDENTIFIER COLON subtype_indication SEMICOLON
99.0: package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ; (6 => Other, 8 => Other)
99.1: package_body <= PACKAGE BODY name aspect_specification IS declarative_part END name_opt SEMICOLON ; (6 => Other)
99.2: package_body <= PACKAGE BODY name IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ; (5 => Other, 7 => Other)
99.3: package_body <= PACKAGE BODY name IS declarative_part END name_opt SEMICOLON ; (5 => Other)
100.0: parameter_and_result_profile <= formal_part RETURN IDENTIFIER
100.1: parameter_and_result_profile <= RETURN IDENTIFIER
101.0: parameter_profile <= formal_part
101.1: parameter_profile <=
102.0: parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL expression
102.1: parameter_specification <= IDENTIFIER COLON IDENTIFIER
103.0: paren_expression <= LEFT_PAREN expression RIGHT_PAREN ; (2 => Other)
104.0: pragma_g <= PRAGMA IDENTIFIER actual_parameter_part SEMICOLON
105.0: primary <= NUMERIC_LITERAL
105.1: primary <= STRING_LITERAL
105.2: primary <= name ; (1 => Other_Left)
105.3: primary <= paren_expression ; (1 => Other_Left)
106.0: procedure_call_statement <= name SEMICOLON
107.0: procedure_specification <= PROCEDURE name parameter_profile
108.0: proper_body <= package_body ; (1 => Other_Left)
108.1: proper_body <= subprogram_body ; (1 => Other_Left)
109.0: range_g <= simple_expression DOT_DOT simple_expression ; (1 => Other_Left, 3 => Other_Right)
110.0: range_list <= range_list COMMA range_g ; (1 => Direct_Left, 3 => Other_Right)
110.1: range_list <= range_g ; (1 => Other_Left)
111.0: relation <= simple_expression relational_operator simple_expression ; (1 => Other_Left, 3 => Other_Right)
111.1: relation <= simple_expression ; (1 => Other_Left)
112.0: relational_operator <= EQUAL
112.1: relational_operator <= SLASH_EQUAL
112.2: relational_operator <= LESS
112.3: relational_operator <= LESS_EQUAL
112.4: relational_operator <= GREATER
112.5: relational_operator <= GREATER_EQUAL
113.0: selected_component <= name DOT IDENTIFIER ; (1 => Other_Left)
114.0: sequence_of_statements <= statement ; (1 => Other_Left)
114.1: sequence_of_statements <= sequence_of_statements statement ; (1 => Direct_Left, 2 => Other_Right)
114.2: sequence_of_statements <= sequence_of_statements sequence_of_statements ; (1 => Direct_Left, 2 => Direct_Right)
115.0: simple_expression <= unary_adding_operator term_binary_adding_operator_list ; (2 => Other_Right)
115.1: simple_expression <= term_binary_adding_operator_list ; (1 => Other_Left)
116.0: simple_return_statement <= RETURN expression SEMICOLON
117.0: simple_statement <= assignment_statement
117.1: simple_statement <= exit_statement
117.2: simple_statement <= procedure_call_statement
117.3: simple_statement <= simple_return_statement
118.0: statement <= simple_statement
118.1: statement <= compound_statement ; (1 => Other_Left)
118.2: statement <= pragma_g
119.0: subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ; (4 => Other, 6 => Other)
119.1: subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ; (3 => Other, 5 => Other)
120.0: subprogram_body_stub <= subprogram_specification IS SEPARATE SEMICOLON
121.0: subprogram_declaration <= subprogram_specification SEMICOLON
122.0: subprogram_specification <= procedure_specification
122.1: subprogram_specification <= function_specification
123.0: subtype_indication <= name constraint ; (2 => Other_Right)
123.1: subtype_indication <= name
124.0: term <= factor ; (1 => Other_Left)
124.1: term <= term multiplying_operator factor ; (1 => Direct_Left, 3 => Other_Right)
124.2: term <= term multiplying_operator term ; (1 => Direct_Left, 3 => Direct_Right)
125.0: type_declaration <= full_type_declaration
126.0: type_definition <= enumeration_type_definition
127.0: unary_adding_operator <= PLUS
127.1: unary_adding_operator <= MINUS
128.0: case_statement_alternative_list <= case_statement_alternative ; (1 => Other_Left)
128.1: case_statement_alternative_list <= case_statement_alternative_list case_statement_alternative ; (1 => Direct_Left, 2 => Other_Right)
128.2: case_statement_alternative_list <= case_statement_alternative_list case_statement_alternative_list ; (1 => Direct_Left, 2 => Direct_Right)
129.0: declaration_list <= declaration ; (1 => Other_Left)
129.1: declaration_list <= declaration_list declaration ; (1 => Direct_Left, 2 => Other_Right)
129.2: declaration_list <= declaration_list declaration_list ; (1 => Direct_Left, 2 => Direct_Right)
130.0: IDENTIFIER_COMMA_list <= IDENTIFIER
130.1: IDENTIFIER_COMMA_list <= IDENTIFIER_COMMA_list COMMA IDENTIFIER ; (1 => Direct_Left)
130.2: IDENTIFIER_COMMA_list <= IDENTIFIER_COMMA_list COMMA IDENTIFIER_COMMA_list ; (1 => Direct_Left, 3 => Direct_Right)
131.0: AND_relation_list <= AND relation ; (2 => Other_Right)
131.1: AND_relation_list <= AND_relation_list AND relation ; (1 => Direct_Left, 3 => Other_Right)
131.2: AND_relation_list <= AND_relation_list AND_relation_list ; (1 => Direct_Left, 2 => Direct_Right)
132.0: OR_relation_list <= OR relation ; (2 => Other_Right)
132.1: OR_relation_list <= OR_relation_list OR relation ; (1 => Direct_Left, 3 => Other_Right)
132.2: OR_relation_list <= OR_relation_list OR_relation_list ; (1 => Direct_Left, 2 => Direct_Right)
133.0: XOR_relation_list <= XOR relation ; (2 => Other_Right)
133.1: XOR_relation_list <= XOR_relation_list XOR relation ; (1 => Direct_Left, 3 => Other_Right)
133.2: XOR_relation_list <= XOR_relation_list XOR_relation_list ; (1 => Direct_Left, 2 => Direct_Right)
134.0: parameter_specification_SEMICOLON_list <= parameter_specification
134.1: parameter_specification_SEMICOLON_list <= parameter_specification_SEMICOLON_list SEMICOLON parameter_specification ; (1 => Direct_Left)
134.2: parameter_specification_SEMICOLON_list <= parameter_specification_SEMICOLON_list SEMICOLON parameter_specification_SEMICOLON_list ; (1 => Direct_Left, 3 => Direct_Right)
135.0: exception_handler_list <= exception_handler ; (1 => Other_Left)
135.1: exception_handler_list <= exception_handler_list exception_handler ; (1 => Direct_Left, 2 => Other_Right)
135.2: exception_handler_list <= exception_handler_list exception_handler_list ; (1 => Direct_Left, 2 => Direct_Right)
136.0: ELSIF_expression_list <= ELSIF expression THEN sequence_of_statements ; (4 => Other_Right)
136.1: ELSIF_expression_list <= ELSIF_expression_list ELSIF expression THEN sequence_of_statements ; (1 => Direct_Left, 5 => Other_Right)
136.2: ELSIF_expression_list <= ELSIF_expression_list ELSIF_expression_list ; (1 => Direct_Left, 2 => Direct_Right)
137.0: term_binary_adding_operator_list <= term ; (1 => Other_Left)
137.1: term_binary_adding_operator_list <= term_binary_adding_operator_list binary_adding_operator term ; (1 => Direct_Left, 3 => Other_Right)
137.2: term_binary_adding_operator_list <= term_binary_adding_operator_list binary_adding_operator term_binary_adding_operator_list ; (1 => Direct_Left, 3 => Direct_Right)

Optimized_Lists:
 association_list sequence_of_statements term case_statement_alternative_list declaration_list IDENTIFIER_COMMA_list AND_relation_list OR_relation_list XOR_relation_list parameter_specification_SEMICOLON_list exception_handler_list ELSIF_expression_list term_binary_adding_operator_list

Recursions:
1 => (58 (0.2) -> 62 (0.1, 1.3) -> 61 (0.3, 1.1) -> 81 (0.1, 1.1, 2.1, 3.1) -> 111 (0.1, 0.3, 1.1) -> 115 (0.2, 1.1) -> 137 (0.1, 1.3) -> 124 (0.1, 1.3) -> 84 (0.1, 1.2) -> 105 (2.1) -> 96 (1.2) -> )
2 => (58 (0.2) -> 62 (0.1, 1.3) -> 61 (0.3, 1.1) -> 81 (1.2) -> 131 (0.2, 1.3) -> 111 (0.1, 0.3, 1.1) -> 115 (0.2, 1.1) -> 137 (0.1, 1.3) -> 124 (0.1, 1.3) -> 84 (0.1, 1.2) -> 105 (2.1) -> 96 (1.2) -> )
3 => (58 (0.2) -> 62 (0.1, 1.3) -> 61 (0.3, 1.1) -> 81 (2.2) -> 132 (0.2, 1.3) -> 111 (0.1, 0.3, 1.1) -> 115 (0.2, 1.1) -> 137 (0.1, 1.3) -> 124 (0.1, 1.3) -> 84 (0.1, 1.2) -> 105 (2.1) -> 96 (1.2) -> )
4 => (58 (0.2) -> 62 (0.1, 1.3) -> 61 (0.3, 1.1) -> 81 (3.2) -> 133 (0.2, 1.3) -> 111 (0.1, 0.3, 1.1) -> 115 (0.2, 1.1) -> 137 (0.1, 1.3) -> 124 (0.1, 1.3) -> 84 (0.1, 1.2) -> 105 (2.1) -> 96 (1.2) -> )
5 => (62 (1.1, 2.1, 2.3) -> )
6 => (65 (0.3) -> 75 (0.1) -> 129 (0.1, 1.2) -> 74 (0.1) -> 66 (0.1) -> 108 (0.1) -> 99 (0.8, 2.7) -> 89 (0.1, 1.1, 2.1) -> 114 (0.1, 1.2) -> 118 (1.1) -> 72 (3.1) -> )
7 => (65 (0.3) -> 75 (0.1) -> 129 (0.1, 1.2) -> 74 (0.1) -> 66 (0.1) -> 108 (0.1) -> 99 (0.8, 2.7) -> 89 (0.3) -> 135 (0.1, 1.2) -> 79 (0.4) -> 114 (0.1, 1.2) -> 118 (1.1) -> 72 (3.1) -> )
8 => (65 (0.3) -> 75 (0.1) -> 129 (0.1, 1.2) -> 74 (0.1) -> 66 (0.1) -> 108 (1.1) -> 119 (0.6, 1.5) -> 89 (0.1, 1.1, 2.1) -> 114 (0.1, 1.2) -> 118 (1.1) -> 72 (3.1) -> )
9 => (65 (0.3) -> 75 (0.1) -> 129 (0.1, 1.2) -> 74 (0.1) -> 66 (0.1) -> 108 (1.1) -> 119 (0.6, 1.5) -> 89 (0.3) -> 135 (0.1, 1.2) -> 79 (0.4) -> 114 (0.1, 1.2) -> 118 (1.1) -> 72 (3.1) -> )
10 => (65 (0.5, 1.3) -> 89 (0.1, 1.1, 2.1) -> 114 (0.1, 1.2) -> 118 (1.1) -> 72 (3.1) -> )
11 => (65 (0.5, 1.3) -> 89 (0.3) -> 135 (0.1, 1.2) -> 79 (0.4) -> 114 (0.1, 1.2) -> 118 (1.1) -> 72 (3.1) -> )
12 => (66 (0.1) -> 108 (0.1) -> 99 (0.6, 1.6, 2.5, 3.5) -> 75 (0.1) -> 129 (0.1, 1.2) -> 74 (0.1) -> )
13 => (66 (0.1) -> 108 (1.1) -> 119 (0.4, 1.3) -> 75 (0.1) -> 129 (0.1, 1.2) -> 74 (0.1) -> )
14 => (68 (0.4) -> 128 (0.1, 1.2) -> 69 (0.4) -> 114 (0.1, 1.2) -> 118 (1.1) -> 72 (1.1) -> )
15 => (71 (1.1) -> )
16 => (72 (0.1) -> 91 (0.4, 0.7, 1.4, 2.4, 2.6, 3.4) -> 114 (0.1, 1.2) -> 118 (1.1) -> )
17 => (72 (0.1) -> 91 (0.5, 1.5) -> 136 (0.4, 1.5) -> 114 (0.1, 1.2) -> 118 (1.1) -> )
18 => (72 (2.1) -> 94 (0.3, 1.2) -> 114 (0.1, 1.2) -> 118 (1.1) -> )
19 => (73 (1.1) -> 92 (0.2) -> 76 (0.1) -> 123 (0.2) -> )
20 => (81 (0.1, 1.1, 2.1, 3.1) -> 111 (0.1, 0.3, 1.1) -> 115 (0.2, 1.1) -> 137 (0.1, 1.3) -> 124 (0.1, 1.3) -> 84 (0.1, 1.2) -> 105 (3.1) -> 103 (0.2) -> )
21 => (81 (1.2) -> 131 (0.2, 1.3) -> 111 (0.1, 0.3, 1.1) -> 115 (0.2, 1.1) -> 137 (0.1, 1.3) -> 124 (0.1, 1.3) -> 84 (0.1, 1.2) -> 105 (3.1) -> 103 (0.2) -> )
22 => (81 (2.2) -> 132 (0.2, 1.3) -> 111 (0.1, 0.3, 1.1) -> 115 (0.2, 1.1) -> 137 (0.1, 1.3) -> 124 (0.1, 1.3) -> 84 (0.1, 1.2) -> 105 (3.1) -> 103 (0.2) -> )
23 => (81 (3.2) -> 133 (0.2, 1.3) -> 111 (0.1, 0.3, 1.1) -> 115 (0.2, 1.1) -> 137 (0.1, 1.3) -> 124 (0.1, 1.3) -> 84 (0.1, 1.2) -> 105 (3.1) -> 103 (0.2) -> )
24 => (84 (0.1, 1.2) -> 105 (2.1) -> 96 (0.3) -> 110 (0.3, 1.1) -> 109 (0.1, 0.3) -> 115 (0.2, 1.1) -> 137 (0.1, 1.3) -> 124 (0.1, 1.3) -> )
25 => (96 (0.1, 1.1) -> )
26 => (96 (3.1) -> 113 (0.1) -> )
27 => (110 (0.1) -> )
28 => (114 (1.1, 2.1, 2.2) -> )
29 => (124 (1.1, 2.1, 2.3) -> )
30 => (128 (1.1, 2.1, 2.2) -> )
31 => (129 (1.1, 2.1, 2.2) -> )
32 => (130 (1.1, 2.1, 2.3) -> )
33 => (131 (1.1, 2.1, 2.2) -> )
34 => (132 (1.1, 2.1, 2.2) -> )
35 => (133 (1.1, 2.1, 2.2) -> )
36 => (134 (1.1, 2.1, 2.3) -> )
37 => (135 (1.1, 2.1, 2.2) -> )
38 => (136 (1.1, 2.1, 2.2) -> )
39 => (137 (1.1, 2.1, 2.3) -> )

McKenzie:
(Insert =>
 PRAGMA          => 4,
 AND             => 4,
 BEGIN           => 3,
 BODY            => 4,
 CASE            => 3,
 DECLARE         => 3,
 ELSE            => 3,
 ELSIF           => 3,
 END             => 1,
 EXIT            => 1,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 3,
 IF              => 2,
 IN              => 4,
 IS              => 3,
 LEFT_PAREN      => 4,
 LOOP            => 2,
 NEW             => 3,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 3,
 RANGE           => 4,
 RETURN          => 3,
 RIGHT_PAREN     => 3,
 SEPARATE        => 4,
 THEN            => 3,
 TYPE            => 4,
 WHEN            => 3,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 1,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 4,
 IDENTIFIER      => 3,
 NUMERIC_LITERAL => 4,
 Wisi_EOI        => 4)
(Delete =>
 PRAGMA          => 4,
 AND             => 4,
 BEGIN           => 1,
 BODY            => 4,
 CASE            => 4,
 DECLARE         => 4,
 ELSE            => 4,
 ELSIF           => 4,
 END             => 1,
 EXIT            => 4,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 4,
 IF              => 4,
 IN              => 4,
 IS              => 4,
 LEFT_PAREN      => 4,
 LOOP            => 4,
 NEW             => 4,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 4,
 RANGE           => 4,
 RETURN          => 4,
 RIGHT_PAREN     => 4,
 SEPARATE        => 4,
 THEN            => 4,
 TYPE            => 4,
 WHEN            => 4,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 2,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 2,
 IDENTIFIER      => 4,
 NUMERIC_LITERAL => 4,
 Wisi_EOI        => 4)
(Push_Back =>
 PRAGMA          => 4,
 AND             => 4,
 BEGIN           => 1,
 BODY            => 4,
 CASE            => 4,
 DECLARE         => 4,
 ELSE            => 4,
 ELSIF           => 4,
 END             => 1,
 EXIT            => 4,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 4,
 IF              => 4,
 IN              => 4,
 IS              => 4,
 LEFT_PAREN      => 4,
 LOOP            => 4,
 NEW             => 4,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 4,
 RANGE           => 4,
 RETURN          => 4,
 RIGHT_PAREN     => 4,
 SEPARATE        => 4,
 THEN            => 4,
 TYPE            => 4,
 WHEN            => 4,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 4,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 4,
 IDENTIFIER      => 4,
 NUMERIC_LITERAL => 4,
 Wisi_EOI        => 4,
 wisitoken_accept                       => 4,
 actual_parameter_part                  => 4,
 aspect_specification                   => 4,
 assignment_statement                   => 4,
 association                            => 4,
 association_list                       => 4,
 binary_adding_operator                 => 4,
 block_label_opt                        => 4,
 block_statement                        => 4,
 body_g                                 => 4,
 body_stub                              => 4,
 case_statement                         => 4,
 case_statement_alternative             => 4,
 compilation_unit                       => 4,
 compilation_unit_list                  => 4,
 compound_statement                     => 4,
 constraint                             => 4,
 declaration                            => 4,
 declarative_part                       => 1,
 discrete_subtype_definition            => 4,
 enumeration_type_definition            => 4,
 exception_choice                       => 4,
 exception_handler                      => 4,
 exit_statement                         => 4,
 expression                             => 4,
 extended_return_object_declaration     => 4,
 extended_return_statement              => 4,
 factor                                 => 4,
 formal_part                            => 4,
 full_type_declaration                  => 4,
 function_specification                 => 4,
 generic_instantiation                  => 4,
 handled_sequence_of_statements         => 4,
 identifier_opt                         => 4,
 if_statement                           => 4,
 index_constraint                       => 4,
 iteration_scheme                       => 4,
 loop_statement                         => 4,
 multiplying_operator                   => 4,
 name                                   => 4,
 name_opt                               => 4,
 object_declaration                     => 4,
 package_body                           => 4,
 parameter_and_result_profile           => 4,
 parameter_profile                      => 4,
 parameter_specification                => 4,
 paren_expression                       => 4,
 pragma_g                               => 4,
 primary                                => 4,
 procedure_call_statement               => 4,
 procedure_specification                => 4,
 proper_body                            => 4,
 range_g                                => 4,
 range_list                             => 4,
 relation                               => 4,
 relational_operator                    => 4,
 selected_component                     => 4,
 sequence_of_statements                 => 4,
 simple_expression                      => 4,
 simple_return_statement                => 4,
 simple_statement                       => 4,
 statement                              => 4,
 subprogram_body                        => 4,
 subprogram_body_stub                   => 4,
 subprogram_declaration                 => 4,
 subprogram_specification               => 4,
 subtype_indication                     => 4,
 term                                   => 4,
 type_declaration                       => 4,
 type_definition                        => 4,
 unary_adding_operator                  => 4,
 case_statement_alternative_list        => 4,
 declaration_list                       => 4,
 IDENTIFIER_COMMA_list                  => 4,
 AND_relation_list                      => 4,
 OR_relation_list                       => 4,
 XOR_relation_list                      => 4,
 parameter_specification_SEMICOLON_list => 4,
 exception_handler_list                 => 4,
 ELSIF_expression_list                  => 4,
 term_binary_adding_operator_list       => 4)
(Undo_Reduce =>
 wisitoken_accept                       => 4,
 actual_parameter_part                  => 4,
 aspect_specification                   => 4,
 assignment_statement                   => 4,
 association                            => 4,
 association_list                       => 4,
 binary_adding_operator                 => 4,
 block_label_opt                        => 4,
 block_statement                        => 4,
 body_g                                 => 4,
 body_stub                              => 4,
 case_statement                         => 4,
 case_statement_alternative             => 4,
 compilation_unit                       => 4,
 compilation_unit_list                  => 4,
 compound_statement                     => 4,
 constraint                             => 4,
 declaration                            => 4,
 declarative_part                       => 4,
 discrete_subtype_definition            => 4,
 enumeration_type_definition            => 4,
 exception_choice                       => 4,
 exception_handler                      => 4,
 exit_statement                         => 4,
 expression                             => 4,
 extended_return_object_declaration     => 4,
 extended_return_statement              => 4,
 factor                                 => 4,
 formal_part                            => 4,
 full_type_declaration                  => 4,
 function_specification                 => 4,
 generic_instantiation                  => 4,
 handled_sequence_of_statements         => 4,
 identifier_opt                         => 4,
 if_statement                           => 4,
 index_constraint                       => 4,
 iteration_scheme                       => 4,
 loop_statement                         => 4,
 multiplying_operator                   => 4,
 name                                   => 4,
 name_opt                               => 4,
 object_declaration                     => 4,
 package_body                           => 4,
 parameter_and_result_profile           => 4,
 parameter_profile                      => 4,
 parameter_specification                => 4,
 paren_expression                       => 4,
 pragma_g                               => 4,
 primary                                => 4,
 procedure_call_statement               => 4,
 procedure_specification                => 4,
 proper_body                            => 4,
 range_g                                => 4,
 range_list                             => 4,
 relation                               => 4,
 relational_operator                    => 4,
 selected_component                     => 4,
 sequence_of_statements                 => 4,
 simple_expression                      => 4,
 simple_return_statement                => 4,
 simple_statement                       => 4,
 statement                              => 4,
 subprogram_body                        => 4,
 subprogram_body_stub                   => 4,
 subprogram_declaration                 => 4,
 subprogram_specification               => 4,
 subtype_indication                     => 4,
 term                                   => 4,
 type_declaration                       => 4,
 type_definition                        => 4,
 unary_adding_operator                  => 4,
 case_statement_alternative_list        => 4,
 declaration_list                       => 4,
 IDENTIFIER_COMMA_list                  => 4,
 AND_relation_list                      => 4,
 OR_relation_list                       => 4,
 XOR_relation_list                      => 4,
 parameter_specification_SEMICOLON_list => 4,
 exception_handler_list                 => 4,
 ELSIF_expression_list                  => 4,
 term_binary_adding_operator_list       => 4)
Minimal_Complete_Cost_Delta => -1
Fast_Forward      =>  0
Matching_Begin    =>  0
Ignore_Check_Fail => 4
Check_Limit       => 3
Check_Delta_Limit => 2147483647
Enqueue_Limit     => 2147483647

LALR Parse Table:
State 0:
     57.0:wisitoken_accept <= ^ compilation_unit_list Wisi_EOI

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   FUNCTION                               => shift and goto state 5 87.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   PACKAGE                                => shift and goto state 8 88.0
   PROCEDURE                              => shift and goto state 9 88.1
   RETURN                                 => shift and goto state 10 83.0
   TYPE                                   => shift and goto state 11 86.0
   IDENTIFIER                             => shift and goto state 12 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   body_g                                 goto state 16
   body_stub                              goto state 17
   case_statement                         goto state 18
   compilation_unit                       goto state 19
   compilation_unit_list                  goto state 20
   compound_statement                     goto state 21
   declaration                            goto state 22
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   full_type_declaration                  goto state 25
   function_specification                 goto state 26
   generic_instantiation                  goto state 27
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   object_declaration                     goto state 32
   package_body                           goto state 33
   pragma_g                               goto state 34
   procedure_call_statement               goto state 35
   procedure_specification                goto state 36
   proper_body                            goto state 37
   selected_component                     goto state 38
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 41
   subprogram_body                        goto state 42
   subprogram_body_stub                   goto state 43
   subprogram_declaration                 goto state 44
   subprogram_specification               goto state 45
   type_declaration                       goto state 46

   Minimal_Complete_Actions => 

State 1:
    104.0:pragma_g <= PRAGMA ^ IDENTIFIER actual_parameter_part SEMICOLON

   IDENTIFIER                             => shift and goto state 47 104.0
   default                                => ERROR

   Minimal_Complete_Actions => (IDENTIFIER 104.0)

State 2:
     68.0:case_statement <= CASE ^ expression IS case_statement_alternative_list END CASE SEMICOLON

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   expression                             goto state 55
   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 3:
     80.0:exit_statement <= EXIT ^ IDENTIFIER WHEN expression SEMICOLON
     80.1:exit_statement <= EXIT ^ IDENTIFIER SEMICOLON
     80.2:exit_statement <= EXIT ^ WHEN expression SEMICOLON
     80.3:exit_statement <= EXIT ^ SEMICOLON

   WHEN                                   => shift and goto state 65 80.2
   SEMICOLON                              => shift and goto state 66 80.3
   IDENTIFIER                             => shift and goto state 67 80.0
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 80.3)

State 4:
     93.0:iteration_scheme <= FOR ^ IDENTIFIER IN discrete_subtype_definition

   IDENTIFIER                             => shift and goto state 68 93.0
   default                                => ERROR

   Minimal_Complete_Actions => (IDENTIFIER 93.0)

State 5:
     87.0:function_specification <= FUNCTION ^ name parameter_and_result_profile

   IDENTIFIER                             => shift and goto state 53 96.2
   default                                => ERROR

   name                                   goto state 69
   selected_component                     goto state 38

   Minimal_Complete_Actions => (IDENTIFIER 96.2)

State 6:
     91.0:if_statement <= IF ^ expression THEN sequence_of_statements ELSIF_expression_list ELSE sequence_of_statements END IF SEMICOLON
     91.1:if_statement <= IF ^ expression THEN sequence_of_statements ELSIF_expression_list END IF SEMICOLON
     91.2:if_statement <= IF ^ expression THEN sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON
     91.3:if_statement <= IF ^ expression THEN sequence_of_statements END IF SEMICOLON

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   expression                             goto state 70
   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 7:
     94.1:loop_statement <= LOOP ^ sequence_of_statements END LOOP identifier_opt SEMICOLON

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 73
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 74

   Minimal_Complete_Actions => (EXIT 80.0)

State 8:
     88.0:generic_instantiation <= PACKAGE ^ name IS NEW name SEMICOLON
     99.0:package_body <= PACKAGE ^ BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     99.1:package_body <= PACKAGE ^ BODY name aspect_specification IS declarative_part END name_opt SEMICOLON
     99.2:package_body <= PACKAGE ^ BODY name IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     99.3:package_body <= PACKAGE ^ BODY name IS declarative_part END name_opt SEMICOLON

   BODY                                   => shift and goto state 75 99.0
   IDENTIFIER                             => shift and goto state 53 96.2
   default                                => ERROR

   name                                   goto state 76
   selected_component                     goto state 38

   Minimal_Complete_Actions => ((IDENTIFIER 96.2), (BODY 99.0))

State 9:
     88.1:generic_instantiation <= PROCEDURE ^ name IS NEW name SEMICOLON
    107.0:procedure_specification <= PROCEDURE ^ name parameter_profile

   IDENTIFIER                             => shift and goto state 53 96.2
   default                                => ERROR

   name                                   goto state 77
   selected_component                     goto state 38

   Minimal_Complete_Actions => (IDENTIFIER 96.2)

State 10:
     83.0:extended_return_statement <= RETURN ^ extended_return_object_declaration SEMICOLON
    116.0:simple_return_statement <= RETURN ^ expression SEMICOLON

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 78 82.0
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   expression                             goto state 79
   extended_return_object_declaration     goto state 80
   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 11:
     86.0:full_type_declaration <= TYPE ^ IDENTIFIER IS type_definition SEMICOLON

   IDENTIFIER                             => shift and goto state 81 86.0
   default                                => ERROR

   Minimal_Complete_Actions => (IDENTIFIER 86.0)

State 12:
     64.0:block_label_opt <= IDENTIFIER ^ COLON
     96.2:name <= IDENTIFIER ^
     98.0:object_declaration <= IDENTIFIER ^ COLON subtype_indication COLON_EQUAL expression SEMICOLON
     98.1:object_declaration <= IDENTIFIER ^ COLON subtype_indication SEMICOLON

   LEFT_PAREN                             => reduce 1 tokens to name 96.2
   COLON                                  => shift and goto state 82 64.0
   COLON_EQUAL                            => reduce 1 tokens to name 96.2
   DOT                                    => reduce 1 tokens to name 96.2
   SEMICOLON                              => reduce 1 tokens to name 96.2
   default                                => ERROR

   Minimal_Complete_Actions => ((COLON 64.0), (1 name 96.2))

State 13:
    117.0:simple_statement <= assignment_statement ^

   PRAGMA                                 => reduce 1 tokens to simple_statement 117.0
   BEGIN                                  => reduce 1 tokens to simple_statement 117.0
   CASE                                   => reduce 1 tokens to simple_statement 117.0
   DECLARE                                => reduce 1 tokens to simple_statement 117.0
   ELSE                                   => reduce 1 tokens to simple_statement 117.0
   ELSIF                                  => reduce 1 tokens to simple_statement 117.0
   END                                    => reduce 1 tokens to simple_statement 117.0
   EXIT                                   => reduce 1 tokens to simple_statement 117.0
   EXCEPTION                              => reduce 1 tokens to simple_statement 117.0
   FOR                                    => reduce 1 tokens to simple_statement 117.0
   FUNCTION                               => reduce 1 tokens to simple_statement 117.0
   IF                                     => reduce 1 tokens to simple_statement 117.0
   LOOP                                   => reduce 1 tokens to simple_statement 117.0
   PACKAGE                                => reduce 1 tokens to simple_statement 117.0
   PROCEDURE                              => reduce 1 tokens to simple_statement 117.0
   RETURN                                 => reduce 1 tokens to simple_statement 117.0
   TYPE                                   => reduce 1 tokens to simple_statement 117.0
   WHEN                                   => reduce 1 tokens to simple_statement 117.0
   IDENTIFIER                             => reduce 1 tokens to simple_statement 117.0
   Wisi_EOI                               => reduce 1 tokens to simple_statement 117.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 simple_statement 117.0)

State 14:
     65.0:block_statement <= block_label_opt ^ DECLARE declarative_part BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON
     65.1:block_statement <= block_label_opt ^ BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON

   BEGIN                                  => shift and goto state 83 65.1
   DECLARE                                => shift and goto state 84 65.0
   default                                => ERROR

   Minimal_Complete_Actions => (BEGIN 65.1)

State 15:
     72.3:compound_statement <= block_statement ^

   PRAGMA                                 => reduce 1 tokens to compound_statement 72.3
   BEGIN                                  => reduce 1 tokens to compound_statement 72.3
   CASE                                   => reduce 1 tokens to compound_statement 72.3
   DECLARE                                => reduce 1 tokens to compound_statement 72.3
   ELSE                                   => reduce 1 tokens to compound_statement 72.3
   ELSIF                                  => reduce 1 tokens to compound_statement 72.3
   END                                    => reduce 1 tokens to compound_statement 72.3
   EXIT                                   => reduce 1 tokens to compound_statement 72.3
   EXCEPTION                              => reduce 1 tokens to compound_statement 72.3
   FOR                                    => reduce 1 tokens to compound_statement 72.3
   FUNCTION                               => reduce 1 tokens to compound_statement 72.3
   IF                                     => reduce 1 tokens to compound_statement 72.3
   LOOP                                   => reduce 1 tokens to compound_statement 72.3
   PACKAGE                                => reduce 1 tokens to compound_statement 72.3
   PROCEDURE                              => reduce 1 tokens to compound_statement 72.3
   RETURN                                 => reduce 1 tokens to compound_statement 72.3
   TYPE                                   => reduce 1 tokens to compound_statement 72.3
   WHEN                                   => reduce 1 tokens to compound_statement 72.3
   IDENTIFIER                             => reduce 1 tokens to compound_statement 72.3
   Wisi_EOI                               => reduce 1 tokens to compound_statement 72.3
   default                                => ERROR

   Minimal_Complete_Actions => (1 compound_statement 72.3)

State 16:
     74.0:declaration <= body_g ^

   PRAGMA                                 => reduce 1 tokens to declaration 74.0
   BEGIN                                  => reduce 1 tokens to declaration 74.0
   CASE                                   => reduce 1 tokens to declaration 74.0
   DECLARE                                => reduce 1 tokens to declaration 74.0
   END                                    => reduce 1 tokens to declaration 74.0
   EXIT                                   => reduce 1 tokens to declaration 74.0
   FOR                                    => reduce 1 tokens to declaration 74.0
   FUNCTION                               => reduce 1 tokens to declaration 74.0
   IF                                     => reduce 1 tokens to declaration 74.0
   LOOP                                   => reduce 1 tokens to declaration 74.0
   PACKAGE                                => reduce 1 tokens to declaration 74.0
   PROCEDURE                              => reduce 1 tokens to declaration 74.0
   RETURN                                 => reduce 1 tokens to declaration 74.0
   TYPE                                   => reduce 1 tokens to declaration 74.0
   IDENTIFIER                             => reduce 1 tokens to declaration 74.0
   Wisi_EOI                               => reduce 1 tokens to declaration 74.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 declaration 74.0)

State 17:
     66.1:body_g <= body_stub ^

   PRAGMA                                 => reduce 1 tokens to body_g 66.1
   BEGIN                                  => reduce 1 tokens to body_g 66.1
   CASE                                   => reduce 1 tokens to body_g 66.1
   DECLARE                                => reduce 1 tokens to body_g 66.1
   END                                    => reduce 1 tokens to body_g 66.1
   EXIT                                   => reduce 1 tokens to body_g 66.1
   FOR                                    => reduce 1 tokens to body_g 66.1
   FUNCTION                               => reduce 1 tokens to body_g 66.1
   IF                                     => reduce 1 tokens to body_g 66.1
   LOOP                                   => reduce 1 tokens to body_g 66.1
   PACKAGE                                => reduce 1 tokens to body_g 66.1
   PROCEDURE                              => reduce 1 tokens to body_g 66.1
   RETURN                                 => reduce 1 tokens to body_g 66.1
   TYPE                                   => reduce 1 tokens to body_g 66.1
   IDENTIFIER                             => reduce 1 tokens to body_g 66.1
   Wisi_EOI                               => reduce 1 tokens to body_g 66.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 body_g 66.1)

State 18:
     72.1:compound_statement <= case_statement ^

   PRAGMA                                 => reduce 1 tokens to compound_statement 72.1
   BEGIN                                  => reduce 1 tokens to compound_statement 72.1
   CASE                                   => reduce 1 tokens to compound_statement 72.1
   DECLARE                                => reduce 1 tokens to compound_statement 72.1
   ELSE                                   => reduce 1 tokens to compound_statement 72.1
   ELSIF                                  => reduce 1 tokens to compound_statement 72.1
   END                                    => reduce 1 tokens to compound_statement 72.1
   EXIT                                   => reduce 1 tokens to compound_statement 72.1
   EXCEPTION                              => reduce 1 tokens to compound_statement 72.1
   FOR                                    => reduce 1 tokens to compound_statement 72.1
   FUNCTION                               => reduce 1 tokens to compound_statement 72.1
   IF                                     => reduce 1 tokens to compound_statement 72.1
   LOOP                                   => reduce 1 tokens to compound_statement 72.1
   PACKAGE                                => reduce 1 tokens to compound_statement 72.1
   PROCEDURE                              => reduce 1 tokens to compound_statement 72.1
   RETURN                                 => reduce 1 tokens to compound_statement 72.1
   TYPE                                   => reduce 1 tokens to compound_statement 72.1
   WHEN                                   => reduce 1 tokens to compound_statement 72.1
   IDENTIFIER                             => reduce 1 tokens to compound_statement 72.1
   Wisi_EOI                               => reduce 1 tokens to compound_statement 72.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 compound_statement 72.1)

State 19:
     71.0:compilation_unit_list <= compilation_unit ^

   PRAGMA                                 => reduce 1 tokens to compilation_unit_list 71.0
   BEGIN                                  => reduce 1 tokens to compilation_unit_list 71.0
   CASE                                   => reduce 1 tokens to compilation_unit_list 71.0
   DECLARE                                => reduce 1 tokens to compilation_unit_list 71.0
   EXIT                                   => reduce 1 tokens to compilation_unit_list 71.0
   FOR                                    => reduce 1 tokens to compilation_unit_list 71.0
   FUNCTION                               => reduce 1 tokens to compilation_unit_list 71.0
   IF                                     => reduce 1 tokens to compilation_unit_list 71.0
   LOOP                                   => reduce 1 tokens to compilation_unit_list 71.0
   PACKAGE                                => reduce 1 tokens to compilation_unit_list 71.0
   PROCEDURE                              => reduce 1 tokens to compilation_unit_list 71.0
   RETURN                                 => reduce 1 tokens to compilation_unit_list 71.0
   TYPE                                   => reduce 1 tokens to compilation_unit_list 71.0
   IDENTIFIER                             => reduce 1 tokens to compilation_unit_list 71.0
   Wisi_EOI                               => reduce 1 tokens to compilation_unit_list 71.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 compilation_unit_list 71.0)

State 20:
     57.0:wisitoken_accept <= compilation_unit_list ^ Wisi_EOI
     71.1:compilation_unit_list <= compilation_unit_list ^ compilation_unit

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   FUNCTION                               => shift and goto state 5 87.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   PACKAGE                                => shift and goto state 8 88.0
   PROCEDURE                              => shift and goto state 9 88.1
   RETURN                                 => shift and goto state 10 83.0
   TYPE                                   => shift and goto state 11 86.0
   IDENTIFIER                             => shift and goto state 12 64.0
   Wisi_EOI                               => accept it 57.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   body_g                                 goto state 16
   body_stub                              goto state 17
   case_statement                         goto state 18
   compilation_unit                       goto state 85
   compound_statement                     goto state 21
   declaration                            goto state 22
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   full_type_declaration                  goto state 25
   function_specification                 goto state 26
   generic_instantiation                  goto state 27
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   object_declaration                     goto state 32
   package_body                           goto state 33
   pragma_g                               goto state 34
   procedure_call_statement               goto state 35
   procedure_specification                goto state 36
   proper_body                            goto state 37
   selected_component                     goto state 38
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 41
   subprogram_body                        goto state 42
   subprogram_body_stub                   goto state 43
   subprogram_declaration                 goto state 44
   subprogram_specification               goto state 45
   type_declaration                       goto state 46

   Minimal_Complete_Actions => 

State 21:
    118.1:statement <= compound_statement ^

   PRAGMA                                 => reduce 1 tokens to statement 118.1
   BEGIN                                  => reduce 1 tokens to statement 118.1
   CASE                                   => reduce 1 tokens to statement 118.1
   DECLARE                                => reduce 1 tokens to statement 118.1
   ELSE                                   => reduce 1 tokens to statement 118.1
   ELSIF                                  => reduce 1 tokens to statement 118.1
   END                                    => reduce 1 tokens to statement 118.1
   EXIT                                   => reduce 1 tokens to statement 118.1
   EXCEPTION                              => reduce 1 tokens to statement 118.1
   FOR                                    => reduce 1 tokens to statement 118.1
   FUNCTION                               => reduce 1 tokens to statement 118.1
   IF                                     => reduce 1 tokens to statement 118.1
   LOOP                                   => reduce 1 tokens to statement 118.1
   PACKAGE                                => reduce 1 tokens to statement 118.1
   PROCEDURE                              => reduce 1 tokens to statement 118.1
   RETURN                                 => reduce 1 tokens to statement 118.1
   TYPE                                   => reduce 1 tokens to statement 118.1
   WHEN                                   => reduce 1 tokens to statement 118.1
   IDENTIFIER                             => reduce 1 tokens to statement 118.1
   Wisi_EOI                               => reduce 1 tokens to statement 118.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 statement 118.1)

State 22:
     70.0:compilation_unit <= declaration ^

   PRAGMA                                 => reduce 1 tokens to compilation_unit 70.0
   BEGIN                                  => reduce 1 tokens to compilation_unit 70.0
   CASE                                   => reduce 1 tokens to compilation_unit 70.0
   DECLARE                                => reduce 1 tokens to compilation_unit 70.0
   EXIT                                   => reduce 1 tokens to compilation_unit 70.0
   FOR                                    => reduce 1 tokens to compilation_unit 70.0
   FUNCTION                               => reduce 1 tokens to compilation_unit 70.0
   IF                                     => reduce 1 tokens to compilation_unit 70.0
   LOOP                                   => reduce 1 tokens to compilation_unit 70.0
   PACKAGE                                => reduce 1 tokens to compilation_unit 70.0
   PROCEDURE                              => reduce 1 tokens to compilation_unit 70.0
   RETURN                                 => reduce 1 tokens to compilation_unit 70.0
   TYPE                                   => reduce 1 tokens to compilation_unit 70.0
   IDENTIFIER                             => reduce 1 tokens to compilation_unit 70.0
   Wisi_EOI                               => reduce 1 tokens to compilation_unit 70.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 compilation_unit 70.0)

State 23:
    117.1:simple_statement <= exit_statement ^

   PRAGMA                                 => reduce 1 tokens to simple_statement 117.1
   BEGIN                                  => reduce 1 tokens to simple_statement 117.1
   CASE                                   => reduce 1 tokens to simple_statement 117.1
   DECLARE                                => reduce 1 tokens to simple_statement 117.1
   ELSE                                   => reduce 1 tokens to simple_statement 117.1
   ELSIF                                  => reduce 1 tokens to simple_statement 117.1
   END                                    => reduce 1 tokens to simple_statement 117.1
   EXIT                                   => reduce 1 tokens to simple_statement 117.1
   EXCEPTION                              => reduce 1 tokens to simple_statement 117.1
   FOR                                    => reduce 1 tokens to simple_statement 117.1
   FUNCTION                               => reduce 1 tokens to simple_statement 117.1
   IF                                     => reduce 1 tokens to simple_statement 117.1
   LOOP                                   => reduce 1 tokens to simple_statement 117.1
   PACKAGE                                => reduce 1 tokens to simple_statement 117.1
   PROCEDURE                              => reduce 1 tokens to simple_statement 117.1
   RETURN                                 => reduce 1 tokens to simple_statement 117.1
   TYPE                                   => reduce 1 tokens to simple_statement 117.1
   WHEN                                   => reduce 1 tokens to simple_statement 117.1
   IDENTIFIER                             => reduce 1 tokens to simple_statement 117.1
   Wisi_EOI                               => reduce 1 tokens to simple_statement 117.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 simple_statement 117.1)

State 24:
     72.4:compound_statement <= extended_return_statement ^

   PRAGMA                                 => reduce 1 tokens to compound_statement 72.4
   BEGIN                                  => reduce 1 tokens to compound_statement 72.4
   CASE                                   => reduce 1 tokens to compound_statement 72.4
   DECLARE                                => reduce 1 tokens to compound_statement 72.4
   ELSE                                   => reduce 1 tokens to compound_statement 72.4
   ELSIF                                  => reduce 1 tokens to compound_statement 72.4
   END                                    => reduce 1 tokens to compound_statement 72.4
   EXIT                                   => reduce 1 tokens to compound_statement 72.4
   EXCEPTION                              => reduce 1 tokens to compound_statement 72.4
   FOR                                    => reduce 1 tokens to compound_statement 72.4
   FUNCTION                               => reduce 1 tokens to compound_statement 72.4
   IF                                     => reduce 1 tokens to compound_statement 72.4
   LOOP                                   => reduce 1 tokens to compound_statement 72.4
   PACKAGE                                => reduce 1 tokens to compound_statement 72.4
   PROCEDURE                              => reduce 1 tokens to compound_statement 72.4
   RETURN                                 => reduce 1 tokens to compound_statement 72.4
   TYPE                                   => reduce 1 tokens to compound_statement 72.4
   WHEN                                   => reduce 1 tokens to compound_statement 72.4
   IDENTIFIER                             => reduce 1 tokens to compound_statement 72.4
   Wisi_EOI                               => reduce 1 tokens to compound_statement 72.4
   default                                => ERROR

   Minimal_Complete_Actions => (1 compound_statement 72.4)

State 25:
    125.0:type_declaration <= full_type_declaration ^

   PRAGMA                                 => reduce 1 tokens to type_declaration 125.0
   BEGIN                                  => reduce 1 tokens to type_declaration 125.0
   CASE                                   => reduce 1 tokens to type_declaration 125.0
   DECLARE                                => reduce 1 tokens to type_declaration 125.0
   END                                    => reduce 1 tokens to type_declaration 125.0
   EXIT                                   => reduce 1 tokens to type_declaration 125.0
   FOR                                    => reduce 1 tokens to type_declaration 125.0
   FUNCTION                               => reduce 1 tokens to type_declaration 125.0
   IF                                     => reduce 1 tokens to type_declaration 125.0
   LOOP                                   => reduce 1 tokens to type_declaration 125.0
   PACKAGE                                => reduce 1 tokens to type_declaration 125.0
   PROCEDURE                              => reduce 1 tokens to type_declaration 125.0
   RETURN                                 => reduce 1 tokens to type_declaration 125.0
   TYPE                                   => reduce 1 tokens to type_declaration 125.0
   IDENTIFIER                             => reduce 1 tokens to type_declaration 125.0
   Wisi_EOI                               => reduce 1 tokens to type_declaration 125.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 type_declaration 125.0)

State 26:
    122.1:subprogram_specification <= function_specification ^

   IS                                     => reduce 1 tokens to subprogram_specification 122.1
   WITH                                   => reduce 1 tokens to subprogram_specification 122.1
   SEMICOLON                              => reduce 1 tokens to subprogram_specification 122.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 subprogram_specification 122.1)

State 27:
     74.1:declaration <= generic_instantiation ^

   PRAGMA                                 => reduce 1 tokens to declaration 74.1
   BEGIN                                  => reduce 1 tokens to declaration 74.1
   CASE                                   => reduce 1 tokens to declaration 74.1
   DECLARE                                => reduce 1 tokens to declaration 74.1
   END                                    => reduce 1 tokens to declaration 74.1
   EXIT                                   => reduce 1 tokens to declaration 74.1
   FOR                                    => reduce 1 tokens to declaration 74.1
   FUNCTION                               => reduce 1 tokens to declaration 74.1
   IF                                     => reduce 1 tokens to declaration 74.1
   LOOP                                   => reduce 1 tokens to declaration 74.1
   PACKAGE                                => reduce 1 tokens to declaration 74.1
   PROCEDURE                              => reduce 1 tokens to declaration 74.1
   RETURN                                 => reduce 1 tokens to declaration 74.1
   TYPE                                   => reduce 1 tokens to declaration 74.1
   IDENTIFIER                             => reduce 1 tokens to declaration 74.1
   Wisi_EOI                               => reduce 1 tokens to declaration 74.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 declaration 74.1)

State 28:
     72.0:compound_statement <= if_statement ^

   PRAGMA                                 => reduce 1 tokens to compound_statement 72.0
   BEGIN                                  => reduce 1 tokens to compound_statement 72.0
   CASE                                   => reduce 1 tokens to compound_statement 72.0
   DECLARE                                => reduce 1 tokens to compound_statement 72.0
   ELSE                                   => reduce 1 tokens to compound_statement 72.0
   ELSIF                                  => reduce 1 tokens to compound_statement 72.0
   END                                    => reduce 1 tokens to compound_statement 72.0
   EXIT                                   => reduce 1 tokens to compound_statement 72.0
   EXCEPTION                              => reduce 1 tokens to compound_statement 72.0
   FOR                                    => reduce 1 tokens to compound_statement 72.0
   FUNCTION                               => reduce 1 tokens to compound_statement 72.0
   IF                                     => reduce 1 tokens to compound_statement 72.0
   LOOP                                   => reduce 1 tokens to compound_statement 72.0
   PACKAGE                                => reduce 1 tokens to compound_statement 72.0
   PROCEDURE                              => reduce 1 tokens to compound_statement 72.0
   RETURN                                 => reduce 1 tokens to compound_statement 72.0
   TYPE                                   => reduce 1 tokens to compound_statement 72.0
   WHEN                                   => reduce 1 tokens to compound_statement 72.0
   IDENTIFIER                             => reduce 1 tokens to compound_statement 72.0
   Wisi_EOI                               => reduce 1 tokens to compound_statement 72.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 compound_statement 72.0)

State 29:
     94.0:loop_statement <= iteration_scheme ^ LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON

   LOOP                                   => shift and goto state 86 94.0
   default                                => ERROR

   Minimal_Complete_Actions => (LOOP 94.0)

State 30:
     72.2:compound_statement <= loop_statement ^

   PRAGMA                                 => reduce 1 tokens to compound_statement 72.2
   BEGIN                                  => reduce 1 tokens to compound_statement 72.2
   CASE                                   => reduce 1 tokens to compound_statement 72.2
   DECLARE                                => reduce 1 tokens to compound_statement 72.2
   ELSE                                   => reduce 1 tokens to compound_statement 72.2
   ELSIF                                  => reduce 1 tokens to compound_statement 72.2
   END                                    => reduce 1 tokens to compound_statement 72.2
   EXIT                                   => reduce 1 tokens to compound_statement 72.2
   EXCEPTION                              => reduce 1 tokens to compound_statement 72.2
   FOR                                    => reduce 1 tokens to compound_statement 72.2
   FUNCTION                               => reduce 1 tokens to compound_statement 72.2
   IF                                     => reduce 1 tokens to compound_statement 72.2
   LOOP                                   => reduce 1 tokens to compound_statement 72.2
   PACKAGE                                => reduce 1 tokens to compound_statement 72.2
   PROCEDURE                              => reduce 1 tokens to compound_statement 72.2
   RETURN                                 => reduce 1 tokens to compound_statement 72.2
   TYPE                                   => reduce 1 tokens to compound_statement 72.2
   WHEN                                   => reduce 1 tokens to compound_statement 72.2
   IDENTIFIER                             => reduce 1 tokens to compound_statement 72.2
   Wisi_EOI                               => reduce 1 tokens to compound_statement 72.2
   default                                => ERROR

   Minimal_Complete_Actions => (1 compound_statement 72.2)

State 31:
     60.0:assignment_statement <= name ^ COLON_EQUAL expression SEMICOLON
     96.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     96.1:name <= name ^ actual_parameter_part
    106.0:procedure_call_statement <= name ^ SEMICOLON
    113.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                             => shift and goto state 87 58.0
   COLON_EQUAL                            => shift and goto state 88 60.0
   DOT                                    => shift and goto state 89 113.0
   SEMICOLON                              => shift and goto state 90 106.0
   default                                => ERROR

   actual_parameter_part                  goto state 91

   Minimal_Complete_Actions => (SEMICOLON 106.0)

State 32:
     74.2:declaration <= object_declaration ^

   PRAGMA                                 => reduce 1 tokens to declaration 74.2
   BEGIN                                  => reduce 1 tokens to declaration 74.2
   CASE                                   => reduce 1 tokens to declaration 74.2
   DECLARE                                => reduce 1 tokens to declaration 74.2
   END                                    => reduce 1 tokens to declaration 74.2
   EXIT                                   => reduce 1 tokens to declaration 74.2
   FOR                                    => reduce 1 tokens to declaration 74.2
   FUNCTION                               => reduce 1 tokens to declaration 74.2
   IF                                     => reduce 1 tokens to declaration 74.2
   LOOP                                   => reduce 1 tokens to declaration 74.2
   PACKAGE                                => reduce 1 tokens to declaration 74.2
   PROCEDURE                              => reduce 1 tokens to declaration 74.2
   RETURN                                 => reduce 1 tokens to declaration 74.2
   TYPE                                   => reduce 1 tokens to declaration 74.2
   IDENTIFIER                             => reduce 1 tokens to declaration 74.2
   Wisi_EOI                               => reduce 1 tokens to declaration 74.2
   default                                => ERROR

   Minimal_Complete_Actions => (1 declaration 74.2)

State 33:
    108.0:proper_body <= package_body ^

   PRAGMA                                 => reduce 1 tokens to proper_body 108.0
   BEGIN                                  => reduce 1 tokens to proper_body 108.0
   CASE                                   => reduce 1 tokens to proper_body 108.0
   DECLARE                                => reduce 1 tokens to proper_body 108.0
   END                                    => reduce 1 tokens to proper_body 108.0
   EXIT                                   => reduce 1 tokens to proper_body 108.0
   FOR                                    => reduce 1 tokens to proper_body 108.0
   FUNCTION                               => reduce 1 tokens to proper_body 108.0
   IF                                     => reduce 1 tokens to proper_body 108.0
   LOOP                                   => reduce 1 tokens to proper_body 108.0
   PACKAGE                                => reduce 1 tokens to proper_body 108.0
   PROCEDURE                              => reduce 1 tokens to proper_body 108.0
   RETURN                                 => reduce 1 tokens to proper_body 108.0
   TYPE                                   => reduce 1 tokens to proper_body 108.0
   IDENTIFIER                             => reduce 1 tokens to proper_body 108.0
   Wisi_EOI                               => reduce 1 tokens to proper_body 108.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 proper_body 108.0)

State 34:
     74.3:declaration <= pragma_g ^
    118.2:statement <= pragma_g ^

   PRAGMA                                 => reduce 1 tokens to declaration 74.3,
                                             reduce 1 tokens to statement 118.2
   BEGIN                                  => reduce 1 tokens to statement 118.2
   CASE                                   => reduce 1 tokens to statement 118.2
   DECLARE                                => reduce 1 tokens to statement 118.2
   EXIT                                   => reduce 1 tokens to statement 118.2
   FOR                                    => reduce 1 tokens to statement 118.2
   FUNCTION                               => reduce 1 tokens to declaration 74.3
   IF                                     => reduce 1 tokens to statement 118.2
   LOOP                                   => reduce 1 tokens to statement 118.2
   PACKAGE                                => reduce 1 tokens to declaration 74.3
   PROCEDURE                              => reduce 1 tokens to declaration 74.3
   RETURN                                 => reduce 1 tokens to statement 118.2
   TYPE                                   => reduce 1 tokens to declaration 74.3
   IDENTIFIER                             => reduce 1 tokens to statement 118.2
   Wisi_EOI                               => reduce 1 tokens to statement 118.2
   default                                => ERROR

   Minimal_Complete_Actions => ((1 declaration 74.3), (1 statement 118.2))

State 35:
    117.2:simple_statement <= procedure_call_statement ^

   PRAGMA                                 => reduce 1 tokens to simple_statement 117.2
   BEGIN                                  => reduce 1 tokens to simple_statement 117.2
   CASE                                   => reduce 1 tokens to simple_statement 117.2
   DECLARE                                => reduce 1 tokens to simple_statement 117.2
   ELSE                                   => reduce 1 tokens to simple_statement 117.2
   ELSIF                                  => reduce 1 tokens to simple_statement 117.2
   END                                    => reduce 1 tokens to simple_statement 117.2
   EXIT                                   => reduce 1 tokens to simple_statement 117.2
   EXCEPTION                              => reduce 1 tokens to simple_statement 117.2
   FOR                                    => reduce 1 tokens to simple_statement 117.2
   FUNCTION                               => reduce 1 tokens to simple_statement 117.2
   IF                                     => reduce 1 tokens to simple_statement 117.2
   LOOP                                   => reduce 1 tokens to simple_statement 117.2
   PACKAGE                                => reduce 1 tokens to simple_statement 117.2
   PROCEDURE                              => reduce 1 tokens to simple_statement 117.2
   RETURN                                 => reduce 1 tokens to simple_statement 117.2
   TYPE                                   => reduce 1 tokens to simple_statement 117.2
   WHEN                                   => reduce 1 tokens to simple_statement 117.2
   IDENTIFIER                             => reduce 1 tokens to simple_statement 117.2
   Wisi_EOI                               => reduce 1 tokens to simple_statement 117.2
   default                                => ERROR

   Minimal_Complete_Actions => (1 simple_statement 117.2)

State 36:
    122.0:subprogram_specification <= procedure_specification ^

   IS                                     => reduce 1 tokens to subprogram_specification 122.0
   WITH                                   => reduce 1 tokens to subprogram_specification 122.0
   SEMICOLON                              => reduce 1 tokens to subprogram_specification 122.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 subprogram_specification 122.0)

State 37:
     66.0:body_g <= proper_body ^

   PRAGMA                                 => reduce 1 tokens to body_g 66.0
   BEGIN                                  => reduce 1 tokens to body_g 66.0
   CASE                                   => reduce 1 tokens to body_g 66.0
   DECLARE                                => reduce 1 tokens to body_g 66.0
   END                                    => reduce 1 tokens to body_g 66.0
   EXIT                                   => reduce 1 tokens to body_g 66.0
   FOR                                    => reduce 1 tokens to body_g 66.0
   FUNCTION                               => reduce 1 tokens to body_g 66.0
   IF                                     => reduce 1 tokens to body_g 66.0
   LOOP                                   => reduce 1 tokens to body_g 66.0
   PACKAGE                                => reduce 1 tokens to body_g 66.0
   PROCEDURE                              => reduce 1 tokens to body_g 66.0
   RETURN                                 => reduce 1 tokens to body_g 66.0
   TYPE                                   => reduce 1 tokens to body_g 66.0
   IDENTIFIER                             => reduce 1 tokens to body_g 66.0
   Wisi_EOI                               => reduce 1 tokens to body_g 66.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 body_g 66.0)

State 38:
     96.3:name <= selected_component ^

   AND                                    => reduce 1 tokens to name 96.3
   IS                                     => reduce 1 tokens to name 96.3
   LEFT_PAREN                             => reduce 1 tokens to name 96.3
   LOOP                                   => reduce 1 tokens to name 96.3
   OR                                     => reduce 1 tokens to name 96.3
   RANGE                                  => reduce 1 tokens to name 96.3
   RETURN                                 => reduce 1 tokens to name 96.3
   RIGHT_PAREN                            => reduce 1 tokens to name 96.3
   THEN                                   => reduce 1 tokens to name 96.3
   WITH                                   => reduce 1 tokens to name 96.3
   XOR                                    => reduce 1 tokens to name 96.3
   AMPERSAND                              => reduce 1 tokens to name 96.3
   COLON_EQUAL                            => reduce 1 tokens to name 96.3
   COMMA                                  => reduce 1 tokens to name 96.3
   DOT                                    => reduce 1 tokens to name 96.3
   DOT_DOT                                => reduce 1 tokens to name 96.3
   EQUAL                                  => reduce 1 tokens to name 96.3
   EQUAL_GREATER                          => reduce 1 tokens to name 96.3
   GREATER                                => reduce 1 tokens to name 96.3
   GREATER_EQUAL                          => reduce 1 tokens to name 96.3
   LESS                                   => reduce 1 tokens to name 96.3
   LESS_EQUAL                             => reduce 1 tokens to name 96.3
   MINUS                                  => reduce 1 tokens to name 96.3
   PLUS                                   => reduce 1 tokens to name 96.3
   SEMICOLON                              => reduce 1 tokens to name 96.3
   SLASH                                  => reduce 1 tokens to name 96.3
   SLASH_EQUAL                            => reduce 1 tokens to name 96.3
   STAR                                   => reduce 1 tokens to name 96.3
   default                                => ERROR

   Minimal_Complete_Actions => (1 name 96.3)

State 39:
    117.3:simple_statement <= simple_return_statement ^

   PRAGMA                                 => reduce 1 tokens to simple_statement 117.3
   BEGIN                                  => reduce 1 tokens to simple_statement 117.3
   CASE                                   => reduce 1 tokens to simple_statement 117.3
   DECLARE                                => reduce 1 tokens to simple_statement 117.3
   ELSE                                   => reduce 1 tokens to simple_statement 117.3
   ELSIF                                  => reduce 1 tokens to simple_statement 117.3
   END                                    => reduce 1 tokens to simple_statement 117.3
   EXIT                                   => reduce 1 tokens to simple_statement 117.3
   EXCEPTION                              => reduce 1 tokens to simple_statement 117.3
   FOR                                    => reduce 1 tokens to simple_statement 117.3
   FUNCTION                               => reduce 1 tokens to simple_statement 117.3
   IF                                     => reduce 1 tokens to simple_statement 117.3
   LOOP                                   => reduce 1 tokens to simple_statement 117.3
   PACKAGE                                => reduce 1 tokens to simple_statement 117.3
   PROCEDURE                              => reduce 1 tokens to simple_statement 117.3
   RETURN                                 => reduce 1 tokens to simple_statement 117.3
   TYPE                                   => reduce 1 tokens to simple_statement 117.3
   WHEN                                   => reduce 1 tokens to simple_statement 117.3
   IDENTIFIER                             => reduce 1 tokens to simple_statement 117.3
   Wisi_EOI                               => reduce 1 tokens to simple_statement 117.3
   default                                => ERROR

   Minimal_Complete_Actions => (1 simple_statement 117.3)

State 40:
    118.0:statement <= simple_statement ^

   PRAGMA                                 => reduce 1 tokens to statement 118.0
   BEGIN                                  => reduce 1 tokens to statement 118.0
   CASE                                   => reduce 1 tokens to statement 118.0
   DECLARE                                => reduce 1 tokens to statement 118.0
   ELSE                                   => reduce 1 tokens to statement 118.0
   ELSIF                                  => reduce 1 tokens to statement 118.0
   END                                    => reduce 1 tokens to statement 118.0
   EXIT                                   => reduce 1 tokens to statement 118.0
   EXCEPTION                              => reduce 1 tokens to statement 118.0
   FOR                                    => reduce 1 tokens to statement 118.0
   FUNCTION                               => reduce 1 tokens to statement 118.0
   IF                                     => reduce 1 tokens to statement 118.0
   LOOP                                   => reduce 1 tokens to statement 118.0
   PACKAGE                                => reduce 1 tokens to statement 118.0
   PROCEDURE                              => reduce 1 tokens to statement 118.0
   RETURN                                 => reduce 1 tokens to statement 118.0
   TYPE                                   => reduce 1 tokens to statement 118.0
   WHEN                                   => reduce 1 tokens to statement 118.0
   IDENTIFIER                             => reduce 1 tokens to statement 118.0
   Wisi_EOI                               => reduce 1 tokens to statement 118.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 statement 118.0)

State 41:
     70.1:compilation_unit <= statement ^

   PRAGMA                                 => reduce 1 tokens to compilation_unit 70.1
   BEGIN                                  => reduce 1 tokens to compilation_unit 70.1
   CASE                                   => reduce 1 tokens to compilation_unit 70.1
   DECLARE                                => reduce 1 tokens to compilation_unit 70.1
   EXIT                                   => reduce 1 tokens to compilation_unit 70.1
   FOR                                    => reduce 1 tokens to compilation_unit 70.1
   FUNCTION                               => reduce 1 tokens to compilation_unit 70.1
   IF                                     => reduce 1 tokens to compilation_unit 70.1
   LOOP                                   => reduce 1 tokens to compilation_unit 70.1
   PACKAGE                                => reduce 1 tokens to compilation_unit 70.1
   PROCEDURE                              => reduce 1 tokens to compilation_unit 70.1
   RETURN                                 => reduce 1 tokens to compilation_unit 70.1
   TYPE                                   => reduce 1 tokens to compilation_unit 70.1
   IDENTIFIER                             => reduce 1 tokens to compilation_unit 70.1
   Wisi_EOI                               => reduce 1 tokens to compilation_unit 70.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 compilation_unit 70.1)

State 42:
    108.1:proper_body <= subprogram_body ^

   PRAGMA                                 => reduce 1 tokens to proper_body 108.1
   BEGIN                                  => reduce 1 tokens to proper_body 108.1
   CASE                                   => reduce 1 tokens to proper_body 108.1
   DECLARE                                => reduce 1 tokens to proper_body 108.1
   END                                    => reduce 1 tokens to proper_body 108.1
   EXIT                                   => reduce 1 tokens to proper_body 108.1
   FOR                                    => reduce 1 tokens to proper_body 108.1
   FUNCTION                               => reduce 1 tokens to proper_body 108.1
   IF                                     => reduce 1 tokens to proper_body 108.1
   LOOP                                   => reduce 1 tokens to proper_body 108.1
   PACKAGE                                => reduce 1 tokens to proper_body 108.1
   PROCEDURE                              => reduce 1 tokens to proper_body 108.1
   RETURN                                 => reduce 1 tokens to proper_body 108.1
   TYPE                                   => reduce 1 tokens to proper_body 108.1
   IDENTIFIER                             => reduce 1 tokens to proper_body 108.1
   Wisi_EOI                               => reduce 1 tokens to proper_body 108.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 proper_body 108.1)

State 43:
     67.0:body_stub <= subprogram_body_stub ^

   PRAGMA                                 => reduce 1 tokens to body_stub 67.0
   BEGIN                                  => reduce 1 tokens to body_stub 67.0
   CASE                                   => reduce 1 tokens to body_stub 67.0
   DECLARE                                => reduce 1 tokens to body_stub 67.0
   END                                    => reduce 1 tokens to body_stub 67.0
   EXIT                                   => reduce 1 tokens to body_stub 67.0
   FOR                                    => reduce 1 tokens to body_stub 67.0
   FUNCTION                               => reduce 1 tokens to body_stub 67.0
   IF                                     => reduce 1 tokens to body_stub 67.0
   LOOP                                   => reduce 1 tokens to body_stub 67.0
   PACKAGE                                => reduce 1 tokens to body_stub 67.0
   PROCEDURE                              => reduce 1 tokens to body_stub 67.0
   RETURN                                 => reduce 1 tokens to body_stub 67.0
   TYPE                                   => reduce 1 tokens to body_stub 67.0
   IDENTIFIER                             => reduce 1 tokens to body_stub 67.0
   Wisi_EOI                               => reduce 1 tokens to body_stub 67.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 body_stub 67.0)

State 44:
     74.4:declaration <= subprogram_declaration ^

   PRAGMA                                 => reduce 1 tokens to declaration 74.4
   BEGIN                                  => reduce 1 tokens to declaration 74.4
   CASE                                   => reduce 1 tokens to declaration 74.4
   DECLARE                                => reduce 1 tokens to declaration 74.4
   END                                    => reduce 1 tokens to declaration 74.4
   EXIT                                   => reduce 1 tokens to declaration 74.4
   FOR                                    => reduce 1 tokens to declaration 74.4
   FUNCTION                               => reduce 1 tokens to declaration 74.4
   IF                                     => reduce 1 tokens to declaration 74.4
   LOOP                                   => reduce 1 tokens to declaration 74.4
   PACKAGE                                => reduce 1 tokens to declaration 74.4
   PROCEDURE                              => reduce 1 tokens to declaration 74.4
   RETURN                                 => reduce 1 tokens to declaration 74.4
   TYPE                                   => reduce 1 tokens to declaration 74.4
   IDENTIFIER                             => reduce 1 tokens to declaration 74.4
   Wisi_EOI                               => reduce 1 tokens to declaration 74.4
   default                                => ERROR

   Minimal_Complete_Actions => (1 declaration 74.4)

State 45:
    119.0:subprogram_body <= subprogram_specification ^ aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    119.1:subprogram_body <= subprogram_specification ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    120.0:subprogram_body_stub <= subprogram_specification ^ IS SEPARATE SEMICOLON
    121.0:subprogram_declaration <= subprogram_specification ^ SEMICOLON

   IS                                     => shift and goto state 92 119.1
   WITH                                   => shift and goto state 93 59.0
   SEMICOLON                              => shift and goto state 94 121.0
   default                                => ERROR

   aspect_specification                   goto state 95

   Minimal_Complete_Actions => (SEMICOLON 121.0)

State 46:
     74.5:declaration <= type_declaration ^

   PRAGMA                                 => reduce 1 tokens to declaration 74.5
   BEGIN                                  => reduce 1 tokens to declaration 74.5
   CASE                                   => reduce 1 tokens to declaration 74.5
   DECLARE                                => reduce 1 tokens to declaration 74.5
   END                                    => reduce 1 tokens to declaration 74.5
   EXIT                                   => reduce 1 tokens to declaration 74.5
   FOR                                    => reduce 1 tokens to declaration 74.5
   FUNCTION                               => reduce 1 tokens to declaration 74.5
   IF                                     => reduce 1 tokens to declaration 74.5
   LOOP                                   => reduce 1 tokens to declaration 74.5
   PACKAGE                                => reduce 1 tokens to declaration 74.5
   PROCEDURE                              => reduce 1 tokens to declaration 74.5
   RETURN                                 => reduce 1 tokens to declaration 74.5
   TYPE                                   => reduce 1 tokens to declaration 74.5
   IDENTIFIER                             => reduce 1 tokens to declaration 74.5
   Wisi_EOI                               => reduce 1 tokens to declaration 74.5
   default                                => ERROR

   Minimal_Complete_Actions => (1 declaration 74.5)

State 47:
    104.0:pragma_g <= PRAGMA IDENTIFIER ^ actual_parameter_part SEMICOLON

   LEFT_PAREN                             => shift and goto state 96 58.0
   default                                => ERROR

   actual_parameter_part                  goto state 97

   Minimal_Complete_Actions => (LEFT_PAREN 58.0)

State 48:
    103.0:paren_expression <= LEFT_PAREN ^ expression RIGHT_PAREN

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   expression                             goto state 98
   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 49:
     84.1:factor <= NOT ^ primary

   LEFT_PAREN                             => shift and goto state 48 103.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 99
   selected_component                     goto state 38

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 50:
    127.1:unary_adding_operator <= MINUS ^

   LEFT_PAREN                             => reduce 1 tokens to unary_adding_operator 127.1
   NOT                                    => reduce 1 tokens to unary_adding_operator 127.1
   STRING_LITERAL                         => reduce 1 tokens to unary_adding_operator 127.1
   IDENTIFIER                             => reduce 1 tokens to unary_adding_operator 127.1
   NUMERIC_LITERAL                        => reduce 1 tokens to unary_adding_operator 127.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 unary_adding_operator 127.1)

State 51:
    127.0:unary_adding_operator <= PLUS ^

   LEFT_PAREN                             => reduce 1 tokens to unary_adding_operator 127.0
   NOT                                    => reduce 1 tokens to unary_adding_operator 127.0
   STRING_LITERAL                         => reduce 1 tokens to unary_adding_operator 127.0
   IDENTIFIER                             => reduce 1 tokens to unary_adding_operator 127.0
   NUMERIC_LITERAL                        => reduce 1 tokens to unary_adding_operator 127.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 unary_adding_operator 127.0)

State 52:
    105.1:primary <= STRING_LITERAL ^

   AND                                    => reduce 1 tokens to primary 105.1
   IS                                     => reduce 1 tokens to primary 105.1
   LOOP                                   => reduce 1 tokens to primary 105.1
   OR                                     => reduce 1 tokens to primary 105.1
   RIGHT_PAREN                            => reduce 1 tokens to primary 105.1
   THEN                                   => reduce 1 tokens to primary 105.1
   XOR                                    => reduce 1 tokens to primary 105.1
   AMPERSAND                              => reduce 1 tokens to primary 105.1
   COLON_EQUAL                            => reduce 1 tokens to primary 105.1
   COMMA                                  => reduce 1 tokens to primary 105.1
   DOT_DOT                                => reduce 1 tokens to primary 105.1
   EQUAL                                  => reduce 1 tokens to primary 105.1
   GREATER                                => reduce 1 tokens to primary 105.1
   GREATER_EQUAL                          => reduce 1 tokens to primary 105.1
   LESS                                   => reduce 1 tokens to primary 105.1
   LESS_EQUAL                             => reduce 1 tokens to primary 105.1
   MINUS                                  => reduce 1 tokens to primary 105.1
   PLUS                                   => reduce 1 tokens to primary 105.1
   SEMICOLON                              => reduce 1 tokens to primary 105.1
   SLASH                                  => reduce 1 tokens to primary 105.1
   SLASH_EQUAL                            => reduce 1 tokens to primary 105.1
   STAR                                   => reduce 1 tokens to primary 105.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 primary 105.1)

State 53:
     96.2:name <= IDENTIFIER ^

   AND                                    => reduce 1 tokens to name 96.2
   IS                                     => reduce 1 tokens to name 96.2
   LEFT_PAREN                             => reduce 1 tokens to name 96.2
   LOOP                                   => reduce 1 tokens to name 96.2
   OR                                     => reduce 1 tokens to name 96.2
   RANGE                                  => reduce 1 tokens to name 96.2
   RETURN                                 => reduce 1 tokens to name 96.2
   RIGHT_PAREN                            => reduce 1 tokens to name 96.2
   THEN                                   => reduce 1 tokens to name 96.2
   WITH                                   => reduce 1 tokens to name 96.2
   XOR                                    => reduce 1 tokens to name 96.2
   AMPERSAND                              => reduce 1 tokens to name 96.2
   COLON_EQUAL                            => reduce 1 tokens to name 96.2
   COMMA                                  => reduce 1 tokens to name 96.2
   DOT                                    => reduce 1 tokens to name 96.2
   DOT_DOT                                => reduce 1 tokens to name 96.2
   EQUAL                                  => reduce 1 tokens to name 96.2
   EQUAL_GREATER                          => reduce 1 tokens to name 96.2
   GREATER                                => reduce 1 tokens to name 96.2
   GREATER_EQUAL                          => reduce 1 tokens to name 96.2
   LESS                                   => reduce 1 tokens to name 96.2
   LESS_EQUAL                             => reduce 1 tokens to name 96.2
   MINUS                                  => reduce 1 tokens to name 96.2
   PLUS                                   => reduce 1 tokens to name 96.2
   SEMICOLON                              => reduce 1 tokens to name 96.2
   SLASH                                  => reduce 1 tokens to name 96.2
   SLASH_EQUAL                            => reduce 1 tokens to name 96.2
   STAR                                   => reduce 1 tokens to name 96.2
   default                                => ERROR

   Minimal_Complete_Actions => (1 name 96.2)

State 54:
    105.0:primary <= NUMERIC_LITERAL ^

   AND                                    => reduce 1 tokens to primary 105.0
   IS                                     => reduce 1 tokens to primary 105.0
   LOOP                                   => reduce 1 tokens to primary 105.0
   OR                                     => reduce 1 tokens to primary 105.0
   RIGHT_PAREN                            => reduce 1 tokens to primary 105.0
   THEN                                   => reduce 1 tokens to primary 105.0
   XOR                                    => reduce 1 tokens to primary 105.0
   AMPERSAND                              => reduce 1 tokens to primary 105.0
   COLON_EQUAL                            => reduce 1 tokens to primary 105.0
   COMMA                                  => reduce 1 tokens to primary 105.0
   DOT_DOT                                => reduce 1 tokens to primary 105.0
   EQUAL                                  => reduce 1 tokens to primary 105.0
   GREATER                                => reduce 1 tokens to primary 105.0
   GREATER_EQUAL                          => reduce 1 tokens to primary 105.0
   LESS                                   => reduce 1 tokens to primary 105.0
   LESS_EQUAL                             => reduce 1 tokens to primary 105.0
   MINUS                                  => reduce 1 tokens to primary 105.0
   PLUS                                   => reduce 1 tokens to primary 105.0
   SEMICOLON                              => reduce 1 tokens to primary 105.0
   SLASH                                  => reduce 1 tokens to primary 105.0
   SLASH_EQUAL                            => reduce 1 tokens to primary 105.0
   STAR                                   => reduce 1 tokens to primary 105.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 primary 105.0)

State 55:
     68.0:case_statement <= CASE expression ^ IS case_statement_alternative_list END CASE SEMICOLON

   IS                                     => shift and goto state 100 68.0
   default                                => ERROR

   Minimal_Complete_Actions => (IS 68.0)

State 56:
    124.0:term <= factor ^

   AND                                    => reduce 1 tokens to term 124.0
   IS                                     => reduce 1 tokens to term 124.0
   LOOP                                   => reduce 1 tokens to term 124.0
   OR                                     => reduce 1 tokens to term 124.0
   RIGHT_PAREN                            => reduce 1 tokens to term 124.0
   THEN                                   => reduce 1 tokens to term 124.0
   XOR                                    => reduce 1 tokens to term 124.0
   AMPERSAND                              => reduce 1 tokens to term 124.0
   COLON_EQUAL                            => reduce 1 tokens to term 124.0
   COMMA                                  => reduce 1 tokens to term 124.0
   DOT_DOT                                => reduce 1 tokens to term 124.0
   EQUAL                                  => reduce 1 tokens to term 124.0
   GREATER                                => reduce 1 tokens to term 124.0
   GREATER_EQUAL                          => reduce 1 tokens to term 124.0
   LESS                                   => reduce 1 tokens to term 124.0
   LESS_EQUAL                             => reduce 1 tokens to term 124.0
   MINUS                                  => reduce 1 tokens to term 124.0
   PLUS                                   => reduce 1 tokens to term 124.0
   SEMICOLON                              => reduce 1 tokens to term 124.0
   SLASH                                  => reduce 1 tokens to term 124.0
   SLASH_EQUAL                            => reduce 1 tokens to term 124.0
   STAR                                   => reduce 1 tokens to term 124.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 term 124.0)

State 57:
     96.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     96.1:name <= name ^ actual_parameter_part
    105.2:primary <= name ^
    113.0:selected_component <= name ^ DOT IDENTIFIER

   AND                                    => reduce 1 tokens to primary 105.2
   IS                                     => reduce 1 tokens to primary 105.2
   LEFT_PAREN                             => shift and goto state 87 58.0
   LOOP                                   => reduce 1 tokens to primary 105.2
   OR                                     => reduce 1 tokens to primary 105.2
   RIGHT_PAREN                            => reduce 1 tokens to primary 105.2
   THEN                                   => reduce 1 tokens to primary 105.2
   XOR                                    => reduce 1 tokens to primary 105.2
   AMPERSAND                              => reduce 1 tokens to primary 105.2
   COLON_EQUAL                            => reduce 1 tokens to primary 105.2
   COMMA                                  => reduce 1 tokens to primary 105.2
   DOT                                    => shift and goto state 89 113.0
   DOT_DOT                                => reduce 1 tokens to primary 105.2
   EQUAL                                  => reduce 1 tokens to primary 105.2
   GREATER                                => reduce 1 tokens to primary 105.2
   GREATER_EQUAL                          => reduce 1 tokens to primary 105.2
   LESS                                   => reduce 1 tokens to primary 105.2
   LESS_EQUAL                             => reduce 1 tokens to primary 105.2
   MINUS                                  => reduce 1 tokens to primary 105.2
   PLUS                                   => reduce 1 tokens to primary 105.2
   SEMICOLON                              => reduce 1 tokens to primary 105.2
   SLASH                                  => reduce 1 tokens to primary 105.2
   SLASH_EQUAL                            => reduce 1 tokens to primary 105.2
   STAR                                   => reduce 1 tokens to primary 105.2
   default                                => ERROR

   actual_parameter_part                  goto state 91

   Minimal_Complete_Actions => (1 primary 105.2)

State 58:
    105.3:primary <= paren_expression ^

   AND                                    => reduce 1 tokens to primary 105.3
   IS                                     => reduce 1 tokens to primary 105.3
   LOOP                                   => reduce 1 tokens to primary 105.3
   OR                                     => reduce 1 tokens to primary 105.3
   RIGHT_PAREN                            => reduce 1 tokens to primary 105.3
   THEN                                   => reduce 1 tokens to primary 105.3
   XOR                                    => reduce 1 tokens to primary 105.3
   AMPERSAND                              => reduce 1 tokens to primary 105.3
   COLON_EQUAL                            => reduce 1 tokens to primary 105.3
   COMMA                                  => reduce 1 tokens to primary 105.3
   DOT_DOT                                => reduce 1 tokens to primary 105.3
   EQUAL                                  => reduce 1 tokens to primary 105.3
   GREATER                                => reduce 1 tokens to primary 105.3
   GREATER_EQUAL                          => reduce 1 tokens to primary 105.3
   LESS                                   => reduce 1 tokens to primary 105.3
   LESS_EQUAL                             => reduce 1 tokens to primary 105.3
   MINUS                                  => reduce 1 tokens to primary 105.3
   PLUS                                   => reduce 1 tokens to primary 105.3
   SEMICOLON                              => reduce 1 tokens to primary 105.3
   SLASH                                  => reduce 1 tokens to primary 105.3
   SLASH_EQUAL                            => reduce 1 tokens to primary 105.3
   STAR                                   => reduce 1 tokens to primary 105.3
   default                                => ERROR

   Minimal_Complete_Actions => (1 primary 105.3)

State 59:
     84.0:factor <= primary ^

   AND                                    => reduce 1 tokens to factor 84.0
   IS                                     => reduce 1 tokens to factor 84.0
   LOOP                                   => reduce 1 tokens to factor 84.0
   OR                                     => reduce 1 tokens to factor 84.0
   RIGHT_PAREN                            => reduce 1 tokens to factor 84.0
   THEN                                   => reduce 1 tokens to factor 84.0
   XOR                                    => reduce 1 tokens to factor 84.0
   AMPERSAND                              => reduce 1 tokens to factor 84.0
   COLON_EQUAL                            => reduce 1 tokens to factor 84.0
   COMMA                                  => reduce 1 tokens to factor 84.0
   DOT_DOT                                => reduce 1 tokens to factor 84.0
   EQUAL                                  => reduce 1 tokens to factor 84.0
   GREATER                                => reduce 1 tokens to factor 84.0
   GREATER_EQUAL                          => reduce 1 tokens to factor 84.0
   LESS                                   => reduce 1 tokens to factor 84.0
   LESS_EQUAL                             => reduce 1 tokens to factor 84.0
   MINUS                                  => reduce 1 tokens to factor 84.0
   PLUS                                   => reduce 1 tokens to factor 84.0
   SEMICOLON                              => reduce 1 tokens to factor 84.0
   SLASH                                  => reduce 1 tokens to factor 84.0
   SLASH_EQUAL                            => reduce 1 tokens to factor 84.0
   STAR                                   => reduce 1 tokens to factor 84.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 factor 84.0)

State 60:
     81.0:expression <= relation ^
     81.1:expression <= relation ^ AND_relation_list
     81.2:expression <= relation ^ OR_relation_list
     81.3:expression <= relation ^ XOR_relation_list

   AND                                    => shift and goto state 101 131.0
   IS                                     => reduce 1 tokens to expression 81.0
   OR                                     => shift and goto state 102 132.0
   RIGHT_PAREN                            => reduce 1 tokens to expression 81.0
   THEN                                   => reduce 1 tokens to expression 81.0
   XOR                                    => shift and goto state 103 133.0
   COMMA                                  => reduce 1 tokens to expression 81.0
   SEMICOLON                              => reduce 1 tokens to expression 81.0
   default                                => ERROR

   AND_relation_list                      goto state 104
   OR_relation_list                       goto state 105
   XOR_relation_list                      goto state 106

   Minimal_Complete_Actions => (1 expression 81.0)

State 61:
    111.0:relation <= simple_expression ^ relational_operator simple_expression
    111.1:relation <= simple_expression ^

   AND                                    => reduce 1 tokens to relation 111.1
   IS                                     => reduce 1 tokens to relation 111.1
   OR                                     => reduce 1 tokens to relation 111.1
   RIGHT_PAREN                            => reduce 1 tokens to relation 111.1
   THEN                                   => reduce 1 tokens to relation 111.1
   XOR                                    => reduce 1 tokens to relation 111.1
   COMMA                                  => reduce 1 tokens to relation 111.1
   EQUAL                                  => shift and goto state 107 112.0
   GREATER                                => shift and goto state 108 112.4
   GREATER_EQUAL                          => shift and goto state 109 112.5
   LESS                                   => shift and goto state 110 112.2
   LESS_EQUAL                             => shift and goto state 111 112.3
   SEMICOLON                              => reduce 1 tokens to relation 111.1
   SLASH_EQUAL                            => shift and goto state 112 112.1
   default                                => ERROR

   relational_operator                    goto state 113

   Minimal_Complete_Actions => (1 relation 111.1)

State 62:
    124.1:term <= term ^ multiplying_operator factor
    124.2:term <= term ^ multiplying_operator term
    137.0:term_binary_adding_operator_list <= term ^

   AND                                    => reduce 1 tokens to term_binary_adding_operator_list 137.0
   IS                                     => reduce 1 tokens to term_binary_adding_operator_list 137.0
   LOOP                                   => reduce 1 tokens to term_binary_adding_operator_list 137.0
   OR                                     => reduce 1 tokens to term_binary_adding_operator_list 137.0
   RIGHT_PAREN                            => reduce 1 tokens to term_binary_adding_operator_list 137.0
   THEN                                   => reduce 1 tokens to term_binary_adding_operator_list 137.0
   XOR                                    => reduce 1 tokens to term_binary_adding_operator_list 137.0
   AMPERSAND                              => reduce 1 tokens to term_binary_adding_operator_list 137.0
   COLON_EQUAL                            => reduce 1 tokens to term_binary_adding_operator_list 137.0
   COMMA                                  => reduce 1 tokens to term_binary_adding_operator_list 137.0
   DOT_DOT                                => reduce 1 tokens to term_binary_adding_operator_list 137.0
   EQUAL                                  => reduce 1 tokens to term_binary_adding_operator_list 137.0
   GREATER                                => reduce 1 tokens to term_binary_adding_operator_list 137.0
   GREATER_EQUAL                          => reduce 1 tokens to term_binary_adding_operator_list 137.0
   LESS                                   => reduce 1 tokens to term_binary_adding_operator_list 137.0
   LESS_EQUAL                             => reduce 1 tokens to term_binary_adding_operator_list 137.0
   MINUS                                  => reduce 1 tokens to term_binary_adding_operator_list 137.0
   PLUS                                   => reduce 1 tokens to term_binary_adding_operator_list 137.0
   SEMICOLON                              => reduce 1 tokens to term_binary_adding_operator_list 137.0
   SLASH                                  => shift and goto state 114 95.1
   SLASH_EQUAL                            => reduce 1 tokens to term_binary_adding_operator_list 137.0
   STAR                                   => shift and goto state 115 95.0
   default                                => ERROR

   multiplying_operator                   goto state 116

   Minimal_Complete_Actions => (1 term_binary_adding_operator_list 137.0)

State 63:
    115.0:simple_expression <= unary_adding_operator ^ term_binary_adding_operator_list

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   selected_component                     goto state 38
   term                                   goto state 62
   term_binary_adding_operator_list       goto state 117

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 64:
    115.1:simple_expression <= term_binary_adding_operator_list ^
    137.1:term_binary_adding_operator_list <= term_binary_adding_operator_list ^ binary_adding_operator term
    137.2:term_binary_adding_operator_list <= term_binary_adding_operator_list ^ binary_adding_operator term_binary_adding_operator_list

   AND                                    => reduce 1 tokens to simple_expression 115.1
   IS                                     => reduce 1 tokens to simple_expression 115.1
   LOOP                                   => reduce 1 tokens to simple_expression 115.1
   OR                                     => reduce 1 tokens to simple_expression 115.1
   RIGHT_PAREN                            => reduce 1 tokens to simple_expression 115.1
   THEN                                   => reduce 1 tokens to simple_expression 115.1
   XOR                                    => reduce 1 tokens to simple_expression 115.1
   AMPERSAND                              => shift and goto state 118 63.2
   COLON_EQUAL                            => reduce 1 tokens to simple_expression 115.1
   COMMA                                  => reduce 1 tokens to simple_expression 115.1
   DOT_DOT                                => reduce 1 tokens to simple_expression 115.1
   EQUAL                                  => reduce 1 tokens to simple_expression 115.1
   GREATER                                => reduce 1 tokens to simple_expression 115.1
   GREATER_EQUAL                          => reduce 1 tokens to simple_expression 115.1
   LESS                                   => reduce 1 tokens to simple_expression 115.1
   LESS_EQUAL                             => reduce 1 tokens to simple_expression 115.1
   MINUS                                  => shift and goto state 119 63.1
   PLUS                                   => shift and goto state 120 63.0
   SEMICOLON                              => reduce 1 tokens to simple_expression 115.1
   SLASH_EQUAL                            => reduce 1 tokens to simple_expression 115.1
   default                                => ERROR

   binary_adding_operator                 goto state 121

   Minimal_Complete_Actions => (1 simple_expression 115.1)

State 65:
     80.2:exit_statement <= EXIT WHEN ^ expression SEMICOLON

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   expression                             goto state 122
   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 66:
     80.3:exit_statement <= EXIT SEMICOLON ^

   PRAGMA                                 => reduce 2 tokens to exit_statement 80.3
   BEGIN                                  => reduce 2 tokens to exit_statement 80.3
   CASE                                   => reduce 2 tokens to exit_statement 80.3
   DECLARE                                => reduce 2 tokens to exit_statement 80.3
   ELSE                                   => reduce 2 tokens to exit_statement 80.3
   ELSIF                                  => reduce 2 tokens to exit_statement 80.3
   END                                    => reduce 2 tokens to exit_statement 80.3
   EXIT                                   => reduce 2 tokens to exit_statement 80.3
   EXCEPTION                              => reduce 2 tokens to exit_statement 80.3
   FOR                                    => reduce 2 tokens to exit_statement 80.3
   FUNCTION                               => reduce 2 tokens to exit_statement 80.3
   IF                                     => reduce 2 tokens to exit_statement 80.3
   LOOP                                   => reduce 2 tokens to exit_statement 80.3
   PACKAGE                                => reduce 2 tokens to exit_statement 80.3
   PROCEDURE                              => reduce 2 tokens to exit_statement 80.3
   RETURN                                 => reduce 2 tokens to exit_statement 80.3
   TYPE                                   => reduce 2 tokens to exit_statement 80.3
   WHEN                                   => reduce 2 tokens to exit_statement 80.3
   IDENTIFIER                             => reduce 2 tokens to exit_statement 80.3
   Wisi_EOI                               => reduce 2 tokens to exit_statement 80.3
   default                                => ERROR

   Minimal_Complete_Actions => (2 exit_statement 80.3)

State 67:
     80.0:exit_statement <= EXIT IDENTIFIER ^ WHEN expression SEMICOLON
     80.1:exit_statement <= EXIT IDENTIFIER ^ SEMICOLON

   WHEN                                   => shift and goto state 123 80.0
   SEMICOLON                              => shift and goto state 124 80.1
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 80.1)

State 68:
     93.0:iteration_scheme <= FOR IDENTIFIER ^ IN discrete_subtype_definition

   IN                                     => shift and goto state 125 93.0
   default                                => ERROR

   Minimal_Complete_Actions => (IN 93.0)

State 69:
     87.0:function_specification <= FUNCTION name ^ parameter_and_result_profile
     96.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     96.1:name <= name ^ actual_parameter_part
    113.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                             => shift and goto state 126 58.0
   RETURN                                 => shift and goto state 127 100.1
   DOT                                    => shift and goto state 89 113.0
   default                                => ERROR

   actual_parameter_part                  goto state 91
   formal_part                            goto state 128
   parameter_and_result_profile           goto state 129

   Minimal_Complete_Actions => (RETURN 100.1)

State 70:
     91.0:if_statement <= IF expression ^ THEN sequence_of_statements ELSIF_expression_list ELSE sequence_of_statements END IF SEMICOLON
     91.1:if_statement <= IF expression ^ THEN sequence_of_statements ELSIF_expression_list END IF SEMICOLON
     91.2:if_statement <= IF expression ^ THEN sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON
     91.3:if_statement <= IF expression ^ THEN sequence_of_statements END IF SEMICOLON

   THEN                                   => shift and goto state 130 91.0
   default                                => ERROR

   Minimal_Complete_Actions => (THEN 91.0)

State 71:
     64.0:block_label_opt <= IDENTIFIER ^ COLON
     96.2:name <= IDENTIFIER ^

   LEFT_PAREN                             => reduce 1 tokens to name 96.2
   COLON                                  => shift and goto state 131 64.0
   COLON_EQUAL                            => reduce 1 tokens to name 96.2
   DOT                                    => reduce 1 tokens to name 96.2
   SEMICOLON                              => reduce 1 tokens to name 96.2
   default                                => ERROR

   Minimal_Complete_Actions => ((COLON 64.0), (1 name 96.2))

State 72:
    118.2:statement <= pragma_g ^

   PRAGMA                                 => reduce 1 tokens to statement 118.2
   BEGIN                                  => reduce 1 tokens to statement 118.2
   CASE                                   => reduce 1 tokens to statement 118.2
   DECLARE                                => reduce 1 tokens to statement 118.2
   ELSE                                   => reduce 1 tokens to statement 118.2
   ELSIF                                  => reduce 1 tokens to statement 118.2
   END                                    => reduce 1 tokens to statement 118.2
   EXIT                                   => reduce 1 tokens to statement 118.2
   EXCEPTION                              => reduce 1 tokens to statement 118.2
   FOR                                    => reduce 1 tokens to statement 118.2
   IF                                     => reduce 1 tokens to statement 118.2
   LOOP                                   => reduce 1 tokens to statement 118.2
   RETURN                                 => reduce 1 tokens to statement 118.2
   WHEN                                   => reduce 1 tokens to statement 118.2
   IDENTIFIER                             => reduce 1 tokens to statement 118.2
   default                                => ERROR

   Minimal_Complete_Actions => (1 statement 118.2)

State 73:
     94.1:loop_statement <= LOOP sequence_of_statements ^ END LOOP identifier_opt SEMICOLON
    114.1:sequence_of_statements <= sequence_of_statements ^ statement
    114.2:sequence_of_statements <= sequence_of_statements ^ sequence_of_statements

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   END                                    => shift and goto state 132 94.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 133
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 134

   Minimal_Complete_Actions => (END 94.1)

State 74:
    114.0:sequence_of_statements <= statement ^

   PRAGMA                                 => reduce 1 tokens to sequence_of_statements 114.0
   BEGIN                                  => reduce 1 tokens to sequence_of_statements 114.0
   CASE                                   => reduce 1 tokens to sequence_of_statements 114.0
   DECLARE                                => reduce 1 tokens to sequence_of_statements 114.0
   ELSE                                   => reduce 1 tokens to sequence_of_statements 114.0
   ELSIF                                  => reduce 1 tokens to sequence_of_statements 114.0
   END                                    => reduce 1 tokens to sequence_of_statements 114.0
   EXIT                                   => reduce 1 tokens to sequence_of_statements 114.0
   EXCEPTION                              => reduce 1 tokens to sequence_of_statements 114.0
   FOR                                    => reduce 1 tokens to sequence_of_statements 114.0
   IF                                     => reduce 1 tokens to sequence_of_statements 114.0
   LOOP                                   => reduce 1 tokens to sequence_of_statements 114.0
   RETURN                                 => reduce 1 tokens to sequence_of_statements 114.0
   WHEN                                   => reduce 1 tokens to sequence_of_statements 114.0
   IDENTIFIER                             => reduce 1 tokens to sequence_of_statements 114.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 sequence_of_statements 114.0)

State 75:
     99.0:package_body <= PACKAGE BODY ^ name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     99.1:package_body <= PACKAGE BODY ^ name aspect_specification IS declarative_part END name_opt SEMICOLON
     99.2:package_body <= PACKAGE BODY ^ name IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     99.3:package_body <= PACKAGE BODY ^ name IS declarative_part END name_opt SEMICOLON

   IDENTIFIER                             => shift and goto state 53 96.2
   default                                => ERROR

   name                                   goto state 135
   selected_component                     goto state 38

   Minimal_Complete_Actions => (IDENTIFIER 96.2)

State 76:
     88.0:generic_instantiation <= PACKAGE name ^ IS NEW name SEMICOLON
     96.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     96.1:name <= name ^ actual_parameter_part
    113.0:selected_component <= name ^ DOT IDENTIFIER

   IS                                     => shift and goto state 136 88.0
   LEFT_PAREN                             => shift and goto state 87 58.0
   DOT                                    => shift and goto state 89 113.0
   default                                => ERROR

   actual_parameter_part                  goto state 91

   Minimal_Complete_Actions => (IS 88.0)

State 77:
     88.1:generic_instantiation <= PROCEDURE name ^ IS NEW name SEMICOLON
     96.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     96.1:name <= name ^ actual_parameter_part
    107.0:procedure_specification <= PROCEDURE name ^ parameter_profile
    113.0:selected_component <= name ^ DOT IDENTIFIER

   IS                                     => shift and goto state 137 88.1,
                                             reduce 0 tokens to parameter_profile 101.1
   LEFT_PAREN                             => shift and goto state 126 58.0
   WITH                                   => reduce 0 tokens to parameter_profile 101.1
   DOT                                    => shift and goto state 89 113.0
   SEMICOLON                              => reduce 0 tokens to parameter_profile 101.1
   default                                => ERROR

   actual_parameter_part                  goto state 91
   formal_part                            goto state 138
   parameter_profile                      goto state 139

   Minimal_Complete_Actions => ((IS 88.1), (0 parameter_profile 101.1))

State 78:
     82.0:extended_return_object_declaration <= IDENTIFIER ^ COLON subtype_indication
     96.2:name <= IDENTIFIER ^

   AND                                    => reduce 1 tokens to name 96.2
   LEFT_PAREN                             => reduce 1 tokens to name 96.2
   OR                                     => reduce 1 tokens to name 96.2
   XOR                                    => reduce 1 tokens to name 96.2
   AMPERSAND                              => reduce 1 tokens to name 96.2
   COLON                                  => shift and goto state 140 82.0
   DOT                                    => reduce 1 tokens to name 96.2
   EQUAL                                  => reduce 1 tokens to name 96.2
   GREATER                                => reduce 1 tokens to name 96.2
   GREATER_EQUAL                          => reduce 1 tokens to name 96.2
   LESS                                   => reduce 1 tokens to name 96.2
   LESS_EQUAL                             => reduce 1 tokens to name 96.2
   MINUS                                  => reduce 1 tokens to name 96.2
   PLUS                                   => reduce 1 tokens to name 96.2
   SEMICOLON                              => reduce 1 tokens to name 96.2
   SLASH                                  => reduce 1 tokens to name 96.2
   SLASH_EQUAL                            => reduce 1 tokens to name 96.2
   STAR                                   => reduce 1 tokens to name 96.2
   default                                => ERROR

   Minimal_Complete_Actions => ((COLON 82.0), (1 name 96.2))

State 79:
    116.0:simple_return_statement <= RETURN expression ^ SEMICOLON

   SEMICOLON                              => shift and goto state 141 116.0
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 116.0)

State 80:
     83.0:extended_return_statement <= RETURN extended_return_object_declaration ^ SEMICOLON

   SEMICOLON                              => shift and goto state 142 83.0
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 83.0)

State 81:
     86.0:full_type_declaration <= TYPE IDENTIFIER ^ IS type_definition SEMICOLON

   IS                                     => shift and goto state 143 86.0
   default                                => ERROR

   Minimal_Complete_Actions => (IS 86.0)

State 82:
     64.0:block_label_opt <= IDENTIFIER COLON ^
     98.0:object_declaration <= IDENTIFIER COLON ^ subtype_indication COLON_EQUAL expression SEMICOLON
     98.1:object_declaration <= IDENTIFIER COLON ^ subtype_indication SEMICOLON

   BEGIN                                  => reduce 2 tokens to block_label_opt 64.0
   DECLARE                                => reduce 2 tokens to block_label_opt 64.0
   IDENTIFIER                             => shift and goto state 53 96.2
   default                                => ERROR

   name                                   goto state 144
   selected_component                     goto state 38
   subtype_indication                     goto state 145

   Minimal_Complete_Actions => ((2 block_label_opt 64.0), (IDENTIFIER 96.2))

State 83:
     65.1:block_statement <= block_label_opt BEGIN ^ handled_sequence_of_statements END identifier_opt SEMICOLON

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   handled_sequence_of_statements         goto state 146
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 147
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 74

   Minimal_Complete_Actions => (EXIT 80.0)

State 84:
     65.0:block_statement <= block_label_opt DECLARE ^ declarative_part BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to declarative_part 75.1
   FUNCTION                               => shift and goto state 5 87.0
   PACKAGE                                => shift and goto state 8 88.0
   PROCEDURE                              => shift and goto state 9 88.1
   TYPE                                   => shift and goto state 11 86.0
   IDENTIFIER                             => shift and goto state 148 98.0
   default                                => ERROR

   body_g                                 goto state 16
   body_stub                              goto state 17
   declaration                            goto state 149
   declarative_part                       goto state 150
   full_type_declaration                  goto state 25
   function_specification                 goto state 26
   generic_instantiation                  goto state 27
   object_declaration                     goto state 32
   package_body                           goto state 33
   pragma_g                               goto state 151
   procedure_specification                goto state 36
   proper_body                            goto state 37
   subprogram_body                        goto state 42
   subprogram_body_stub                   goto state 43
   subprogram_declaration                 goto state 44
   subprogram_specification               goto state 45
   type_declaration                       goto state 46
   declaration_list                       goto state 152

   Minimal_Complete_Actions => (0 declarative_part 75.1)

State 85:
     71.1:compilation_unit_list <= compilation_unit_list compilation_unit ^

   PRAGMA                                 => reduce 2 tokens to compilation_unit_list 71.1
   BEGIN                                  => reduce 2 tokens to compilation_unit_list 71.1
   CASE                                   => reduce 2 tokens to compilation_unit_list 71.1
   DECLARE                                => reduce 2 tokens to compilation_unit_list 71.1
   EXIT                                   => reduce 2 tokens to compilation_unit_list 71.1
   FOR                                    => reduce 2 tokens to compilation_unit_list 71.1
   FUNCTION                               => reduce 2 tokens to compilation_unit_list 71.1
   IF                                     => reduce 2 tokens to compilation_unit_list 71.1
   LOOP                                   => reduce 2 tokens to compilation_unit_list 71.1
   PACKAGE                                => reduce 2 tokens to compilation_unit_list 71.1
   PROCEDURE                              => reduce 2 tokens to compilation_unit_list 71.1
   RETURN                                 => reduce 2 tokens to compilation_unit_list 71.1
   TYPE                                   => reduce 2 tokens to compilation_unit_list 71.1
   IDENTIFIER                             => reduce 2 tokens to compilation_unit_list 71.1
   Wisi_EOI                               => reduce 2 tokens to compilation_unit_list 71.1
   default                                => ERROR

   Minimal_Complete_Actions => (2 compilation_unit_list 71.1)

State 86:
     94.0:loop_statement <= iteration_scheme LOOP ^ sequence_of_statements END LOOP identifier_opt SEMICOLON

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 153
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 74

   Minimal_Complete_Actions => (EXIT 80.0)

State 87:
     58.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN
     96.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 154 61.0
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   association                            goto state 155
   association_list                       goto state 156
   expression                             goto state 157
   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   range_g                                goto state 158
   range_list                             goto state 159
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 160
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 88:
     60.0:assignment_statement <= name COLON_EQUAL ^ expression SEMICOLON

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   expression                             goto state 161
   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 89:
    113.0:selected_component <= name DOT ^ IDENTIFIER

   IDENTIFIER                             => shift and goto state 162 113.0
   default                                => ERROR

   Minimal_Complete_Actions => (IDENTIFIER 113.0)

State 90:
    106.0:procedure_call_statement <= name SEMICOLON ^

   PRAGMA                                 => reduce 2 tokens to procedure_call_statement 106.0
   BEGIN                                  => reduce 2 tokens to procedure_call_statement 106.0
   CASE                                   => reduce 2 tokens to procedure_call_statement 106.0
   DECLARE                                => reduce 2 tokens to procedure_call_statement 106.0
   ELSE                                   => reduce 2 tokens to procedure_call_statement 106.0
   ELSIF                                  => reduce 2 tokens to procedure_call_statement 106.0
   END                                    => reduce 2 tokens to procedure_call_statement 106.0
   EXIT                                   => reduce 2 tokens to procedure_call_statement 106.0
   EXCEPTION                              => reduce 2 tokens to procedure_call_statement 106.0
   FOR                                    => reduce 2 tokens to procedure_call_statement 106.0
   FUNCTION                               => reduce 2 tokens to procedure_call_statement 106.0
   IF                                     => reduce 2 tokens to procedure_call_statement 106.0
   LOOP                                   => reduce 2 tokens to procedure_call_statement 106.0
   PACKAGE                                => reduce 2 tokens to procedure_call_statement 106.0
   PROCEDURE                              => reduce 2 tokens to procedure_call_statement 106.0
   RETURN                                 => reduce 2 tokens to procedure_call_statement 106.0
   TYPE                                   => reduce 2 tokens to procedure_call_statement 106.0
   WHEN                                   => reduce 2 tokens to procedure_call_statement 106.0
   IDENTIFIER                             => reduce 2 tokens to procedure_call_statement 106.0
   Wisi_EOI                               => reduce 2 tokens to procedure_call_statement 106.0
   default                                => ERROR

   Minimal_Complete_Actions => (2 procedure_call_statement 106.0)

State 91:
     96.1:name <= name actual_parameter_part ^

   AND                                    => reduce 2 tokens to name 96.1
   IS                                     => reduce 2 tokens to name 96.1
   LEFT_PAREN                             => reduce 2 tokens to name 96.1
   LOOP                                   => reduce 2 tokens to name 96.1
   OR                                     => reduce 2 tokens to name 96.1
   RANGE                                  => reduce 2 tokens to name 96.1
   RETURN                                 => reduce 2 tokens to name 96.1
   RIGHT_PAREN                            => reduce 2 tokens to name 96.1
   THEN                                   => reduce 2 tokens to name 96.1
   WITH                                   => reduce 2 tokens to name 96.1
   XOR                                    => reduce 2 tokens to name 96.1
   AMPERSAND                              => reduce 2 tokens to name 96.1
   COLON_EQUAL                            => reduce 2 tokens to name 96.1
   COMMA                                  => reduce 2 tokens to name 96.1
   DOT                                    => reduce 2 tokens to name 96.1
   DOT_DOT                                => reduce 2 tokens to name 96.1
   EQUAL                                  => reduce 2 tokens to name 96.1
   EQUAL_GREATER                          => reduce 2 tokens to name 96.1
   GREATER                                => reduce 2 tokens to name 96.1
   GREATER_EQUAL                          => reduce 2 tokens to name 96.1
   LESS                                   => reduce 2 tokens to name 96.1
   LESS_EQUAL                             => reduce 2 tokens to name 96.1
   MINUS                                  => reduce 2 tokens to name 96.1
   PLUS                                   => reduce 2 tokens to name 96.1
   SEMICOLON                              => reduce 2 tokens to name 96.1
   SLASH                                  => reduce 2 tokens to name 96.1
   SLASH_EQUAL                            => reduce 2 tokens to name 96.1
   STAR                                   => reduce 2 tokens to name 96.1
   default                                => ERROR

   Minimal_Complete_Actions => (2 name 96.1)

State 92:
    119.1:subprogram_body <= subprogram_specification IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
    120.0:subprogram_body_stub <= subprogram_specification IS ^ SEPARATE SEMICOLON

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to declarative_part 75.1
   FUNCTION                               => shift and goto state 5 87.0
   PACKAGE                                => shift and goto state 8 88.0
   PROCEDURE                              => shift and goto state 9 88.1
   SEPARATE                               => shift and goto state 163 120.0
   TYPE                                   => shift and goto state 11 86.0
   IDENTIFIER                             => shift and goto state 148 98.0
   default                                => ERROR

   body_g                                 goto state 16
   body_stub                              goto state 17
   declaration                            goto state 149
   declarative_part                       goto state 164
   full_type_declaration                  goto state 25
   function_specification                 goto state 26
   generic_instantiation                  goto state 27
   object_declaration                     goto state 32
   package_body                           goto state 33
   pragma_g                               goto state 151
   procedure_specification                goto state 36
   proper_body                            goto state 37
   subprogram_body                        goto state 42
   subprogram_body_stub                   goto state 43
   subprogram_declaration                 goto state 44
   subprogram_specification               goto state 45
   type_declaration                       goto state 46
   declaration_list                       goto state 152

   Minimal_Complete_Actions => (SEPARATE 120.0)

State 93:
     59.0:aspect_specification <= WITH ^ association_list

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 154 61.0
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   association                            goto state 155
   association_list                       goto state 165
   expression                             goto state 157
   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 94:
    121.0:subprogram_declaration <= subprogram_specification SEMICOLON ^

   PRAGMA                                 => reduce 2 tokens to subprogram_declaration 121.0
   BEGIN                                  => reduce 2 tokens to subprogram_declaration 121.0
   CASE                                   => reduce 2 tokens to subprogram_declaration 121.0
   DECLARE                                => reduce 2 tokens to subprogram_declaration 121.0
   END                                    => reduce 2 tokens to subprogram_declaration 121.0
   EXIT                                   => reduce 2 tokens to subprogram_declaration 121.0
   FOR                                    => reduce 2 tokens to subprogram_declaration 121.0
   FUNCTION                               => reduce 2 tokens to subprogram_declaration 121.0
   IF                                     => reduce 2 tokens to subprogram_declaration 121.0
   LOOP                                   => reduce 2 tokens to subprogram_declaration 121.0
   PACKAGE                                => reduce 2 tokens to subprogram_declaration 121.0
   PROCEDURE                              => reduce 2 tokens to subprogram_declaration 121.0
   RETURN                                 => reduce 2 tokens to subprogram_declaration 121.0
   TYPE                                   => reduce 2 tokens to subprogram_declaration 121.0
   IDENTIFIER                             => reduce 2 tokens to subprogram_declaration 121.0
   Wisi_EOI                               => reduce 2 tokens to subprogram_declaration 121.0
   default                                => ERROR

   Minimal_Complete_Actions => (2 subprogram_declaration 121.0)

State 95:
    119.0:subprogram_body <= subprogram_specification aspect_specification ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON

   IS                                     => shift and goto state 166 119.0
   default                                => ERROR

   Minimal_Complete_Actions => (IS 119.0)

State 96:
     58.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 154 61.0
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   association                            goto state 155
   association_list                       goto state 156
   expression                             goto state 157
   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 97:
    104.0:pragma_g <= PRAGMA IDENTIFIER actual_parameter_part ^ SEMICOLON

   SEMICOLON                              => shift and goto state 167 104.0
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 104.0)

State 98:
    103.0:paren_expression <= LEFT_PAREN expression ^ RIGHT_PAREN

   RIGHT_PAREN                            => shift and goto state 168 103.0
   default                                => ERROR

   Minimal_Complete_Actions => (RIGHT_PAREN 103.0)

State 99:
     84.1:factor <= NOT primary ^

   AND                                    => reduce 2 tokens to factor 84.1
   IS                                     => reduce 2 tokens to factor 84.1
   LOOP                                   => reduce 2 tokens to factor 84.1
   OR                                     => reduce 2 tokens to factor 84.1
   RIGHT_PAREN                            => reduce 2 tokens to factor 84.1
   THEN                                   => reduce 2 tokens to factor 84.1
   XOR                                    => reduce 2 tokens to factor 84.1
   AMPERSAND                              => reduce 2 tokens to factor 84.1
   COLON_EQUAL                            => reduce 2 tokens to factor 84.1
   COMMA                                  => reduce 2 tokens to factor 84.1
   DOT_DOT                                => reduce 2 tokens to factor 84.1
   EQUAL                                  => reduce 2 tokens to factor 84.1
   GREATER                                => reduce 2 tokens to factor 84.1
   GREATER_EQUAL                          => reduce 2 tokens to factor 84.1
   LESS                                   => reduce 2 tokens to factor 84.1
   LESS_EQUAL                             => reduce 2 tokens to factor 84.1
   MINUS                                  => reduce 2 tokens to factor 84.1
   PLUS                                   => reduce 2 tokens to factor 84.1
   SEMICOLON                              => reduce 2 tokens to factor 84.1
   SLASH                                  => reduce 2 tokens to factor 84.1
   SLASH_EQUAL                            => reduce 2 tokens to factor 84.1
   STAR                                   => reduce 2 tokens to factor 84.1
   default                                => ERROR

   Minimal_Complete_Actions => (2 factor 84.1)

State 100:
     68.0:case_statement <= CASE expression IS ^ case_statement_alternative_list END CASE SEMICOLON

   WHEN                                   => shift and goto state 169 69.0
   default                                => ERROR

   case_statement_alternative             goto state 170
   case_statement_alternative_list        goto state 171

   Minimal_Complete_Actions => (WHEN 69.0)

State 101:
    131.0:AND_relation_list <= AND ^ relation

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 172
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 102:
    132.0:OR_relation_list <= OR ^ relation

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 173
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 103:
    133.0:XOR_relation_list <= XOR ^ relation

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 174
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 104:
     81.1:expression <= relation AND_relation_list ^
    131.1:AND_relation_list <= AND_relation_list ^ AND relation
    131.2:AND_relation_list <= AND_relation_list ^ AND_relation_list

   AND                                    => shift and goto state 175 131.0
   IS                                     => reduce 2 tokens to expression 81.1
   RIGHT_PAREN                            => reduce 2 tokens to expression 81.1
   THEN                                   => reduce 2 tokens to expression 81.1
   COMMA                                  => reduce 2 tokens to expression 81.1
   SEMICOLON                              => reduce 2 tokens to expression 81.1
   default                                => ERROR

   AND_relation_list                      goto state 176

   Minimal_Complete_Actions => (2 expression 81.1)

State 105:
     81.2:expression <= relation OR_relation_list ^
    132.1:OR_relation_list <= OR_relation_list ^ OR relation
    132.2:OR_relation_list <= OR_relation_list ^ OR_relation_list

   IS                                     => reduce 2 tokens to expression 81.2
   OR                                     => shift and goto state 177 132.0
   RIGHT_PAREN                            => reduce 2 tokens to expression 81.2
   THEN                                   => reduce 2 tokens to expression 81.2
   COMMA                                  => reduce 2 tokens to expression 81.2
   SEMICOLON                              => reduce 2 tokens to expression 81.2
   default                                => ERROR

   OR_relation_list                       goto state 178

   Minimal_Complete_Actions => (2 expression 81.2)

State 106:
     81.3:expression <= relation XOR_relation_list ^
    133.1:XOR_relation_list <= XOR_relation_list ^ XOR relation
    133.2:XOR_relation_list <= XOR_relation_list ^ XOR_relation_list

   IS                                     => reduce 2 tokens to expression 81.3
   RIGHT_PAREN                            => reduce 2 tokens to expression 81.3
   THEN                                   => reduce 2 tokens to expression 81.3
   XOR                                    => shift and goto state 179 133.0
   COMMA                                  => reduce 2 tokens to expression 81.3
   SEMICOLON                              => reduce 2 tokens to expression 81.3
   default                                => ERROR

   XOR_relation_list                      goto state 180

   Minimal_Complete_Actions => (2 expression 81.3)

State 107:
    112.0:relational_operator <= EQUAL ^

   LEFT_PAREN                             => reduce 1 tokens to relational_operator 112.0
   NOT                                    => reduce 1 tokens to relational_operator 112.0
   MINUS                                  => reduce 1 tokens to relational_operator 112.0
   PLUS                                   => reduce 1 tokens to relational_operator 112.0
   STRING_LITERAL                         => reduce 1 tokens to relational_operator 112.0
   IDENTIFIER                             => reduce 1 tokens to relational_operator 112.0
   NUMERIC_LITERAL                        => reduce 1 tokens to relational_operator 112.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 relational_operator 112.0)

State 108:
    112.4:relational_operator <= GREATER ^

   LEFT_PAREN                             => reduce 1 tokens to relational_operator 112.4
   NOT                                    => reduce 1 tokens to relational_operator 112.4
   MINUS                                  => reduce 1 tokens to relational_operator 112.4
   PLUS                                   => reduce 1 tokens to relational_operator 112.4
   STRING_LITERAL                         => reduce 1 tokens to relational_operator 112.4
   IDENTIFIER                             => reduce 1 tokens to relational_operator 112.4
   NUMERIC_LITERAL                        => reduce 1 tokens to relational_operator 112.4
   default                                => ERROR

   Minimal_Complete_Actions => (1 relational_operator 112.4)

State 109:
    112.5:relational_operator <= GREATER_EQUAL ^

   LEFT_PAREN                             => reduce 1 tokens to relational_operator 112.5
   NOT                                    => reduce 1 tokens to relational_operator 112.5
   MINUS                                  => reduce 1 tokens to relational_operator 112.5
   PLUS                                   => reduce 1 tokens to relational_operator 112.5
   STRING_LITERAL                         => reduce 1 tokens to relational_operator 112.5
   IDENTIFIER                             => reduce 1 tokens to relational_operator 112.5
   NUMERIC_LITERAL                        => reduce 1 tokens to relational_operator 112.5
   default                                => ERROR

   Minimal_Complete_Actions => (1 relational_operator 112.5)

State 110:
    112.2:relational_operator <= LESS ^

   LEFT_PAREN                             => reduce 1 tokens to relational_operator 112.2
   NOT                                    => reduce 1 tokens to relational_operator 112.2
   MINUS                                  => reduce 1 tokens to relational_operator 112.2
   PLUS                                   => reduce 1 tokens to relational_operator 112.2
   STRING_LITERAL                         => reduce 1 tokens to relational_operator 112.2
   IDENTIFIER                             => reduce 1 tokens to relational_operator 112.2
   NUMERIC_LITERAL                        => reduce 1 tokens to relational_operator 112.2
   default                                => ERROR

   Minimal_Complete_Actions => (1 relational_operator 112.2)

State 111:
    112.3:relational_operator <= LESS_EQUAL ^

   LEFT_PAREN                             => reduce 1 tokens to relational_operator 112.3
   NOT                                    => reduce 1 tokens to relational_operator 112.3
   MINUS                                  => reduce 1 tokens to relational_operator 112.3
   PLUS                                   => reduce 1 tokens to relational_operator 112.3
   STRING_LITERAL                         => reduce 1 tokens to relational_operator 112.3
   IDENTIFIER                             => reduce 1 tokens to relational_operator 112.3
   NUMERIC_LITERAL                        => reduce 1 tokens to relational_operator 112.3
   default                                => ERROR

   Minimal_Complete_Actions => (1 relational_operator 112.3)

State 112:
    112.1:relational_operator <= SLASH_EQUAL ^

   LEFT_PAREN                             => reduce 1 tokens to relational_operator 112.1
   NOT                                    => reduce 1 tokens to relational_operator 112.1
   MINUS                                  => reduce 1 tokens to relational_operator 112.1
   PLUS                                   => reduce 1 tokens to relational_operator 112.1
   STRING_LITERAL                         => reduce 1 tokens to relational_operator 112.1
   IDENTIFIER                             => reduce 1 tokens to relational_operator 112.1
   NUMERIC_LITERAL                        => reduce 1 tokens to relational_operator 112.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 relational_operator 112.1)

State 113:
    111.0:relation <= simple_expression relational_operator ^ simple_expression

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   selected_component                     goto state 38
   simple_expression                      goto state 181
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 114:
     95.1:multiplying_operator <= SLASH ^

   LEFT_PAREN                             => reduce 1 tokens to multiplying_operator 95.1
   NOT                                    => reduce 1 tokens to multiplying_operator 95.1
   STRING_LITERAL                         => reduce 1 tokens to multiplying_operator 95.1
   IDENTIFIER                             => reduce 1 tokens to multiplying_operator 95.1
   NUMERIC_LITERAL                        => reduce 1 tokens to multiplying_operator 95.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 multiplying_operator 95.1)

State 115:
     95.0:multiplying_operator <= STAR ^

   LEFT_PAREN                             => reduce 1 tokens to multiplying_operator 95.0
   NOT                                    => reduce 1 tokens to multiplying_operator 95.0
   STRING_LITERAL                         => reduce 1 tokens to multiplying_operator 95.0
   IDENTIFIER                             => reduce 1 tokens to multiplying_operator 95.0
   NUMERIC_LITERAL                        => reduce 1 tokens to multiplying_operator 95.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 multiplying_operator 95.0)

State 116:
    124.1:term <= term multiplying_operator ^ factor
    124.2:term <= term multiplying_operator ^ term

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   factor                                 goto state 182
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   selected_component                     goto state 38
   term                                   goto state 183

   Minimal_Complete_Actions => 

State 117:
    115.0:simple_expression <= unary_adding_operator term_binary_adding_operator_list ^
    137.1:term_binary_adding_operator_list <= term_binary_adding_operator_list ^ binary_adding_operator term
    137.2:term_binary_adding_operator_list <= term_binary_adding_operator_list ^ binary_adding_operator term_binary_adding_operator_list

   AND                                    => reduce 2 tokens to simple_expression 115.0
   IS                                     => reduce 2 tokens to simple_expression 115.0
   LOOP                                   => reduce 2 tokens to simple_expression 115.0
   OR                                     => reduce 2 tokens to simple_expression 115.0
   RIGHT_PAREN                            => reduce 2 tokens to simple_expression 115.0
   THEN                                   => reduce 2 tokens to simple_expression 115.0
   XOR                                    => reduce 2 tokens to simple_expression 115.0
   AMPERSAND                              => shift and goto state 118 63.2
   COLON_EQUAL                            => reduce 2 tokens to simple_expression 115.0
   COMMA                                  => reduce 2 tokens to simple_expression 115.0
   DOT_DOT                                => reduce 2 tokens to simple_expression 115.0
   EQUAL                                  => reduce 2 tokens to simple_expression 115.0
   GREATER                                => reduce 2 tokens to simple_expression 115.0
   GREATER_EQUAL                          => reduce 2 tokens to simple_expression 115.0
   LESS                                   => reduce 2 tokens to simple_expression 115.0
   LESS_EQUAL                             => reduce 2 tokens to simple_expression 115.0
   MINUS                                  => shift and goto state 119 63.1
   PLUS                                   => shift and goto state 120 63.0
   SEMICOLON                              => reduce 2 tokens to simple_expression 115.0
   SLASH_EQUAL                            => reduce 2 tokens to simple_expression 115.0
   default                                => ERROR

   binary_adding_operator                 goto state 121

   Minimal_Complete_Actions => (2 simple_expression 115.0)

State 118:
     63.2:binary_adding_operator <= AMPERSAND ^

   LEFT_PAREN                             => reduce 1 tokens to binary_adding_operator 63.2
   NOT                                    => reduce 1 tokens to binary_adding_operator 63.2
   STRING_LITERAL                         => reduce 1 tokens to binary_adding_operator 63.2
   IDENTIFIER                             => reduce 1 tokens to binary_adding_operator 63.2
   NUMERIC_LITERAL                        => reduce 1 tokens to binary_adding_operator 63.2
   default                                => ERROR

   Minimal_Complete_Actions => (1 binary_adding_operator 63.2)

State 119:
     63.1:binary_adding_operator <= MINUS ^

   LEFT_PAREN                             => reduce 1 tokens to binary_adding_operator 63.1
   NOT                                    => reduce 1 tokens to binary_adding_operator 63.1
   STRING_LITERAL                         => reduce 1 tokens to binary_adding_operator 63.1
   IDENTIFIER                             => reduce 1 tokens to binary_adding_operator 63.1
   NUMERIC_LITERAL                        => reduce 1 tokens to binary_adding_operator 63.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 binary_adding_operator 63.1)

State 120:
     63.0:binary_adding_operator <= PLUS ^

   LEFT_PAREN                             => reduce 1 tokens to binary_adding_operator 63.0
   NOT                                    => reduce 1 tokens to binary_adding_operator 63.0
   STRING_LITERAL                         => reduce 1 tokens to binary_adding_operator 63.0
   IDENTIFIER                             => reduce 1 tokens to binary_adding_operator 63.0
   NUMERIC_LITERAL                        => reduce 1 tokens to binary_adding_operator 63.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 binary_adding_operator 63.0)

State 121:
    137.1:term_binary_adding_operator_list <= term_binary_adding_operator_list binary_adding_operator ^ term
    137.2:term_binary_adding_operator_list <= term_binary_adding_operator_list binary_adding_operator ^ term_binary_adding_operator_list

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   selected_component                     goto state 38
   term                                   goto state 184
   term_binary_adding_operator_list       goto state 185

   Minimal_Complete_Actions => 

State 122:
     80.2:exit_statement <= EXIT WHEN expression ^ SEMICOLON

   SEMICOLON                              => shift and goto state 186 80.2
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 80.2)

State 123:
     80.0:exit_statement <= EXIT IDENTIFIER WHEN ^ expression SEMICOLON

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   expression                             goto state 187
   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 124:
     80.1:exit_statement <= EXIT IDENTIFIER SEMICOLON ^

   PRAGMA                                 => reduce 3 tokens to exit_statement 80.1
   BEGIN                                  => reduce 3 tokens to exit_statement 80.1
   CASE                                   => reduce 3 tokens to exit_statement 80.1
   DECLARE                                => reduce 3 tokens to exit_statement 80.1
   ELSE                                   => reduce 3 tokens to exit_statement 80.1
   ELSIF                                  => reduce 3 tokens to exit_statement 80.1
   END                                    => reduce 3 tokens to exit_statement 80.1
   EXIT                                   => reduce 3 tokens to exit_statement 80.1
   EXCEPTION                              => reduce 3 tokens to exit_statement 80.1
   FOR                                    => reduce 3 tokens to exit_statement 80.1
   FUNCTION                               => reduce 3 tokens to exit_statement 80.1
   IF                                     => reduce 3 tokens to exit_statement 80.1
   LOOP                                   => reduce 3 tokens to exit_statement 80.1
   PACKAGE                                => reduce 3 tokens to exit_statement 80.1
   PROCEDURE                              => reduce 3 tokens to exit_statement 80.1
   RETURN                                 => reduce 3 tokens to exit_statement 80.1
   TYPE                                   => reduce 3 tokens to exit_statement 80.1
   WHEN                                   => reduce 3 tokens to exit_statement 80.1
   IDENTIFIER                             => reduce 3 tokens to exit_statement 80.1
   Wisi_EOI                               => reduce 3 tokens to exit_statement 80.1
   default                                => ERROR

   Minimal_Complete_Actions => (3 exit_statement 80.1)

State 125:
     93.0:iteration_scheme <= FOR IDENTIFIER IN ^ discrete_subtype_definition

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   discrete_subtype_definition            goto state 188
   factor                                 goto state 56
   name                                   goto state 189
   paren_expression                       goto state 58
   primary                                goto state 59
   range_g                                goto state 190
   selected_component                     goto state 38
   simple_expression                      goto state 191
   subtype_indication                     goto state 192
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (IDENTIFIER 96.2)

State 126:
     58.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN
     85.0:formal_part <= LEFT_PAREN ^ parameter_specification_SEMICOLON_list RIGHT_PAREN
     96.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 193 61.0
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   association                            goto state 155
   association_list                       goto state 156
   expression                             goto state 157
   factor                                 goto state 56
   name                                   goto state 57
   parameter_specification                goto state 194
   paren_expression                       goto state 58
   primary                                goto state 59
   range_g                                goto state 158
   range_list                             goto state 159
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 160
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   parameter_specification_SEMICOLON_list goto state 195
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 127:
    100.1:parameter_and_result_profile <= RETURN ^ IDENTIFIER

   IDENTIFIER                             => shift and goto state 196 100.1
   default                                => ERROR

   Minimal_Complete_Actions => (IDENTIFIER 100.1)

State 128:
    100.0:parameter_and_result_profile <= formal_part ^ RETURN IDENTIFIER

   RETURN                                 => shift and goto state 197 100.0
   default                                => ERROR

   Minimal_Complete_Actions => (RETURN 100.0)

State 129:
     87.0:function_specification <= FUNCTION name parameter_and_result_profile ^

   IS                                     => reduce 3 tokens to function_specification 87.0
   WITH                                   => reduce 3 tokens to function_specification 87.0
   SEMICOLON                              => reduce 3 tokens to function_specification 87.0
   default                                => ERROR

   Minimal_Complete_Actions => (3 function_specification 87.0)

State 130:
     91.0:if_statement <= IF expression THEN ^ sequence_of_statements ELSIF_expression_list ELSE sequence_of_statements END IF SEMICOLON
     91.1:if_statement <= IF expression THEN ^ sequence_of_statements ELSIF_expression_list END IF SEMICOLON
     91.2:if_statement <= IF expression THEN ^ sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON
     91.3:if_statement <= IF expression THEN ^ sequence_of_statements END IF SEMICOLON

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 198
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 74

   Minimal_Complete_Actions => (EXIT 80.0)

State 131:
     64.0:block_label_opt <= IDENTIFIER COLON ^

   BEGIN                                  => reduce 2 tokens to block_label_opt 64.0
   DECLARE                                => reduce 2 tokens to block_label_opt 64.0
   default                                => ERROR

   Minimal_Complete_Actions => (2 block_label_opt 64.0)

State 132:
     94.1:loop_statement <= LOOP sequence_of_statements END ^ LOOP identifier_opt SEMICOLON

   LOOP                                   => shift and goto state 199 94.1
   default                                => ERROR

   Minimal_Complete_Actions => (LOOP 94.1)

State 133:
    114.1:sequence_of_statements <= sequence_of_statements ^ statement
    114.2:sequence_of_statements <= sequence_of_statements sequence_of_statements ^
    114.2:sequence_of_statements <= sequence_of_statements ^ sequence_of_statements

   PRAGMA                                 => reduce 2 tokens to sequence_of_statements 114.2
   BEGIN                                  => reduce 2 tokens to sequence_of_statements 114.2
   CASE                                   => reduce 2 tokens to sequence_of_statements 114.2
   DECLARE                                => reduce 2 tokens to sequence_of_statements 114.2
   ELSE                                   => reduce 2 tokens to sequence_of_statements 114.2
   ELSIF                                  => reduce 2 tokens to sequence_of_statements 114.2
   END                                    => reduce 2 tokens to sequence_of_statements 114.2
   EXIT                                   => reduce 2 tokens to sequence_of_statements 114.2
   EXCEPTION                              => reduce 2 tokens to sequence_of_statements 114.2
   FOR                                    => reduce 2 tokens to sequence_of_statements 114.2
   IF                                     => reduce 2 tokens to sequence_of_statements 114.2
   LOOP                                   => reduce 2 tokens to sequence_of_statements 114.2
   RETURN                                 => reduce 2 tokens to sequence_of_statements 114.2
   WHEN                                   => reduce 2 tokens to sequence_of_statements 114.2
   IDENTIFIER                             => reduce 2 tokens to sequence_of_statements 114.2
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 133
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 134

   Minimal_Complete_Actions => (2 sequence_of_statements 114.2)

State 134:
    114.0:sequence_of_statements <= statement ^
    114.1:sequence_of_statements <= sequence_of_statements statement ^

   PRAGMA                                 => reduce 2 tokens to sequence_of_statements 114.1
   BEGIN                                  => reduce 2 tokens to sequence_of_statements 114.1
   CASE                                   => reduce 2 tokens to sequence_of_statements 114.1
   DECLARE                                => reduce 2 tokens to sequence_of_statements 114.1
   ELSE                                   => reduce 2 tokens to sequence_of_statements 114.1
   ELSIF                                  => reduce 2 tokens to sequence_of_statements 114.1
   END                                    => reduce 2 tokens to sequence_of_statements 114.1
   EXIT                                   => reduce 2 tokens to sequence_of_statements 114.1
   EXCEPTION                              => reduce 2 tokens to sequence_of_statements 114.1
   FOR                                    => reduce 2 tokens to sequence_of_statements 114.1
   IF                                     => reduce 2 tokens to sequence_of_statements 114.1
   LOOP                                   => reduce 2 tokens to sequence_of_statements 114.1
   RETURN                                 => reduce 2 tokens to sequence_of_statements 114.1
   WHEN                                   => reduce 2 tokens to sequence_of_statements 114.1
   IDENTIFIER                             => reduce 2 tokens to sequence_of_statements 114.1
   default                                => ERROR

   Minimal_Complete_Actions => ((1 sequence_of_statements 114.0), (2 sequence_of_statements 114.1))

State 135:
     96.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     96.1:name <= name ^ actual_parameter_part
     99.0:package_body <= PACKAGE BODY name ^ aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     99.1:package_body <= PACKAGE BODY name ^ aspect_specification IS declarative_part END name_opt SEMICOLON
     99.2:package_body <= PACKAGE BODY name ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     99.3:package_body <= PACKAGE BODY name ^ IS declarative_part END name_opt SEMICOLON
    113.0:selected_component <= name ^ DOT IDENTIFIER

   IS                                     => shift and goto state 200 99.2
   LEFT_PAREN                             => shift and goto state 87 58.0
   WITH                                   => shift and goto state 93 59.0
   DOT                                    => shift and goto state 89 113.0
   default                                => ERROR

   actual_parameter_part                  goto state 91
   aspect_specification                   goto state 201

   Minimal_Complete_Actions => (IS 99.2)

State 136:
     88.0:generic_instantiation <= PACKAGE name IS ^ NEW name SEMICOLON

   NEW                                    => shift and goto state 202 88.0
   default                                => ERROR

   Minimal_Complete_Actions => (NEW 88.0)

State 137:
     88.1:generic_instantiation <= PROCEDURE name IS ^ NEW name SEMICOLON

   NEW                                    => shift and goto state 203 88.1
   default                                => ERROR

   Minimal_Complete_Actions => (NEW 88.1)

State 138:
    101.0:parameter_profile <= formal_part ^

   IS                                     => reduce 1 tokens to parameter_profile 101.0
   WITH                                   => reduce 1 tokens to parameter_profile 101.0
   SEMICOLON                              => reduce 1 tokens to parameter_profile 101.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 parameter_profile 101.0)

State 139:
    107.0:procedure_specification <= PROCEDURE name parameter_profile ^

   IS                                     => reduce 3 tokens to procedure_specification 107.0
   WITH                                   => reduce 3 tokens to procedure_specification 107.0
   SEMICOLON                              => reduce 3 tokens to procedure_specification 107.0
   default                                => ERROR

   Minimal_Complete_Actions => (3 procedure_specification 107.0)

State 140:
     82.0:extended_return_object_declaration <= IDENTIFIER COLON ^ subtype_indication

   IDENTIFIER                             => shift and goto state 53 96.2
   default                                => ERROR

   name                                   goto state 144
   selected_component                     goto state 38
   subtype_indication                     goto state 204

   Minimal_Complete_Actions => (IDENTIFIER 96.2)

State 141:
    116.0:simple_return_statement <= RETURN expression SEMICOLON ^

   PRAGMA                                 => reduce 3 tokens to simple_return_statement 116.0
   BEGIN                                  => reduce 3 tokens to simple_return_statement 116.0
   CASE                                   => reduce 3 tokens to simple_return_statement 116.0
   DECLARE                                => reduce 3 tokens to simple_return_statement 116.0
   ELSE                                   => reduce 3 tokens to simple_return_statement 116.0
   ELSIF                                  => reduce 3 tokens to simple_return_statement 116.0
   END                                    => reduce 3 tokens to simple_return_statement 116.0
   EXIT                                   => reduce 3 tokens to simple_return_statement 116.0
   EXCEPTION                              => reduce 3 tokens to simple_return_statement 116.0
   FOR                                    => reduce 3 tokens to simple_return_statement 116.0
   FUNCTION                               => reduce 3 tokens to simple_return_statement 116.0
   IF                                     => reduce 3 tokens to simple_return_statement 116.0
   LOOP                                   => reduce 3 tokens to simple_return_statement 116.0
   PACKAGE                                => reduce 3 tokens to simple_return_statement 116.0
   PROCEDURE                              => reduce 3 tokens to simple_return_statement 116.0
   RETURN                                 => reduce 3 tokens to simple_return_statement 116.0
   TYPE                                   => reduce 3 tokens to simple_return_statement 116.0
   WHEN                                   => reduce 3 tokens to simple_return_statement 116.0
   IDENTIFIER                             => reduce 3 tokens to simple_return_statement 116.0
   Wisi_EOI                               => reduce 3 tokens to simple_return_statement 116.0
   default                                => ERROR

   Minimal_Complete_Actions => (3 simple_return_statement 116.0)

State 142:
     83.0:extended_return_statement <= RETURN extended_return_object_declaration SEMICOLON ^

   PRAGMA                                 => reduce 3 tokens to extended_return_statement 83.0
   BEGIN                                  => reduce 3 tokens to extended_return_statement 83.0
   CASE                                   => reduce 3 tokens to extended_return_statement 83.0
   DECLARE                                => reduce 3 tokens to extended_return_statement 83.0
   ELSE                                   => reduce 3 tokens to extended_return_statement 83.0
   ELSIF                                  => reduce 3 tokens to extended_return_statement 83.0
   END                                    => reduce 3 tokens to extended_return_statement 83.0
   EXIT                                   => reduce 3 tokens to extended_return_statement 83.0
   EXCEPTION                              => reduce 3 tokens to extended_return_statement 83.0
   FOR                                    => reduce 3 tokens to extended_return_statement 83.0
   FUNCTION                               => reduce 3 tokens to extended_return_statement 83.0
   IF                                     => reduce 3 tokens to extended_return_statement 83.0
   LOOP                                   => reduce 3 tokens to extended_return_statement 83.0
   PACKAGE                                => reduce 3 tokens to extended_return_statement 83.0
   PROCEDURE                              => reduce 3 tokens to extended_return_statement 83.0
   RETURN                                 => reduce 3 tokens to extended_return_statement 83.0
   TYPE                                   => reduce 3 tokens to extended_return_statement 83.0
   WHEN                                   => reduce 3 tokens to extended_return_statement 83.0
   IDENTIFIER                             => reduce 3 tokens to extended_return_statement 83.0
   Wisi_EOI                               => reduce 3 tokens to extended_return_statement 83.0
   default                                => ERROR

   Minimal_Complete_Actions => (3 extended_return_statement 83.0)

State 143:
     86.0:full_type_declaration <= TYPE IDENTIFIER IS ^ type_definition SEMICOLON

   LEFT_PAREN                             => shift and goto state 205 77.0
   default                                => ERROR

   enumeration_type_definition            goto state 206
   type_definition                        goto state 207

   Minimal_Complete_Actions => (LEFT_PAREN 77.0)

State 144:
     96.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     96.1:name <= name ^ actual_parameter_part
    113.0:selected_component <= name ^ DOT IDENTIFIER
    123.0:subtype_indication <= name ^ constraint
    123.1:subtype_indication <= name ^

   LEFT_PAREN                             => shift and goto state 208 58.0
   RANGE                                  => shift and goto state 209 73.0
   COLON_EQUAL                            => reduce 1 tokens to subtype_indication 123.1
   DOT                                    => shift and goto state 89 113.0
   SEMICOLON                              => reduce 1 tokens to subtype_indication 123.1
   default                                => ERROR

   actual_parameter_part                  goto state 91
   constraint                             goto state 210
   index_constraint                       goto state 211

   Minimal_Complete_Actions => ((LEFT_PAREN 58.0), (1 subtype_indication 123.1))

State 145:
     98.0:object_declaration <= IDENTIFIER COLON subtype_indication ^ COLON_EQUAL expression SEMICOLON
     98.1:object_declaration <= IDENTIFIER COLON subtype_indication ^ SEMICOLON

   COLON_EQUAL                            => shift and goto state 212 98.0
   SEMICOLON                              => shift and goto state 213 98.1
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 98.1)

State 146:
     65.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements ^ END identifier_opt SEMICOLON

   END                                    => shift and goto state 214 65.1
   default                                => ERROR

   Minimal_Complete_Actions => (END 65.1)

State 147:
     89.0:handled_sequence_of_statements <= sequence_of_statements ^ EXCEPTION exception_handler_list
     89.1:handled_sequence_of_statements <= sequence_of_statements ^ EXCEPTION
     89.2:handled_sequence_of_statements <= sequence_of_statements ^
    114.1:sequence_of_statements <= sequence_of_statements ^ statement
    114.2:sequence_of_statements <= sequence_of_statements ^ sequence_of_statements

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   END                                    => reduce 1 tokens to handled_sequence_of_statements 89.2
   EXIT                                   => shift and goto state 3 80.0
   EXCEPTION                              => shift and goto state 215 89.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 133
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 134

   Minimal_Complete_Actions => (1 handled_sequence_of_statements 89.2)

State 148:
     98.0:object_declaration <= IDENTIFIER ^ COLON subtype_indication COLON_EQUAL expression SEMICOLON
     98.1:object_declaration <= IDENTIFIER ^ COLON subtype_indication SEMICOLON

   COLON                                  => shift and goto state 216 98.0
   default                                => ERROR

   Minimal_Complete_Actions => (COLON 98.0)

State 149:
    129.0:declaration_list <= declaration ^

   PRAGMA                                 => reduce 1 tokens to declaration_list 129.0
   BEGIN                                  => reduce 1 tokens to declaration_list 129.0
   END                                    => reduce 1 tokens to declaration_list 129.0
   FUNCTION                               => reduce 1 tokens to declaration_list 129.0
   PACKAGE                                => reduce 1 tokens to declaration_list 129.0
   PROCEDURE                              => reduce 1 tokens to declaration_list 129.0
   TYPE                                   => reduce 1 tokens to declaration_list 129.0
   IDENTIFIER                             => reduce 1 tokens to declaration_list 129.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 declaration_list 129.0)

State 150:
     65.0:block_statement <= block_label_opt DECLARE declarative_part ^ BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON

   BEGIN                                  => shift and goto state 217 65.0
   default                                => ERROR

   Minimal_Complete_Actions => (BEGIN 65.0)

State 151:
     74.3:declaration <= pragma_g ^

   PRAGMA                                 => reduce 1 tokens to declaration 74.3
   BEGIN                                  => reduce 1 tokens to declaration 74.3
   END                                    => reduce 1 tokens to declaration 74.3
   FUNCTION                               => reduce 1 tokens to declaration 74.3
   PACKAGE                                => reduce 1 tokens to declaration 74.3
   PROCEDURE                              => reduce 1 tokens to declaration 74.3
   TYPE                                   => reduce 1 tokens to declaration 74.3
   IDENTIFIER                             => reduce 1 tokens to declaration 74.3
   default                                => ERROR

   Minimal_Complete_Actions => (1 declaration 74.3)

State 152:
     75.0:declarative_part <= declaration_list ^
    129.1:declaration_list <= declaration_list ^ declaration
    129.2:declaration_list <= declaration_list ^ declaration_list

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 1 tokens to declarative_part 75.0
   END                                    => reduce 1 tokens to declarative_part 75.0
   FUNCTION                               => shift and goto state 5 87.0
   PACKAGE                                => shift and goto state 8 88.0
   PROCEDURE                              => shift and goto state 9 88.1
   TYPE                                   => shift and goto state 11 86.0
   IDENTIFIER                             => shift and goto state 148 98.0
   default                                => ERROR

   body_g                                 goto state 16
   body_stub                              goto state 17
   declaration                            goto state 218
   full_type_declaration                  goto state 25
   function_specification                 goto state 26
   generic_instantiation                  goto state 27
   object_declaration                     goto state 32
   package_body                           goto state 33
   pragma_g                               goto state 151
   procedure_specification                goto state 36
   proper_body                            goto state 37
   subprogram_body                        goto state 42
   subprogram_body_stub                   goto state 43
   subprogram_declaration                 goto state 44
   subprogram_specification               goto state 45
   type_declaration                       goto state 46
   declaration_list                       goto state 219

   Minimal_Complete_Actions => (1 declarative_part 75.0)

State 153:
     94.0:loop_statement <= iteration_scheme LOOP sequence_of_statements ^ END LOOP identifier_opt SEMICOLON
    114.1:sequence_of_statements <= sequence_of_statements ^ statement
    114.2:sequence_of_statements <= sequence_of_statements ^ sequence_of_statements

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   END                                    => shift and goto state 220 94.0
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 133
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 134

   Minimal_Complete_Actions => (END 94.0)

State 154:
     61.0:association <= IDENTIFIER ^ EQUAL_GREATER expression
     96.2:name <= IDENTIFIER ^

   AND                                    => reduce 1 tokens to name 96.2
   IS                                     => reduce 1 tokens to name 96.2
   LEFT_PAREN                             => reduce 1 tokens to name 96.2
   OR                                     => reduce 1 tokens to name 96.2
   RANGE                                  => reduce 1 tokens to name 96.2
   RIGHT_PAREN                            => reduce 1 tokens to name 96.2
   XOR                                    => reduce 1 tokens to name 96.2
   AMPERSAND                              => reduce 1 tokens to name 96.2
   COMMA                                  => reduce 1 tokens to name 96.2
   DOT                                    => reduce 1 tokens to name 96.2
   DOT_DOT                                => reduce 1 tokens to name 96.2
   EQUAL                                  => reduce 1 tokens to name 96.2
   EQUAL_GREATER                          => shift and goto state 221 61.0
   GREATER                                => reduce 1 tokens to name 96.2
   GREATER_EQUAL                          => reduce 1 tokens to name 96.2
   LESS                                   => reduce 1 tokens to name 96.2
   LESS_EQUAL                             => reduce 1 tokens to name 96.2
   MINUS                                  => reduce 1 tokens to name 96.2
   PLUS                                   => reduce 1 tokens to name 96.2
   SLASH                                  => reduce 1 tokens to name 96.2
   SLASH_EQUAL                            => reduce 1 tokens to name 96.2
   STAR                                   => reduce 1 tokens to name 96.2
   default                                => ERROR

   Minimal_Complete_Actions => ((EQUAL_GREATER 61.0), (1 name 96.2))

State 155:
     62.0:association_list <= association ^

   IS                                     => reduce 1 tokens to association_list 62.0
   RIGHT_PAREN                            => reduce 1 tokens to association_list 62.0
   COMMA                                  => reduce 1 tokens to association_list 62.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 association_list 62.0)

State 156:
     58.0:actual_parameter_part <= LEFT_PAREN association_list ^ RIGHT_PAREN
     62.1:association_list <= association_list ^ COMMA association
     62.2:association_list <= association_list ^ COMMA association_list

   RIGHT_PAREN                            => shift and goto state 222 58.0
   COMMA                                  => shift and goto state 223 62.1
   default                                => ERROR

   Minimal_Complete_Actions => (RIGHT_PAREN 58.0)

State 157:
     61.1:association <= expression ^

   IS                                     => reduce 1 tokens to association 61.1
   RIGHT_PAREN                            => reduce 1 tokens to association 61.1
   COMMA                                  => reduce 1 tokens to association 61.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 association 61.1)

State 158:
    110.1:range_list <= range_g ^

   RIGHT_PAREN                            => reduce 1 tokens to range_list 110.1
   COMMA                                  => reduce 1 tokens to range_list 110.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 range_list 110.1)

State 159:
     96.0:name <= name LEFT_PAREN range_list ^ RIGHT_PAREN
    110.0:range_list <= range_list ^ COMMA range_g

   RIGHT_PAREN                            => shift and goto state 224 96.0
   COMMA                                  => shift and goto state 225 110.0
   default                                => ERROR

   Minimal_Complete_Actions => 

State 160:
    109.0:range_g <= simple_expression ^ DOT_DOT simple_expression
    111.0:relation <= simple_expression ^ relational_operator simple_expression
    111.1:relation <= simple_expression ^

   AND                                    => reduce 1 tokens to relation 111.1
   OR                                     => reduce 1 tokens to relation 111.1
   RIGHT_PAREN                            => reduce 1 tokens to relation 111.1
   XOR                                    => reduce 1 tokens to relation 111.1
   COMMA                                  => reduce 1 tokens to relation 111.1
   DOT_DOT                                => shift and goto state 226 109.0
   EQUAL                                  => shift and goto state 107 112.0
   GREATER                                => shift and goto state 108 112.4
   GREATER_EQUAL                          => shift and goto state 109 112.5
   LESS                                   => shift and goto state 110 112.2
   LESS_EQUAL                             => shift and goto state 111 112.3
   SLASH_EQUAL                            => shift and goto state 112 112.1
   default                                => ERROR

   relational_operator                    goto state 113

   Minimal_Complete_Actions => (1 relation 111.1)

State 161:
     60.0:assignment_statement <= name COLON_EQUAL expression ^ SEMICOLON

   SEMICOLON                              => shift and goto state 227 60.0
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 60.0)

State 162:
    113.0:selected_component <= name DOT IDENTIFIER ^

   AND                                    => reduce 3 tokens to selected_component 113.0
   IS                                     => reduce 3 tokens to selected_component 113.0
   LEFT_PAREN                             => reduce 3 tokens to selected_component 113.0
   LOOP                                   => reduce 3 tokens to selected_component 113.0
   OR                                     => reduce 3 tokens to selected_component 113.0
   RANGE                                  => reduce 3 tokens to selected_component 113.0
   RETURN                                 => reduce 3 tokens to selected_component 113.0
   RIGHT_PAREN                            => reduce 3 tokens to selected_component 113.0
   THEN                                   => reduce 3 tokens to selected_component 113.0
   WITH                                   => reduce 3 tokens to selected_component 113.0
   XOR                                    => reduce 3 tokens to selected_component 113.0
   AMPERSAND                              => reduce 3 tokens to selected_component 113.0
   COLON_EQUAL                            => reduce 3 tokens to selected_component 113.0
   COMMA                                  => reduce 3 tokens to selected_component 113.0
   DOT                                    => reduce 3 tokens to selected_component 113.0
   DOT_DOT                                => reduce 3 tokens to selected_component 113.0
   EQUAL                                  => reduce 3 tokens to selected_component 113.0
   EQUAL_GREATER                          => reduce 3 tokens to selected_component 113.0
   GREATER                                => reduce 3 tokens to selected_component 113.0
   GREATER_EQUAL                          => reduce 3 tokens to selected_component 113.0
   LESS                                   => reduce 3 tokens to selected_component 113.0
   LESS_EQUAL                             => reduce 3 tokens to selected_component 113.0
   MINUS                                  => reduce 3 tokens to selected_component 113.0
   PLUS                                   => reduce 3 tokens to selected_component 113.0
   SEMICOLON                              => reduce 3 tokens to selected_component 113.0
   SLASH                                  => reduce 3 tokens to selected_component 113.0
   SLASH_EQUAL                            => reduce 3 tokens to selected_component 113.0
   STAR                                   => reduce 3 tokens to selected_component 113.0
   default                                => ERROR

   Minimal_Complete_Actions => (3 selected_component 113.0)

State 163:
    120.0:subprogram_body_stub <= subprogram_specification IS SEPARATE ^ SEMICOLON

   SEMICOLON                              => shift and goto state 228 120.0
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 120.0)

State 164:
    119.1:subprogram_body <= subprogram_specification IS declarative_part ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON

   BEGIN                                  => shift and goto state 229 119.1
   default                                => ERROR

   Minimal_Complete_Actions => (BEGIN 119.1)

State 165:
     59.0:aspect_specification <= WITH association_list ^
     62.1:association_list <= association_list ^ COMMA association
     62.2:association_list <= association_list ^ COMMA association_list

   IS                                     => reduce 2 tokens to aspect_specification 59.0
   COMMA                                  => shift and goto state 223 62.1
   default                                => ERROR

   Minimal_Complete_Actions => (2 aspect_specification 59.0)

State 166:
    119.0:subprogram_body <= subprogram_specification aspect_specification IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to declarative_part 75.1
   FUNCTION                               => shift and goto state 5 87.0
   PACKAGE                                => shift and goto state 8 88.0
   PROCEDURE                              => shift and goto state 9 88.1
   TYPE                                   => shift and goto state 11 86.0
   IDENTIFIER                             => shift and goto state 148 98.0
   default                                => ERROR

   body_g                                 goto state 16
   body_stub                              goto state 17
   declaration                            goto state 149
   declarative_part                       goto state 230
   full_type_declaration                  goto state 25
   function_specification                 goto state 26
   generic_instantiation                  goto state 27
   object_declaration                     goto state 32
   package_body                           goto state 33
   pragma_g                               goto state 151
   procedure_specification                goto state 36
   proper_body                            goto state 37
   subprogram_body                        goto state 42
   subprogram_body_stub                   goto state 43
   subprogram_declaration                 goto state 44
   subprogram_specification               goto state 45
   type_declaration                       goto state 46
   declaration_list                       goto state 152

   Minimal_Complete_Actions => (0 declarative_part 75.1)

State 167:
    104.0:pragma_g <= PRAGMA IDENTIFIER actual_parameter_part SEMICOLON ^

   PRAGMA                                 => reduce 4 tokens to pragma_g 104.0
   BEGIN                                  => reduce 4 tokens to pragma_g 104.0
   CASE                                   => reduce 4 tokens to pragma_g 104.0
   DECLARE                                => reduce 4 tokens to pragma_g 104.0
   ELSE                                   => reduce 4 tokens to pragma_g 104.0
   ELSIF                                  => reduce 4 tokens to pragma_g 104.0
   END                                    => reduce 4 tokens to pragma_g 104.0
   EXIT                                   => reduce 4 tokens to pragma_g 104.0
   EXCEPTION                              => reduce 4 tokens to pragma_g 104.0
   FOR                                    => reduce 4 tokens to pragma_g 104.0
   FUNCTION                               => reduce 4 tokens to pragma_g 104.0
   IF                                     => reduce 4 tokens to pragma_g 104.0
   LOOP                                   => reduce 4 tokens to pragma_g 104.0
   PACKAGE                                => reduce 4 tokens to pragma_g 104.0
   PROCEDURE                              => reduce 4 tokens to pragma_g 104.0
   RETURN                                 => reduce 4 tokens to pragma_g 104.0
   TYPE                                   => reduce 4 tokens to pragma_g 104.0
   WHEN                                   => reduce 4 tokens to pragma_g 104.0
   IDENTIFIER                             => reduce 4 tokens to pragma_g 104.0
   Wisi_EOI                               => reduce 4 tokens to pragma_g 104.0
   default                                => ERROR

   Minimal_Complete_Actions => (4 pragma_g 104.0)

State 168:
    103.0:paren_expression <= LEFT_PAREN expression RIGHT_PAREN ^

   AND                                    => reduce 3 tokens to paren_expression 103.0
   IS                                     => reduce 3 tokens to paren_expression 103.0
   LOOP                                   => reduce 3 tokens to paren_expression 103.0
   OR                                     => reduce 3 tokens to paren_expression 103.0
   RIGHT_PAREN                            => reduce 3 tokens to paren_expression 103.0
   THEN                                   => reduce 3 tokens to paren_expression 103.0
   XOR                                    => reduce 3 tokens to paren_expression 103.0
   AMPERSAND                              => reduce 3 tokens to paren_expression 103.0
   COLON_EQUAL                            => reduce 3 tokens to paren_expression 103.0
   COMMA                                  => reduce 3 tokens to paren_expression 103.0
   DOT_DOT                                => reduce 3 tokens to paren_expression 103.0
   EQUAL                                  => reduce 3 tokens to paren_expression 103.0
   GREATER                                => reduce 3 tokens to paren_expression 103.0
   GREATER_EQUAL                          => reduce 3 tokens to paren_expression 103.0
   LESS                                   => reduce 3 tokens to paren_expression 103.0
   LESS_EQUAL                             => reduce 3 tokens to paren_expression 103.0
   MINUS                                  => reduce 3 tokens to paren_expression 103.0
   PLUS                                   => reduce 3 tokens to paren_expression 103.0
   SEMICOLON                              => reduce 3 tokens to paren_expression 103.0
   SLASH                                  => reduce 3 tokens to paren_expression 103.0
   SLASH_EQUAL                            => reduce 3 tokens to paren_expression 103.0
   STAR                                   => reduce 3 tokens to paren_expression 103.0
   default                                => ERROR

   Minimal_Complete_Actions => (3 paren_expression 103.0)

State 169:
     69.0:case_statement_alternative <= WHEN ^ NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements

   NUMERIC_LITERAL                        => shift and goto state 231 69.0
   default                                => ERROR

   Minimal_Complete_Actions => (NUMERIC_LITERAL 69.0)

State 170:
    128.0:case_statement_alternative_list <= case_statement_alternative ^

   END                                    => reduce 1 tokens to case_statement_alternative_list 128.0
   WHEN                                   => reduce 1 tokens to case_statement_alternative_list 128.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 case_statement_alternative_list 128.0)

State 171:
     68.0:case_statement <= CASE expression IS case_statement_alternative_list ^ END CASE SEMICOLON
    128.1:case_statement_alternative_list <= case_statement_alternative_list ^ case_statement_alternative
    128.2:case_statement_alternative_list <= case_statement_alternative_list ^ case_statement_alternative_list

   END                                    => shift and goto state 232 68.0
   WHEN                                   => shift and goto state 169 69.0
   default                                => ERROR

   case_statement_alternative             goto state 233
   case_statement_alternative_list        goto state 234

   Minimal_Complete_Actions => (END 68.0)

State 172:
    131.0:AND_relation_list <= AND relation ^

   AND                                    => reduce 2 tokens to AND_relation_list 131.0
   IS                                     => reduce 2 tokens to AND_relation_list 131.0
   RIGHT_PAREN                            => reduce 2 tokens to AND_relation_list 131.0
   THEN                                   => reduce 2 tokens to AND_relation_list 131.0
   COMMA                                  => reduce 2 tokens to AND_relation_list 131.0
   SEMICOLON                              => reduce 2 tokens to AND_relation_list 131.0
   default                                => ERROR

   Minimal_Complete_Actions => (2 AND_relation_list 131.0)

State 173:
    132.0:OR_relation_list <= OR relation ^

   IS                                     => reduce 2 tokens to OR_relation_list 132.0
   OR                                     => reduce 2 tokens to OR_relation_list 132.0
   RIGHT_PAREN                            => reduce 2 tokens to OR_relation_list 132.0
   THEN                                   => reduce 2 tokens to OR_relation_list 132.0
   COMMA                                  => reduce 2 tokens to OR_relation_list 132.0
   SEMICOLON                              => reduce 2 tokens to OR_relation_list 132.0
   default                                => ERROR

   Minimal_Complete_Actions => (2 OR_relation_list 132.0)

State 174:
    133.0:XOR_relation_list <= XOR relation ^

   IS                                     => reduce 2 tokens to XOR_relation_list 133.0
   RIGHT_PAREN                            => reduce 2 tokens to XOR_relation_list 133.0
   THEN                                   => reduce 2 tokens to XOR_relation_list 133.0
   XOR                                    => reduce 2 tokens to XOR_relation_list 133.0
   COMMA                                  => reduce 2 tokens to XOR_relation_list 133.0
   SEMICOLON                              => reduce 2 tokens to XOR_relation_list 133.0
   default                                => ERROR

   Minimal_Complete_Actions => (2 XOR_relation_list 133.0)

State 175:
    131.0:AND_relation_list <= AND ^ relation
    131.1:AND_relation_list <= AND_relation_list AND ^ relation

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 235
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 176:
    131.1:AND_relation_list <= AND_relation_list ^ AND relation
    131.2:AND_relation_list <= AND_relation_list AND_relation_list ^
    131.2:AND_relation_list <= AND_relation_list ^ AND_relation_list

   AND                                    => reduce 2 tokens to AND_relation_list 131.2
   IS                                     => reduce 2 tokens to AND_relation_list 131.2
   RIGHT_PAREN                            => reduce 2 tokens to AND_relation_list 131.2
   THEN                                   => reduce 2 tokens to AND_relation_list 131.2
   COMMA                                  => reduce 2 tokens to AND_relation_list 131.2
   SEMICOLON                              => reduce 2 tokens to AND_relation_list 131.2
   default                                => ERROR

   AND_relation_list                      goto state 176

   Minimal_Complete_Actions => (2 AND_relation_list 131.2)

State 177:
    132.0:OR_relation_list <= OR ^ relation
    132.1:OR_relation_list <= OR_relation_list OR ^ relation

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 236
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 178:
    132.1:OR_relation_list <= OR_relation_list ^ OR relation
    132.2:OR_relation_list <= OR_relation_list OR_relation_list ^
    132.2:OR_relation_list <= OR_relation_list ^ OR_relation_list

   IS                                     => reduce 2 tokens to OR_relation_list 132.2
   OR                                     => reduce 2 tokens to OR_relation_list 132.2
   RIGHT_PAREN                            => reduce 2 tokens to OR_relation_list 132.2
   THEN                                   => reduce 2 tokens to OR_relation_list 132.2
   COMMA                                  => reduce 2 tokens to OR_relation_list 132.2
   SEMICOLON                              => reduce 2 tokens to OR_relation_list 132.2
   default                                => ERROR

   OR_relation_list                       goto state 178

   Minimal_Complete_Actions => (2 OR_relation_list 132.2)

State 179:
    133.0:XOR_relation_list <= XOR ^ relation
    133.1:XOR_relation_list <= XOR_relation_list XOR ^ relation

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 237
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 180:
    133.1:XOR_relation_list <= XOR_relation_list ^ XOR relation
    133.2:XOR_relation_list <= XOR_relation_list XOR_relation_list ^
    133.2:XOR_relation_list <= XOR_relation_list ^ XOR_relation_list

   IS                                     => reduce 2 tokens to XOR_relation_list 133.2
   RIGHT_PAREN                            => reduce 2 tokens to XOR_relation_list 133.2
   THEN                                   => reduce 2 tokens to XOR_relation_list 133.2
   XOR                                    => reduce 2 tokens to XOR_relation_list 133.2
   COMMA                                  => reduce 2 tokens to XOR_relation_list 133.2
   SEMICOLON                              => reduce 2 tokens to XOR_relation_list 133.2
   default                                => ERROR

   XOR_relation_list                      goto state 180

   Minimal_Complete_Actions => (2 XOR_relation_list 133.2)

State 181:
    111.0:relation <= simple_expression relational_operator simple_expression ^

   AND                                    => reduce 3 tokens to relation 111.0
   IS                                     => reduce 3 tokens to relation 111.0
   OR                                     => reduce 3 tokens to relation 111.0
   RIGHT_PAREN                            => reduce 3 tokens to relation 111.0
   THEN                                   => reduce 3 tokens to relation 111.0
   XOR                                    => reduce 3 tokens to relation 111.0
   COMMA                                  => reduce 3 tokens to relation 111.0
   SEMICOLON                              => reduce 3 tokens to relation 111.0
   default                                => ERROR

   Minimal_Complete_Actions => (3 relation 111.0)

State 182:
    124.0:term <= factor ^
    124.1:term <= term multiplying_operator factor ^

   AND                                    => reduce 3 tokens to term 124.1
   IS                                     => reduce 3 tokens to term 124.1
   LOOP                                   => reduce 3 tokens to term 124.1
   OR                                     => reduce 3 tokens to term 124.1
   RIGHT_PAREN                            => reduce 3 tokens to term 124.1
   THEN                                   => reduce 3 tokens to term 124.1
   XOR                                    => reduce 3 tokens to term 124.1
   AMPERSAND                              => reduce 3 tokens to term 124.1
   COLON_EQUAL                            => reduce 3 tokens to term 124.1
   COMMA                                  => reduce 3 tokens to term 124.1
   DOT_DOT                                => reduce 3 tokens to term 124.1
   EQUAL                                  => reduce 3 tokens to term 124.1
   GREATER                                => reduce 3 tokens to term 124.1
   GREATER_EQUAL                          => reduce 3 tokens to term 124.1
   LESS                                   => reduce 3 tokens to term 124.1
   LESS_EQUAL                             => reduce 3 tokens to term 124.1
   MINUS                                  => reduce 3 tokens to term 124.1
   PLUS                                   => reduce 3 tokens to term 124.1
   SEMICOLON                              => reduce 3 tokens to term 124.1
   SLASH                                  => reduce 3 tokens to term 124.1
   SLASH_EQUAL                            => reduce 3 tokens to term 124.1
   STAR                                   => reduce 3 tokens to term 124.1
   default                                => ERROR

   Minimal_Complete_Actions => ((1 term 124.0), (3 term 124.1))

State 183:
    124.1:term <= term ^ multiplying_operator factor
    124.2:term <= term multiplying_operator term ^
    124.2:term <= term ^ multiplying_operator term

   AND                                    => reduce 3 tokens to term 124.2
   IS                                     => reduce 3 tokens to term 124.2
   LOOP                                   => reduce 3 tokens to term 124.2
   OR                                     => reduce 3 tokens to term 124.2
   RIGHT_PAREN                            => reduce 3 tokens to term 124.2
   THEN                                   => reduce 3 tokens to term 124.2
   XOR                                    => reduce 3 tokens to term 124.2
   AMPERSAND                              => reduce 3 tokens to term 124.2
   COLON_EQUAL                            => reduce 3 tokens to term 124.2
   COMMA                                  => reduce 3 tokens to term 124.2
   DOT_DOT                                => reduce 3 tokens to term 124.2
   EQUAL                                  => reduce 3 tokens to term 124.2
   GREATER                                => reduce 3 tokens to term 124.2
   GREATER_EQUAL                          => reduce 3 tokens to term 124.2
   LESS                                   => reduce 3 tokens to term 124.2
   LESS_EQUAL                             => reduce 3 tokens to term 124.2
   MINUS                                  => reduce 3 tokens to term 124.2
   PLUS                                   => reduce 3 tokens to term 124.2
   SEMICOLON                              => reduce 3 tokens to term 124.2
   SLASH                                  => reduce 3 tokens to term 124.2
   SLASH_EQUAL                            => reduce 3 tokens to term 124.2
   STAR                                   => reduce 3 tokens to term 124.2
   default                                => ERROR

   multiplying_operator                   goto state 116

   Minimal_Complete_Actions => (3 term 124.2)

State 184:
    124.1:term <= term ^ multiplying_operator factor
    124.2:term <= term ^ multiplying_operator term
    137.0:term_binary_adding_operator_list <= term ^
    137.1:term_binary_adding_operator_list <= term_binary_adding_operator_list binary_adding_operator term ^

   AND                                    => reduce 3 tokens to term_binary_adding_operator_list 137.1
   IS                                     => reduce 3 tokens to term_binary_adding_operator_list 137.1
   LOOP                                   => reduce 3 tokens to term_binary_adding_operator_list 137.1
   OR                                     => reduce 3 tokens to term_binary_adding_operator_list 137.1
   RIGHT_PAREN                            => reduce 3 tokens to term_binary_adding_operator_list 137.1
   THEN                                   => reduce 3 tokens to term_binary_adding_operator_list 137.1
   XOR                                    => reduce 3 tokens to term_binary_adding_operator_list 137.1
   AMPERSAND                              => reduce 3 tokens to term_binary_adding_operator_list 137.1
   COLON_EQUAL                            => reduce 3 tokens to term_binary_adding_operator_list 137.1
   COMMA                                  => reduce 3 tokens to term_binary_adding_operator_list 137.1
   DOT_DOT                                => reduce 3 tokens to term_binary_adding_operator_list 137.1
   EQUAL                                  => reduce 3 tokens to term_binary_adding_operator_list 137.1
   GREATER                                => reduce 3 tokens to term_binary_adding_operator_list 137.1
   GREATER_EQUAL                          => reduce 3 tokens to term_binary_adding_operator_list 137.1
   LESS                                   => reduce 3 tokens to term_binary_adding_operator_list 137.1
   LESS_EQUAL                             => reduce 3 tokens to term_binary_adding_operator_list 137.1
   MINUS                                  => reduce 3 tokens to term_binary_adding_operator_list 137.1
   PLUS                                   => reduce 3 tokens to term_binary_adding_operator_list 137.1
   SEMICOLON                              => reduce 3 tokens to term_binary_adding_operator_list 137.1
   SLASH                                  => shift and goto state 114 95.1
   SLASH_EQUAL                            => reduce 3 tokens to term_binary_adding_operator_list 137.1
   STAR                                   => shift and goto state 115 95.0
   default                                => ERROR

   multiplying_operator                   goto state 116

   Minimal_Complete_Actions => ((1 term_binary_adding_operator_list 137.0), (3 term_binary_adding_operator_list 137.1))

State 185:
    137.1:term_binary_adding_operator_list <= term_binary_adding_operator_list ^ binary_adding_operator term
    137.2:term_binary_adding_operator_list <= term_binary_adding_operator_list binary_adding_operator term_binary_adding_operator_list ^
    137.2:term_binary_adding_operator_list <= term_binary_adding_operator_list ^ binary_adding_operator term_binary_adding_operator_list

   AND                                    => reduce 3 tokens to term_binary_adding_operator_list 137.2
   IS                                     => reduce 3 tokens to term_binary_adding_operator_list 137.2
   LOOP                                   => reduce 3 tokens to term_binary_adding_operator_list 137.2
   OR                                     => reduce 3 tokens to term_binary_adding_operator_list 137.2
   RIGHT_PAREN                            => reduce 3 tokens to term_binary_adding_operator_list 137.2
   THEN                                   => reduce 3 tokens to term_binary_adding_operator_list 137.2
   XOR                                    => reduce 3 tokens to term_binary_adding_operator_list 137.2
   AMPERSAND                              => reduce 3 tokens to term_binary_adding_operator_list 137.2
   COLON_EQUAL                            => reduce 3 tokens to term_binary_adding_operator_list 137.2
   COMMA                                  => reduce 3 tokens to term_binary_adding_operator_list 137.2
   DOT_DOT                                => reduce 3 tokens to term_binary_adding_operator_list 137.2
   EQUAL                                  => reduce 3 tokens to term_binary_adding_operator_list 137.2
   GREATER                                => reduce 3 tokens to term_binary_adding_operator_list 137.2
   GREATER_EQUAL                          => reduce 3 tokens to term_binary_adding_operator_list 137.2
   LESS                                   => reduce 3 tokens to term_binary_adding_operator_list 137.2
   LESS_EQUAL                             => reduce 3 tokens to term_binary_adding_operator_list 137.2
   MINUS                                  => reduce 3 tokens to term_binary_adding_operator_list 137.2
   PLUS                                   => reduce 3 tokens to term_binary_adding_operator_list 137.2
   SEMICOLON                              => reduce 3 tokens to term_binary_adding_operator_list 137.2
   SLASH_EQUAL                            => reduce 3 tokens to term_binary_adding_operator_list 137.2
   default                                => ERROR

   binary_adding_operator                 goto state 121

   Minimal_Complete_Actions => (3 term_binary_adding_operator_list 137.2)

State 186:
     80.2:exit_statement <= EXIT WHEN expression SEMICOLON ^

   PRAGMA                                 => reduce 4 tokens to exit_statement 80.2
   BEGIN                                  => reduce 4 tokens to exit_statement 80.2
   CASE                                   => reduce 4 tokens to exit_statement 80.2
   DECLARE                                => reduce 4 tokens to exit_statement 80.2
   ELSE                                   => reduce 4 tokens to exit_statement 80.2
   ELSIF                                  => reduce 4 tokens to exit_statement 80.2
   END                                    => reduce 4 tokens to exit_statement 80.2
   EXIT                                   => reduce 4 tokens to exit_statement 80.2
   EXCEPTION                              => reduce 4 tokens to exit_statement 80.2
   FOR                                    => reduce 4 tokens to exit_statement 80.2
   FUNCTION                               => reduce 4 tokens to exit_statement 80.2
   IF                                     => reduce 4 tokens to exit_statement 80.2
   LOOP                                   => reduce 4 tokens to exit_statement 80.2
   PACKAGE                                => reduce 4 tokens to exit_statement 80.2
   PROCEDURE                              => reduce 4 tokens to exit_statement 80.2
   RETURN                                 => reduce 4 tokens to exit_statement 80.2
   TYPE                                   => reduce 4 tokens to exit_statement 80.2
   WHEN                                   => reduce 4 tokens to exit_statement 80.2
   IDENTIFIER                             => reduce 4 tokens to exit_statement 80.2
   Wisi_EOI                               => reduce 4 tokens to exit_statement 80.2
   default                                => ERROR

   Minimal_Complete_Actions => (4 exit_statement 80.2)

State 187:
     80.0:exit_statement <= EXIT IDENTIFIER WHEN expression ^ SEMICOLON

   SEMICOLON                              => shift and goto state 238 80.0
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 80.0)

State 188:
     93.0:iteration_scheme <= FOR IDENTIFIER IN discrete_subtype_definition ^

   LOOP                                   => reduce 4 tokens to iteration_scheme 93.0
   default                                => ERROR

   Minimal_Complete_Actions => (4 iteration_scheme 93.0)

State 189:
     96.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     96.1:name <= name ^ actual_parameter_part
    105.2:primary <= name ^
    113.0:selected_component <= name ^ DOT IDENTIFIER
    123.0:subtype_indication <= name ^ constraint
    123.1:subtype_indication <= name ^

   AND                                    => reduce 1 tokens to primary 105.2
   LEFT_PAREN                             => shift and goto state 208 58.0
   LOOP                                   => reduce 1 tokens to subtype_indication 123.1
   OR                                     => reduce 1 tokens to primary 105.2
   RANGE                                  => shift and goto state 209 73.0
   RIGHT_PAREN                            => reduce 1 tokens to primary 105.2,
                                             reduce 1 tokens to subtype_indication 123.1
   XOR                                    => reduce 1 tokens to primary 105.2
   AMPERSAND                              => reduce 1 tokens to primary 105.2
   COMMA                                  => reduce 1 tokens to primary 105.2
   DOT                                    => shift and goto state 89 113.0
   DOT_DOT                                => reduce 1 tokens to primary 105.2
   EQUAL                                  => reduce 1 tokens to primary 105.2
   GREATER                                => reduce 1 tokens to primary 105.2
   GREATER_EQUAL                          => reduce 1 tokens to primary 105.2
   LESS                                   => reduce 1 tokens to primary 105.2
   LESS_EQUAL                             => reduce 1 tokens to primary 105.2
   MINUS                                  => reduce 1 tokens to primary 105.2
   PLUS                                   => reduce 1 tokens to primary 105.2
   SLASH                                  => reduce 1 tokens to primary 105.2
   SLASH_EQUAL                            => reduce 1 tokens to primary 105.2
   STAR                                   => reduce 1 tokens to primary 105.2
   default                                => ERROR

   actual_parameter_part                  goto state 91
   constraint                             goto state 210
   index_constraint                       goto state 211

   Minimal_Complete_Actions => ((1 primary 105.2), (LEFT_PAREN 58.0), (1 subtype_indication 123.1))

State 190:
     76.1:discrete_subtype_definition <= range_g ^

   LOOP                                   => reduce 1 tokens to discrete_subtype_definition 76.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 discrete_subtype_definition 76.1)

State 191:
    109.0:range_g <= simple_expression ^ DOT_DOT simple_expression

   DOT_DOT                                => shift and goto state 226 109.0
   default                                => ERROR

   Minimal_Complete_Actions => (DOT_DOT 109.0)

State 192:
     76.0:discrete_subtype_definition <= subtype_indication ^

   LOOP                                   => reduce 1 tokens to discrete_subtype_definition 76.0
   RIGHT_PAREN                            => reduce 1 tokens to discrete_subtype_definition 76.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 discrete_subtype_definition 76.0)

State 193:
     61.0:association <= IDENTIFIER ^ EQUAL_GREATER expression
     96.2:name <= IDENTIFIER ^
    102.0:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER COLON_EQUAL expression
    102.1:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER

   AND                                    => reduce 1 tokens to name 96.2
   LEFT_PAREN                             => reduce 1 tokens to name 96.2
   OR                                     => reduce 1 tokens to name 96.2
   RIGHT_PAREN                            => reduce 1 tokens to name 96.2
   XOR                                    => reduce 1 tokens to name 96.2
   AMPERSAND                              => reduce 1 tokens to name 96.2
   COLON                                  => shift and goto state 239 102.0
   COMMA                                  => reduce 1 tokens to name 96.2
   DOT                                    => reduce 1 tokens to name 96.2
   DOT_DOT                                => reduce 1 tokens to name 96.2
   EQUAL                                  => reduce 1 tokens to name 96.2
   EQUAL_GREATER                          => shift and goto state 221 61.0
   GREATER                                => reduce 1 tokens to name 96.2
   GREATER_EQUAL                          => reduce 1 tokens to name 96.2
   LESS                                   => reduce 1 tokens to name 96.2
   LESS_EQUAL                             => reduce 1 tokens to name 96.2
   MINUS                                  => reduce 1 tokens to name 96.2
   PLUS                                   => reduce 1 tokens to name 96.2
   SLASH                                  => reduce 1 tokens to name 96.2
   SLASH_EQUAL                            => reduce 1 tokens to name 96.2
   STAR                                   => reduce 1 tokens to name 96.2
   default                                => ERROR

   Minimal_Complete_Actions => ((EQUAL_GREATER 61.0), (1 name 96.2), (COLON 102.0))

State 194:
    134.0:parameter_specification_SEMICOLON_list <= parameter_specification ^

   RIGHT_PAREN                            => reduce 1 tokens to parameter_specification_SEMICOLON_list 134.0
   SEMICOLON                              => reduce 1 tokens to parameter_specification_SEMICOLON_list 134.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 parameter_specification_SEMICOLON_list 134.0)

State 195:
     85.0:formal_part <= LEFT_PAREN parameter_specification_SEMICOLON_list ^ RIGHT_PAREN
    134.1:parameter_specification_SEMICOLON_list <= parameter_specification_SEMICOLON_list ^ SEMICOLON parameter_specification
    134.2:parameter_specification_SEMICOLON_list <= parameter_specification_SEMICOLON_list ^ SEMICOLON parameter_specification_SEMICOLON_list

   RIGHT_PAREN                            => shift and goto state 240 85.0
   SEMICOLON                              => shift and goto state 241 134.1
   default                                => ERROR

   Minimal_Complete_Actions => (RIGHT_PAREN 85.0)

State 196:
    100.1:parameter_and_result_profile <= RETURN IDENTIFIER ^

   IS                                     => reduce 2 tokens to parameter_and_result_profile 100.1
   WITH                                   => reduce 2 tokens to parameter_and_result_profile 100.1
   SEMICOLON                              => reduce 2 tokens to parameter_and_result_profile 100.1
   default                                => ERROR

   Minimal_Complete_Actions => (2 parameter_and_result_profile 100.1)

State 197:
    100.0:parameter_and_result_profile <= formal_part RETURN ^ IDENTIFIER

   IDENTIFIER                             => shift and goto state 242 100.0
   default                                => ERROR

   Minimal_Complete_Actions => (IDENTIFIER 100.0)

State 198:
     91.0:if_statement <= IF expression THEN sequence_of_statements ^ ELSIF_expression_list ELSE sequence_of_statements END IF SEMICOLON
     91.1:if_statement <= IF expression THEN sequence_of_statements ^ ELSIF_expression_list END IF SEMICOLON
     91.2:if_statement <= IF expression THEN sequence_of_statements ^ ELSE sequence_of_statements END IF SEMICOLON
     91.3:if_statement <= IF expression THEN sequence_of_statements ^ END IF SEMICOLON
    114.1:sequence_of_statements <= sequence_of_statements ^ statement
    114.2:sequence_of_statements <= sequence_of_statements ^ sequence_of_statements

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   ELSE                                   => shift and goto state 243 91.2
   ELSIF                                  => shift and goto state 244 136.0
   END                                    => shift and goto state 245 91.3
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 133
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 134
   ELSIF_expression_list                  goto state 246

   Minimal_Complete_Actions => (END 91.3)

State 199:
     94.1:loop_statement <= LOOP sequence_of_statements END LOOP ^ identifier_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to identifier_opt 90.1
   IDENTIFIER                             => shift and goto state 247 90.0
   default                                => ERROR

   identifier_opt                         goto state 248

   Minimal_Complete_Actions => (0 identifier_opt 90.1)

State 200:
     99.2:package_body <= PACKAGE BODY name IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     99.3:package_body <= PACKAGE BODY name IS ^ declarative_part END name_opt SEMICOLON

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to declarative_part 75.1
   END                                    => reduce 0 tokens to declarative_part 75.1
   FUNCTION                               => shift and goto state 5 87.0
   PACKAGE                                => shift and goto state 8 88.0
   PROCEDURE                              => shift and goto state 9 88.1
   TYPE                                   => shift and goto state 11 86.0
   IDENTIFIER                             => shift and goto state 148 98.0
   default                                => ERROR

   body_g                                 goto state 16
   body_stub                              goto state 17
   declaration                            goto state 149
   declarative_part                       goto state 249
   full_type_declaration                  goto state 25
   function_specification                 goto state 26
   generic_instantiation                  goto state 27
   object_declaration                     goto state 32
   package_body                           goto state 33
   pragma_g                               goto state 151
   procedure_specification                goto state 36
   proper_body                            goto state 37
   subprogram_body                        goto state 42
   subprogram_body_stub                   goto state 43
   subprogram_declaration                 goto state 44
   subprogram_specification               goto state 45
   type_declaration                       goto state 46
   declaration_list                       goto state 152

   Minimal_Complete_Actions => (0 declarative_part 75.1)

State 201:
     99.0:package_body <= PACKAGE BODY name aspect_specification ^ IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     99.1:package_body <= PACKAGE BODY name aspect_specification ^ IS declarative_part END name_opt SEMICOLON

   IS                                     => shift and goto state 250 99.0
   default                                => ERROR

   Minimal_Complete_Actions => (IS 99.0)

State 202:
     88.0:generic_instantiation <= PACKAGE name IS NEW ^ name SEMICOLON

   IDENTIFIER                             => shift and goto state 53 96.2
   default                                => ERROR

   name                                   goto state 251
   selected_component                     goto state 38

   Minimal_Complete_Actions => (IDENTIFIER 96.2)

State 203:
     88.1:generic_instantiation <= PROCEDURE name IS NEW ^ name SEMICOLON

   IDENTIFIER                             => shift and goto state 53 96.2
   default                                => ERROR

   name                                   goto state 252
   selected_component                     goto state 38

   Minimal_Complete_Actions => (IDENTIFIER 96.2)

State 204:
     82.0:extended_return_object_declaration <= IDENTIFIER COLON subtype_indication ^

   SEMICOLON                              => reduce 3 tokens to extended_return_object_declaration 82.0
   default                                => ERROR

   Minimal_Complete_Actions => (3 extended_return_object_declaration 82.0)

State 205:
     77.0:enumeration_type_definition <= LEFT_PAREN ^ IDENTIFIER_COMMA_list RIGHT_PAREN

   IDENTIFIER                             => shift and goto state 253 130.0
   default                                => ERROR

   IDENTIFIER_COMMA_list                  goto state 254

   Minimal_Complete_Actions => (IDENTIFIER 130.0)

State 206:
    126.0:type_definition <= enumeration_type_definition ^

   SEMICOLON                              => reduce 1 tokens to type_definition 126.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 type_definition 126.0)

State 207:
     86.0:full_type_declaration <= TYPE IDENTIFIER IS type_definition ^ SEMICOLON

   SEMICOLON                              => shift and goto state 255 86.0
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 86.0)

State 208:
     58.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN
     92.0:index_constraint <= LEFT_PAREN ^ discrete_subtype_definition RIGHT_PAREN
     96.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 154 61.0
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   association                            goto state 155
   association_list                       goto state 156
   discrete_subtype_definition            goto state 256
   expression                             goto state 157
   factor                                 goto state 56
   name                                   goto state 189
   paren_expression                       goto state 58
   primary                                goto state 59
   range_g                                goto state 257
   range_list                             goto state 159
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 160
   subtype_indication                     goto state 192
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => ((NUMERIC_LITERAL 105.0), (IDENTIFIER 61.0))

State 209:
     73.0:constraint <= RANGE ^ range_g

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   range_g                                goto state 258
   selected_component                     goto state 38
   simple_expression                      goto state 191
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 210:
    123.0:subtype_indication <= name constraint ^

   LOOP                                   => reduce 2 tokens to subtype_indication 123.0
   RIGHT_PAREN                            => reduce 2 tokens to subtype_indication 123.0
   COLON_EQUAL                            => reduce 2 tokens to subtype_indication 123.0
   SEMICOLON                              => reduce 2 tokens to subtype_indication 123.0
   default                                => ERROR

   Minimal_Complete_Actions => (2 subtype_indication 123.0)

State 211:
     73.1:constraint <= index_constraint ^

   LOOP                                   => reduce 1 tokens to constraint 73.1
   RIGHT_PAREN                            => reduce 1 tokens to constraint 73.1
   COLON_EQUAL                            => reduce 1 tokens to constraint 73.1
   SEMICOLON                              => reduce 1 tokens to constraint 73.1
   default                                => ERROR

   Minimal_Complete_Actions => (1 constraint 73.1)

State 212:
     98.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL ^ expression SEMICOLON

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   expression                             goto state 259
   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 213:
     98.1:object_declaration <= IDENTIFIER COLON subtype_indication SEMICOLON ^

   PRAGMA                                 => reduce 4 tokens to object_declaration 98.1
   BEGIN                                  => reduce 4 tokens to object_declaration 98.1
   CASE                                   => reduce 4 tokens to object_declaration 98.1
   DECLARE                                => reduce 4 tokens to object_declaration 98.1
   END                                    => reduce 4 tokens to object_declaration 98.1
   EXIT                                   => reduce 4 tokens to object_declaration 98.1
   FOR                                    => reduce 4 tokens to object_declaration 98.1
   FUNCTION                               => reduce 4 tokens to object_declaration 98.1
   IF                                     => reduce 4 tokens to object_declaration 98.1
   LOOP                                   => reduce 4 tokens to object_declaration 98.1
   PACKAGE                                => reduce 4 tokens to object_declaration 98.1
   PROCEDURE                              => reduce 4 tokens to object_declaration 98.1
   RETURN                                 => reduce 4 tokens to object_declaration 98.1
   TYPE                                   => reduce 4 tokens to object_declaration 98.1
   IDENTIFIER                             => reduce 4 tokens to object_declaration 98.1
   Wisi_EOI                               => reduce 4 tokens to object_declaration 98.1
   default                                => ERROR

   Minimal_Complete_Actions => (4 object_declaration 98.1)

State 214:
     65.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END ^ identifier_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to identifier_opt 90.1
   IDENTIFIER                             => shift and goto state 247 90.0
   default                                => ERROR

   identifier_opt                         goto state 260

   Minimal_Complete_Actions => (0 identifier_opt 90.1)

State 215:
     89.0:handled_sequence_of_statements <= sequence_of_statements EXCEPTION ^ exception_handler_list
     89.1:handled_sequence_of_statements <= sequence_of_statements EXCEPTION ^

   END                                    => reduce 2 tokens to handled_sequence_of_statements 89.1
   WHEN                                   => shift and goto state 261 79.0
   default                                => ERROR

   exception_handler                      goto state 262
   exception_handler_list                 goto state 263

   Minimal_Complete_Actions => (2 handled_sequence_of_statements 89.1)

State 216:
     98.0:object_declaration <= IDENTIFIER COLON ^ subtype_indication COLON_EQUAL expression SEMICOLON
     98.1:object_declaration <= IDENTIFIER COLON ^ subtype_indication SEMICOLON

   IDENTIFIER                             => shift and goto state 53 96.2
   default                                => ERROR

   name                                   goto state 144
   selected_component                     goto state 38
   subtype_indication                     goto state 145

   Minimal_Complete_Actions => (IDENTIFIER 96.2)

State 217:
     65.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN ^ handled_sequence_of_statements END identifier_opt SEMICOLON

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   handled_sequence_of_statements         goto state 264
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 147
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 74

   Minimal_Complete_Actions => (EXIT 80.0)

State 218:
    129.0:declaration_list <= declaration ^
    129.1:declaration_list <= declaration_list declaration ^

   PRAGMA                                 => reduce 2 tokens to declaration_list 129.1
   BEGIN                                  => reduce 2 tokens to declaration_list 129.1
   END                                    => reduce 2 tokens to declaration_list 129.1
   FUNCTION                               => reduce 2 tokens to declaration_list 129.1
   PACKAGE                                => reduce 2 tokens to declaration_list 129.1
   PROCEDURE                              => reduce 2 tokens to declaration_list 129.1
   TYPE                                   => reduce 2 tokens to declaration_list 129.1
   IDENTIFIER                             => reduce 2 tokens to declaration_list 129.1
   default                                => ERROR

   Minimal_Complete_Actions => ((1 declaration_list 129.0), (2 declaration_list 129.1))

State 219:
    129.1:declaration_list <= declaration_list ^ declaration
    129.2:declaration_list <= declaration_list declaration_list ^
    129.2:declaration_list <= declaration_list ^ declaration_list

   PRAGMA                                 => reduce 2 tokens to declaration_list 129.2
   BEGIN                                  => reduce 2 tokens to declaration_list 129.2
   END                                    => reduce 2 tokens to declaration_list 129.2
   FUNCTION                               => reduce 2 tokens to declaration_list 129.2
   PACKAGE                                => reduce 2 tokens to declaration_list 129.2
   PROCEDURE                              => reduce 2 tokens to declaration_list 129.2
   TYPE                                   => reduce 2 tokens to declaration_list 129.2
   IDENTIFIER                             => reduce 2 tokens to declaration_list 129.2
   default                                => ERROR

   body_g                                 goto state 16
   body_stub                              goto state 17
   declaration                            goto state 218
   full_type_declaration                  goto state 25
   function_specification                 goto state 26
   generic_instantiation                  goto state 27
   object_declaration                     goto state 32
   package_body                           goto state 33
   pragma_g                               goto state 151
   procedure_specification                goto state 36
   proper_body                            goto state 37
   subprogram_body                        goto state 42
   subprogram_body_stub                   goto state 43
   subprogram_declaration                 goto state 44
   subprogram_specification               goto state 45
   type_declaration                       goto state 46
   declaration_list                       goto state 219

   Minimal_Complete_Actions => (2 declaration_list 129.2)

State 220:
     94.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END ^ LOOP identifier_opt SEMICOLON

   LOOP                                   => shift and goto state 265 94.0
   default                                => ERROR

   Minimal_Complete_Actions => (LOOP 94.0)

State 221:
     61.0:association <= IDENTIFIER EQUAL_GREATER ^ expression

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   expression                             goto state 266
   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 222:
     58.0:actual_parameter_part <= LEFT_PAREN association_list RIGHT_PAREN ^

   AND                                    => reduce 3 tokens to actual_parameter_part 58.0
   IS                                     => reduce 3 tokens to actual_parameter_part 58.0
   LEFT_PAREN                             => reduce 3 tokens to actual_parameter_part 58.0
   LOOP                                   => reduce 3 tokens to actual_parameter_part 58.0
   OR                                     => reduce 3 tokens to actual_parameter_part 58.0
   RANGE                                  => reduce 3 tokens to actual_parameter_part 58.0
   RETURN                                 => reduce 3 tokens to actual_parameter_part 58.0
   RIGHT_PAREN                            => reduce 3 tokens to actual_parameter_part 58.0
   THEN                                   => reduce 3 tokens to actual_parameter_part 58.0
   WITH                                   => reduce 3 tokens to actual_parameter_part 58.0
   XOR                                    => reduce 3 tokens to actual_parameter_part 58.0
   AMPERSAND                              => reduce 3 tokens to actual_parameter_part 58.0
   COLON_EQUAL                            => reduce 3 tokens to actual_parameter_part 58.0
   COMMA                                  => reduce 3 tokens to actual_parameter_part 58.0
   DOT                                    => reduce 3 tokens to actual_parameter_part 58.0
   DOT_DOT                                => reduce 3 tokens to actual_parameter_part 58.0
   EQUAL                                  => reduce 3 tokens to actual_parameter_part 58.0
   EQUAL_GREATER                          => reduce 3 tokens to actual_parameter_part 58.0
   GREATER                                => reduce 3 tokens to actual_parameter_part 58.0
   GREATER_EQUAL                          => reduce 3 tokens to actual_parameter_part 58.0
   LESS                                   => reduce 3 tokens to actual_parameter_part 58.0
   LESS_EQUAL                             => reduce 3 tokens to actual_parameter_part 58.0
   MINUS                                  => reduce 3 tokens to actual_parameter_part 58.0
   PLUS                                   => reduce 3 tokens to actual_parameter_part 58.0
   SEMICOLON                              => reduce 3 tokens to actual_parameter_part 58.0
   SLASH                                  => reduce 3 tokens to actual_parameter_part 58.0
   SLASH_EQUAL                            => reduce 3 tokens to actual_parameter_part 58.0
   STAR                                   => reduce 3 tokens to actual_parameter_part 58.0
   default                                => ERROR

   Minimal_Complete_Actions => (3 actual_parameter_part 58.0)

State 223:
     62.1:association_list <= association_list COMMA ^ association
     62.2:association_list <= association_list COMMA ^ association_list

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 154 61.0
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   association                            goto state 267
   association_list                       goto state 268
   expression                             goto state 157
   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => 

State 224:
     96.0:name <= name LEFT_PAREN range_list RIGHT_PAREN ^

   AND                                    => reduce 4 tokens to name 96.0
   IS                                     => reduce 4 tokens to name 96.0
   LEFT_PAREN                             => reduce 4 tokens to name 96.0
   LOOP                                   => reduce 4 tokens to name 96.0
   OR                                     => reduce 4 tokens to name 96.0
   RANGE                                  => reduce 4 tokens to name 96.0
   RETURN                                 => reduce 4 tokens to name 96.0
   RIGHT_PAREN                            => reduce 4 tokens to name 96.0
   THEN                                   => reduce 4 tokens to name 96.0
   WITH                                   => reduce 4 tokens to name 96.0
   XOR                                    => reduce 4 tokens to name 96.0
   AMPERSAND                              => reduce 4 tokens to name 96.0
   COLON_EQUAL                            => reduce 4 tokens to name 96.0
   COMMA                                  => reduce 4 tokens to name 96.0
   DOT                                    => reduce 4 tokens to name 96.0
   DOT_DOT                                => reduce 4 tokens to name 96.0
   EQUAL                                  => reduce 4 tokens to name 96.0
   EQUAL_GREATER                          => reduce 4 tokens to name 96.0
   GREATER                                => reduce 4 tokens to name 96.0
   GREATER_EQUAL                          => reduce 4 tokens to name 96.0
   LESS                                   => reduce 4 tokens to name 96.0
   LESS_EQUAL                             => reduce 4 tokens to name 96.0
   MINUS                                  => reduce 4 tokens to name 96.0
   PLUS                                   => reduce 4 tokens to name 96.0
   SEMICOLON                              => reduce 4 tokens to name 96.0
   SLASH                                  => reduce 4 tokens to name 96.0
   SLASH_EQUAL                            => reduce 4 tokens to name 96.0
   STAR                                   => reduce 4 tokens to name 96.0
   default                                => ERROR

   Minimal_Complete_Actions => (4 name 96.0)

State 225:
    110.0:range_list <= range_list COMMA ^ range_g

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   range_g                                goto state 269
   selected_component                     goto state 38
   simple_expression                      goto state 191
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 226:
    109.0:range_g <= simple_expression DOT_DOT ^ simple_expression

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   selected_component                     goto state 38
   simple_expression                      goto state 270
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 227:
     60.0:assignment_statement <= name COLON_EQUAL expression SEMICOLON ^

   PRAGMA                                 => reduce 4 tokens to assignment_statement 60.0
   BEGIN                                  => reduce 4 tokens to assignment_statement 60.0
   CASE                                   => reduce 4 tokens to assignment_statement 60.0
   DECLARE                                => reduce 4 tokens to assignment_statement 60.0
   ELSE                                   => reduce 4 tokens to assignment_statement 60.0
   ELSIF                                  => reduce 4 tokens to assignment_statement 60.0
   END                                    => reduce 4 tokens to assignment_statement 60.0
   EXIT                                   => reduce 4 tokens to assignment_statement 60.0
   EXCEPTION                              => reduce 4 tokens to assignment_statement 60.0
   FOR                                    => reduce 4 tokens to assignment_statement 60.0
   FUNCTION                               => reduce 4 tokens to assignment_statement 60.0
   IF                                     => reduce 4 tokens to assignment_statement 60.0
   LOOP                                   => reduce 4 tokens to assignment_statement 60.0
   PACKAGE                                => reduce 4 tokens to assignment_statement 60.0
   PROCEDURE                              => reduce 4 tokens to assignment_statement 60.0
   RETURN                                 => reduce 4 tokens to assignment_statement 60.0
   TYPE                                   => reduce 4 tokens to assignment_statement 60.0
   WHEN                                   => reduce 4 tokens to assignment_statement 60.0
   IDENTIFIER                             => reduce 4 tokens to assignment_statement 60.0
   Wisi_EOI                               => reduce 4 tokens to assignment_statement 60.0
   default                                => ERROR

   Minimal_Complete_Actions => (4 assignment_statement 60.0)

State 228:
    120.0:subprogram_body_stub <= subprogram_specification IS SEPARATE SEMICOLON ^

   PRAGMA                                 => reduce 4 tokens to subprogram_body_stub 120.0
   BEGIN                                  => reduce 4 tokens to subprogram_body_stub 120.0
   CASE                                   => reduce 4 tokens to subprogram_body_stub 120.0
   DECLARE                                => reduce 4 tokens to subprogram_body_stub 120.0
   END                                    => reduce 4 tokens to subprogram_body_stub 120.0
   EXIT                                   => reduce 4 tokens to subprogram_body_stub 120.0
   FOR                                    => reduce 4 tokens to subprogram_body_stub 120.0
   FUNCTION                               => reduce 4 tokens to subprogram_body_stub 120.0
   IF                                     => reduce 4 tokens to subprogram_body_stub 120.0
   LOOP                                   => reduce 4 tokens to subprogram_body_stub 120.0
   PACKAGE                                => reduce 4 tokens to subprogram_body_stub 120.0
   PROCEDURE                              => reduce 4 tokens to subprogram_body_stub 120.0
   RETURN                                 => reduce 4 tokens to subprogram_body_stub 120.0
   TYPE                                   => reduce 4 tokens to subprogram_body_stub 120.0
   IDENTIFIER                             => reduce 4 tokens to subprogram_body_stub 120.0
   Wisi_EOI                               => reduce 4 tokens to subprogram_body_stub 120.0
   default                                => ERROR

   Minimal_Complete_Actions => (4 subprogram_body_stub 120.0)

State 229:
    119.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   handled_sequence_of_statements         goto state 271
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 147
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 74

   Minimal_Complete_Actions => (EXIT 80.0)

State 230:
    119.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON

   BEGIN                                  => shift and goto state 272 119.0
   default                                => ERROR

   Minimal_Complete_Actions => (BEGIN 119.0)

State 231:
     69.0:case_statement_alternative <= WHEN NUMERIC_LITERAL ^ EQUAL_GREATER sequence_of_statements

   EQUAL_GREATER                          => shift and goto state 273 69.0
   default                                => ERROR

   Minimal_Complete_Actions => (EQUAL_GREATER 69.0)

State 232:
     68.0:case_statement <= CASE expression IS case_statement_alternative_list END ^ CASE SEMICOLON

   CASE                                   => shift and goto state 274 68.0
   default                                => ERROR

   Minimal_Complete_Actions => (CASE 68.0)

State 233:
    128.0:case_statement_alternative_list <= case_statement_alternative ^
    128.1:case_statement_alternative_list <= case_statement_alternative_list case_statement_alternative ^

   END                                    => reduce 2 tokens to case_statement_alternative_list 128.1
   WHEN                                   => reduce 2 tokens to case_statement_alternative_list 128.1
   default                                => ERROR

   Minimal_Complete_Actions => ((1 case_statement_alternative_list 128.0), (2 case_statement_alternative_list 128.1))

State 234:
    128.1:case_statement_alternative_list <= case_statement_alternative_list ^ case_statement_alternative
    128.2:case_statement_alternative_list <= case_statement_alternative_list case_statement_alternative_list ^
    128.2:case_statement_alternative_list <= case_statement_alternative_list ^ case_statement_alternative_list

   END                                    => reduce 2 tokens to case_statement_alternative_list 128.2
   WHEN                                   => reduce 2 tokens to case_statement_alternative_list 128.2
   default                                => ERROR

   case_statement_alternative             goto state 233
   case_statement_alternative_list        goto state 234

   Minimal_Complete_Actions => (2 case_statement_alternative_list 128.2)

State 235:
    131.0:AND_relation_list <= AND relation ^
    131.1:AND_relation_list <= AND_relation_list AND relation ^

   AND                                    => reduce 3 tokens to AND_relation_list 131.1
   IS                                     => reduce 3 tokens to AND_relation_list 131.1
   RIGHT_PAREN                            => reduce 3 tokens to AND_relation_list 131.1
   THEN                                   => reduce 3 tokens to AND_relation_list 131.1
   COMMA                                  => reduce 3 tokens to AND_relation_list 131.1
   SEMICOLON                              => reduce 3 tokens to AND_relation_list 131.1
   default                                => ERROR

   Minimal_Complete_Actions => ((2 AND_relation_list 131.0), (3 AND_relation_list 131.1))

State 236:
    132.0:OR_relation_list <= OR relation ^
    132.1:OR_relation_list <= OR_relation_list OR relation ^

   IS                                     => reduce 3 tokens to OR_relation_list 132.1
   OR                                     => reduce 3 tokens to OR_relation_list 132.1
   RIGHT_PAREN                            => reduce 3 tokens to OR_relation_list 132.1
   THEN                                   => reduce 3 tokens to OR_relation_list 132.1
   COMMA                                  => reduce 3 tokens to OR_relation_list 132.1
   SEMICOLON                              => reduce 3 tokens to OR_relation_list 132.1
   default                                => ERROR

   Minimal_Complete_Actions => ((2 OR_relation_list 132.0), (3 OR_relation_list 132.1))

State 237:
    133.0:XOR_relation_list <= XOR relation ^
    133.1:XOR_relation_list <= XOR_relation_list XOR relation ^

   IS                                     => reduce 3 tokens to XOR_relation_list 133.1
   RIGHT_PAREN                            => reduce 3 tokens to XOR_relation_list 133.1
   THEN                                   => reduce 3 tokens to XOR_relation_list 133.1
   XOR                                    => reduce 3 tokens to XOR_relation_list 133.1
   COMMA                                  => reduce 3 tokens to XOR_relation_list 133.1
   SEMICOLON                              => reduce 3 tokens to XOR_relation_list 133.1
   default                                => ERROR

   Minimal_Complete_Actions => ((2 XOR_relation_list 133.0), (3 XOR_relation_list 133.1))

State 238:
     80.0:exit_statement <= EXIT IDENTIFIER WHEN expression SEMICOLON ^

   PRAGMA                                 => reduce 5 tokens to exit_statement 80.0
   BEGIN                                  => reduce 5 tokens to exit_statement 80.0
   CASE                                   => reduce 5 tokens to exit_statement 80.0
   DECLARE                                => reduce 5 tokens to exit_statement 80.0
   ELSE                                   => reduce 5 tokens to exit_statement 80.0
   ELSIF                                  => reduce 5 tokens to exit_statement 80.0
   END                                    => reduce 5 tokens to exit_statement 80.0
   EXIT                                   => reduce 5 tokens to exit_statement 80.0
   EXCEPTION                              => reduce 5 tokens to exit_statement 80.0
   FOR                                    => reduce 5 tokens to exit_statement 80.0
   FUNCTION                               => reduce 5 tokens to exit_statement 80.0
   IF                                     => reduce 5 tokens to exit_statement 80.0
   LOOP                                   => reduce 5 tokens to exit_statement 80.0
   PACKAGE                                => reduce 5 tokens to exit_statement 80.0
   PROCEDURE                              => reduce 5 tokens to exit_statement 80.0
   RETURN                                 => reduce 5 tokens to exit_statement 80.0
   TYPE                                   => reduce 5 tokens to exit_statement 80.0
   WHEN                                   => reduce 5 tokens to exit_statement 80.0
   IDENTIFIER                             => reduce 5 tokens to exit_statement 80.0
   Wisi_EOI                               => reduce 5 tokens to exit_statement 80.0
   default                                => ERROR

   Minimal_Complete_Actions => (5 exit_statement 80.0)

State 239:
    102.0:parameter_specification <= IDENTIFIER COLON ^ IDENTIFIER COLON_EQUAL expression
    102.1:parameter_specification <= IDENTIFIER COLON ^ IDENTIFIER

   IDENTIFIER                             => shift and goto state 275 102.0
   default                                => ERROR

   Minimal_Complete_Actions => (IDENTIFIER 102.0)

State 240:
     85.0:formal_part <= LEFT_PAREN parameter_specification_SEMICOLON_list RIGHT_PAREN ^

   IS                                     => reduce 3 tokens to formal_part 85.0
   RETURN                                 => reduce 3 tokens to formal_part 85.0
   WITH                                   => reduce 3 tokens to formal_part 85.0
   SEMICOLON                              => reduce 3 tokens to formal_part 85.0
   default                                => ERROR

   Minimal_Complete_Actions => (3 formal_part 85.0)

State 241:
    134.1:parameter_specification_SEMICOLON_list <= parameter_specification_SEMICOLON_list SEMICOLON ^ parameter_specification
    134.2:parameter_specification_SEMICOLON_list <= parameter_specification_SEMICOLON_list SEMICOLON ^ parameter_specification_SEMICOLON_list

   IDENTIFIER                             => shift and goto state 276 102.0
   default                                => ERROR

   parameter_specification                goto state 277
   parameter_specification_SEMICOLON_list goto state 278

   Minimal_Complete_Actions => 

State 242:
    100.0:parameter_and_result_profile <= formal_part RETURN IDENTIFIER ^

   IS                                     => reduce 3 tokens to parameter_and_result_profile 100.0
   WITH                                   => reduce 3 tokens to parameter_and_result_profile 100.0
   SEMICOLON                              => reduce 3 tokens to parameter_and_result_profile 100.0
   default                                => ERROR

   Minimal_Complete_Actions => (3 parameter_and_result_profile 100.0)

State 243:
     91.2:if_statement <= IF expression THEN sequence_of_statements ELSE ^ sequence_of_statements END IF SEMICOLON

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 279
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 74

   Minimal_Complete_Actions => (EXIT 80.0)

State 244:
    136.0:ELSIF_expression_list <= ELSIF ^ expression THEN sequence_of_statements

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   expression                             goto state 280
   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 245:
     91.3:if_statement <= IF expression THEN sequence_of_statements END ^ IF SEMICOLON

   IF                                     => shift and goto state 281 91.3
   default                                => ERROR

   Minimal_Complete_Actions => (IF 91.3)

State 246:
     91.0:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list ^ ELSE sequence_of_statements END IF SEMICOLON
     91.1:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list ^ END IF SEMICOLON
    136.1:ELSIF_expression_list <= ELSIF_expression_list ^ ELSIF expression THEN sequence_of_statements
    136.2:ELSIF_expression_list <= ELSIF_expression_list ^ ELSIF_expression_list

   ELSE                                   => shift and goto state 282 91.0
   ELSIF                                  => shift and goto state 283 136.0
   END                                    => shift and goto state 284 91.1
   default                                => ERROR

   ELSIF_expression_list                  goto state 285

   Minimal_Complete_Actions => (END 91.1)

State 247:
     90.0:identifier_opt <= IDENTIFIER ^

   SEMICOLON                              => reduce 1 tokens to identifier_opt 90.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 identifier_opt 90.0)

State 248:
     94.1:loop_statement <= LOOP sequence_of_statements END LOOP identifier_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 286 94.1
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 94.1)

State 249:
     99.2:package_body <= PACKAGE BODY name IS declarative_part ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     99.3:package_body <= PACKAGE BODY name IS declarative_part ^ END name_opt SEMICOLON

   BEGIN                                  => shift and goto state 287 99.2
   END                                    => shift and goto state 288 99.3
   default                                => ERROR

   Minimal_Complete_Actions => (END 99.3)

State 250:
     99.0:package_body <= PACKAGE BODY name aspect_specification IS ^ declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     99.1:package_body <= PACKAGE BODY name aspect_specification IS ^ declarative_part END name_opt SEMICOLON

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to declarative_part 75.1
   END                                    => reduce 0 tokens to declarative_part 75.1
   FUNCTION                               => shift and goto state 5 87.0
   PACKAGE                                => shift and goto state 8 88.0
   PROCEDURE                              => shift and goto state 9 88.1
   TYPE                                   => shift and goto state 11 86.0
   IDENTIFIER                             => shift and goto state 148 98.0
   default                                => ERROR

   body_g                                 goto state 16
   body_stub                              goto state 17
   declaration                            goto state 149
   declarative_part                       goto state 289
   full_type_declaration                  goto state 25
   function_specification                 goto state 26
   generic_instantiation                  goto state 27
   object_declaration                     goto state 32
   package_body                           goto state 33
   pragma_g                               goto state 151
   procedure_specification                goto state 36
   proper_body                            goto state 37
   subprogram_body                        goto state 42
   subprogram_body_stub                   goto state 43
   subprogram_declaration                 goto state 44
   subprogram_specification               goto state 45
   type_declaration                       goto state 46
   declaration_list                       goto state 152

   Minimal_Complete_Actions => (0 declarative_part 75.1)

State 251:
     88.0:generic_instantiation <= PACKAGE name IS NEW name ^ SEMICOLON
     96.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     96.1:name <= name ^ actual_parameter_part
    113.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                             => shift and goto state 87 58.0
   DOT                                    => shift and goto state 89 113.0
   SEMICOLON                              => shift and goto state 290 88.0
   default                                => ERROR

   actual_parameter_part                  goto state 91

   Minimal_Complete_Actions => (SEMICOLON 88.0)

State 252:
     88.1:generic_instantiation <= PROCEDURE name IS NEW name ^ SEMICOLON
     96.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     96.1:name <= name ^ actual_parameter_part
    113.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                             => shift and goto state 87 58.0
   DOT                                    => shift and goto state 89 113.0
   SEMICOLON                              => shift and goto state 291 88.1
   default                                => ERROR

   actual_parameter_part                  goto state 91

   Minimal_Complete_Actions => (SEMICOLON 88.1)

State 253:
    130.0:IDENTIFIER_COMMA_list <= IDENTIFIER ^

   RIGHT_PAREN                            => reduce 1 tokens to IDENTIFIER_COMMA_list 130.0
   COMMA                                  => reduce 1 tokens to IDENTIFIER_COMMA_list 130.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 IDENTIFIER_COMMA_list 130.0)

State 254:
     77.0:enumeration_type_definition <= LEFT_PAREN IDENTIFIER_COMMA_list ^ RIGHT_PAREN
    130.1:IDENTIFIER_COMMA_list <= IDENTIFIER_COMMA_list ^ COMMA IDENTIFIER
    130.2:IDENTIFIER_COMMA_list <= IDENTIFIER_COMMA_list ^ COMMA IDENTIFIER_COMMA_list

   RIGHT_PAREN                            => shift and goto state 292 77.0
   COMMA                                  => shift and goto state 293 130.1
   default                                => ERROR

   Minimal_Complete_Actions => (RIGHT_PAREN 77.0)

State 255:
     86.0:full_type_declaration <= TYPE IDENTIFIER IS type_definition SEMICOLON ^

   PRAGMA                                 => reduce 5 tokens to full_type_declaration 86.0
   BEGIN                                  => reduce 5 tokens to full_type_declaration 86.0
   CASE                                   => reduce 5 tokens to full_type_declaration 86.0
   DECLARE                                => reduce 5 tokens to full_type_declaration 86.0
   END                                    => reduce 5 tokens to full_type_declaration 86.0
   EXIT                                   => reduce 5 tokens to full_type_declaration 86.0
   FOR                                    => reduce 5 tokens to full_type_declaration 86.0
   FUNCTION                               => reduce 5 tokens to full_type_declaration 86.0
   IF                                     => reduce 5 tokens to full_type_declaration 86.0
   LOOP                                   => reduce 5 tokens to full_type_declaration 86.0
   PACKAGE                                => reduce 5 tokens to full_type_declaration 86.0
   PROCEDURE                              => reduce 5 tokens to full_type_declaration 86.0
   RETURN                                 => reduce 5 tokens to full_type_declaration 86.0
   TYPE                                   => reduce 5 tokens to full_type_declaration 86.0
   IDENTIFIER                             => reduce 5 tokens to full_type_declaration 86.0
   Wisi_EOI                               => reduce 5 tokens to full_type_declaration 86.0
   default                                => ERROR

   Minimal_Complete_Actions => (5 full_type_declaration 86.0)

State 256:
     92.0:index_constraint <= LEFT_PAREN discrete_subtype_definition ^ RIGHT_PAREN

   RIGHT_PAREN                            => shift and goto state 294 92.0
   default                                => ERROR

   Minimal_Complete_Actions => (RIGHT_PAREN 92.0)

State 257:
     76.1:discrete_subtype_definition <= range_g ^
    110.1:range_list <= range_g ^

   RIGHT_PAREN                            => reduce 1 tokens to discrete_subtype_definition 76.1,
                                             reduce 1 tokens to range_list 110.1
   COMMA                                  => reduce 1 tokens to range_list 110.1
   default                                => ERROR

   Minimal_Complete_Actions => ((1 discrete_subtype_definition 76.1), (1 range_list 110.1))

State 258:
     73.0:constraint <= RANGE range_g ^

   LOOP                                   => reduce 2 tokens to constraint 73.0
   RIGHT_PAREN                            => reduce 2 tokens to constraint 73.0
   COLON_EQUAL                            => reduce 2 tokens to constraint 73.0
   SEMICOLON                              => reduce 2 tokens to constraint 73.0
   default                                => ERROR

   Minimal_Complete_Actions => (2 constraint 73.0)

State 259:
     98.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression ^ SEMICOLON

   SEMICOLON                              => shift and goto state 295 98.0
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 98.0)

State 260:
     65.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 296 65.1
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 65.1)

State 261:
     79.0:exception_handler <= WHEN ^ exception_choice EQUAL_GREATER sequence_of_statements

   IDENTIFIER                             => shift and goto state 53 96.2
   default                                => ERROR

   exception_choice                       goto state 297
   name                                   goto state 298
   selected_component                     goto state 38

   Minimal_Complete_Actions => (IDENTIFIER 96.2)

State 262:
    135.0:exception_handler_list <= exception_handler ^

   END                                    => reduce 1 tokens to exception_handler_list 135.0
   WHEN                                   => reduce 1 tokens to exception_handler_list 135.0
   default                                => ERROR

   Minimal_Complete_Actions => (1 exception_handler_list 135.0)

State 263:
     89.0:handled_sequence_of_statements <= sequence_of_statements EXCEPTION exception_handler_list ^
    135.1:exception_handler_list <= exception_handler_list ^ exception_handler
    135.2:exception_handler_list <= exception_handler_list ^ exception_handler_list

   END                                    => reduce 3 tokens to handled_sequence_of_statements 89.0
   WHEN                                   => shift and goto state 261 79.0
   default                                => ERROR

   exception_handler                      goto state 299
   exception_handler_list                 goto state 300

   Minimal_Complete_Actions => (3 handled_sequence_of_statements 89.0)

State 264:
     65.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements ^ END identifier_opt SEMICOLON

   END                                    => shift and goto state 301 65.0
   default                                => ERROR

   Minimal_Complete_Actions => (END 65.0)

State 265:
     94.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP ^ identifier_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to identifier_opt 90.1
   IDENTIFIER                             => shift and goto state 247 90.0
   default                                => ERROR

   identifier_opt                         goto state 302

   Minimal_Complete_Actions => (0 identifier_opt 90.1)

State 266:
     61.0:association <= IDENTIFIER EQUAL_GREATER expression ^

   IS                                     => reduce 3 tokens to association 61.0
   RIGHT_PAREN                            => reduce 3 tokens to association 61.0
   COMMA                                  => reduce 3 tokens to association 61.0
   default                                => ERROR

   Minimal_Complete_Actions => (3 association 61.0)

State 267:
     62.0:association_list <= association ^
     62.1:association_list <= association_list COMMA association ^

   IS                                     => reduce 3 tokens to association_list 62.1
   RIGHT_PAREN                            => reduce 3 tokens to association_list 62.1
   COMMA                                  => reduce 3 tokens to association_list 62.1
   default                                => ERROR

   Minimal_Complete_Actions => ((1 association_list 62.0), (3 association_list 62.1))

State 268:
     62.1:association_list <= association_list ^ COMMA association
     62.2:association_list <= association_list COMMA association_list ^
     62.2:association_list <= association_list ^ COMMA association_list

   IS                                     => reduce 3 tokens to association_list 62.2
   RIGHT_PAREN                            => reduce 3 tokens to association_list 62.2
   COMMA                                  => reduce 3 tokens to association_list 62.2
   default                                => ERROR

   Minimal_Complete_Actions => (3 association_list 62.2)

State 269:
    110.0:range_list <= range_list COMMA range_g ^

   RIGHT_PAREN                            => reduce 3 tokens to range_list 110.0
   COMMA                                  => reduce 3 tokens to range_list 110.0
   default                                => ERROR

   Minimal_Complete_Actions => (3 range_list 110.0)

State 270:
    109.0:range_g <= simple_expression DOT_DOT simple_expression ^

   LOOP                                   => reduce 3 tokens to range_g 109.0
   RIGHT_PAREN                            => reduce 3 tokens to range_g 109.0
   COLON_EQUAL                            => reduce 3 tokens to range_g 109.0
   COMMA                                  => reduce 3 tokens to range_g 109.0
   SEMICOLON                              => reduce 3 tokens to range_g 109.0
   default                                => ERROR

   Minimal_Complete_Actions => (3 range_g 109.0)

State 271:
    119.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON

   END                                    => shift and goto state 303 119.1
   default                                => ERROR

   Minimal_Complete_Actions => (END 119.1)

State 272:
    119.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   handled_sequence_of_statements         goto state 304
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 147
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 74

   Minimal_Complete_Actions => (EXIT 80.0)

State 273:
     69.0:case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER ^ sequence_of_statements

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 305
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 74

   Minimal_Complete_Actions => (EXIT 80.0)

State 274:
     68.0:case_statement <= CASE expression IS case_statement_alternative_list END CASE ^ SEMICOLON

   SEMICOLON                              => shift and goto state 306 68.0
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 68.0)

State 275:
    102.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER ^ COLON_EQUAL expression
    102.1:parameter_specification <= IDENTIFIER COLON IDENTIFIER ^

   RIGHT_PAREN                            => reduce 3 tokens to parameter_specification 102.1
   COLON_EQUAL                            => shift and goto state 307 102.0
   SEMICOLON                              => reduce 3 tokens to parameter_specification 102.1
   default                                => ERROR

   Minimal_Complete_Actions => ((COLON_EQUAL 102.0), (3 parameter_specification 102.1))

State 276:
    102.0:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER COLON_EQUAL expression
    102.1:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER

   COLON                                  => shift and goto state 239 102.0
   default                                => ERROR

   Minimal_Complete_Actions => (COLON 102.0)

State 277:
    134.0:parameter_specification_SEMICOLON_list <= parameter_specification ^
    134.1:parameter_specification_SEMICOLON_list <= parameter_specification_SEMICOLON_list SEMICOLON parameter_specification ^

   RIGHT_PAREN                            => reduce 3 tokens to parameter_specification_SEMICOLON_list 134.1
   SEMICOLON                              => reduce 3 tokens to parameter_specification_SEMICOLON_list 134.1
   default                                => ERROR

   Minimal_Complete_Actions => ((1 parameter_specification_SEMICOLON_list 134.0), (3 parameter_specification_SEMICOLON_list 134.1))

State 278:
    134.1:parameter_specification_SEMICOLON_list <= parameter_specification_SEMICOLON_list ^ SEMICOLON parameter_specification
    134.2:parameter_specification_SEMICOLON_list <= parameter_specification_SEMICOLON_list SEMICOLON parameter_specification_SEMICOLON_list ^
    134.2:parameter_specification_SEMICOLON_list <= parameter_specification_SEMICOLON_list ^ SEMICOLON parameter_specification_SEMICOLON_list

   RIGHT_PAREN                            => reduce 3 tokens to parameter_specification_SEMICOLON_list 134.2
   SEMICOLON                              => reduce 3 tokens to parameter_specification_SEMICOLON_list 134.2
   default                                => ERROR

   Minimal_Complete_Actions => (3 parameter_specification_SEMICOLON_list 134.2)

State 279:
     91.2:if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements ^ END IF SEMICOLON
    114.1:sequence_of_statements <= sequence_of_statements ^ statement
    114.2:sequence_of_statements <= sequence_of_statements ^ sequence_of_statements

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   END                                    => shift and goto state 308 91.2
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 133
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 134

   Minimal_Complete_Actions => (END 91.2)

State 280:
    136.0:ELSIF_expression_list <= ELSIF expression ^ THEN sequence_of_statements

   THEN                                   => shift and goto state 309 136.0
   default                                => ERROR

   Minimal_Complete_Actions => (THEN 136.0)

State 281:
     91.3:if_statement <= IF expression THEN sequence_of_statements END IF ^ SEMICOLON

   SEMICOLON                              => shift and goto state 310 91.3
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 91.3)

State 282:
     91.0:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list ELSE ^ sequence_of_statements END IF SEMICOLON

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 311
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 74

   Minimal_Complete_Actions => (EXIT 80.0)

State 283:
    136.0:ELSIF_expression_list <= ELSIF ^ expression THEN sequence_of_statements
    136.1:ELSIF_expression_list <= ELSIF_expression_list ELSIF ^ expression THEN sequence_of_statements

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   expression                             goto state 312
   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 284:
     91.1:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list END ^ IF SEMICOLON

   IF                                     => shift and goto state 313 91.1
   default                                => ERROR

   Minimal_Complete_Actions => (IF 91.1)

State 285:
    136.1:ELSIF_expression_list <= ELSIF_expression_list ^ ELSIF expression THEN sequence_of_statements
    136.2:ELSIF_expression_list <= ELSIF_expression_list ELSIF_expression_list ^
    136.2:ELSIF_expression_list <= ELSIF_expression_list ^ ELSIF_expression_list

   ELSE                                   => reduce 2 tokens to ELSIF_expression_list 136.2
   ELSIF                                  => reduce 2 tokens to ELSIF_expression_list 136.2
   END                                    => reduce 2 tokens to ELSIF_expression_list 136.2
   default                                => ERROR

   ELSIF_expression_list                  goto state 285

   Minimal_Complete_Actions => (2 ELSIF_expression_list 136.2)

State 286:
     94.1:loop_statement <= LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ^

   PRAGMA                                 => reduce 6 tokens to loop_statement 94.1
   BEGIN                                  => reduce 6 tokens to loop_statement 94.1
   CASE                                   => reduce 6 tokens to loop_statement 94.1
   DECLARE                                => reduce 6 tokens to loop_statement 94.1
   ELSE                                   => reduce 6 tokens to loop_statement 94.1
   ELSIF                                  => reduce 6 tokens to loop_statement 94.1
   END                                    => reduce 6 tokens to loop_statement 94.1
   EXIT                                   => reduce 6 tokens to loop_statement 94.1
   EXCEPTION                              => reduce 6 tokens to loop_statement 94.1
   FOR                                    => reduce 6 tokens to loop_statement 94.1
   FUNCTION                               => reduce 6 tokens to loop_statement 94.1
   IF                                     => reduce 6 tokens to loop_statement 94.1
   LOOP                                   => reduce 6 tokens to loop_statement 94.1
   PACKAGE                                => reduce 6 tokens to loop_statement 94.1
   PROCEDURE                              => reduce 6 tokens to loop_statement 94.1
   RETURN                                 => reduce 6 tokens to loop_statement 94.1
   TYPE                                   => reduce 6 tokens to loop_statement 94.1
   WHEN                                   => reduce 6 tokens to loop_statement 94.1
   IDENTIFIER                             => reduce 6 tokens to loop_statement 94.1
   Wisi_EOI                               => reduce 6 tokens to loop_statement 94.1
   default                                => ERROR

   Minimal_Complete_Actions => (6 loop_statement 94.1)

State 287:
     99.2:package_body <= PACKAGE BODY name IS declarative_part BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   handled_sequence_of_statements         goto state 314
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 147
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 74

   Minimal_Complete_Actions => (EXIT 80.0)

State 288:
     99.3:package_body <= PACKAGE BODY name IS declarative_part END ^ name_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to name_opt 97.1
   IDENTIFIER                             => shift and goto state 53 96.2
   default                                => ERROR

   name                                   goto state 315
   name_opt                               goto state 316
   selected_component                     goto state 38

   Minimal_Complete_Actions => (0 name_opt 97.1)

State 289:
     99.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON
     99.1:package_body <= PACKAGE BODY name aspect_specification IS declarative_part ^ END name_opt SEMICOLON

   BEGIN                                  => shift and goto state 317 99.0
   END                                    => shift and goto state 318 99.1
   default                                => ERROR

   Minimal_Complete_Actions => (END 99.1)

State 290:
     88.0:generic_instantiation <= PACKAGE name IS NEW name SEMICOLON ^

   PRAGMA                                 => reduce 6 tokens to generic_instantiation 88.0
   BEGIN                                  => reduce 6 tokens to generic_instantiation 88.0
   CASE                                   => reduce 6 tokens to generic_instantiation 88.0
   DECLARE                                => reduce 6 tokens to generic_instantiation 88.0
   END                                    => reduce 6 tokens to generic_instantiation 88.0
   EXIT                                   => reduce 6 tokens to generic_instantiation 88.0
   FOR                                    => reduce 6 tokens to generic_instantiation 88.0
   FUNCTION                               => reduce 6 tokens to generic_instantiation 88.0
   IF                                     => reduce 6 tokens to generic_instantiation 88.0
   LOOP                                   => reduce 6 tokens to generic_instantiation 88.0
   PACKAGE                                => reduce 6 tokens to generic_instantiation 88.0
   PROCEDURE                              => reduce 6 tokens to generic_instantiation 88.0
   RETURN                                 => reduce 6 tokens to generic_instantiation 88.0
   TYPE                                   => reduce 6 tokens to generic_instantiation 88.0
   IDENTIFIER                             => reduce 6 tokens to generic_instantiation 88.0
   Wisi_EOI                               => reduce 6 tokens to generic_instantiation 88.0
   default                                => ERROR

   Minimal_Complete_Actions => (6 generic_instantiation 88.0)

State 291:
     88.1:generic_instantiation <= PROCEDURE name IS NEW name SEMICOLON ^

   PRAGMA                                 => reduce 6 tokens to generic_instantiation 88.1
   BEGIN                                  => reduce 6 tokens to generic_instantiation 88.1
   CASE                                   => reduce 6 tokens to generic_instantiation 88.1
   DECLARE                                => reduce 6 tokens to generic_instantiation 88.1
   END                                    => reduce 6 tokens to generic_instantiation 88.1
   EXIT                                   => reduce 6 tokens to generic_instantiation 88.1
   FOR                                    => reduce 6 tokens to generic_instantiation 88.1
   FUNCTION                               => reduce 6 tokens to generic_instantiation 88.1
   IF                                     => reduce 6 tokens to generic_instantiation 88.1
   LOOP                                   => reduce 6 tokens to generic_instantiation 88.1
   PACKAGE                                => reduce 6 tokens to generic_instantiation 88.1
   PROCEDURE                              => reduce 6 tokens to generic_instantiation 88.1
   RETURN                                 => reduce 6 tokens to generic_instantiation 88.1
   TYPE                                   => reduce 6 tokens to generic_instantiation 88.1
   IDENTIFIER                             => reduce 6 tokens to generic_instantiation 88.1
   Wisi_EOI                               => reduce 6 tokens to generic_instantiation 88.1
   default                                => ERROR

   Minimal_Complete_Actions => (6 generic_instantiation 88.1)

State 292:
     77.0:enumeration_type_definition <= LEFT_PAREN IDENTIFIER_COMMA_list RIGHT_PAREN ^

   SEMICOLON                              => reduce 3 tokens to enumeration_type_definition 77.0
   default                                => ERROR

   Minimal_Complete_Actions => (3 enumeration_type_definition 77.0)

State 293:
    130.1:IDENTIFIER_COMMA_list <= IDENTIFIER_COMMA_list COMMA ^ IDENTIFIER
    130.2:IDENTIFIER_COMMA_list <= IDENTIFIER_COMMA_list COMMA ^ IDENTIFIER_COMMA_list

   IDENTIFIER                             => shift and goto state 319 130.0
   default                                => ERROR

   IDENTIFIER_COMMA_list                  goto state 320

   Minimal_Complete_Actions => 

State 294:
     92.0:index_constraint <= LEFT_PAREN discrete_subtype_definition RIGHT_PAREN ^

   LOOP                                   => reduce 3 tokens to index_constraint 92.0
   RIGHT_PAREN                            => reduce 3 tokens to index_constraint 92.0
   COLON_EQUAL                            => reduce 3 tokens to index_constraint 92.0
   SEMICOLON                              => reduce 3 tokens to index_constraint 92.0
   default                                => ERROR

   Minimal_Complete_Actions => (3 index_constraint 92.0)

State 295:
     98.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression SEMICOLON ^

   PRAGMA                                 => reduce 6 tokens to object_declaration 98.0
   BEGIN                                  => reduce 6 tokens to object_declaration 98.0
   CASE                                   => reduce 6 tokens to object_declaration 98.0
   DECLARE                                => reduce 6 tokens to object_declaration 98.0
   END                                    => reduce 6 tokens to object_declaration 98.0
   EXIT                                   => reduce 6 tokens to object_declaration 98.0
   FOR                                    => reduce 6 tokens to object_declaration 98.0
   FUNCTION                               => reduce 6 tokens to object_declaration 98.0
   IF                                     => reduce 6 tokens to object_declaration 98.0
   LOOP                                   => reduce 6 tokens to object_declaration 98.0
   PACKAGE                                => reduce 6 tokens to object_declaration 98.0
   PROCEDURE                              => reduce 6 tokens to object_declaration 98.0
   RETURN                                 => reduce 6 tokens to object_declaration 98.0
   TYPE                                   => reduce 6 tokens to object_declaration 98.0
   IDENTIFIER                             => reduce 6 tokens to object_declaration 98.0
   Wisi_EOI                               => reduce 6 tokens to object_declaration 98.0
   default                                => ERROR

   Minimal_Complete_Actions => (6 object_declaration 98.0)

State 296:
     65.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ^

   PRAGMA                                 => reduce 6 tokens to block_statement 65.1
   BEGIN                                  => reduce 6 tokens to block_statement 65.1
   CASE                                   => reduce 6 tokens to block_statement 65.1
   DECLARE                                => reduce 6 tokens to block_statement 65.1
   ELSE                                   => reduce 6 tokens to block_statement 65.1
   ELSIF                                  => reduce 6 tokens to block_statement 65.1
   END                                    => reduce 6 tokens to block_statement 65.1
   EXIT                                   => reduce 6 tokens to block_statement 65.1
   EXCEPTION                              => reduce 6 tokens to block_statement 65.1
   FOR                                    => reduce 6 tokens to block_statement 65.1
   FUNCTION                               => reduce 6 tokens to block_statement 65.1
   IF                                     => reduce 6 tokens to block_statement 65.1
   LOOP                                   => reduce 6 tokens to block_statement 65.1
   PACKAGE                                => reduce 6 tokens to block_statement 65.1
   PROCEDURE                              => reduce 6 tokens to block_statement 65.1
   RETURN                                 => reduce 6 tokens to block_statement 65.1
   TYPE                                   => reduce 6 tokens to block_statement 65.1
   WHEN                                   => reduce 6 tokens to block_statement 65.1
   IDENTIFIER                             => reduce 6 tokens to block_statement 65.1
   Wisi_EOI                               => reduce 6 tokens to block_statement 65.1
   default                                => ERROR

   Minimal_Complete_Actions => (6 block_statement 65.1)

State 297:
     79.0:exception_handler <= WHEN exception_choice ^ EQUAL_GREATER sequence_of_statements

   EQUAL_GREATER                          => shift and goto state 321 79.0
   default                                => ERROR

   Minimal_Complete_Actions => (EQUAL_GREATER 79.0)

State 298:
     78.0:exception_choice <= name ^
     96.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     96.1:name <= name ^ actual_parameter_part
    113.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                             => shift and goto state 87 58.0
   DOT                                    => shift and goto state 89 113.0
   EQUAL_GREATER                          => reduce 1 tokens to exception_choice 78.0
   default                                => ERROR

   actual_parameter_part                  goto state 91

   Minimal_Complete_Actions => (1 exception_choice 78.0)

State 299:
    135.0:exception_handler_list <= exception_handler ^
    135.1:exception_handler_list <= exception_handler_list exception_handler ^

   END                                    => reduce 2 tokens to exception_handler_list 135.1
   WHEN                                   => reduce 2 tokens to exception_handler_list 135.1
   default                                => ERROR

   Minimal_Complete_Actions => ((1 exception_handler_list 135.0), (2 exception_handler_list 135.1))

State 300:
    135.1:exception_handler_list <= exception_handler_list ^ exception_handler
    135.2:exception_handler_list <= exception_handler_list exception_handler_list ^
    135.2:exception_handler_list <= exception_handler_list ^ exception_handler_list

   END                                    => reduce 2 tokens to exception_handler_list 135.2
   WHEN                                   => reduce 2 tokens to exception_handler_list 135.2
   default                                => ERROR

   exception_handler                      goto state 299
   exception_handler_list                 goto state 300

   Minimal_Complete_Actions => (2 exception_handler_list 135.2)

State 301:
     65.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements END ^ identifier_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to identifier_opt 90.1
   IDENTIFIER                             => shift and goto state 247 90.0
   default                                => ERROR

   identifier_opt                         goto state 322

   Minimal_Complete_Actions => (0 identifier_opt 90.1)

State 302:
     94.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP identifier_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 323 94.0
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 94.0)

State 303:
    119.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to name_opt 97.1
   IDENTIFIER                             => shift and goto state 53 96.2
   default                                => ERROR

   name                                   goto state 315
   name_opt                               goto state 324
   selected_component                     goto state 38

   Minimal_Complete_Actions => (0 name_opt 97.1)

State 304:
    119.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON

   END                                    => shift and goto state 325 119.0
   default                                => ERROR

   Minimal_Complete_Actions => (END 119.0)

State 305:
     69.0:case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements ^
    114.1:sequence_of_statements <= sequence_of_statements ^ statement
    114.2:sequence_of_statements <= sequence_of_statements ^ sequence_of_statements

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   END                                    => reduce 4 tokens to case_statement_alternative 69.0
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   WHEN                                   => reduce 4 tokens to case_statement_alternative 69.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 133
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 134

   Minimal_Complete_Actions => (4 case_statement_alternative 69.0)

State 306:
     68.0:case_statement <= CASE expression IS case_statement_alternative_list END CASE SEMICOLON ^

   PRAGMA                                 => reduce 7 tokens to case_statement 68.0
   BEGIN                                  => reduce 7 tokens to case_statement 68.0
   CASE                                   => reduce 7 tokens to case_statement 68.0
   DECLARE                                => reduce 7 tokens to case_statement 68.0
   ELSE                                   => reduce 7 tokens to case_statement 68.0
   ELSIF                                  => reduce 7 tokens to case_statement 68.0
   END                                    => reduce 7 tokens to case_statement 68.0
   EXIT                                   => reduce 7 tokens to case_statement 68.0
   EXCEPTION                              => reduce 7 tokens to case_statement 68.0
   FOR                                    => reduce 7 tokens to case_statement 68.0
   FUNCTION                               => reduce 7 tokens to case_statement 68.0
   IF                                     => reduce 7 tokens to case_statement 68.0
   LOOP                                   => reduce 7 tokens to case_statement 68.0
   PACKAGE                                => reduce 7 tokens to case_statement 68.0
   PROCEDURE                              => reduce 7 tokens to case_statement 68.0
   RETURN                                 => reduce 7 tokens to case_statement 68.0
   TYPE                                   => reduce 7 tokens to case_statement 68.0
   WHEN                                   => reduce 7 tokens to case_statement 68.0
   IDENTIFIER                             => reduce 7 tokens to case_statement 68.0
   Wisi_EOI                               => reduce 7 tokens to case_statement 68.0
   default                                => ERROR

   Minimal_Complete_Actions => (7 case_statement 68.0)

State 307:
    102.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL ^ expression

   LEFT_PAREN                             => shift and goto state 48 103.0
   NOT                                    => shift and goto state 49 84.1
   MINUS                                  => shift and goto state 50 127.1
   PLUS                                   => shift and goto state 51 127.0
   STRING_LITERAL                         => shift and goto state 52 105.1
   IDENTIFIER                             => shift and goto state 53 96.2
   NUMERIC_LITERAL                        => shift and goto state 54 105.0
   default                                => ERROR

   expression                             goto state 326
   factor                                 goto state 56
   name                                   goto state 57
   paren_expression                       goto state 58
   primary                                goto state 59
   relation                               goto state 60
   selected_component                     goto state 38
   simple_expression                      goto state 61
   term                                   goto state 62
   unary_adding_operator                  goto state 63
   term_binary_adding_operator_list       goto state 64

   Minimal_Complete_Actions => (NUMERIC_LITERAL 105.0)

State 308:
     91.2:if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements END ^ IF SEMICOLON

   IF                                     => shift and goto state 327 91.2
   default                                => ERROR

   Minimal_Complete_Actions => (IF 91.2)

State 309:
    136.0:ELSIF_expression_list <= ELSIF expression THEN ^ sequence_of_statements

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 328
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 74

   Minimal_Complete_Actions => (EXIT 80.0)

State 310:
     91.3:if_statement <= IF expression THEN sequence_of_statements END IF SEMICOLON ^

   PRAGMA                                 => reduce 7 tokens to if_statement 91.3
   BEGIN                                  => reduce 7 tokens to if_statement 91.3
   CASE                                   => reduce 7 tokens to if_statement 91.3
   DECLARE                                => reduce 7 tokens to if_statement 91.3
   ELSE                                   => reduce 7 tokens to if_statement 91.3
   ELSIF                                  => reduce 7 tokens to if_statement 91.3
   END                                    => reduce 7 tokens to if_statement 91.3
   EXIT                                   => reduce 7 tokens to if_statement 91.3
   EXCEPTION                              => reduce 7 tokens to if_statement 91.3
   FOR                                    => reduce 7 tokens to if_statement 91.3
   FUNCTION                               => reduce 7 tokens to if_statement 91.3
   IF                                     => reduce 7 tokens to if_statement 91.3
   LOOP                                   => reduce 7 tokens to if_statement 91.3
   PACKAGE                                => reduce 7 tokens to if_statement 91.3
   PROCEDURE                              => reduce 7 tokens to if_statement 91.3
   RETURN                                 => reduce 7 tokens to if_statement 91.3
   TYPE                                   => reduce 7 tokens to if_statement 91.3
   WHEN                                   => reduce 7 tokens to if_statement 91.3
   IDENTIFIER                             => reduce 7 tokens to if_statement 91.3
   Wisi_EOI                               => reduce 7 tokens to if_statement 91.3
   default                                => ERROR

   Minimal_Complete_Actions => (7 if_statement 91.3)

State 311:
     91.0:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list ELSE sequence_of_statements ^ END IF SEMICOLON
    114.1:sequence_of_statements <= sequence_of_statements ^ statement
    114.2:sequence_of_statements <= sequence_of_statements ^ sequence_of_statements

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   END                                    => shift and goto state 329 91.0
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 133
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 134

   Minimal_Complete_Actions => (END 91.0)

State 312:
    136.0:ELSIF_expression_list <= ELSIF expression ^ THEN sequence_of_statements
    136.1:ELSIF_expression_list <= ELSIF_expression_list ELSIF expression ^ THEN sequence_of_statements

   THEN                                   => shift and goto state 330 136.0
   default                                => ERROR

   Minimal_Complete_Actions => (THEN 136.0)

State 313:
     91.1:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list END IF ^ SEMICOLON

   SEMICOLON                              => shift and goto state 331 91.1
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 91.1)

State 314:
     99.2:package_body <= PACKAGE BODY name IS declarative_part BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON

   END                                    => shift and goto state 332 99.2
   default                                => ERROR

   Minimal_Complete_Actions => (END 99.2)

State 315:
     96.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN
     96.1:name <= name ^ actual_parameter_part
     97.0:name_opt <= name ^
    113.0:selected_component <= name ^ DOT IDENTIFIER

   LEFT_PAREN                             => shift and goto state 87 58.0
   DOT                                    => shift and goto state 89 113.0
   SEMICOLON                              => reduce 1 tokens to name_opt 97.0
   default                                => ERROR

   actual_parameter_part                  goto state 91

   Minimal_Complete_Actions => (1 name_opt 97.0)

State 316:
     99.3:package_body <= PACKAGE BODY name IS declarative_part END name_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 333 99.3
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 99.3)

State 317:
     99.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   handled_sequence_of_statements         goto state 334
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 147
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 74

   Minimal_Complete_Actions => (EXIT 80.0)

State 318:
     99.1:package_body <= PACKAGE BODY name aspect_specification IS declarative_part END ^ name_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to name_opt 97.1
   IDENTIFIER                             => shift and goto state 53 96.2
   default                                => ERROR

   name                                   goto state 315
   name_opt                               goto state 335
   selected_component                     goto state 38

   Minimal_Complete_Actions => (0 name_opt 97.1)

State 319:
    130.0:IDENTIFIER_COMMA_list <= IDENTIFIER ^
    130.1:IDENTIFIER_COMMA_list <= IDENTIFIER_COMMA_list COMMA IDENTIFIER ^

   RIGHT_PAREN                            => reduce 3 tokens to IDENTIFIER_COMMA_list 130.1
   COMMA                                  => reduce 3 tokens to IDENTIFIER_COMMA_list 130.1
   default                                => ERROR

   Minimal_Complete_Actions => ((1 IDENTIFIER_COMMA_list 130.0), (3 IDENTIFIER_COMMA_list 130.1))

State 320:
    130.1:IDENTIFIER_COMMA_list <= IDENTIFIER_COMMA_list ^ COMMA IDENTIFIER
    130.2:IDENTIFIER_COMMA_list <= IDENTIFIER_COMMA_list COMMA IDENTIFIER_COMMA_list ^
    130.2:IDENTIFIER_COMMA_list <= IDENTIFIER_COMMA_list ^ COMMA IDENTIFIER_COMMA_list

   RIGHT_PAREN                            => reduce 3 tokens to IDENTIFIER_COMMA_list 130.2
   COMMA                                  => reduce 3 tokens to IDENTIFIER_COMMA_list 130.2
   default                                => ERROR

   Minimal_Complete_Actions => (3 IDENTIFIER_COMMA_list 130.2)

State 321:
     79.0:exception_handler <= WHEN exception_choice EQUAL_GREATER ^ sequence_of_statements

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 336
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 74

   Minimal_Complete_Actions => (EXIT 80.0)

State 322:
     65.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements END identifier_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 337 65.0
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 65.0)

State 323:
     94.0:loop_statement <= iteration_scheme LOOP sequence_of_statements END LOOP identifier_opt SEMICOLON ^

   PRAGMA                                 => reduce 7 tokens to loop_statement 94.0
   BEGIN                                  => reduce 7 tokens to loop_statement 94.0
   CASE                                   => reduce 7 tokens to loop_statement 94.0
   DECLARE                                => reduce 7 tokens to loop_statement 94.0
   ELSE                                   => reduce 7 tokens to loop_statement 94.0
   ELSIF                                  => reduce 7 tokens to loop_statement 94.0
   END                                    => reduce 7 tokens to loop_statement 94.0
   EXIT                                   => reduce 7 tokens to loop_statement 94.0
   EXCEPTION                              => reduce 7 tokens to loop_statement 94.0
   FOR                                    => reduce 7 tokens to loop_statement 94.0
   FUNCTION                               => reduce 7 tokens to loop_statement 94.0
   IF                                     => reduce 7 tokens to loop_statement 94.0
   LOOP                                   => reduce 7 tokens to loop_statement 94.0
   PACKAGE                                => reduce 7 tokens to loop_statement 94.0
   PROCEDURE                              => reduce 7 tokens to loop_statement 94.0
   RETURN                                 => reduce 7 tokens to loop_statement 94.0
   TYPE                                   => reduce 7 tokens to loop_statement 94.0
   WHEN                                   => reduce 7 tokens to loop_statement 94.0
   IDENTIFIER                             => reduce 7 tokens to loop_statement 94.0
   Wisi_EOI                               => reduce 7 tokens to loop_statement 94.0
   default                                => ERROR

   Minimal_Complete_Actions => (7 loop_statement 94.0)

State 324:
    119.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 338 119.1
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 119.1)

State 325:
    119.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to name_opt 97.1
   IDENTIFIER                             => shift and goto state 53 96.2
   default                                => ERROR

   name                                   goto state 315
   name_opt                               goto state 339
   selected_component                     goto state 38

   Minimal_Complete_Actions => (0 name_opt 97.1)

State 326:
    102.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL expression ^

   RIGHT_PAREN                            => reduce 5 tokens to parameter_specification 102.0
   SEMICOLON                              => reduce 5 tokens to parameter_specification 102.0
   default                                => ERROR

   Minimal_Complete_Actions => (5 parameter_specification 102.0)

State 327:
     91.2:if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements END IF ^ SEMICOLON

   SEMICOLON                              => shift and goto state 340 91.2
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 91.2)

State 328:
    114.1:sequence_of_statements <= sequence_of_statements ^ statement
    114.2:sequence_of_statements <= sequence_of_statements ^ sequence_of_statements
    136.0:ELSIF_expression_list <= ELSIF expression THEN sequence_of_statements ^

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   ELSE                                   => reduce 4 tokens to ELSIF_expression_list 136.0
   ELSIF                                  => reduce 4 tokens to ELSIF_expression_list 136.0
   END                                    => reduce 4 tokens to ELSIF_expression_list 136.0
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 133
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 134

   Minimal_Complete_Actions => (4 ELSIF_expression_list 136.0)

State 329:
     91.0:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list ELSE sequence_of_statements END ^ IF SEMICOLON

   IF                                     => shift and goto state 341 91.0
   default                                => ERROR

   Minimal_Complete_Actions => (IF 91.0)

State 330:
    136.0:ELSIF_expression_list <= ELSIF expression THEN ^ sequence_of_statements
    136.1:ELSIF_expression_list <= ELSIF_expression_list ELSIF expression THEN ^ sequence_of_statements

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 342
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 74

   Minimal_Complete_Actions => (EXIT 80.0)

State 331:
     91.1:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list END IF SEMICOLON ^

   PRAGMA                                 => reduce 8 tokens to if_statement 91.1
   BEGIN                                  => reduce 8 tokens to if_statement 91.1
   CASE                                   => reduce 8 tokens to if_statement 91.1
   DECLARE                                => reduce 8 tokens to if_statement 91.1
   ELSE                                   => reduce 8 tokens to if_statement 91.1
   ELSIF                                  => reduce 8 tokens to if_statement 91.1
   END                                    => reduce 8 tokens to if_statement 91.1
   EXIT                                   => reduce 8 tokens to if_statement 91.1
   EXCEPTION                              => reduce 8 tokens to if_statement 91.1
   FOR                                    => reduce 8 tokens to if_statement 91.1
   FUNCTION                               => reduce 8 tokens to if_statement 91.1
   IF                                     => reduce 8 tokens to if_statement 91.1
   LOOP                                   => reduce 8 tokens to if_statement 91.1
   PACKAGE                                => reduce 8 tokens to if_statement 91.1
   PROCEDURE                              => reduce 8 tokens to if_statement 91.1
   RETURN                                 => reduce 8 tokens to if_statement 91.1
   TYPE                                   => reduce 8 tokens to if_statement 91.1
   WHEN                                   => reduce 8 tokens to if_statement 91.1
   IDENTIFIER                             => reduce 8 tokens to if_statement 91.1
   Wisi_EOI                               => reduce 8 tokens to if_statement 91.1
   default                                => ERROR

   Minimal_Complete_Actions => (8 if_statement 91.1)

State 332:
     99.2:package_body <= PACKAGE BODY name IS declarative_part BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to name_opt 97.1
   IDENTIFIER                             => shift and goto state 53 96.2
   default                                => ERROR

   name                                   goto state 315
   name_opt                               goto state 343
   selected_component                     goto state 38

   Minimal_Complete_Actions => (0 name_opt 97.1)

State 333:
     99.3:package_body <= PACKAGE BODY name IS declarative_part END name_opt SEMICOLON ^

   PRAGMA                                 => reduce 8 tokens to package_body 99.3
   BEGIN                                  => reduce 8 tokens to package_body 99.3
   CASE                                   => reduce 8 tokens to package_body 99.3
   DECLARE                                => reduce 8 tokens to package_body 99.3
   END                                    => reduce 8 tokens to package_body 99.3
   EXIT                                   => reduce 8 tokens to package_body 99.3
   FOR                                    => reduce 8 tokens to package_body 99.3
   FUNCTION                               => reduce 8 tokens to package_body 99.3
   IF                                     => reduce 8 tokens to package_body 99.3
   LOOP                                   => reduce 8 tokens to package_body 99.3
   PACKAGE                                => reduce 8 tokens to package_body 99.3
   PROCEDURE                              => reduce 8 tokens to package_body 99.3
   RETURN                                 => reduce 8 tokens to package_body 99.3
   TYPE                                   => reduce 8 tokens to package_body 99.3
   IDENTIFIER                             => reduce 8 tokens to package_body 99.3
   Wisi_EOI                               => reduce 8 tokens to package_body 99.3
   default                                => ERROR

   Minimal_Complete_Actions => (8 package_body 99.3)

State 334:
     99.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON

   END                                    => shift and goto state 344 99.0
   default                                => ERROR

   Minimal_Complete_Actions => (END 99.0)

State 335:
     99.1:package_body <= PACKAGE BODY name aspect_specification IS declarative_part END name_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 345 99.1
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 99.1)

State 336:
     79.0:exception_handler <= WHEN exception_choice EQUAL_GREATER sequence_of_statements ^
    114.1:sequence_of_statements <= sequence_of_statements ^ statement
    114.2:sequence_of_statements <= sequence_of_statements ^ sequence_of_statements

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   END                                    => reduce 4 tokens to exception_handler 79.0
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   WHEN                                   => reduce 4 tokens to exception_handler 79.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 133
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 134

   Minimal_Complete_Actions => (4 exception_handler 79.0)

State 337:
     65.0:block_statement <= block_label_opt DECLARE declarative_part BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ^

   PRAGMA                                 => reduce 8 tokens to block_statement 65.0
   BEGIN                                  => reduce 8 tokens to block_statement 65.0
   CASE                                   => reduce 8 tokens to block_statement 65.0
   DECLARE                                => reduce 8 tokens to block_statement 65.0
   ELSE                                   => reduce 8 tokens to block_statement 65.0
   ELSIF                                  => reduce 8 tokens to block_statement 65.0
   END                                    => reduce 8 tokens to block_statement 65.0
   EXIT                                   => reduce 8 tokens to block_statement 65.0
   EXCEPTION                              => reduce 8 tokens to block_statement 65.0
   FOR                                    => reduce 8 tokens to block_statement 65.0
   FUNCTION                               => reduce 8 tokens to block_statement 65.0
   IF                                     => reduce 8 tokens to block_statement 65.0
   LOOP                                   => reduce 8 tokens to block_statement 65.0
   PACKAGE                                => reduce 8 tokens to block_statement 65.0
   PROCEDURE                              => reduce 8 tokens to block_statement 65.0
   RETURN                                 => reduce 8 tokens to block_statement 65.0
   TYPE                                   => reduce 8 tokens to block_statement 65.0
   WHEN                                   => reduce 8 tokens to block_statement 65.0
   IDENTIFIER                             => reduce 8 tokens to block_statement 65.0
   Wisi_EOI                               => reduce 8 tokens to block_statement 65.0
   default                                => ERROR

   Minimal_Complete_Actions => (8 block_statement 65.0)

State 338:
    119.1:subprogram_body <= subprogram_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^

   PRAGMA                                 => reduce 8 tokens to subprogram_body 119.1
   BEGIN                                  => reduce 8 tokens to subprogram_body 119.1
   CASE                                   => reduce 8 tokens to subprogram_body 119.1
   DECLARE                                => reduce 8 tokens to subprogram_body 119.1
   END                                    => reduce 8 tokens to subprogram_body 119.1
   EXIT                                   => reduce 8 tokens to subprogram_body 119.1
   FOR                                    => reduce 8 tokens to subprogram_body 119.1
   FUNCTION                               => reduce 8 tokens to subprogram_body 119.1
   IF                                     => reduce 8 tokens to subprogram_body 119.1
   LOOP                                   => reduce 8 tokens to subprogram_body 119.1
   PACKAGE                                => reduce 8 tokens to subprogram_body 119.1
   PROCEDURE                              => reduce 8 tokens to subprogram_body 119.1
   RETURN                                 => reduce 8 tokens to subprogram_body 119.1
   TYPE                                   => reduce 8 tokens to subprogram_body 119.1
   IDENTIFIER                             => reduce 8 tokens to subprogram_body 119.1
   Wisi_EOI                               => reduce 8 tokens to subprogram_body 119.1
   default                                => ERROR

   Minimal_Complete_Actions => (8 subprogram_body 119.1)

State 339:
    119.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 346 119.0
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 119.0)

State 340:
     91.2:if_statement <= IF expression THEN sequence_of_statements ELSE sequence_of_statements END IF SEMICOLON ^

   PRAGMA                                 => reduce 9 tokens to if_statement 91.2
   BEGIN                                  => reduce 9 tokens to if_statement 91.2
   CASE                                   => reduce 9 tokens to if_statement 91.2
   DECLARE                                => reduce 9 tokens to if_statement 91.2
   ELSE                                   => reduce 9 tokens to if_statement 91.2
   ELSIF                                  => reduce 9 tokens to if_statement 91.2
   END                                    => reduce 9 tokens to if_statement 91.2
   EXIT                                   => reduce 9 tokens to if_statement 91.2
   EXCEPTION                              => reduce 9 tokens to if_statement 91.2
   FOR                                    => reduce 9 tokens to if_statement 91.2
   FUNCTION                               => reduce 9 tokens to if_statement 91.2
   IF                                     => reduce 9 tokens to if_statement 91.2
   LOOP                                   => reduce 9 tokens to if_statement 91.2
   PACKAGE                                => reduce 9 tokens to if_statement 91.2
   PROCEDURE                              => reduce 9 tokens to if_statement 91.2
   RETURN                                 => reduce 9 tokens to if_statement 91.2
   TYPE                                   => reduce 9 tokens to if_statement 91.2
   WHEN                                   => reduce 9 tokens to if_statement 91.2
   IDENTIFIER                             => reduce 9 tokens to if_statement 91.2
   Wisi_EOI                               => reduce 9 tokens to if_statement 91.2
   default                                => ERROR

   Minimal_Complete_Actions => (9 if_statement 91.2)

State 341:
     91.0:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list ELSE sequence_of_statements END IF ^ SEMICOLON

   SEMICOLON                              => shift and goto state 347 91.0
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 91.0)

State 342:
    114.1:sequence_of_statements <= sequence_of_statements ^ statement
    114.2:sequence_of_statements <= sequence_of_statements ^ sequence_of_statements
    136.0:ELSIF_expression_list <= ELSIF expression THEN sequence_of_statements ^
    136.1:ELSIF_expression_list <= ELSIF_expression_list ELSIF expression THEN sequence_of_statements ^

   PRAGMA                                 => shift and goto state 1 104.0
   BEGIN                                  => reduce 0 tokens to block_label_opt 64.1
   CASE                                   => shift and goto state 2 68.0
   DECLARE                                => reduce 0 tokens to block_label_opt 64.1
   ELSE                                   => reduce 5 tokens to ELSIF_expression_list 136.1
   ELSIF                                  => reduce 5 tokens to ELSIF_expression_list 136.1
   END                                    => reduce 5 tokens to ELSIF_expression_list 136.1
   EXIT                                   => shift and goto state 3 80.0
   FOR                                    => shift and goto state 4 93.0
   IF                                     => shift and goto state 6 91.0
   LOOP                                   => shift and goto state 7 94.1
   RETURN                                 => shift and goto state 10 83.0
   IDENTIFIER                             => shift and goto state 71 64.0
   default                                => ERROR

   assignment_statement                   goto state 13
   block_label_opt                        goto state 14
   block_statement                        goto state 15
   case_statement                         goto state 18
   compound_statement                     goto state 21
   exit_statement                         goto state 23
   extended_return_statement              goto state 24
   if_statement                           goto state 28
   iteration_scheme                       goto state 29
   loop_statement                         goto state 30
   name                                   goto state 31
   pragma_g                               goto state 72
   procedure_call_statement               goto state 35
   selected_component                     goto state 38
   sequence_of_statements                 goto state 133
   simple_return_statement                goto state 39
   simple_statement                       goto state 40
   statement                              goto state 134

   Minimal_Complete_Actions => ((4 ELSIF_expression_list 136.0), (5 ELSIF_expression_list 136.1))

State 343:
     99.2:package_body <= PACKAGE BODY name IS declarative_part BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 348 99.2
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 99.2)

State 344:
     99.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON

   SEMICOLON                              => reduce 0 tokens to name_opt 97.1
   IDENTIFIER                             => shift and goto state 53 96.2
   default                                => ERROR

   name                                   goto state 315
   name_opt                               goto state 349
   selected_component                     goto state 38

   Minimal_Complete_Actions => (0 name_opt 97.1)

State 345:
     99.1:package_body <= PACKAGE BODY name aspect_specification IS declarative_part END name_opt SEMICOLON ^

   PRAGMA                                 => reduce 9 tokens to package_body 99.1
   BEGIN                                  => reduce 9 tokens to package_body 99.1
   CASE                                   => reduce 9 tokens to package_body 99.1
   DECLARE                                => reduce 9 tokens to package_body 99.1
   END                                    => reduce 9 tokens to package_body 99.1
   EXIT                                   => reduce 9 tokens to package_body 99.1
   FOR                                    => reduce 9 tokens to package_body 99.1
   FUNCTION                               => reduce 9 tokens to package_body 99.1
   IF                                     => reduce 9 tokens to package_body 99.1
   LOOP                                   => reduce 9 tokens to package_body 99.1
   PACKAGE                                => reduce 9 tokens to package_body 99.1
   PROCEDURE                              => reduce 9 tokens to package_body 99.1
   RETURN                                 => reduce 9 tokens to package_body 99.1
   TYPE                                   => reduce 9 tokens to package_body 99.1
   IDENTIFIER                             => reduce 9 tokens to package_body 99.1
   Wisi_EOI                               => reduce 9 tokens to package_body 99.1
   default                                => ERROR

   Minimal_Complete_Actions => (9 package_body 99.1)

State 346:
    119.0:subprogram_body <= subprogram_specification aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^

   PRAGMA                                 => reduce 9 tokens to subprogram_body 119.0
   BEGIN                                  => reduce 9 tokens to subprogram_body 119.0
   CASE                                   => reduce 9 tokens to subprogram_body 119.0
   DECLARE                                => reduce 9 tokens to subprogram_body 119.0
   END                                    => reduce 9 tokens to subprogram_body 119.0
   EXIT                                   => reduce 9 tokens to subprogram_body 119.0
   FOR                                    => reduce 9 tokens to subprogram_body 119.0
   FUNCTION                               => reduce 9 tokens to subprogram_body 119.0
   IF                                     => reduce 9 tokens to subprogram_body 119.0
   LOOP                                   => reduce 9 tokens to subprogram_body 119.0
   PACKAGE                                => reduce 9 tokens to subprogram_body 119.0
   PROCEDURE                              => reduce 9 tokens to subprogram_body 119.0
   RETURN                                 => reduce 9 tokens to subprogram_body 119.0
   TYPE                                   => reduce 9 tokens to subprogram_body 119.0
   IDENTIFIER                             => reduce 9 tokens to subprogram_body 119.0
   Wisi_EOI                               => reduce 9 tokens to subprogram_body 119.0
   default                                => ERROR

   Minimal_Complete_Actions => (9 subprogram_body 119.0)

State 347:
     91.0:if_statement <= IF expression THEN sequence_of_statements ELSIF_expression_list ELSE sequence_of_statements END IF SEMICOLON ^

   PRAGMA                                 => reduce 10 tokens to if_statement 91.0
   BEGIN                                  => reduce 10 tokens to if_statement 91.0
   CASE                                   => reduce 10 tokens to if_statement 91.0
   DECLARE                                => reduce 10 tokens to if_statement 91.0
   ELSE                                   => reduce 10 tokens to if_statement 91.0
   ELSIF                                  => reduce 10 tokens to if_statement 91.0
   END                                    => reduce 10 tokens to if_statement 91.0
   EXIT                                   => reduce 10 tokens to if_statement 91.0
   EXCEPTION                              => reduce 10 tokens to if_statement 91.0
   FOR                                    => reduce 10 tokens to if_statement 91.0
   FUNCTION                               => reduce 10 tokens to if_statement 91.0
   IF                                     => reduce 10 tokens to if_statement 91.0
   LOOP                                   => reduce 10 tokens to if_statement 91.0
   PACKAGE                                => reduce 10 tokens to if_statement 91.0
   PROCEDURE                              => reduce 10 tokens to if_statement 91.0
   RETURN                                 => reduce 10 tokens to if_statement 91.0
   TYPE                                   => reduce 10 tokens to if_statement 91.0
   WHEN                                   => reduce 10 tokens to if_statement 91.0
   IDENTIFIER                             => reduce 10 tokens to if_statement 91.0
   Wisi_EOI                               => reduce 10 tokens to if_statement 91.0
   default                                => ERROR

   Minimal_Complete_Actions => (10 if_statement 91.0)

State 348:
     99.2:package_body <= PACKAGE BODY name IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^

   PRAGMA                                 => reduce 10 tokens to package_body 99.2
   BEGIN                                  => reduce 10 tokens to package_body 99.2
   CASE                                   => reduce 10 tokens to package_body 99.2
   DECLARE                                => reduce 10 tokens to package_body 99.2
   END                                    => reduce 10 tokens to package_body 99.2
   EXIT                                   => reduce 10 tokens to package_body 99.2
   FOR                                    => reduce 10 tokens to package_body 99.2
   FUNCTION                               => reduce 10 tokens to package_body 99.2
   IF                                     => reduce 10 tokens to package_body 99.2
   LOOP                                   => reduce 10 tokens to package_body 99.2
   PACKAGE                                => reduce 10 tokens to package_body 99.2
   PROCEDURE                              => reduce 10 tokens to package_body 99.2
   RETURN                                 => reduce 10 tokens to package_body 99.2
   TYPE                                   => reduce 10 tokens to package_body 99.2
   IDENTIFIER                             => reduce 10 tokens to package_body 99.2
   Wisi_EOI                               => reduce 10 tokens to package_body 99.2
   default                                => ERROR

   Minimal_Complete_Actions => (10 package_body 99.2)

State 349:
     99.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON

   SEMICOLON                              => shift and goto state 350 99.0
   default                                => ERROR

   Minimal_Complete_Actions => (SEMICOLON 99.0)

State 350:
     99.0:package_body <= PACKAGE BODY name aspect_specification IS declarative_part BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^

   PRAGMA                                 => reduce 11 tokens to package_body 99.0
   BEGIN                                  => reduce 11 tokens to package_body 99.0
   CASE                                   => reduce 11 tokens to package_body 99.0
   DECLARE                                => reduce 11 tokens to package_body 99.0
   END                                    => reduce 11 tokens to package_body 99.0
   EXIT                                   => reduce 11 tokens to package_body 99.0
   FOR                                    => reduce 11 tokens to package_body 99.0
   FUNCTION                               => reduce 11 tokens to package_body 99.0
   IF                                     => reduce 11 tokens to package_body 99.0
   LOOP                                   => reduce 11 tokens to package_body 99.0
   PACKAGE                                => reduce 11 tokens to package_body 99.0
   PROCEDURE                              => reduce 11 tokens to package_body 99.0
   RETURN                                 => reduce 11 tokens to package_body 99.0
   TYPE                                   => reduce 11 tokens to package_body 99.0
   IDENTIFIER                             => reduce 11 tokens to package_body 99.0
   Wisi_EOI                               => reduce 11 tokens to package_body 99.0
   default                                => ERROR

   Minimal_Complete_Actions => (11 package_body 99.0)

343 states with minimal_complete_actions; 372 total minimal_complete_actions.

4 states with conflicts: 34 77 189 257

 80 rules, 4 user actions, 19 checks, 351 states
