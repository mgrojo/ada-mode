--  Abstract :
--
--  Tokens for use by Ada code generated by wisi-output_ada_emacs
--
--  Copyright (C) 2014  All Rights Reserved.
--
--  This program is free software; you can redistribute it and/or
--  modify it under terms of the GNU General Public License as
--  published by the Free Software Foundation; either version 3, or (at
--  your option) any later version. This program is distributed in the
--  hope that it will be useful, but WITHOUT ANY WARRANTY; without even
--  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
--  PURPOSE. See the GNU General Public License for more details. You
--  should have received a copy of the GNU General Public License
--  distributed with this program; see file COPYING. If not, write to
--  the Free Software Foundation, 51 Franklin Street, Suite 500, Boston,
--  MA 02110-1335, USA.

pragma License (GPL);

with OpenToken.Token.Enumerated.Analyzer;
with OpenToken.Token.Enumerated.Nonterminal;
with OpenToken.Token.Enumerated.List;
generic
   type Token_IDs is (<>);
   First_Terminal : in Token_IDs;
   Last_Terminal  : in Token_IDs;
   with function Token_Image (Item : in Token_IDs) return String;
   with package Tokens is new OpenToken.Token.Enumerated
     (Token_IDs, First_Terminal, Last_Terminal, Token_Image);
   with package Analyzers is new Tokens.Analyzer;
   with package Token_Lists  is new Tokens.List;
   with package Nonterminals is new Tokens.Nonterminal (Token_Lists);
package OpenToken.Wisi_Tokens is

   type Buffer_Range is record
      Begin_Pos : Integer;
      End_Pos   : Integer;
   end record;

   type Instance is new Nonterminals.Instance with record
      Buffer_Range : Wisi_Tokens.Buffer_Range;
   end record;

   subtype Class is Instance'Class;

   type Handle is access all Class;

   function Get (ID : in Token_IDs) return Instance'Class;
   --  For use in Syntax; sets null Buffer_Range

   procedure Decorate (Token : in out Tokens.Class; Analyzer : in Analyzers.Instance);
   --  For use in Parser; add Buffer_Range from Analyzer current lexeme.

   function Get (ID : in Token_IDs; Buffer_Range : in Wisi_Tokens.Buffer_Range) return Instance'Class;
   --  For use in Actions.

   procedure Self
     (New_Token : out Nonterminals.Class;
      Source    : in  Token_Lists.Instance'Class;
      To_ID     : in  Token_IDs);

   ----------
   --  Other functions for wisi actions in generated Ada code for
   --  Ada_Emacs target.

   function Image (Tokens : in Token_Lists.Instance'Class) return String;
   --  Return elisp prefix for wisi action

end OpenToken.Wisi_Tokens;
