Tokens:
 0 => WHITESPACE
 1 => NEW_LINE
 2 => COMMENT
 3 => AND
 4 => BEGIN
 5 => BODY
 6 => CASE
 7 => DECLARE
 8 => ELSE
 9 => ELSIF
 10 => END
 11 => EXIT
 12 => EXCEPTION
 13 => FOR
 14 => FUNCTION
 15 => IF
 16 => IN
 17 => IS
 18 => LEFT_PAREN
 19 => LOOP
 20 => NEW
 21 => NOT
 22 => OR
 23 => PACKAGE
 24 => PROCEDURE
 25 => RANGE
 26 => RETURN
 27 => RIGHT_PAREN
 28 => SEPARATE
 29 => THEN
 30 => TYPE
 31 => WHEN
 32 => WITH
 33 => XOR
 34 => AMPERSAND
 35 => COLON
 36 => COLON_EQUAL
 37 => COMMA
 38 => DOT
 39 => DOT_DOT
 40 => EQUAL
 41 => EQUAL_GREATER
 42 => GREATER
 43 => GREATER_EQUAL
 44 => LESS
 45 => LESS_EQUAL
 46 => MINUS
 47 => PLUS
 48 => SEMICOLON
 49 => SLASH
 50 => SLASH_EQUAL
 51 => STAR
 52 => STRING_LITERAL
 53 => NUMERIC_LITERAL
 54 => IDENTIFIER
 55 => Wisi_EOI
 56 => wisitoken_accept
 57 => actual_parameter_part
 58 => aspect_specification_opt
 59 => assignment_statement
 60 => association_opt
 61 => association_list
 62 => binary_adding_operator
 63 => block_label_opt
 64 => block_statement
 65 => body_g
 66 => body_stub
 67 => case_statement
 68 => case_statement_alternative
 69 => case_statement_alternative_list
 70 => compilation_unit
 71 => compilation_unit_list
 72 => compound_statement
 73 => constraint
 74 => declaration
 75 => declarations
 76 => declarative_part_opt
 77 => discrete_subtype_definition
 78 => elsif_statement_item
 79 => elsif_statement_list
 80 => enumeration_literal_list
 81 => enumeration_type_definition
 82 => exception_choice
 83 => exception_handler
 84 => exception_handler_list
 85 => exception_handler_list_opt
 86 => exit_statement
 87 => expression
 88 => expression_opt
 89 => extended_return_object_declaration
 90 => extended_return_statement
 91 => factor
 92 => formal_part
 93 => full_type_declaration
 94 => function_specification
 95 => generic_instantiation
 96 => handled_sequence_of_statements
 97 => identifier_opt
 98 => if_statement
 99 => index_constraint
 100 => iteration_scheme
 101 => library_item
 102 => loop_statement
 103 => multiplying_operator
 104 => name
 105 => name_opt
 106 => object_declaration
 107 => package_body
 108 => parameter_and_result_profile
 109 => parameter_profile_opt
 110 => parameter_specification
 111 => parameter_specification_list
 112 => paren_expression
 113 => primary
 114 => procedure_call_statement
 115 => procedure_specification
 116 => proper_body
 117 => range_g
 118 => range_list
 119 => relation_and_list
 120 => relation_or_list
 121 => relation_xor_list
 122 => relation
 123 => relational_operator
 124 => selected_component
 125 => sequence_of_statements
 126 => sequence_of_statements_opt
 127 => simple_expression
 128 => simple_return_statement
 129 => simple_statement
 130 => statement
 131 => subprogram_body
 132 => subprogram_body_stub
 133 => subprogram_declaration
 134 => subprogram_specification
 135 => subtype_indication
 136 => term
 137 => term_list
 138 => type_declaration
 139 => type_definition
 140 => unary_adding_operator

Productions:
56.0: wisitoken_accept <= compilation_unit_list Wisi_EOI
57.0: actual_parameter_part <= LEFT_PAREN association_list RIGHT_PAREN
58.0: aspect_specification_opt <= WITH association_list
58.1: aspect_specification_opt <=
59.0: assignment_statement <= name COLON_EQUAL expression_opt SEMICOLON
60.0: association_opt <= IDENTIFIER EQUAL_GREATER expression_opt
60.1: association_opt <= expression
60.2: association_opt <=
61.0: association_list <= association_list COMMA association_opt
61.1: association_list <= association_opt
62.0: binary_adding_operator <= PLUS
62.1: binary_adding_operator <= MINUS
62.2: binary_adding_operator <= AMPERSAND
63.0: block_label_opt <= IDENTIFIER COLON
63.1: block_label_opt <=
64.0: block_statement <= block_label_opt DECLARE declarative_part_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON
64.1: block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON
65.0: body_g <= proper_body
65.1: body_g <= body_stub
66.0: body_stub <= subprogram_body_stub
67.0: case_statement <= CASE expression_opt IS case_statement_alternative_list END CASE SEMICOLON
68.0: case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements_opt
69.0: case_statement_alternative_list <= case_statement_alternative_list case_statement_alternative
69.1: case_statement_alternative_list <= case_statement_alternative
70.0: compilation_unit <= library_item
71.0: compilation_unit_list <= compilation_unit_list compilation_unit
71.1: compilation_unit_list <= compilation_unit
72.0: compound_statement <= if_statement
72.1: compound_statement <= case_statement
72.2: compound_statement <= loop_statement
72.3: compound_statement <= block_statement
72.4: compound_statement <= extended_return_statement
73.0: constraint <= RANGE range_g
73.1: constraint <= index_constraint
74.0: declaration <= body_g
74.1: declaration <= object_declaration
74.2: declaration <= subprogram_declaration
74.3: declaration <= type_declaration
75.0: declarations <= declarations declaration
75.1: declarations <= declaration
76.0: declarative_part_opt <= declarations
76.1: declarative_part_opt <=
77.0: discrete_subtype_definition <= subtype_indication
77.1: discrete_subtype_definition <= range_g
78.0: elsif_statement_item <= ELSIF expression_opt THEN sequence_of_statements_opt
79.0: elsif_statement_list <= elsif_statement_list elsif_statement_item
79.1: elsif_statement_list <= elsif_statement_item
80.0: enumeration_literal_list <= enumeration_literal_list COMMA IDENTIFIER
80.1: enumeration_literal_list <= IDENTIFIER
81.0: enumeration_type_definition <= LEFT_PAREN enumeration_literal_list RIGHT_PAREN
82.0: exception_choice <= name
83.0: exception_handler <= WHEN exception_choice EQUAL_GREATER sequence_of_statements_opt
84.0: exception_handler_list <= exception_handler_list exception_handler
84.1: exception_handler_list <= exception_handler
85.0: exception_handler_list_opt <= exception_handler_list
85.1: exception_handler_list_opt <=
86.0: exit_statement <= EXIT identifier_opt WHEN expression_opt SEMICOLON
86.1: exit_statement <= EXIT identifier_opt SEMICOLON
87.0: expression <= relation
87.1: expression <= relation_and_list
87.2: expression <= relation_or_list
87.3: expression <= relation_xor_list
88.0: expression_opt <= expression
88.1: expression_opt <=
89.0: extended_return_object_declaration <= IDENTIFIER COLON subtype_indication
90.0: extended_return_statement <= RETURN extended_return_object_declaration SEMICOLON
91.0: factor <= primary
91.1: factor <= NOT primary
92.0: formal_part <= LEFT_PAREN parameter_specification_list RIGHT_PAREN
93.0: full_type_declaration <= TYPE IDENTIFIER IS type_definition SEMICOLON
94.0: function_specification <= FUNCTION name parameter_and_result_profile
95.0: generic_instantiation <= PACKAGE name IS NEW name SEMICOLON
95.1: generic_instantiation <= PROCEDURE name IS NEW name SEMICOLON
96.0: handled_sequence_of_statements <= sequence_of_statements_opt EXCEPTION exception_handler_list_opt
96.1: handled_sequence_of_statements <= sequence_of_statements_opt
97.0: identifier_opt <= IDENTIFIER
97.1: identifier_opt <=
98.0: if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list ELSE sequence_of_statements_opt END IF SEMICOLON
98.1: if_statement <= IF expression_opt THEN sequence_of_statements_opt ELSE sequence_of_statements_opt END IF SEMICOLON
98.2: if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list END IF SEMICOLON
98.3: if_statement <= IF expression_opt THEN sequence_of_statements_opt END IF SEMICOLON
99.0: index_constraint <= LEFT_PAREN discrete_subtype_definition RIGHT_PAREN
100.0: iteration_scheme <= FOR IDENTIFIER IN discrete_subtype_definition
101.0: library_item <= package_body
101.1: library_item <= subprogram_declaration
101.2: library_item <= subprogram_body
101.3: library_item <= generic_instantiation
102.0: loop_statement <= iteration_scheme LOOP sequence_of_statements_opt END LOOP identifier_opt SEMICOLON
102.1: loop_statement <= LOOP sequence_of_statements_opt END LOOP identifier_opt SEMICOLON
103.0: multiplying_operator <= STAR
103.1: multiplying_operator <= SLASH
104.0: name <= name LEFT_PAREN range_list RIGHT_PAREN
104.1: name <= name actual_parameter_part
104.2: name <= IDENTIFIER
104.3: name <= selected_component
105.0: name_opt <= name
105.1: name_opt <=
106.0: object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression_opt SEMICOLON
106.1: object_declaration <= IDENTIFIER COLON subtype_indication SEMICOLON
107.0: package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON
107.1: package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt END name_opt SEMICOLON
108.0: parameter_and_result_profile <= formal_part RETURN IDENTIFIER
108.1: parameter_and_result_profile <= RETURN IDENTIFIER
109.0: parameter_profile_opt <= formal_part
109.1: parameter_profile_opt <=
110.0: parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL expression_opt
110.1: parameter_specification <= IDENTIFIER COLON IDENTIFIER
110.2: parameter_specification <=
111.0: parameter_specification_list <= parameter_specification_list SEMICOLON parameter_specification
111.1: parameter_specification_list <= parameter_specification
112.0: paren_expression <= LEFT_PAREN expression_opt RIGHT_PAREN
113.0: primary <= NUMERIC_LITERAL
113.1: primary <= STRING_LITERAL
113.2: primary <= name
113.3: primary <= paren_expression
114.0: procedure_call_statement <= name SEMICOLON
115.0: procedure_specification <= PROCEDURE name parameter_profile_opt
116.0: proper_body <= package_body
116.1: proper_body <= subprogram_body
117.0: range_g <= simple_expression DOT_DOT simple_expression
118.0: range_list <= range_list COMMA range_g
118.1: range_list <= range_g
119.0: relation_and_list <= relation_and_list AND relation
119.1: relation_and_list <= relation AND relation
120.0: relation_or_list <= relation_or_list OR relation
120.1: relation_or_list <= relation OR relation
121.0: relation_xor_list <= relation_xor_list XOR relation
121.1: relation_xor_list <= relation XOR relation
122.0: relation <= simple_expression relational_operator simple_expression
122.1: relation <= simple_expression
123.0: relational_operator <= EQUAL
123.1: relational_operator <= SLASH_EQUAL
123.2: relational_operator <= LESS
123.3: relational_operator <= LESS_EQUAL
123.4: relational_operator <= GREATER
123.5: relational_operator <= GREATER_EQUAL
124.0: selected_component <= name DOT IDENTIFIER
125.0: sequence_of_statements <= sequence_of_statements statement
125.1: sequence_of_statements <= statement
126.0: sequence_of_statements_opt <= sequence_of_statements
126.1: sequence_of_statements_opt <=
127.0: simple_expression <= unary_adding_operator term_list
127.1: simple_expression <= term_list
128.0: simple_return_statement <= RETURN expression_opt SEMICOLON
128.1: simple_return_statement <= RETURN SEMICOLON
129.0: simple_statement <= assignment_statement
129.1: simple_statement <= exit_statement
129.2: simple_statement <= procedure_call_statement
129.3: simple_statement <= simple_return_statement
130.0: statement <= simple_statement
130.1: statement <= compound_statement
131.0: subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON
132.0: subprogram_body_stub <= subprogram_specification IS SEPARATE SEMICOLON
133.0: subprogram_declaration <= subprogram_specification SEMICOLON
134.0: subprogram_specification <= procedure_specification
134.1: subprogram_specification <= function_specification
135.0: subtype_indication <= name constraint
135.1: subtype_indication <= name
136.0: term <= term multiplying_operator factor
136.1: term <= factor
137.0: term_list <= term_list binary_adding_operator term
137.1: term_list <= term
138.0: type_declaration <= full_type_declaration
139.0: type_definition <= enumeration_type_definition
140.0: unary_adding_operator <= PLUS
140.1: unary_adding_operator <= MINUS

LALR Parse Table:
State 0:
     56.0:wisitoken_accept <= ^ compilation_unit_list Wisi_EOI, 

   FUNCTION                           => shift and goto state 1 (94.0)
   PACKAGE                            => shift and goto state 2 (95.0, 107.0, 107.1)
   PROCEDURE                          => shift and goto state 3 (95.1, 115.0)
   default                            => ERROR

   compilation_unit                   goto state 4
   compilation_unit_list              goto state 5
   function_specification             goto state 6
   generic_instantiation              goto state 7
   library_item                       goto state 8
   package_body                       goto state 9
   procedure_specification            goto state 10
   subprogram_body                    goto state 11
   subprogram_declaration             goto state 12
   subprogram_specification           goto state 13

State 1:
     94.0:function_specification <= FUNCTION ^ name parameter_and_result_profile, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   name                               goto state 15
   selected_component                 goto state 16

State 2:
     95.0:generic_instantiation <= PACKAGE ^ name IS NEW name SEMICOLON, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI
    107.0:package_body <= PACKAGE ^ BODY name aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI
    107.1:package_body <= PACKAGE ^ BODY name aspect_specification_opt IS declarative_part_opt END name_opt SEMICOLON, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI

   BODY                               => shift and goto state 17 (107.0, 107.1)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   name                               goto state 18
   selected_component                 goto state 16

State 3:
     95.1:generic_instantiation <= PROCEDURE ^ name IS NEW name SEMICOLON, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI
    115.0:procedure_specification <= PROCEDURE ^ name parameter_profile_opt, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   name                               goto state 19
   selected_component                 goto state 16

State 4:
     71.1:compilation_unit_list <= compilation_unit ^, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI

   FUNCTION                           => reduce 1 tokens to compilation_unit_list 71.1
   PACKAGE                            => reduce 1 tokens to compilation_unit_list 71.1
   PROCEDURE                          => reduce 1 tokens to compilation_unit_list 71.1
   Wisi_EOI                           => reduce 1 tokens to compilation_unit_list 71.1
   default                            => ERROR

State 5:
     56.0:wisitoken_accept <= compilation_unit_list ^ Wisi_EOI, 
     71.0:compilation_unit_list <= compilation_unit_list ^ compilation_unit, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI

   FUNCTION                           => shift and goto state 1 (94.0)
   PACKAGE                            => shift and goto state 2 (95.0, 107.0, 107.1)
   PROCEDURE                          => shift and goto state 3 (95.1, 115.0)
   Wisi_EOI                           => accept it 56.0
   default                            => ERROR

   compilation_unit                   goto state 20
   function_specification             goto state 6
   generic_instantiation              goto state 7
   library_item                       goto state 8
   package_body                       goto state 9
   procedure_specification            goto state 10
   subprogram_body                    goto state 11
   subprogram_declaration             goto state 12
   subprogram_specification           goto state 13

State 6:
    134.1:subprogram_specification <= function_specification ^, IS/WITH/SEMICOLON

   IS                                 => reduce 1 tokens to subprogram_specification 134.1
   WITH                               => reduce 1 tokens to subprogram_specification 134.1
   SEMICOLON                          => reduce 1 tokens to subprogram_specification 134.1
   default                            => ERROR

State 7:
    101.3:library_item <= generic_instantiation ^, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI

   FUNCTION                           => reduce 1 tokens to library_item 101.3
   PACKAGE                            => reduce 1 tokens to library_item 101.3
   PROCEDURE                          => reduce 1 tokens to library_item 101.3
   Wisi_EOI                           => reduce 1 tokens to library_item 101.3
   default                            => ERROR

State 8:
     70.0:compilation_unit <= library_item ^, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI

   FUNCTION                           => reduce 1 tokens to compilation_unit 70.0
   PACKAGE                            => reduce 1 tokens to compilation_unit 70.0
   PROCEDURE                          => reduce 1 tokens to compilation_unit 70.0
   Wisi_EOI                           => reduce 1 tokens to compilation_unit 70.0
   default                            => ERROR

State 9:
    101.0:library_item <= package_body ^, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI

   FUNCTION                           => reduce 1 tokens to library_item 101.0
   PACKAGE                            => reduce 1 tokens to library_item 101.0
   PROCEDURE                          => reduce 1 tokens to library_item 101.0
   Wisi_EOI                           => reduce 1 tokens to library_item 101.0
   default                            => ERROR

State 10:
    134.0:subprogram_specification <= procedure_specification ^, IS/WITH/SEMICOLON

   IS                                 => reduce 1 tokens to subprogram_specification 134.0
   WITH                               => reduce 1 tokens to subprogram_specification 134.0
   SEMICOLON                          => reduce 1 tokens to subprogram_specification 134.0
   default                            => ERROR

State 11:
    101.2:library_item <= subprogram_body ^, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI

   FUNCTION                           => reduce 1 tokens to library_item 101.2
   PACKAGE                            => reduce 1 tokens to library_item 101.2
   PROCEDURE                          => reduce 1 tokens to library_item 101.2
   Wisi_EOI                           => reduce 1 tokens to library_item 101.2
   default                            => ERROR

State 12:
    101.1:library_item <= subprogram_declaration ^, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI

   FUNCTION                           => reduce 1 tokens to library_item 101.1
   PACKAGE                            => reduce 1 tokens to library_item 101.1
   PROCEDURE                          => reduce 1 tokens to library_item 101.1
   Wisi_EOI                           => reduce 1 tokens to library_item 101.1
   default                            => ERROR

State 13:
    131.0:subprogram_body <= subprogram_specification ^ aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI
    133.0:subprogram_declaration <= subprogram_specification ^ SEMICOLON, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI

   IS                                 => reduce 0 tokens to aspect_specification_opt 58.1
   WITH                               => shift and goto state 21 (58.0)
   SEMICOLON                          => shift and goto state 22 (133.0)
   default                            => ERROR

   aspect_specification_opt           goto state 23

State 14:
    104.2:name <= IDENTIFIER ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to name 104.2
   IS                                 => reduce 1 tokens to name 104.2
   LEFT_PAREN                         => reduce 1 tokens to name 104.2
   LOOP                               => reduce 1 tokens to name 104.2
   OR                                 => reduce 1 tokens to name 104.2
   RANGE                              => reduce 1 tokens to name 104.2
   RETURN                             => reduce 1 tokens to name 104.2
   RIGHT_PAREN                        => reduce 1 tokens to name 104.2
   THEN                               => reduce 1 tokens to name 104.2
   WITH                               => reduce 1 tokens to name 104.2
   XOR                                => reduce 1 tokens to name 104.2
   AMPERSAND                          => reduce 1 tokens to name 104.2
   COLON_EQUAL                        => reduce 1 tokens to name 104.2
   COMMA                              => reduce 1 tokens to name 104.2
   DOT                                => reduce 1 tokens to name 104.2
   DOT_DOT                            => reduce 1 tokens to name 104.2
   EQUAL                              => reduce 1 tokens to name 104.2
   EQUAL_GREATER                      => reduce 1 tokens to name 104.2
   GREATER                            => reduce 1 tokens to name 104.2
   GREATER_EQUAL                      => reduce 1 tokens to name 104.2
   LESS                               => reduce 1 tokens to name 104.2
   LESS_EQUAL                         => reduce 1 tokens to name 104.2
   MINUS                              => reduce 1 tokens to name 104.2
   PLUS                               => reduce 1 tokens to name 104.2
   SEMICOLON                          => reduce 1 tokens to name 104.2
   SLASH                              => reduce 1 tokens to name 104.2
   SLASH_EQUAL                        => reduce 1 tokens to name 104.2
   STAR                               => reduce 1 tokens to name 104.2
   default                            => ERROR

State 15:
     94.0:function_specification <= FUNCTION name ^ parameter_and_result_profile, IS/WITH/SEMICOLON
    104.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/RETURN/DOT
    104.1:name <= name ^ actual_parameter_part, LEFT_PAREN/RETURN/DOT
    124.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/RETURN/DOT

   LEFT_PAREN                         => shift and goto state 24 (57.0, 92.0, 104.0)
   RETURN                             => shift and goto state 25 (108.1)
   DOT                                => shift and goto state 26 (124.0)
   default                            => ERROR

   actual_parameter_part              goto state 27
   formal_part                        goto state 28
   parameter_and_result_profile       goto state 29

State 16:
    104.3:name <= selected_component ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to name 104.3
   IS                                 => reduce 1 tokens to name 104.3
   LEFT_PAREN                         => reduce 1 tokens to name 104.3
   LOOP                               => reduce 1 tokens to name 104.3
   OR                                 => reduce 1 tokens to name 104.3
   RANGE                              => reduce 1 tokens to name 104.3
   RETURN                             => reduce 1 tokens to name 104.3
   RIGHT_PAREN                        => reduce 1 tokens to name 104.3
   THEN                               => reduce 1 tokens to name 104.3
   WITH                               => reduce 1 tokens to name 104.3
   XOR                                => reduce 1 tokens to name 104.3
   AMPERSAND                          => reduce 1 tokens to name 104.3
   COLON_EQUAL                        => reduce 1 tokens to name 104.3
   COMMA                              => reduce 1 tokens to name 104.3
   DOT                                => reduce 1 tokens to name 104.3
   DOT_DOT                            => reduce 1 tokens to name 104.3
   EQUAL                              => reduce 1 tokens to name 104.3
   EQUAL_GREATER                      => reduce 1 tokens to name 104.3
   GREATER                            => reduce 1 tokens to name 104.3
   GREATER_EQUAL                      => reduce 1 tokens to name 104.3
   LESS                               => reduce 1 tokens to name 104.3
   LESS_EQUAL                         => reduce 1 tokens to name 104.3
   MINUS                              => reduce 1 tokens to name 104.3
   PLUS                               => reduce 1 tokens to name 104.3
   SEMICOLON                          => reduce 1 tokens to name 104.3
   SLASH                              => reduce 1 tokens to name 104.3
   SLASH_EQUAL                        => reduce 1 tokens to name 104.3
   STAR                               => reduce 1 tokens to name 104.3
   default                            => ERROR

State 17:
    107.0:package_body <= PACKAGE BODY ^ name aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI
    107.1:package_body <= PACKAGE BODY ^ name aspect_specification_opt IS declarative_part_opt END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   name                               goto state 30
   selected_component                 goto state 16

State 18:
     95.0:generic_instantiation <= PACKAGE name ^ IS NEW name SEMICOLON, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI
    104.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, IS/LEFT_PAREN/DOT
    104.1:name <= name ^ actual_parameter_part, IS/LEFT_PAREN/DOT
    124.0:selected_component <= name ^ DOT IDENTIFIER, IS/LEFT_PAREN/DOT

   IS                                 => shift and goto state 31 (95.0)
   LEFT_PAREN                         => shift and goto state 32 (57.0, 104.0)
   DOT                                => shift and goto state 26 (124.0)
   default                            => ERROR

   actual_parameter_part              goto state 27

State 19:
     95.1:generic_instantiation <= PROCEDURE name ^ IS NEW name SEMICOLON, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI
    104.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, IS/LEFT_PAREN/WITH/DOT/SEMICOLON
    104.1:name <= name ^ actual_parameter_part, IS/LEFT_PAREN/WITH/DOT/SEMICOLON
    115.0:procedure_specification <= PROCEDURE name ^ parameter_profile_opt, IS/WITH/SEMICOLON
    124.0:selected_component <= name ^ DOT IDENTIFIER, IS/LEFT_PAREN/WITH/DOT/SEMICOLON

   IS                                 => shift and goto state 33 (95.1),
                                         reduce 0 tokens to parameter_profile_opt 109.1
   LEFT_PAREN                         => shift and goto state 24 (57.0, 92.0, 104.0)
   WITH                               => reduce 0 tokens to parameter_profile_opt 109.1
   DOT                                => shift and goto state 26 (124.0)
   SEMICOLON                          => reduce 0 tokens to parameter_profile_opt 109.1
   default                            => ERROR

   actual_parameter_part              goto state 27
   formal_part                        goto state 34
   parameter_profile_opt              goto state 35

State 20:
     71.0:compilation_unit_list <= compilation_unit_list compilation_unit ^, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI

   FUNCTION                           => reduce 2 tokens to compilation_unit_list 71.0
   PACKAGE                            => reduce 2 tokens to compilation_unit_list 71.0
   PROCEDURE                          => reduce 2 tokens to compilation_unit_list 71.0
   Wisi_EOI                           => reduce 2 tokens to compilation_unit_list 71.0
   default                            => ERROR

State 21:
     58.0:aspect_specification_opt <= WITH ^ association_list, IS

   IS                                 => reduce 0 tokens to association_opt 60.2
   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   COMMA                              => reduce 0 tokens to association_opt 60.2
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 42 (60.0, 104.2)
   default                            => ERROR

   association_opt                    goto state 43
   association_list                   goto state 44
   expression                         goto state 45
   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation_and_list                  goto state 50
   relation_or_list                   goto state 51
   relation_xor_list                  goto state 52
   relation                           goto state 53
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 22:
    133.0:subprogram_declaration <= subprogram_specification SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 2 tokens to subprogram_declaration 133.0
   END                                => reduce 2 tokens to subprogram_declaration 133.0
   FUNCTION                           => reduce 2 tokens to subprogram_declaration 133.0
   PACKAGE                            => reduce 2 tokens to subprogram_declaration 133.0
   PROCEDURE                          => reduce 2 tokens to subprogram_declaration 133.0
   TYPE                               => reduce 2 tokens to subprogram_declaration 133.0
   IDENTIFIER                         => reduce 2 tokens to subprogram_declaration 133.0
   Wisi_EOI                           => reduce 2 tokens to subprogram_declaration 133.0
   default                            => ERROR

State 23:
    131.0:subprogram_body <= subprogram_specification aspect_specification_opt ^ IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   IS                                 => shift and goto state 58 (131.0)
   default                            => ERROR

State 24:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN, IS/LEFT_PAREN/RETURN/WITH/DOT/SEMICOLON
     92.0:formal_part <= LEFT_PAREN ^ parameter_specification_list RIGHT_PAREN, IS/RETURN/WITH/SEMICOLON
    104.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN, IS/LEFT_PAREN/RETURN/WITH/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   RIGHT_PAREN                        => reduce 0 tokens to association_opt 60.2,
                                         reduce 0 tokens to parameter_specification 110.2
   COMMA                              => reduce 0 tokens to association_opt 60.2
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   SEMICOLON                          => reduce 0 tokens to parameter_specification 110.2
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 59 (60.0, 104.2, 110.0, 110.1)
   default                            => ERROR

   association_opt                    goto state 43
   association_list                   goto state 60
   expression                         goto state 45
   factor                             goto state 46
   name                               goto state 47
   parameter_specification            goto state 61
   parameter_specification_list       goto state 62
   paren_expression                   goto state 48
   primary                            goto state 49
   range_g                            goto state 63
   range_list                         goto state 64
   relation_and_list                  goto state 50
   relation_or_list                   goto state 51
   relation_xor_list                  goto state 52
   relation                           goto state 53
   selected_component                 goto state 16
   simple_expression                  goto state 65
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 25:
    108.1:parameter_and_result_profile <= RETURN ^ IDENTIFIER, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 66 (108.1)
   default                            => ERROR

State 26:
    124.0:selected_component <= name DOT ^ IDENTIFIER, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   IDENTIFIER                         => shift and goto state 67 (124.0)
   default                            => ERROR

State 27:
    104.1:name <= name actual_parameter_part ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 2 tokens to name 104.1
   IS                                 => reduce 2 tokens to name 104.1
   LEFT_PAREN                         => reduce 2 tokens to name 104.1
   LOOP                               => reduce 2 tokens to name 104.1
   OR                                 => reduce 2 tokens to name 104.1
   RANGE                              => reduce 2 tokens to name 104.1
   RETURN                             => reduce 2 tokens to name 104.1
   RIGHT_PAREN                        => reduce 2 tokens to name 104.1
   THEN                               => reduce 2 tokens to name 104.1
   WITH                               => reduce 2 tokens to name 104.1
   XOR                                => reduce 2 tokens to name 104.1
   AMPERSAND                          => reduce 2 tokens to name 104.1
   COLON_EQUAL                        => reduce 2 tokens to name 104.1
   COMMA                              => reduce 2 tokens to name 104.1
   DOT                                => reduce 2 tokens to name 104.1
   DOT_DOT                            => reduce 2 tokens to name 104.1
   EQUAL                              => reduce 2 tokens to name 104.1
   EQUAL_GREATER                      => reduce 2 tokens to name 104.1
   GREATER                            => reduce 2 tokens to name 104.1
   GREATER_EQUAL                      => reduce 2 tokens to name 104.1
   LESS                               => reduce 2 tokens to name 104.1
   LESS_EQUAL                         => reduce 2 tokens to name 104.1
   MINUS                              => reduce 2 tokens to name 104.1
   PLUS                               => reduce 2 tokens to name 104.1
   SEMICOLON                          => reduce 2 tokens to name 104.1
   SLASH                              => reduce 2 tokens to name 104.1
   SLASH_EQUAL                        => reduce 2 tokens to name 104.1
   STAR                               => reduce 2 tokens to name 104.1
   default                            => ERROR

State 28:
    108.0:parameter_and_result_profile <= formal_part ^ RETURN IDENTIFIER, IS/WITH/SEMICOLON

   RETURN                             => shift and goto state 68 (108.0)
   default                            => ERROR

State 29:
     94.0:function_specification <= FUNCTION name parameter_and_result_profile ^, IS/WITH/SEMICOLON

   IS                                 => reduce 3 tokens to function_specification 94.0
   WITH                               => reduce 3 tokens to function_specification 94.0
   SEMICOLON                          => reduce 3 tokens to function_specification 94.0
   default                            => ERROR

State 30:
    104.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, IS/LEFT_PAREN/WITH/DOT
    104.1:name <= name ^ actual_parameter_part, IS/LEFT_PAREN/WITH/DOT
    107.0:package_body <= PACKAGE BODY name ^ aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI
    107.1:package_body <= PACKAGE BODY name ^ aspect_specification_opt IS declarative_part_opt END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI
    124.0:selected_component <= name ^ DOT IDENTIFIER, IS/LEFT_PAREN/WITH/DOT

   IS                                 => reduce 0 tokens to aspect_specification_opt 58.1
   LEFT_PAREN                         => shift and goto state 32 (57.0, 104.0)
   WITH                               => shift and goto state 21 (58.0)
   DOT                                => shift and goto state 26 (124.0)
   default                            => ERROR

   actual_parameter_part              goto state 27
   aspect_specification_opt           goto state 69

State 31:
     95.0:generic_instantiation <= PACKAGE name IS ^ NEW name SEMICOLON, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI

   NEW                                => shift and goto state 70 (95.0)
   default                            => ERROR

State 32:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    104.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   RIGHT_PAREN                        => reduce 0 tokens to association_opt 60.2
   COMMA                              => reduce 0 tokens to association_opt 60.2
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 42 (60.0, 104.2)
   default                            => ERROR

   association_opt                    goto state 43
   association_list                   goto state 60
   expression                         goto state 45
   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   range_g                            goto state 63
   range_list                         goto state 64
   relation_and_list                  goto state 50
   relation_or_list                   goto state 51
   relation_xor_list                  goto state 52
   relation                           goto state 53
   selected_component                 goto state 16
   simple_expression                  goto state 65
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 33:
     95.1:generic_instantiation <= PROCEDURE name IS ^ NEW name SEMICOLON, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI

   NEW                                => shift and goto state 71 (95.1)
   default                            => ERROR

State 34:
    109.0:parameter_profile_opt <= formal_part ^, IS/WITH/SEMICOLON

   IS                                 => reduce 1 tokens to parameter_profile_opt 109.0
   WITH                               => reduce 1 tokens to parameter_profile_opt 109.0
   SEMICOLON                          => reduce 1 tokens to parameter_profile_opt 109.0
   default                            => ERROR

State 35:
    115.0:procedure_specification <= PROCEDURE name parameter_profile_opt ^, IS/WITH/SEMICOLON

   IS                                 => reduce 3 tokens to procedure_specification 115.0
   WITH                               => reduce 3 tokens to procedure_specification 115.0
   SEMICOLON                          => reduce 3 tokens to procedure_specification 115.0
   default                            => ERROR

State 36:
    112.0:paren_expression <= LEFT_PAREN ^ expression_opt RIGHT_PAREN, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   RIGHT_PAREN                        => reduce 0 tokens to expression_opt 88.1
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   expression                         goto state 72
   expression_opt                     goto state 73
   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation_and_list                  goto state 50
   relation_or_list                   goto state 51
   relation_xor_list                  goto state 52
   relation                           goto state 53
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 37:
     91.1:factor <= NOT ^ primary, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 74
   selected_component                 goto state 16

State 38:
    140.1:unary_adding_operator <= MINUS ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to unary_adding_operator 140.1
   NOT                                => reduce 1 tokens to unary_adding_operator 140.1
   STRING_LITERAL                     => reduce 1 tokens to unary_adding_operator 140.1
   NUMERIC_LITERAL                    => reduce 1 tokens to unary_adding_operator 140.1
   IDENTIFIER                         => reduce 1 tokens to unary_adding_operator 140.1
   default                            => ERROR

State 39:
    140.0:unary_adding_operator <= PLUS ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to unary_adding_operator 140.0
   NOT                                => reduce 1 tokens to unary_adding_operator 140.0
   STRING_LITERAL                     => reduce 1 tokens to unary_adding_operator 140.0
   NUMERIC_LITERAL                    => reduce 1 tokens to unary_adding_operator 140.0
   IDENTIFIER                         => reduce 1 tokens to unary_adding_operator 140.0
   default                            => ERROR

State 40:
    113.1:primary <= STRING_LITERAL ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to primary 113.1
   IS                                 => reduce 1 tokens to primary 113.1
   LOOP                               => reduce 1 tokens to primary 113.1
   OR                                 => reduce 1 tokens to primary 113.1
   RIGHT_PAREN                        => reduce 1 tokens to primary 113.1
   THEN                               => reduce 1 tokens to primary 113.1
   XOR                                => reduce 1 tokens to primary 113.1
   AMPERSAND                          => reduce 1 tokens to primary 113.1
   COLON_EQUAL                        => reduce 1 tokens to primary 113.1
   COMMA                              => reduce 1 tokens to primary 113.1
   DOT_DOT                            => reduce 1 tokens to primary 113.1
   EQUAL                              => reduce 1 tokens to primary 113.1
   GREATER                            => reduce 1 tokens to primary 113.1
   GREATER_EQUAL                      => reduce 1 tokens to primary 113.1
   LESS                               => reduce 1 tokens to primary 113.1
   LESS_EQUAL                         => reduce 1 tokens to primary 113.1
   MINUS                              => reduce 1 tokens to primary 113.1
   PLUS                               => reduce 1 tokens to primary 113.1
   SEMICOLON                          => reduce 1 tokens to primary 113.1
   SLASH                              => reduce 1 tokens to primary 113.1
   SLASH_EQUAL                        => reduce 1 tokens to primary 113.1
   STAR                               => reduce 1 tokens to primary 113.1
   default                            => ERROR

State 41:
    113.0:primary <= NUMERIC_LITERAL ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to primary 113.0
   IS                                 => reduce 1 tokens to primary 113.0
   LOOP                               => reduce 1 tokens to primary 113.0
   OR                                 => reduce 1 tokens to primary 113.0
   RIGHT_PAREN                        => reduce 1 tokens to primary 113.0
   THEN                               => reduce 1 tokens to primary 113.0
   XOR                                => reduce 1 tokens to primary 113.0
   AMPERSAND                          => reduce 1 tokens to primary 113.0
   COLON_EQUAL                        => reduce 1 tokens to primary 113.0
   COMMA                              => reduce 1 tokens to primary 113.0
   DOT_DOT                            => reduce 1 tokens to primary 113.0
   EQUAL                              => reduce 1 tokens to primary 113.0
   GREATER                            => reduce 1 tokens to primary 113.0
   GREATER_EQUAL                      => reduce 1 tokens to primary 113.0
   LESS                               => reduce 1 tokens to primary 113.0
   LESS_EQUAL                         => reduce 1 tokens to primary 113.0
   MINUS                              => reduce 1 tokens to primary 113.0
   PLUS                               => reduce 1 tokens to primary 113.0
   SEMICOLON                          => reduce 1 tokens to primary 113.0
   SLASH                              => reduce 1 tokens to primary 113.0
   SLASH_EQUAL                        => reduce 1 tokens to primary 113.0
   STAR                               => reduce 1 tokens to primary 113.0
   default                            => ERROR

State 42:
     60.0:association_opt <= IDENTIFIER ^ EQUAL_GREATER expression_opt, IS/RIGHT_PAREN/COMMA
    104.2:name <= IDENTIFIER ^, AND/IS/LEFT_PAREN/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to name 104.2
   IS                                 => reduce 1 tokens to name 104.2
   LEFT_PAREN                         => reduce 1 tokens to name 104.2
   OR                                 => reduce 1 tokens to name 104.2
   RANGE                              => reduce 1 tokens to name 104.2
   RIGHT_PAREN                        => reduce 1 tokens to name 104.2
   XOR                                => reduce 1 tokens to name 104.2
   AMPERSAND                          => reduce 1 tokens to name 104.2
   COMMA                              => reduce 1 tokens to name 104.2
   DOT                                => reduce 1 tokens to name 104.2
   DOT_DOT                            => reduce 1 tokens to name 104.2
   EQUAL                              => reduce 1 tokens to name 104.2
   EQUAL_GREATER                      => shift and goto state 75 (60.0)
   GREATER                            => reduce 1 tokens to name 104.2
   GREATER_EQUAL                      => reduce 1 tokens to name 104.2
   LESS                               => reduce 1 tokens to name 104.2
   LESS_EQUAL                         => reduce 1 tokens to name 104.2
   MINUS                              => reduce 1 tokens to name 104.2
   PLUS                               => reduce 1 tokens to name 104.2
   SLASH                              => reduce 1 tokens to name 104.2
   SLASH_EQUAL                        => reduce 1 tokens to name 104.2
   STAR                               => reduce 1 tokens to name 104.2
   default                            => ERROR

State 43:
     61.1:association_list <= association_opt ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 1 tokens to association_list 61.1
   RIGHT_PAREN                        => reduce 1 tokens to association_list 61.1
   COMMA                              => reduce 1 tokens to association_list 61.1
   default                            => ERROR

State 44:
     58.0:aspect_specification_opt <= WITH association_list ^, IS
     61.0:association_list <= association_list ^ COMMA association_opt, IS/COMMA

   IS                                 => reduce 2 tokens to aspect_specification_opt 58.0
   COMMA                              => shift and goto state 76 (61.0)
   default                            => ERROR

State 45:
     60.1:association_opt <= expression ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 1 tokens to association_opt 60.1
   RIGHT_PAREN                        => reduce 1 tokens to association_opt 60.1
   COMMA                              => reduce 1 tokens to association_opt 60.1
   default                            => ERROR

State 46:
    136.1:term <= factor ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to term 136.1
   IS                                 => reduce 1 tokens to term 136.1
   LOOP                               => reduce 1 tokens to term 136.1
   OR                                 => reduce 1 tokens to term 136.1
   RIGHT_PAREN                        => reduce 1 tokens to term 136.1
   THEN                               => reduce 1 tokens to term 136.1
   XOR                                => reduce 1 tokens to term 136.1
   AMPERSAND                          => reduce 1 tokens to term 136.1
   COLON_EQUAL                        => reduce 1 tokens to term 136.1
   COMMA                              => reduce 1 tokens to term 136.1
   DOT_DOT                            => reduce 1 tokens to term 136.1
   EQUAL                              => reduce 1 tokens to term 136.1
   GREATER                            => reduce 1 tokens to term 136.1
   GREATER_EQUAL                      => reduce 1 tokens to term 136.1
   LESS                               => reduce 1 tokens to term 136.1
   LESS_EQUAL                         => reduce 1 tokens to term 136.1
   MINUS                              => reduce 1 tokens to term 136.1
   PLUS                               => reduce 1 tokens to term 136.1
   SEMICOLON                          => reduce 1 tokens to term 136.1
   SLASH                              => reduce 1 tokens to term 136.1
   SLASH_EQUAL                        => reduce 1 tokens to term 136.1
   STAR                               => reduce 1 tokens to term 136.1
   default                            => ERROR

State 47:
    104.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    104.1:name <= name ^ actual_parameter_part, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    113.2:primary <= name ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    124.0:selected_component <= name ^ DOT IDENTIFIER, AND/IS/LEFT_PAREN/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to primary 113.2
   IS                                 => reduce 1 tokens to primary 113.2
   LEFT_PAREN                         => shift and goto state 32 (57.0, 104.0)
   LOOP                               => reduce 1 tokens to primary 113.2
   OR                                 => reduce 1 tokens to primary 113.2
   RIGHT_PAREN                        => reduce 1 tokens to primary 113.2
   THEN                               => reduce 1 tokens to primary 113.2
   XOR                                => reduce 1 tokens to primary 113.2
   AMPERSAND                          => reduce 1 tokens to primary 113.2
   COLON_EQUAL                        => reduce 1 tokens to primary 113.2
   COMMA                              => reduce 1 tokens to primary 113.2
   DOT                                => shift and goto state 26 (124.0)
   DOT_DOT                            => reduce 1 tokens to primary 113.2
   EQUAL                              => reduce 1 tokens to primary 113.2
   GREATER                            => reduce 1 tokens to primary 113.2
   GREATER_EQUAL                      => reduce 1 tokens to primary 113.2
   LESS                               => reduce 1 tokens to primary 113.2
   LESS_EQUAL                         => reduce 1 tokens to primary 113.2
   MINUS                              => reduce 1 tokens to primary 113.2
   PLUS                               => reduce 1 tokens to primary 113.2
   SEMICOLON                          => reduce 1 tokens to primary 113.2
   SLASH                              => reduce 1 tokens to primary 113.2
   SLASH_EQUAL                        => reduce 1 tokens to primary 113.2
   STAR                               => reduce 1 tokens to primary 113.2
   default                            => ERROR

   actual_parameter_part              goto state 27

State 48:
    113.3:primary <= paren_expression ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to primary 113.3
   IS                                 => reduce 1 tokens to primary 113.3
   LOOP                               => reduce 1 tokens to primary 113.3
   OR                                 => reduce 1 tokens to primary 113.3
   RIGHT_PAREN                        => reduce 1 tokens to primary 113.3
   THEN                               => reduce 1 tokens to primary 113.3
   XOR                                => reduce 1 tokens to primary 113.3
   AMPERSAND                          => reduce 1 tokens to primary 113.3
   COLON_EQUAL                        => reduce 1 tokens to primary 113.3
   COMMA                              => reduce 1 tokens to primary 113.3
   DOT_DOT                            => reduce 1 tokens to primary 113.3
   EQUAL                              => reduce 1 tokens to primary 113.3
   GREATER                            => reduce 1 tokens to primary 113.3
   GREATER_EQUAL                      => reduce 1 tokens to primary 113.3
   LESS                               => reduce 1 tokens to primary 113.3
   LESS_EQUAL                         => reduce 1 tokens to primary 113.3
   MINUS                              => reduce 1 tokens to primary 113.3
   PLUS                               => reduce 1 tokens to primary 113.3
   SEMICOLON                          => reduce 1 tokens to primary 113.3
   SLASH                              => reduce 1 tokens to primary 113.3
   SLASH_EQUAL                        => reduce 1 tokens to primary 113.3
   STAR                               => reduce 1 tokens to primary 113.3
   default                            => ERROR

State 49:
     91.0:factor <= primary ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to factor 91.0
   IS                                 => reduce 1 tokens to factor 91.0
   LOOP                               => reduce 1 tokens to factor 91.0
   OR                                 => reduce 1 tokens to factor 91.0
   RIGHT_PAREN                        => reduce 1 tokens to factor 91.0
   THEN                               => reduce 1 tokens to factor 91.0
   XOR                                => reduce 1 tokens to factor 91.0
   AMPERSAND                          => reduce 1 tokens to factor 91.0
   COLON_EQUAL                        => reduce 1 tokens to factor 91.0
   COMMA                              => reduce 1 tokens to factor 91.0
   DOT_DOT                            => reduce 1 tokens to factor 91.0
   EQUAL                              => reduce 1 tokens to factor 91.0
   GREATER                            => reduce 1 tokens to factor 91.0
   GREATER_EQUAL                      => reduce 1 tokens to factor 91.0
   LESS                               => reduce 1 tokens to factor 91.0
   LESS_EQUAL                         => reduce 1 tokens to factor 91.0
   MINUS                              => reduce 1 tokens to factor 91.0
   PLUS                               => reduce 1 tokens to factor 91.0
   SEMICOLON                          => reduce 1 tokens to factor 91.0
   SLASH                              => reduce 1 tokens to factor 91.0
   SLASH_EQUAL                        => reduce 1 tokens to factor 91.0
   STAR                               => reduce 1 tokens to factor 91.0
   default                            => ERROR

State 50:
     87.1:expression <= relation_and_list ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    119.0:relation_and_list <= relation_and_list ^ AND relation, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   AND                                => shift and goto state 77 (119.0)
   IS                                 => reduce 1 tokens to expression 87.1
   RIGHT_PAREN                        => reduce 1 tokens to expression 87.1
   THEN                               => reduce 1 tokens to expression 87.1
   COMMA                              => reduce 1 tokens to expression 87.1
   SEMICOLON                          => reduce 1 tokens to expression 87.1
   default                            => ERROR

State 51:
     87.2:expression <= relation_or_list ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    120.0:relation_or_list <= relation_or_list ^ OR relation, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   IS                                 => reduce 1 tokens to expression 87.2
   OR                                 => shift and goto state 78 (120.0)
   RIGHT_PAREN                        => reduce 1 tokens to expression 87.2
   THEN                               => reduce 1 tokens to expression 87.2
   COMMA                              => reduce 1 tokens to expression 87.2
   SEMICOLON                          => reduce 1 tokens to expression 87.2
   default                            => ERROR

State 52:
     87.3:expression <= relation_xor_list ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    121.0:relation_xor_list <= relation_xor_list ^ XOR relation, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   IS                                 => reduce 1 tokens to expression 87.3
   RIGHT_PAREN                        => reduce 1 tokens to expression 87.3
   THEN                               => reduce 1 tokens to expression 87.3
   XOR                                => shift and goto state 79 (121.0)
   COMMA                              => reduce 1 tokens to expression 87.3
   SEMICOLON                          => reduce 1 tokens to expression 87.3
   default                            => ERROR

State 53:
     87.0:expression <= relation ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    119.1:relation_and_list <= relation ^ AND relation, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    120.1:relation_or_list <= relation ^ OR relation, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON
    121.1:relation_xor_list <= relation ^ XOR relation, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   AND                                => shift and goto state 80 (119.1)
   IS                                 => reduce 1 tokens to expression 87.0
   OR                                 => shift and goto state 81 (120.1)
   RIGHT_PAREN                        => reduce 1 tokens to expression 87.0
   THEN                               => reduce 1 tokens to expression 87.0
   XOR                                => shift and goto state 82 (121.1)
   COMMA                              => reduce 1 tokens to expression 87.0
   SEMICOLON                          => reduce 1 tokens to expression 87.0
   default                            => ERROR

State 54:
    122.0:relation <= simple_expression ^ relational_operator simple_expression, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON
    122.1:relation <= simple_expression ^, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   AND                                => reduce 1 tokens to relation 122.1
   IS                                 => reduce 1 tokens to relation 122.1
   OR                                 => reduce 1 tokens to relation 122.1
   RIGHT_PAREN                        => reduce 1 tokens to relation 122.1
   THEN                               => reduce 1 tokens to relation 122.1
   XOR                                => reduce 1 tokens to relation 122.1
   COMMA                              => reduce 1 tokens to relation 122.1
   EQUAL                              => shift and goto state 83 (123.0)
   GREATER                            => shift and goto state 84 (123.4)
   GREATER_EQUAL                      => shift and goto state 85 (123.5)
   LESS                               => shift and goto state 86 (123.2)
   LESS_EQUAL                         => shift and goto state 87 (123.3)
   SEMICOLON                          => reduce 1 tokens to relation 122.1
   SLASH_EQUAL                        => shift and goto state 88 (123.1)
   default                            => ERROR

   relational_operator                goto state 89

State 55:
    136.0:term <= term ^ multiplying_operator factor, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    137.1:term_list <= term ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 1 tokens to term_list 137.1
   IS                                 => reduce 1 tokens to term_list 137.1
   LOOP                               => reduce 1 tokens to term_list 137.1
   OR                                 => reduce 1 tokens to term_list 137.1
   RIGHT_PAREN                        => reduce 1 tokens to term_list 137.1
   THEN                               => reduce 1 tokens to term_list 137.1
   XOR                                => reduce 1 tokens to term_list 137.1
   AMPERSAND                          => reduce 1 tokens to term_list 137.1
   COLON_EQUAL                        => reduce 1 tokens to term_list 137.1
   COMMA                              => reduce 1 tokens to term_list 137.1
   DOT_DOT                            => reduce 1 tokens to term_list 137.1
   EQUAL                              => reduce 1 tokens to term_list 137.1
   GREATER                            => reduce 1 tokens to term_list 137.1
   GREATER_EQUAL                      => reduce 1 tokens to term_list 137.1
   LESS                               => reduce 1 tokens to term_list 137.1
   LESS_EQUAL                         => reduce 1 tokens to term_list 137.1
   MINUS                              => reduce 1 tokens to term_list 137.1
   PLUS                               => reduce 1 tokens to term_list 137.1
   SEMICOLON                          => reduce 1 tokens to term_list 137.1
   SLASH                              => shift and goto state 90 (103.1)
   SLASH_EQUAL                        => reduce 1 tokens to term_list 137.1
   STAR                               => shift and goto state 91 (103.0)
   default                            => ERROR

   multiplying_operator               goto state 92

State 56:
    127.1:simple_expression <= term_list ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL
    137.0:term_list <= term_list ^ binary_adding_operator term, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 1 tokens to simple_expression 127.1
   IS                                 => reduce 1 tokens to simple_expression 127.1
   LOOP                               => reduce 1 tokens to simple_expression 127.1
   OR                                 => reduce 1 tokens to simple_expression 127.1
   RIGHT_PAREN                        => reduce 1 tokens to simple_expression 127.1
   THEN                               => reduce 1 tokens to simple_expression 127.1
   XOR                                => reduce 1 tokens to simple_expression 127.1
   AMPERSAND                          => shift and goto state 93 (62.2)
   COLON_EQUAL                        => reduce 1 tokens to simple_expression 127.1
   COMMA                              => reduce 1 tokens to simple_expression 127.1
   DOT_DOT                            => reduce 1 tokens to simple_expression 127.1
   EQUAL                              => reduce 1 tokens to simple_expression 127.1
   GREATER                            => reduce 1 tokens to simple_expression 127.1
   GREATER_EQUAL                      => reduce 1 tokens to simple_expression 127.1
   LESS                               => reduce 1 tokens to simple_expression 127.1
   LESS_EQUAL                         => reduce 1 tokens to simple_expression 127.1
   MINUS                              => shift and goto state 94 (62.1)
   PLUS                               => shift and goto state 95 (62.0)
   SEMICOLON                          => reduce 1 tokens to simple_expression 127.1
   SLASH_EQUAL                        => reduce 1 tokens to simple_expression 127.1
   default                            => ERROR

   binary_adding_operator             goto state 96

State 57:
    127.0:simple_expression <= unary_adding_operator ^ term_list, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   selected_component                 goto state 16
   term                               goto state 55
   term_list                          goto state 97

State 58:
    131.0:subprogram_body <= subprogram_specification aspect_specification_opt IS ^ declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to declarative_part_opt 76.1
   FUNCTION                           => shift and goto state 1 (94.0)
   PACKAGE                            => shift and goto state 98 (107.0, 107.1)
   PROCEDURE                          => shift and goto state 99 (115.0)
   TYPE                               => shift and goto state 100 (93.0)
   IDENTIFIER                         => shift and goto state 101 (106.0, 106.1)
   default                            => ERROR

   body_g                             goto state 102
   body_stub                          goto state 103
   declaration                        goto state 104
   declarations                       goto state 105
   declarative_part_opt               goto state 106
   full_type_declaration              goto state 107
   function_specification             goto state 6
   object_declaration                 goto state 108
   package_body                       goto state 109
   procedure_specification            goto state 10
   proper_body                        goto state 110
   subprogram_body                    goto state 111
   subprogram_body_stub               goto state 112
   subprogram_declaration             goto state 113
   subprogram_specification           goto state 114
   type_declaration                   goto state 115

State 59:
     60.0:association_opt <= IDENTIFIER ^ EQUAL_GREATER expression_opt, RIGHT_PAREN/COMMA
    104.2:name <= IDENTIFIER ^, AND/LEFT_PAREN/OR/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    110.0:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER COLON_EQUAL expression_opt, RIGHT_PAREN/SEMICOLON
    110.1:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER, RIGHT_PAREN/SEMICOLON

   AND                                => reduce 1 tokens to name 104.2
   LEFT_PAREN                         => reduce 1 tokens to name 104.2
   OR                                 => reduce 1 tokens to name 104.2
   RIGHT_PAREN                        => reduce 1 tokens to name 104.2
   XOR                                => reduce 1 tokens to name 104.2
   AMPERSAND                          => reduce 1 tokens to name 104.2
   COLON                              => shift and goto state 116 (110.0, 110.1)
   COMMA                              => reduce 1 tokens to name 104.2
   DOT                                => reduce 1 tokens to name 104.2
   DOT_DOT                            => reduce 1 tokens to name 104.2
   EQUAL                              => reduce 1 tokens to name 104.2
   EQUAL_GREATER                      => shift and goto state 75 (60.0)
   GREATER                            => reduce 1 tokens to name 104.2
   GREATER_EQUAL                      => reduce 1 tokens to name 104.2
   LESS                               => reduce 1 tokens to name 104.2
   LESS_EQUAL                         => reduce 1 tokens to name 104.2
   MINUS                              => reduce 1 tokens to name 104.2
   PLUS                               => reduce 1 tokens to name 104.2
   SLASH                              => reduce 1 tokens to name 104.2
   SLASH_EQUAL                        => reduce 1 tokens to name 104.2
   STAR                               => reduce 1 tokens to name 104.2
   default                            => ERROR

State 60:
     57.0:actual_parameter_part <= LEFT_PAREN association_list ^ RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
     61.0:association_list <= association_list ^ COMMA association_opt, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => shift and goto state 117 (57.0)
   COMMA                              => shift and goto state 76 (61.0)
   default                            => ERROR

State 61:
    111.1:parameter_specification_list <= parameter_specification ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 1 tokens to parameter_specification_list 111.1
   SEMICOLON                          => reduce 1 tokens to parameter_specification_list 111.1
   default                            => ERROR

State 62:
     92.0:formal_part <= LEFT_PAREN parameter_specification_list ^ RIGHT_PAREN, IS/RETURN/WITH/SEMICOLON
    111.0:parameter_specification_list <= parameter_specification_list ^ SEMICOLON parameter_specification, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => shift and goto state 118 (92.0)
   SEMICOLON                          => shift and goto state 119 (111.0)
   default                            => ERROR

State 63:
    118.1:range_list <= range_g ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 1 tokens to range_list 118.1
   COMMA                              => reduce 1 tokens to range_list 118.1
   default                            => ERROR

State 64:
    104.0:name <= name LEFT_PAREN range_list ^ RIGHT_PAREN, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    118.0:range_list <= range_list ^ COMMA range_g, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => shift and goto state 120 (104.0)
   COMMA                              => shift and goto state 121 (118.0)
   default                            => ERROR

State 65:
    117.0:range_g <= simple_expression ^ DOT_DOT simple_expression, RIGHT_PAREN/COMMA
    122.0:relation <= simple_expression ^ relational_operator simple_expression, AND/OR/RIGHT_PAREN/XOR/COMMA
    122.1:relation <= simple_expression ^, AND/OR/RIGHT_PAREN/XOR/COMMA

   AND                                => reduce 1 tokens to relation 122.1
   OR                                 => reduce 1 tokens to relation 122.1
   RIGHT_PAREN                        => reduce 1 tokens to relation 122.1
   XOR                                => reduce 1 tokens to relation 122.1
   COMMA                              => reduce 1 tokens to relation 122.1
   DOT_DOT                            => shift and goto state 122 (117.0)
   EQUAL                              => shift and goto state 83 (123.0)
   GREATER                            => shift and goto state 84 (123.4)
   GREATER_EQUAL                      => shift and goto state 85 (123.5)
   LESS                               => shift and goto state 86 (123.2)
   LESS_EQUAL                         => shift and goto state 87 (123.3)
   SLASH_EQUAL                        => shift and goto state 88 (123.1)
   default                            => ERROR

   relational_operator                goto state 89

State 66:
    108.1:parameter_and_result_profile <= RETURN IDENTIFIER ^, IS/WITH/SEMICOLON

   IS                                 => reduce 2 tokens to parameter_and_result_profile 108.1
   WITH                               => reduce 2 tokens to parameter_and_result_profile 108.1
   SEMICOLON                          => reduce 2 tokens to parameter_and_result_profile 108.1
   default                            => ERROR

State 67:
    124.0:selected_component <= name DOT IDENTIFIER ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 3 tokens to selected_component 124.0
   IS                                 => reduce 3 tokens to selected_component 124.0
   LEFT_PAREN                         => reduce 3 tokens to selected_component 124.0
   LOOP                               => reduce 3 tokens to selected_component 124.0
   OR                                 => reduce 3 tokens to selected_component 124.0
   RANGE                              => reduce 3 tokens to selected_component 124.0
   RETURN                             => reduce 3 tokens to selected_component 124.0
   RIGHT_PAREN                        => reduce 3 tokens to selected_component 124.0
   THEN                               => reduce 3 tokens to selected_component 124.0
   WITH                               => reduce 3 tokens to selected_component 124.0
   XOR                                => reduce 3 tokens to selected_component 124.0
   AMPERSAND                          => reduce 3 tokens to selected_component 124.0
   COLON_EQUAL                        => reduce 3 tokens to selected_component 124.0
   COMMA                              => reduce 3 tokens to selected_component 124.0
   DOT                                => reduce 3 tokens to selected_component 124.0
   DOT_DOT                            => reduce 3 tokens to selected_component 124.0
   EQUAL                              => reduce 3 tokens to selected_component 124.0
   EQUAL_GREATER                      => reduce 3 tokens to selected_component 124.0
   GREATER                            => reduce 3 tokens to selected_component 124.0
   GREATER_EQUAL                      => reduce 3 tokens to selected_component 124.0
   LESS                               => reduce 3 tokens to selected_component 124.0
   LESS_EQUAL                         => reduce 3 tokens to selected_component 124.0
   MINUS                              => reduce 3 tokens to selected_component 124.0
   PLUS                               => reduce 3 tokens to selected_component 124.0
   SEMICOLON                          => reduce 3 tokens to selected_component 124.0
   SLASH                              => reduce 3 tokens to selected_component 124.0
   SLASH_EQUAL                        => reduce 3 tokens to selected_component 124.0
   STAR                               => reduce 3 tokens to selected_component 124.0
   default                            => ERROR

State 68:
    108.0:parameter_and_result_profile <= formal_part RETURN ^ IDENTIFIER, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 123 (108.0)
   default                            => ERROR

State 69:
    107.0:package_body <= PACKAGE BODY name aspect_specification_opt ^ IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI
    107.1:package_body <= PACKAGE BODY name aspect_specification_opt ^ IS declarative_part_opt END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   IS                                 => shift and goto state 124 (107.0, 107.1)
   default                            => ERROR

State 70:
     95.0:generic_instantiation <= PACKAGE name IS NEW ^ name SEMICOLON, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI

   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   name                               goto state 125
   selected_component                 goto state 16

State 71:
     95.1:generic_instantiation <= PROCEDURE name IS NEW ^ name SEMICOLON, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI

   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   name                               goto state 126
   selected_component                 goto state 16

State 72:
     88.0:expression_opt <= expression ^, IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   IS                                 => reduce 1 tokens to expression_opt 88.0
   RIGHT_PAREN                        => reduce 1 tokens to expression_opt 88.0
   THEN                               => reduce 1 tokens to expression_opt 88.0
   COMMA                              => reduce 1 tokens to expression_opt 88.0
   SEMICOLON                          => reduce 1 tokens to expression_opt 88.0
   default                            => ERROR

State 73:
    112.0:paren_expression <= LEFT_PAREN expression_opt ^ RIGHT_PAREN, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   RIGHT_PAREN                        => shift and goto state 127 (112.0)
   default                            => ERROR

State 74:
     91.1:factor <= NOT primary ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 2 tokens to factor 91.1
   IS                                 => reduce 2 tokens to factor 91.1
   LOOP                               => reduce 2 tokens to factor 91.1
   OR                                 => reduce 2 tokens to factor 91.1
   RIGHT_PAREN                        => reduce 2 tokens to factor 91.1
   THEN                               => reduce 2 tokens to factor 91.1
   XOR                                => reduce 2 tokens to factor 91.1
   AMPERSAND                          => reduce 2 tokens to factor 91.1
   COLON_EQUAL                        => reduce 2 tokens to factor 91.1
   COMMA                              => reduce 2 tokens to factor 91.1
   DOT_DOT                            => reduce 2 tokens to factor 91.1
   EQUAL                              => reduce 2 tokens to factor 91.1
   GREATER                            => reduce 2 tokens to factor 91.1
   GREATER_EQUAL                      => reduce 2 tokens to factor 91.1
   LESS                               => reduce 2 tokens to factor 91.1
   LESS_EQUAL                         => reduce 2 tokens to factor 91.1
   MINUS                              => reduce 2 tokens to factor 91.1
   PLUS                               => reduce 2 tokens to factor 91.1
   SEMICOLON                          => reduce 2 tokens to factor 91.1
   SLASH                              => reduce 2 tokens to factor 91.1
   SLASH_EQUAL                        => reduce 2 tokens to factor 91.1
   STAR                               => reduce 2 tokens to factor 91.1
   default                            => ERROR

State 75:
     60.0:association_opt <= IDENTIFIER EQUAL_GREATER ^ expression_opt, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 0 tokens to expression_opt 88.1
   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   RIGHT_PAREN                        => reduce 0 tokens to expression_opt 88.1
   COMMA                              => reduce 0 tokens to expression_opt 88.1
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   expression                         goto state 72
   expression_opt                     goto state 128
   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation_and_list                  goto state 50
   relation_or_list                   goto state 51
   relation_xor_list                  goto state 52
   relation                           goto state 53
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 76:
     61.0:association_list <= association_list COMMA ^ association_opt, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 0 tokens to association_opt 60.2
   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   RIGHT_PAREN                        => reduce 0 tokens to association_opt 60.2
   COMMA                              => reduce 0 tokens to association_opt 60.2
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 42 (60.0, 104.2)
   default                            => ERROR

   association_opt                    goto state 129
   expression                         goto state 45
   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation_and_list                  goto state 50
   relation_or_list                   goto state 51
   relation_xor_list                  goto state 52
   relation                           goto state 53
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 77:
    119.0:relation_and_list <= relation_and_list AND ^ relation, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation                           goto state 130
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 78:
    120.0:relation_or_list <= relation_or_list OR ^ relation, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation                           goto state 131
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 79:
    121.0:relation_xor_list <= relation_xor_list XOR ^ relation, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation                           goto state 132
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 80:
    119.1:relation_and_list <= relation AND ^ relation, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation                           goto state 133
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 81:
    120.1:relation_or_list <= relation OR ^ relation, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation                           goto state 134
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 82:
    121.1:relation_xor_list <= relation XOR ^ relation, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation                           goto state 135
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 83:
    123.0:relational_operator <= EQUAL ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 123.0
   NOT                                => reduce 1 tokens to relational_operator 123.0
   MINUS                              => reduce 1 tokens to relational_operator 123.0
   PLUS                               => reduce 1 tokens to relational_operator 123.0
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 123.0
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 123.0
   IDENTIFIER                         => reduce 1 tokens to relational_operator 123.0
   default                            => ERROR

State 84:
    123.4:relational_operator <= GREATER ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 123.4
   NOT                                => reduce 1 tokens to relational_operator 123.4
   MINUS                              => reduce 1 tokens to relational_operator 123.4
   PLUS                               => reduce 1 tokens to relational_operator 123.4
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 123.4
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 123.4
   IDENTIFIER                         => reduce 1 tokens to relational_operator 123.4
   default                            => ERROR

State 85:
    123.5:relational_operator <= GREATER_EQUAL ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 123.5
   NOT                                => reduce 1 tokens to relational_operator 123.5
   MINUS                              => reduce 1 tokens to relational_operator 123.5
   PLUS                               => reduce 1 tokens to relational_operator 123.5
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 123.5
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 123.5
   IDENTIFIER                         => reduce 1 tokens to relational_operator 123.5
   default                            => ERROR

State 86:
    123.2:relational_operator <= LESS ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 123.2
   NOT                                => reduce 1 tokens to relational_operator 123.2
   MINUS                              => reduce 1 tokens to relational_operator 123.2
   PLUS                               => reduce 1 tokens to relational_operator 123.2
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 123.2
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 123.2
   IDENTIFIER                         => reduce 1 tokens to relational_operator 123.2
   default                            => ERROR

State 87:
    123.3:relational_operator <= LESS_EQUAL ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 123.3
   NOT                                => reduce 1 tokens to relational_operator 123.3
   MINUS                              => reduce 1 tokens to relational_operator 123.3
   PLUS                               => reduce 1 tokens to relational_operator 123.3
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 123.3
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 123.3
   IDENTIFIER                         => reduce 1 tokens to relational_operator 123.3
   default                            => ERROR

State 88:
    123.1:relational_operator <= SLASH_EQUAL ^, LEFT_PAREN/NOT/MINUS/PLUS/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to relational_operator 123.1
   NOT                                => reduce 1 tokens to relational_operator 123.1
   MINUS                              => reduce 1 tokens to relational_operator 123.1
   PLUS                               => reduce 1 tokens to relational_operator 123.1
   STRING_LITERAL                     => reduce 1 tokens to relational_operator 123.1
   NUMERIC_LITERAL                    => reduce 1 tokens to relational_operator 123.1
   IDENTIFIER                         => reduce 1 tokens to relational_operator 123.1
   default                            => ERROR

State 89:
    122.0:relation <= simple_expression relational_operator ^ simple_expression, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   selected_component                 goto state 16
   simple_expression                  goto state 136
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 90:
    103.1:multiplying_operator <= SLASH ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to multiplying_operator 103.1
   NOT                                => reduce 1 tokens to multiplying_operator 103.1
   STRING_LITERAL                     => reduce 1 tokens to multiplying_operator 103.1
   NUMERIC_LITERAL                    => reduce 1 tokens to multiplying_operator 103.1
   IDENTIFIER                         => reduce 1 tokens to multiplying_operator 103.1
   default                            => ERROR

State 91:
    103.0:multiplying_operator <= STAR ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to multiplying_operator 103.0
   NOT                                => reduce 1 tokens to multiplying_operator 103.0
   STRING_LITERAL                     => reduce 1 tokens to multiplying_operator 103.0
   NUMERIC_LITERAL                    => reduce 1 tokens to multiplying_operator 103.0
   IDENTIFIER                         => reduce 1 tokens to multiplying_operator 103.0
   default                            => ERROR

State 92:
    136.0:term <= term multiplying_operator ^ factor, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   factor                             goto state 137
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   selected_component                 goto state 16

State 93:
     62.2:binary_adding_operator <= AMPERSAND ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to binary_adding_operator 62.2
   NOT                                => reduce 1 tokens to binary_adding_operator 62.2
   STRING_LITERAL                     => reduce 1 tokens to binary_adding_operator 62.2
   NUMERIC_LITERAL                    => reduce 1 tokens to binary_adding_operator 62.2
   IDENTIFIER                         => reduce 1 tokens to binary_adding_operator 62.2
   default                            => ERROR

State 94:
     62.1:binary_adding_operator <= MINUS ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to binary_adding_operator 62.1
   NOT                                => reduce 1 tokens to binary_adding_operator 62.1
   STRING_LITERAL                     => reduce 1 tokens to binary_adding_operator 62.1
   NUMERIC_LITERAL                    => reduce 1 tokens to binary_adding_operator 62.1
   IDENTIFIER                         => reduce 1 tokens to binary_adding_operator 62.1
   default                            => ERROR

State 95:
     62.0:binary_adding_operator <= PLUS ^, LEFT_PAREN/NOT/STRING_LITERAL/NUMERIC_LITERAL/IDENTIFIER

   LEFT_PAREN                         => reduce 1 tokens to binary_adding_operator 62.0
   NOT                                => reduce 1 tokens to binary_adding_operator 62.0
   STRING_LITERAL                     => reduce 1 tokens to binary_adding_operator 62.0
   NUMERIC_LITERAL                    => reduce 1 tokens to binary_adding_operator 62.0
   IDENTIFIER                         => reduce 1 tokens to binary_adding_operator 62.0
   default                            => ERROR

State 96:
    137.0:term_list <= term_list binary_adding_operator ^ term, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   selected_component                 goto state 16
   term                               goto state 138

State 97:
    127.0:simple_expression <= unary_adding_operator term_list ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/SEMICOLON/SLASH_EQUAL
    137.0:term_list <= term_list ^ binary_adding_operator term, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 2 tokens to simple_expression 127.0
   IS                                 => reduce 2 tokens to simple_expression 127.0
   LOOP                               => reduce 2 tokens to simple_expression 127.0
   OR                                 => reduce 2 tokens to simple_expression 127.0
   RIGHT_PAREN                        => reduce 2 tokens to simple_expression 127.0
   THEN                               => reduce 2 tokens to simple_expression 127.0
   XOR                                => reduce 2 tokens to simple_expression 127.0
   AMPERSAND                          => shift and goto state 93 (62.2)
   COLON_EQUAL                        => reduce 2 tokens to simple_expression 127.0
   COMMA                              => reduce 2 tokens to simple_expression 127.0
   DOT_DOT                            => reduce 2 tokens to simple_expression 127.0
   EQUAL                              => reduce 2 tokens to simple_expression 127.0
   GREATER                            => reduce 2 tokens to simple_expression 127.0
   GREATER_EQUAL                      => reduce 2 tokens to simple_expression 127.0
   LESS                               => reduce 2 tokens to simple_expression 127.0
   LESS_EQUAL                         => reduce 2 tokens to simple_expression 127.0
   MINUS                              => shift and goto state 94 (62.1)
   PLUS                               => shift and goto state 95 (62.0)
   SEMICOLON                          => reduce 2 tokens to simple_expression 127.0
   SLASH_EQUAL                        => reduce 2 tokens to simple_expression 127.0
   default                            => ERROR

   binary_adding_operator             goto state 96

State 98:
    107.0:package_body <= PACKAGE ^ BODY name aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    107.1:package_body <= PACKAGE ^ BODY name aspect_specification_opt IS declarative_part_opt END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BODY                               => shift and goto state 17 (107.0, 107.1)
   default                            => ERROR

State 99:
    115.0:procedure_specification <= PROCEDURE ^ name parameter_profile_opt, IS/WITH/SEMICOLON

   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   name                               goto state 139
   selected_component                 goto state 16

State 100:
     93.0:full_type_declaration <= TYPE ^ IDENTIFIER IS type_definition SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   IDENTIFIER                         => shift and goto state 140 (93.0)
   default                            => ERROR

State 101:
    106.0:object_declaration <= IDENTIFIER ^ COLON subtype_indication COLON_EQUAL expression_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    106.1:object_declaration <= IDENTIFIER ^ COLON subtype_indication SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   COLON                              => shift and goto state 141 (106.0, 106.1)
   default                            => ERROR

State 102:
     74.0:declaration <= body_g ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declaration 74.0
   END                                => reduce 1 tokens to declaration 74.0
   FUNCTION                           => reduce 1 tokens to declaration 74.0
   PACKAGE                            => reduce 1 tokens to declaration 74.0
   PROCEDURE                          => reduce 1 tokens to declaration 74.0
   TYPE                               => reduce 1 tokens to declaration 74.0
   IDENTIFIER                         => reduce 1 tokens to declaration 74.0
   default                            => ERROR

State 103:
     65.1:body_g <= body_stub ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to body_g 65.1
   END                                => reduce 1 tokens to body_g 65.1
   FUNCTION                           => reduce 1 tokens to body_g 65.1
   PACKAGE                            => reduce 1 tokens to body_g 65.1
   PROCEDURE                          => reduce 1 tokens to body_g 65.1
   TYPE                               => reduce 1 tokens to body_g 65.1
   IDENTIFIER                         => reduce 1 tokens to body_g 65.1
   default                            => ERROR

State 104:
     75.1:declarations <= declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declarations 75.1
   END                                => reduce 1 tokens to declarations 75.1
   FUNCTION                           => reduce 1 tokens to declarations 75.1
   PACKAGE                            => reduce 1 tokens to declarations 75.1
   PROCEDURE                          => reduce 1 tokens to declarations 75.1
   TYPE                               => reduce 1 tokens to declarations 75.1
   IDENTIFIER                         => reduce 1 tokens to declarations 75.1
   default                            => ERROR

State 105:
     75.0:declarations <= declarations ^ declaration, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
     76.0:declarative_part_opt <= declarations ^, BEGIN/END

   BEGIN                              => reduce 1 tokens to declarative_part_opt 76.0
   END                                => reduce 1 tokens to declarative_part_opt 76.0
   FUNCTION                           => shift and goto state 1 (94.0)
   PACKAGE                            => shift and goto state 98 (107.0, 107.1)
   PROCEDURE                          => shift and goto state 99 (115.0)
   TYPE                               => shift and goto state 100 (93.0)
   IDENTIFIER                         => shift and goto state 101 (106.0, 106.1)
   default                            => ERROR

   body_g                             goto state 102
   body_stub                          goto state 103
   declaration                        goto state 142
   full_type_declaration              goto state 107
   function_specification             goto state 6
   object_declaration                 goto state 108
   package_body                       goto state 109
   procedure_specification            goto state 10
   proper_body                        goto state 110
   subprogram_body                    goto state 111
   subprogram_body_stub               goto state 112
   subprogram_declaration             goto state 113
   subprogram_specification           goto state 114
   type_declaration                   goto state 115

State 106:
    131.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part_opt ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 143 (131.0)
   default                            => ERROR

State 107:
    138.0:type_declaration <= full_type_declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to type_declaration 138.0
   END                                => reduce 1 tokens to type_declaration 138.0
   FUNCTION                           => reduce 1 tokens to type_declaration 138.0
   PACKAGE                            => reduce 1 tokens to type_declaration 138.0
   PROCEDURE                          => reduce 1 tokens to type_declaration 138.0
   TYPE                               => reduce 1 tokens to type_declaration 138.0
   IDENTIFIER                         => reduce 1 tokens to type_declaration 138.0
   default                            => ERROR

State 108:
     74.1:declaration <= object_declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declaration 74.1
   END                                => reduce 1 tokens to declaration 74.1
   FUNCTION                           => reduce 1 tokens to declaration 74.1
   PACKAGE                            => reduce 1 tokens to declaration 74.1
   PROCEDURE                          => reduce 1 tokens to declaration 74.1
   TYPE                               => reduce 1 tokens to declaration 74.1
   IDENTIFIER                         => reduce 1 tokens to declaration 74.1
   default                            => ERROR

State 109:
    116.0:proper_body <= package_body ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to proper_body 116.0
   END                                => reduce 1 tokens to proper_body 116.0
   FUNCTION                           => reduce 1 tokens to proper_body 116.0
   PACKAGE                            => reduce 1 tokens to proper_body 116.0
   PROCEDURE                          => reduce 1 tokens to proper_body 116.0
   TYPE                               => reduce 1 tokens to proper_body 116.0
   IDENTIFIER                         => reduce 1 tokens to proper_body 116.0
   default                            => ERROR

State 110:
     65.0:body_g <= proper_body ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to body_g 65.0
   END                                => reduce 1 tokens to body_g 65.0
   FUNCTION                           => reduce 1 tokens to body_g 65.0
   PACKAGE                            => reduce 1 tokens to body_g 65.0
   PROCEDURE                          => reduce 1 tokens to body_g 65.0
   TYPE                               => reduce 1 tokens to body_g 65.0
   IDENTIFIER                         => reduce 1 tokens to body_g 65.0
   default                            => ERROR

State 111:
    116.1:proper_body <= subprogram_body ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to proper_body 116.1
   END                                => reduce 1 tokens to proper_body 116.1
   FUNCTION                           => reduce 1 tokens to proper_body 116.1
   PACKAGE                            => reduce 1 tokens to proper_body 116.1
   PROCEDURE                          => reduce 1 tokens to proper_body 116.1
   TYPE                               => reduce 1 tokens to proper_body 116.1
   IDENTIFIER                         => reduce 1 tokens to proper_body 116.1
   default                            => ERROR

State 112:
     66.0:body_stub <= subprogram_body_stub ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to body_stub 66.0
   END                                => reduce 1 tokens to body_stub 66.0
   FUNCTION                           => reduce 1 tokens to body_stub 66.0
   PACKAGE                            => reduce 1 tokens to body_stub 66.0
   PROCEDURE                          => reduce 1 tokens to body_stub 66.0
   TYPE                               => reduce 1 tokens to body_stub 66.0
   IDENTIFIER                         => reduce 1 tokens to body_stub 66.0
   default                            => ERROR

State 113:
     74.2:declaration <= subprogram_declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declaration 74.2
   END                                => reduce 1 tokens to declaration 74.2
   FUNCTION                           => reduce 1 tokens to declaration 74.2
   PACKAGE                            => reduce 1 tokens to declaration 74.2
   PROCEDURE                          => reduce 1 tokens to declaration 74.2
   TYPE                               => reduce 1 tokens to declaration 74.2
   IDENTIFIER                         => reduce 1 tokens to declaration 74.2
   default                            => ERROR

State 114:
    131.0:subprogram_body <= subprogram_specification ^ aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    132.0:subprogram_body_stub <= subprogram_specification ^ IS SEPARATE SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    133.0:subprogram_declaration <= subprogram_specification ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   IS                                 => shift and goto state 144 (132.0),
                                         reduce 0 tokens to aspect_specification_opt 58.1
   WITH                               => shift and goto state 21 (58.0)
   SEMICOLON                          => shift and goto state 22 (133.0)
   default                            => ERROR

   aspect_specification_opt           goto state 23

State 115:
     74.3:declaration <= type_declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 1 tokens to declaration 74.3
   END                                => reduce 1 tokens to declaration 74.3
   FUNCTION                           => reduce 1 tokens to declaration 74.3
   PACKAGE                            => reduce 1 tokens to declaration 74.3
   PROCEDURE                          => reduce 1 tokens to declaration 74.3
   TYPE                               => reduce 1 tokens to declaration 74.3
   IDENTIFIER                         => reduce 1 tokens to declaration 74.3
   default                            => ERROR

State 116:
    110.0:parameter_specification <= IDENTIFIER COLON ^ IDENTIFIER COLON_EQUAL expression_opt, RIGHT_PAREN/SEMICOLON
    110.1:parameter_specification <= IDENTIFIER COLON ^ IDENTIFIER, RIGHT_PAREN/SEMICOLON

   IDENTIFIER                         => shift and goto state 145 (110.0, 110.1)
   default                            => ERROR

State 117:
     57.0:actual_parameter_part <= LEFT_PAREN association_list RIGHT_PAREN ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 3 tokens to actual_parameter_part 57.0
   IS                                 => reduce 3 tokens to actual_parameter_part 57.0
   LEFT_PAREN                         => reduce 3 tokens to actual_parameter_part 57.0
   LOOP                               => reduce 3 tokens to actual_parameter_part 57.0
   OR                                 => reduce 3 tokens to actual_parameter_part 57.0
   RANGE                              => reduce 3 tokens to actual_parameter_part 57.0
   RETURN                             => reduce 3 tokens to actual_parameter_part 57.0
   RIGHT_PAREN                        => reduce 3 tokens to actual_parameter_part 57.0
   THEN                               => reduce 3 tokens to actual_parameter_part 57.0
   WITH                               => reduce 3 tokens to actual_parameter_part 57.0
   XOR                                => reduce 3 tokens to actual_parameter_part 57.0
   AMPERSAND                          => reduce 3 tokens to actual_parameter_part 57.0
   COLON_EQUAL                        => reduce 3 tokens to actual_parameter_part 57.0
   COMMA                              => reduce 3 tokens to actual_parameter_part 57.0
   DOT                                => reduce 3 tokens to actual_parameter_part 57.0
   DOT_DOT                            => reduce 3 tokens to actual_parameter_part 57.0
   EQUAL                              => reduce 3 tokens to actual_parameter_part 57.0
   EQUAL_GREATER                      => reduce 3 tokens to actual_parameter_part 57.0
   GREATER                            => reduce 3 tokens to actual_parameter_part 57.0
   GREATER_EQUAL                      => reduce 3 tokens to actual_parameter_part 57.0
   LESS                               => reduce 3 tokens to actual_parameter_part 57.0
   LESS_EQUAL                         => reduce 3 tokens to actual_parameter_part 57.0
   MINUS                              => reduce 3 tokens to actual_parameter_part 57.0
   PLUS                               => reduce 3 tokens to actual_parameter_part 57.0
   SEMICOLON                          => reduce 3 tokens to actual_parameter_part 57.0
   SLASH                              => reduce 3 tokens to actual_parameter_part 57.0
   SLASH_EQUAL                        => reduce 3 tokens to actual_parameter_part 57.0
   STAR                               => reduce 3 tokens to actual_parameter_part 57.0
   default                            => ERROR

State 118:
     92.0:formal_part <= LEFT_PAREN parameter_specification_list RIGHT_PAREN ^, IS/RETURN/WITH/SEMICOLON

   IS                                 => reduce 3 tokens to formal_part 92.0
   RETURN                             => reduce 3 tokens to formal_part 92.0
   WITH                               => reduce 3 tokens to formal_part 92.0
   SEMICOLON                          => reduce 3 tokens to formal_part 92.0
   default                            => ERROR

State 119:
    111.0:parameter_specification_list <= parameter_specification_list SEMICOLON ^ parameter_specification, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 0 tokens to parameter_specification 110.2
   SEMICOLON                          => reduce 0 tokens to parameter_specification 110.2
   IDENTIFIER                         => shift and goto state 146 (110.0, 110.1)
   default                            => ERROR

   parameter_specification            goto state 147

State 120:
    104.0:name <= name LEFT_PAREN range_list RIGHT_PAREN ^, AND/IS/LEFT_PAREN/LOOP/OR/RANGE/RETURN/RIGHT_PAREN/THEN/WITH/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/EQUAL_GREATER/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 4 tokens to name 104.0
   IS                                 => reduce 4 tokens to name 104.0
   LEFT_PAREN                         => reduce 4 tokens to name 104.0
   LOOP                               => reduce 4 tokens to name 104.0
   OR                                 => reduce 4 tokens to name 104.0
   RANGE                              => reduce 4 tokens to name 104.0
   RETURN                             => reduce 4 tokens to name 104.0
   RIGHT_PAREN                        => reduce 4 tokens to name 104.0
   THEN                               => reduce 4 tokens to name 104.0
   WITH                               => reduce 4 tokens to name 104.0
   XOR                                => reduce 4 tokens to name 104.0
   AMPERSAND                          => reduce 4 tokens to name 104.0
   COLON_EQUAL                        => reduce 4 tokens to name 104.0
   COMMA                              => reduce 4 tokens to name 104.0
   DOT                                => reduce 4 tokens to name 104.0
   DOT_DOT                            => reduce 4 tokens to name 104.0
   EQUAL                              => reduce 4 tokens to name 104.0
   EQUAL_GREATER                      => reduce 4 tokens to name 104.0
   GREATER                            => reduce 4 tokens to name 104.0
   GREATER_EQUAL                      => reduce 4 tokens to name 104.0
   LESS                               => reduce 4 tokens to name 104.0
   LESS_EQUAL                         => reduce 4 tokens to name 104.0
   MINUS                              => reduce 4 tokens to name 104.0
   PLUS                               => reduce 4 tokens to name 104.0
   SEMICOLON                          => reduce 4 tokens to name 104.0
   SLASH                              => reduce 4 tokens to name 104.0
   SLASH_EQUAL                        => reduce 4 tokens to name 104.0
   STAR                               => reduce 4 tokens to name 104.0
   default                            => ERROR

State 121:
    118.0:range_list <= range_list COMMA ^ range_g, RIGHT_PAREN/COMMA

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   range_g                            goto state 148
   selected_component                 goto state 16
   simple_expression                  goto state 149
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 122:
    117.0:range_g <= simple_expression DOT_DOT ^ simple_expression, LOOP/RIGHT_PAREN/COLON_EQUAL/COMMA/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   selected_component                 goto state 16
   simple_expression                  goto state 150
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 123:
    108.0:parameter_and_result_profile <= formal_part RETURN IDENTIFIER ^, IS/WITH/SEMICOLON

   IS                                 => reduce 3 tokens to parameter_and_result_profile 108.0
   WITH                               => reduce 3 tokens to parameter_and_result_profile 108.0
   SEMICOLON                          => reduce 3 tokens to parameter_and_result_profile 108.0
   default                            => ERROR

State 124:
    107.0:package_body <= PACKAGE BODY name aspect_specification_opt IS ^ declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI
    107.1:package_body <= PACKAGE BODY name aspect_specification_opt IS ^ declarative_part_opt END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to declarative_part_opt 76.1
   END                                => reduce 0 tokens to declarative_part_opt 76.1
   FUNCTION                           => shift and goto state 1 (94.0)
   PACKAGE                            => shift and goto state 98 (107.0, 107.1)
   PROCEDURE                          => shift and goto state 99 (115.0)
   TYPE                               => shift and goto state 100 (93.0)
   IDENTIFIER                         => shift and goto state 101 (106.0, 106.1)
   default                            => ERROR

   body_g                             goto state 102
   body_stub                          goto state 103
   declaration                        goto state 104
   declarations                       goto state 105
   declarative_part_opt               goto state 151
   full_type_declaration              goto state 107
   function_specification             goto state 6
   object_declaration                 goto state 108
   package_body                       goto state 109
   procedure_specification            goto state 10
   proper_body                        goto state 110
   subprogram_body                    goto state 111
   subprogram_body_stub               goto state 112
   subprogram_declaration             goto state 113
   subprogram_specification           goto state 114
   type_declaration                   goto state 115

State 125:
     95.0:generic_instantiation <= PACKAGE name IS NEW name ^ SEMICOLON, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI
    104.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/DOT/SEMICOLON
    104.1:name <= name ^ actual_parameter_part, LEFT_PAREN/DOT/SEMICOLON
    124.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 32 (57.0, 104.0)
   DOT                                => shift and goto state 26 (124.0)
   SEMICOLON                          => shift and goto state 152 (95.0)
   default                            => ERROR

   actual_parameter_part              goto state 27

State 126:
     95.1:generic_instantiation <= PROCEDURE name IS NEW name ^ SEMICOLON, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI
    104.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/DOT/SEMICOLON
    104.1:name <= name ^ actual_parameter_part, LEFT_PAREN/DOT/SEMICOLON
    124.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 32 (57.0, 104.0)
   DOT                                => shift and goto state 26 (124.0)
   SEMICOLON                          => shift and goto state 153 (95.1)
   default                            => ERROR

   actual_parameter_part              goto state 27

State 127:
    112.0:paren_expression <= LEFT_PAREN expression_opt RIGHT_PAREN ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 3 tokens to paren_expression 112.0
   IS                                 => reduce 3 tokens to paren_expression 112.0
   LOOP                               => reduce 3 tokens to paren_expression 112.0
   OR                                 => reduce 3 tokens to paren_expression 112.0
   RIGHT_PAREN                        => reduce 3 tokens to paren_expression 112.0
   THEN                               => reduce 3 tokens to paren_expression 112.0
   XOR                                => reduce 3 tokens to paren_expression 112.0
   AMPERSAND                          => reduce 3 tokens to paren_expression 112.0
   COLON_EQUAL                        => reduce 3 tokens to paren_expression 112.0
   COMMA                              => reduce 3 tokens to paren_expression 112.0
   DOT_DOT                            => reduce 3 tokens to paren_expression 112.0
   EQUAL                              => reduce 3 tokens to paren_expression 112.0
   GREATER                            => reduce 3 tokens to paren_expression 112.0
   GREATER_EQUAL                      => reduce 3 tokens to paren_expression 112.0
   LESS                               => reduce 3 tokens to paren_expression 112.0
   LESS_EQUAL                         => reduce 3 tokens to paren_expression 112.0
   MINUS                              => reduce 3 tokens to paren_expression 112.0
   PLUS                               => reduce 3 tokens to paren_expression 112.0
   SEMICOLON                          => reduce 3 tokens to paren_expression 112.0
   SLASH                              => reduce 3 tokens to paren_expression 112.0
   SLASH_EQUAL                        => reduce 3 tokens to paren_expression 112.0
   STAR                               => reduce 3 tokens to paren_expression 112.0
   default                            => ERROR

State 128:
     60.0:association_opt <= IDENTIFIER EQUAL_GREATER expression_opt ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 3 tokens to association_opt 60.0
   RIGHT_PAREN                        => reduce 3 tokens to association_opt 60.0
   COMMA                              => reduce 3 tokens to association_opt 60.0
   default                            => ERROR

State 129:
     61.0:association_list <= association_list COMMA association_opt ^, IS/RIGHT_PAREN/COMMA

   IS                                 => reduce 3 tokens to association_list 61.0
   RIGHT_PAREN                        => reduce 3 tokens to association_list 61.0
   COMMA                              => reduce 3 tokens to association_list 61.0
   default                            => ERROR

State 130:
    119.0:relation_and_list <= relation_and_list AND relation ^, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   AND                                => reduce 3 tokens to relation_and_list 119.0
   IS                                 => reduce 3 tokens to relation_and_list 119.0
   RIGHT_PAREN                        => reduce 3 tokens to relation_and_list 119.0
   THEN                               => reduce 3 tokens to relation_and_list 119.0
   COMMA                              => reduce 3 tokens to relation_and_list 119.0
   SEMICOLON                          => reduce 3 tokens to relation_and_list 119.0
   default                            => ERROR

State 131:
    120.0:relation_or_list <= relation_or_list OR relation ^, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   IS                                 => reduce 3 tokens to relation_or_list 120.0
   OR                                 => reduce 3 tokens to relation_or_list 120.0
   RIGHT_PAREN                        => reduce 3 tokens to relation_or_list 120.0
   THEN                               => reduce 3 tokens to relation_or_list 120.0
   COMMA                              => reduce 3 tokens to relation_or_list 120.0
   SEMICOLON                          => reduce 3 tokens to relation_or_list 120.0
   default                            => ERROR

State 132:
    121.0:relation_xor_list <= relation_xor_list XOR relation ^, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   IS                                 => reduce 3 tokens to relation_xor_list 121.0
   RIGHT_PAREN                        => reduce 3 tokens to relation_xor_list 121.0
   THEN                               => reduce 3 tokens to relation_xor_list 121.0
   XOR                                => reduce 3 tokens to relation_xor_list 121.0
   COMMA                              => reduce 3 tokens to relation_xor_list 121.0
   SEMICOLON                          => reduce 3 tokens to relation_xor_list 121.0
   default                            => ERROR

State 133:
    119.1:relation_and_list <= relation AND relation ^, AND/IS/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   AND                                => reduce 3 tokens to relation_and_list 119.1
   IS                                 => reduce 3 tokens to relation_and_list 119.1
   RIGHT_PAREN                        => reduce 3 tokens to relation_and_list 119.1
   THEN                               => reduce 3 tokens to relation_and_list 119.1
   COMMA                              => reduce 3 tokens to relation_and_list 119.1
   SEMICOLON                          => reduce 3 tokens to relation_and_list 119.1
   default                            => ERROR

State 134:
    120.1:relation_or_list <= relation OR relation ^, IS/OR/RIGHT_PAREN/THEN/COMMA/SEMICOLON

   IS                                 => reduce 3 tokens to relation_or_list 120.1
   OR                                 => reduce 3 tokens to relation_or_list 120.1
   RIGHT_PAREN                        => reduce 3 tokens to relation_or_list 120.1
   THEN                               => reduce 3 tokens to relation_or_list 120.1
   COMMA                              => reduce 3 tokens to relation_or_list 120.1
   SEMICOLON                          => reduce 3 tokens to relation_or_list 120.1
   default                            => ERROR

State 135:
    121.1:relation_xor_list <= relation XOR relation ^, IS/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   IS                                 => reduce 3 tokens to relation_xor_list 121.1
   RIGHT_PAREN                        => reduce 3 tokens to relation_xor_list 121.1
   THEN                               => reduce 3 tokens to relation_xor_list 121.1
   XOR                                => reduce 3 tokens to relation_xor_list 121.1
   COMMA                              => reduce 3 tokens to relation_xor_list 121.1
   SEMICOLON                          => reduce 3 tokens to relation_xor_list 121.1
   default                            => ERROR

State 136:
    122.0:relation <= simple_expression relational_operator simple_expression ^, AND/IS/OR/RIGHT_PAREN/THEN/XOR/COMMA/SEMICOLON

   AND                                => reduce 3 tokens to relation 122.0
   IS                                 => reduce 3 tokens to relation 122.0
   OR                                 => reduce 3 tokens to relation 122.0
   RIGHT_PAREN                        => reduce 3 tokens to relation 122.0
   THEN                               => reduce 3 tokens to relation 122.0
   XOR                                => reduce 3 tokens to relation 122.0
   COMMA                              => reduce 3 tokens to relation 122.0
   SEMICOLON                          => reduce 3 tokens to relation 122.0
   default                            => ERROR

State 137:
    136.0:term <= term multiplying_operator factor ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 3 tokens to term 136.0
   IS                                 => reduce 3 tokens to term 136.0
   LOOP                               => reduce 3 tokens to term 136.0
   OR                                 => reduce 3 tokens to term 136.0
   RIGHT_PAREN                        => reduce 3 tokens to term 136.0
   THEN                               => reduce 3 tokens to term 136.0
   XOR                                => reduce 3 tokens to term 136.0
   AMPERSAND                          => reduce 3 tokens to term 136.0
   COLON_EQUAL                        => reduce 3 tokens to term 136.0
   COMMA                              => reduce 3 tokens to term 136.0
   DOT_DOT                            => reduce 3 tokens to term 136.0
   EQUAL                              => reduce 3 tokens to term 136.0
   GREATER                            => reduce 3 tokens to term 136.0
   GREATER_EQUAL                      => reduce 3 tokens to term 136.0
   LESS                               => reduce 3 tokens to term 136.0
   LESS_EQUAL                         => reduce 3 tokens to term 136.0
   MINUS                              => reduce 3 tokens to term 136.0
   PLUS                               => reduce 3 tokens to term 136.0
   SEMICOLON                          => reduce 3 tokens to term 136.0
   SLASH                              => reduce 3 tokens to term 136.0
   SLASH_EQUAL                        => reduce 3 tokens to term 136.0
   STAR                               => reduce 3 tokens to term 136.0
   default                            => ERROR

State 138:
    136.0:term <= term ^ multiplying_operator factor, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
    137.0:term_list <= term_list binary_adding_operator term ^, AND/IS/LOOP/OR/RIGHT_PAREN/THEN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH_EQUAL

   AND                                => reduce 3 tokens to term_list 137.0
   IS                                 => reduce 3 tokens to term_list 137.0
   LOOP                               => reduce 3 tokens to term_list 137.0
   OR                                 => reduce 3 tokens to term_list 137.0
   RIGHT_PAREN                        => reduce 3 tokens to term_list 137.0
   THEN                               => reduce 3 tokens to term_list 137.0
   XOR                                => reduce 3 tokens to term_list 137.0
   AMPERSAND                          => reduce 3 tokens to term_list 137.0
   COLON_EQUAL                        => reduce 3 tokens to term_list 137.0
   COMMA                              => reduce 3 tokens to term_list 137.0
   DOT_DOT                            => reduce 3 tokens to term_list 137.0
   EQUAL                              => reduce 3 tokens to term_list 137.0
   GREATER                            => reduce 3 tokens to term_list 137.0
   GREATER_EQUAL                      => reduce 3 tokens to term_list 137.0
   LESS                               => reduce 3 tokens to term_list 137.0
   LESS_EQUAL                         => reduce 3 tokens to term_list 137.0
   MINUS                              => reduce 3 tokens to term_list 137.0
   PLUS                               => reduce 3 tokens to term_list 137.0
   SEMICOLON                          => reduce 3 tokens to term_list 137.0
   SLASH                              => shift and goto state 90 (103.1)
   SLASH_EQUAL                        => reduce 3 tokens to term_list 137.0
   STAR                               => shift and goto state 91 (103.0)
   default                            => ERROR

   multiplying_operator               goto state 92

State 139:
    104.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, IS/LEFT_PAREN/WITH/DOT/SEMICOLON
    104.1:name <= name ^ actual_parameter_part, IS/LEFT_PAREN/WITH/DOT/SEMICOLON
    115.0:procedure_specification <= PROCEDURE name ^ parameter_profile_opt, IS/WITH/SEMICOLON
    124.0:selected_component <= name ^ DOT IDENTIFIER, IS/LEFT_PAREN/WITH/DOT/SEMICOLON

   IS                                 => reduce 0 tokens to parameter_profile_opt 109.1
   LEFT_PAREN                         => shift and goto state 24 (57.0, 92.0, 104.0)
   WITH                               => reduce 0 tokens to parameter_profile_opt 109.1
   DOT                                => shift and goto state 26 (124.0)
   SEMICOLON                          => reduce 0 tokens to parameter_profile_opt 109.1
   default                            => ERROR

   actual_parameter_part              goto state 27
   formal_part                        goto state 34
   parameter_profile_opt              goto state 35

State 140:
     93.0:full_type_declaration <= TYPE IDENTIFIER ^ IS type_definition SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   IS                                 => shift and goto state 154 (93.0)
   default                            => ERROR

State 141:
    106.0:object_declaration <= IDENTIFIER COLON ^ subtype_indication COLON_EQUAL expression_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    106.1:object_declaration <= IDENTIFIER COLON ^ subtype_indication SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   name                               goto state 155
   selected_component                 goto state 16
   subtype_indication                 goto state 156

State 142:
     75.0:declarations <= declarations declaration ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 2 tokens to declarations 75.0
   END                                => reduce 2 tokens to declarations 75.0
   FUNCTION                           => reduce 2 tokens to declarations 75.0
   PACKAGE                            => reduce 2 tokens to declarations 75.0
   PROCEDURE                          => reduce 2 tokens to declarations 75.0
   TYPE                               => reduce 2 tokens to declarations 75.0
   IDENTIFIER                         => reduce 2 tokens to declarations 75.0
   default                            => ERROR

State 143:
    131.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part_opt BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 157 (67.0)
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 126.1
   EXIT                               => shift and goto state 158 (86.0, 86.1)
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements_opt 126.1
   FOR                                => shift and goto state 159 (100.0)
   IF                                 => shift and goto state 160 (98.0, 98.1, 98.2, 98.3)
   LOOP                               => shift and goto state 161 (102.1)
   RETURN                             => shift and goto state 162 (90.0, 128.0, 128.1)
   IDENTIFIER                         => shift and goto state 163 (63.0, 104.2)
   default                            => ERROR

   assignment_statement               goto state 164
   block_label_opt                    goto state 165
   block_statement                    goto state 166
   case_statement                     goto state 167
   compound_statement                 goto state 168
   exit_statement                     goto state 169
   extended_return_statement          goto state 170
   handled_sequence_of_statements     goto state 171
   if_statement                       goto state 172
   iteration_scheme                   goto state 173
   loop_statement                     goto state 174
   name                               goto state 175
   procedure_call_statement           goto state 176
   selected_component                 goto state 16
   sequence_of_statements             goto state 177
   sequence_of_statements_opt         goto state 178
   simple_return_statement            goto state 179
   simple_statement                   goto state 180
   statement                          goto state 181

State 144:
    132.0:subprogram_body_stub <= subprogram_specification IS ^ SEPARATE SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   SEPARATE                           => shift and goto state 182 (132.0)
   default                            => ERROR

State 145:
    110.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER ^ COLON_EQUAL expression_opt, RIGHT_PAREN/SEMICOLON
    110.1:parameter_specification <= IDENTIFIER COLON IDENTIFIER ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 3 tokens to parameter_specification 110.1
   COLON_EQUAL                        => shift and goto state 183 (110.0)
   SEMICOLON                          => reduce 3 tokens to parameter_specification 110.1
   default                            => ERROR

State 146:
    110.0:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER COLON_EQUAL expression_opt, RIGHT_PAREN/SEMICOLON
    110.1:parameter_specification <= IDENTIFIER ^ COLON IDENTIFIER, RIGHT_PAREN/SEMICOLON

   COLON                              => shift and goto state 116 (110.0, 110.1)
   default                            => ERROR

State 147:
    111.0:parameter_specification_list <= parameter_specification_list SEMICOLON parameter_specification ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 3 tokens to parameter_specification_list 111.0
   SEMICOLON                          => reduce 3 tokens to parameter_specification_list 111.0
   default                            => ERROR

State 148:
    118.0:range_list <= range_list COMMA range_g ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 3 tokens to range_list 118.0
   COMMA                              => reduce 3 tokens to range_list 118.0
   default                            => ERROR

State 149:
    117.0:range_g <= simple_expression ^ DOT_DOT simple_expression, LOOP/RIGHT_PAREN/COLON_EQUAL/COMMA/SEMICOLON

   DOT_DOT                            => shift and goto state 122 (117.0)
   default                            => ERROR

State 150:
    117.0:range_g <= simple_expression DOT_DOT simple_expression ^, LOOP/RIGHT_PAREN/COLON_EQUAL/COMMA/SEMICOLON

   LOOP                               => reduce 3 tokens to range_g 117.0
   RIGHT_PAREN                        => reduce 3 tokens to range_g 117.0
   COLON_EQUAL                        => reduce 3 tokens to range_g 117.0
   COMMA                              => reduce 3 tokens to range_g 117.0
   SEMICOLON                          => reduce 3 tokens to range_g 117.0
   default                            => ERROR

State 151:
    107.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt ^ BEGIN handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI
    107.1:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt ^ END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => shift and goto state 184 (107.0)
   END                                => shift and goto state 185 (107.1)
   default                            => ERROR

State 152:
     95.0:generic_instantiation <= PACKAGE name IS NEW name SEMICOLON ^, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI

   FUNCTION                           => reduce 6 tokens to generic_instantiation 95.0
   PACKAGE                            => reduce 6 tokens to generic_instantiation 95.0
   PROCEDURE                          => reduce 6 tokens to generic_instantiation 95.0
   Wisi_EOI                           => reduce 6 tokens to generic_instantiation 95.0
   default                            => ERROR

State 153:
     95.1:generic_instantiation <= PROCEDURE name IS NEW name SEMICOLON ^, FUNCTION/PACKAGE/PROCEDURE/Wisi_EOI

   FUNCTION                           => reduce 6 tokens to generic_instantiation 95.1
   PACKAGE                            => reduce 6 tokens to generic_instantiation 95.1
   PROCEDURE                          => reduce 6 tokens to generic_instantiation 95.1
   Wisi_EOI                           => reduce 6 tokens to generic_instantiation 95.1
   default                            => ERROR

State 154:
     93.0:full_type_declaration <= TYPE IDENTIFIER IS ^ type_definition SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   LEFT_PAREN                         => shift and goto state 186 (81.0)
   default                            => ERROR

   enumeration_type_definition        goto state 187
   type_definition                    goto state 188

State 155:
    104.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/RANGE/COLON_EQUAL/DOT/SEMICOLON
    104.1:name <= name ^ actual_parameter_part, LEFT_PAREN/RANGE/COLON_EQUAL/DOT/SEMICOLON
    124.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/RANGE/COLON_EQUAL/DOT/SEMICOLON
    135.0:subtype_indication <= name ^ constraint, COLON_EQUAL/SEMICOLON
    135.1:subtype_indication <= name ^, COLON_EQUAL/SEMICOLON

   LEFT_PAREN                         => shift and goto state 189 (57.0, 99.0, 104.0)
   RANGE                              => shift and goto state 190 (73.0)
   COLON_EQUAL                        => reduce 1 tokens to subtype_indication 135.1
   DOT                                => shift and goto state 26 (124.0)
   SEMICOLON                          => reduce 1 tokens to subtype_indication 135.1
   default                            => ERROR

   actual_parameter_part              goto state 27
   constraint                         goto state 191
   index_constraint                   goto state 192

State 156:
    106.0:object_declaration <= IDENTIFIER COLON subtype_indication ^ COLON_EQUAL expression_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER
    106.1:object_declaration <= IDENTIFIER COLON subtype_indication ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   COLON_EQUAL                        => shift and goto state 193 (106.0)
   SEMICOLON                          => shift and goto state 194 (106.1)
   default                            => ERROR

State 157:
     67.0:case_statement <= CASE ^ expression_opt IS case_statement_alternative_list END CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   IS                                 => reduce 0 tokens to expression_opt 88.1
   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   expression                         goto state 72
   expression_opt                     goto state 195
   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation_and_list                  goto state 50
   relation_or_list                   goto state 51
   relation_xor_list                  goto state 52
   relation                           goto state 53
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 158:
     86.0:exit_statement <= EXIT ^ identifier_opt WHEN expression_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     86.1:exit_statement <= EXIT ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   WHEN                               => reduce 0 tokens to identifier_opt 97.1
   SEMICOLON                          => reduce 0 tokens to identifier_opt 97.1
   IDENTIFIER                         => shift and goto state 196 (97.0)
   default                            => ERROR

   identifier_opt                     goto state 197

State 159:
    100.0:iteration_scheme <= FOR ^ IDENTIFIER IN discrete_subtype_definition, LOOP

   IDENTIFIER                         => shift and goto state 198 (100.0)
   default                            => ERROR

State 160:
     98.0:if_statement <= IF ^ expression_opt THEN sequence_of_statements_opt elsif_statement_list ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     98.1:if_statement <= IF ^ expression_opt THEN sequence_of_statements_opt ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     98.2:if_statement <= IF ^ expression_opt THEN sequence_of_statements_opt elsif_statement_list END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     98.3:if_statement <= IF ^ expression_opt THEN sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   THEN                               => reduce 0 tokens to expression_opt 88.1
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   expression                         goto state 72
   expression_opt                     goto state 199
   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation_and_list                  goto state 50
   relation_or_list                   goto state 51
   relation_xor_list                  goto state 52
   relation                           goto state 53
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 161:
    102.1:loop_statement <= LOOP ^ sequence_of_statements_opt END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 157 (67.0)
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 126.1
   EXIT                               => shift and goto state 158 (86.0, 86.1)
   FOR                                => shift and goto state 159 (100.0)
   IF                                 => shift and goto state 160 (98.0, 98.1, 98.2, 98.3)
   LOOP                               => shift and goto state 161 (102.1)
   RETURN                             => shift and goto state 162 (90.0, 128.0, 128.1)
   IDENTIFIER                         => shift and goto state 163 (63.0, 104.2)
   default                            => ERROR

   assignment_statement               goto state 164
   block_label_opt                    goto state 165
   block_statement                    goto state 166
   case_statement                     goto state 167
   compound_statement                 goto state 168
   exit_statement                     goto state 169
   extended_return_statement          goto state 170
   if_statement                       goto state 172
   iteration_scheme                   goto state 173
   loop_statement                     goto state 174
   name                               goto state 175
   procedure_call_statement           goto state 176
   selected_component                 goto state 16
   sequence_of_statements             goto state 177
   sequence_of_statements_opt         goto state 200
   simple_return_statement            goto state 179
   simple_statement                   goto state 180
   statement                          goto state 181

State 162:
     90.0:extended_return_statement <= RETURN ^ extended_return_object_declaration SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
    128.0:simple_return_statement <= RETURN ^ expression_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
    128.1:simple_return_statement <= RETURN ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   SEMICOLON                          => shift and goto state 201 (128.1),
                                         reduce 0 tokens to expression_opt 88.1
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 202 (89.0, 104.2)
   default                            => ERROR

   expression                         goto state 72
   expression_opt                     goto state 203
   extended_return_object_declaration goto state 204
   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation_and_list                  goto state 50
   relation_or_list                   goto state 51
   relation_xor_list                  goto state 52
   relation                           goto state 53
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 163:
     63.0:block_label_opt <= IDENTIFIER ^ COLON, BEGIN/DECLARE
    104.2:name <= IDENTIFIER ^, LEFT_PAREN/COLON_EQUAL/DOT/SEMICOLON

   LEFT_PAREN                         => reduce 1 tokens to name 104.2
   COLON                              => shift and goto state 205 (63.0)
   COLON_EQUAL                        => reduce 1 tokens to name 104.2
   DOT                                => reduce 1 tokens to name 104.2
   SEMICOLON                          => reduce 1 tokens to name 104.2
   default                            => ERROR

State 164:
    129.0:simple_statement <= assignment_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 1 tokens to simple_statement 129.0
   CASE                               => reduce 1 tokens to simple_statement 129.0
   DECLARE                            => reduce 1 tokens to simple_statement 129.0
   ELSE                               => reduce 1 tokens to simple_statement 129.0
   ELSIF                              => reduce 1 tokens to simple_statement 129.0
   END                                => reduce 1 tokens to simple_statement 129.0
   EXIT                               => reduce 1 tokens to simple_statement 129.0
   EXCEPTION                          => reduce 1 tokens to simple_statement 129.0
   FOR                                => reduce 1 tokens to simple_statement 129.0
   IF                                 => reduce 1 tokens to simple_statement 129.0
   LOOP                               => reduce 1 tokens to simple_statement 129.0
   RETURN                             => reduce 1 tokens to simple_statement 129.0
   WHEN                               => reduce 1 tokens to simple_statement 129.0
   IDENTIFIER                         => reduce 1 tokens to simple_statement 129.0
   default                            => ERROR

State 165:
     64.0:block_statement <= block_label_opt ^ DECLARE declarative_part_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     64.1:block_statement <= block_label_opt ^ BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => shift and goto state 206 (64.1)
   DECLARE                            => shift and goto state 207 (64.0)
   default                            => ERROR

State 166:
     72.3:compound_statement <= block_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 1 tokens to compound_statement 72.3
   CASE                               => reduce 1 tokens to compound_statement 72.3
   DECLARE                            => reduce 1 tokens to compound_statement 72.3
   ELSE                               => reduce 1 tokens to compound_statement 72.3
   ELSIF                              => reduce 1 tokens to compound_statement 72.3
   END                                => reduce 1 tokens to compound_statement 72.3
   EXIT                               => reduce 1 tokens to compound_statement 72.3
   EXCEPTION                          => reduce 1 tokens to compound_statement 72.3
   FOR                                => reduce 1 tokens to compound_statement 72.3
   IF                                 => reduce 1 tokens to compound_statement 72.3
   LOOP                               => reduce 1 tokens to compound_statement 72.3
   RETURN                             => reduce 1 tokens to compound_statement 72.3
   WHEN                               => reduce 1 tokens to compound_statement 72.3
   IDENTIFIER                         => reduce 1 tokens to compound_statement 72.3
   default                            => ERROR

State 167:
     72.1:compound_statement <= case_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 1 tokens to compound_statement 72.1
   CASE                               => reduce 1 tokens to compound_statement 72.1
   DECLARE                            => reduce 1 tokens to compound_statement 72.1
   ELSE                               => reduce 1 tokens to compound_statement 72.1
   ELSIF                              => reduce 1 tokens to compound_statement 72.1
   END                                => reduce 1 tokens to compound_statement 72.1
   EXIT                               => reduce 1 tokens to compound_statement 72.1
   EXCEPTION                          => reduce 1 tokens to compound_statement 72.1
   FOR                                => reduce 1 tokens to compound_statement 72.1
   IF                                 => reduce 1 tokens to compound_statement 72.1
   LOOP                               => reduce 1 tokens to compound_statement 72.1
   RETURN                             => reduce 1 tokens to compound_statement 72.1
   WHEN                               => reduce 1 tokens to compound_statement 72.1
   IDENTIFIER                         => reduce 1 tokens to compound_statement 72.1
   default                            => ERROR

State 168:
    130.1:statement <= compound_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 1 tokens to statement 130.1
   CASE                               => reduce 1 tokens to statement 130.1
   DECLARE                            => reduce 1 tokens to statement 130.1
   ELSE                               => reduce 1 tokens to statement 130.1
   ELSIF                              => reduce 1 tokens to statement 130.1
   END                                => reduce 1 tokens to statement 130.1
   EXIT                               => reduce 1 tokens to statement 130.1
   EXCEPTION                          => reduce 1 tokens to statement 130.1
   FOR                                => reduce 1 tokens to statement 130.1
   IF                                 => reduce 1 tokens to statement 130.1
   LOOP                               => reduce 1 tokens to statement 130.1
   RETURN                             => reduce 1 tokens to statement 130.1
   WHEN                               => reduce 1 tokens to statement 130.1
   IDENTIFIER                         => reduce 1 tokens to statement 130.1
   default                            => ERROR

State 169:
    129.1:simple_statement <= exit_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 1 tokens to simple_statement 129.1
   CASE                               => reduce 1 tokens to simple_statement 129.1
   DECLARE                            => reduce 1 tokens to simple_statement 129.1
   ELSE                               => reduce 1 tokens to simple_statement 129.1
   ELSIF                              => reduce 1 tokens to simple_statement 129.1
   END                                => reduce 1 tokens to simple_statement 129.1
   EXIT                               => reduce 1 tokens to simple_statement 129.1
   EXCEPTION                          => reduce 1 tokens to simple_statement 129.1
   FOR                                => reduce 1 tokens to simple_statement 129.1
   IF                                 => reduce 1 tokens to simple_statement 129.1
   LOOP                               => reduce 1 tokens to simple_statement 129.1
   RETURN                             => reduce 1 tokens to simple_statement 129.1
   WHEN                               => reduce 1 tokens to simple_statement 129.1
   IDENTIFIER                         => reduce 1 tokens to simple_statement 129.1
   default                            => ERROR

State 170:
     72.4:compound_statement <= extended_return_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 1 tokens to compound_statement 72.4
   CASE                               => reduce 1 tokens to compound_statement 72.4
   DECLARE                            => reduce 1 tokens to compound_statement 72.4
   ELSE                               => reduce 1 tokens to compound_statement 72.4
   ELSIF                              => reduce 1 tokens to compound_statement 72.4
   END                                => reduce 1 tokens to compound_statement 72.4
   EXIT                               => reduce 1 tokens to compound_statement 72.4
   EXCEPTION                          => reduce 1 tokens to compound_statement 72.4
   FOR                                => reduce 1 tokens to compound_statement 72.4
   IF                                 => reduce 1 tokens to compound_statement 72.4
   LOOP                               => reduce 1 tokens to compound_statement 72.4
   RETURN                             => reduce 1 tokens to compound_statement 72.4
   WHEN                               => reduce 1 tokens to compound_statement 72.4
   IDENTIFIER                         => reduce 1 tokens to compound_statement 72.4
   default                            => ERROR

State 171:
    131.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 208 (131.0)
   default                            => ERROR

State 172:
     72.0:compound_statement <= if_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 1 tokens to compound_statement 72.0
   CASE                               => reduce 1 tokens to compound_statement 72.0
   DECLARE                            => reduce 1 tokens to compound_statement 72.0
   ELSE                               => reduce 1 tokens to compound_statement 72.0
   ELSIF                              => reduce 1 tokens to compound_statement 72.0
   END                                => reduce 1 tokens to compound_statement 72.0
   EXIT                               => reduce 1 tokens to compound_statement 72.0
   EXCEPTION                          => reduce 1 tokens to compound_statement 72.0
   FOR                                => reduce 1 tokens to compound_statement 72.0
   IF                                 => reduce 1 tokens to compound_statement 72.0
   LOOP                               => reduce 1 tokens to compound_statement 72.0
   RETURN                             => reduce 1 tokens to compound_statement 72.0
   WHEN                               => reduce 1 tokens to compound_statement 72.0
   IDENTIFIER                         => reduce 1 tokens to compound_statement 72.0
   default                            => ERROR

State 173:
    102.0:loop_statement <= iteration_scheme ^ LOOP sequence_of_statements_opt END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   LOOP                               => shift and goto state 209 (102.0)
   default                            => ERROR

State 174:
     72.2:compound_statement <= loop_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 1 tokens to compound_statement 72.2
   CASE                               => reduce 1 tokens to compound_statement 72.2
   DECLARE                            => reduce 1 tokens to compound_statement 72.2
   ELSE                               => reduce 1 tokens to compound_statement 72.2
   ELSIF                              => reduce 1 tokens to compound_statement 72.2
   END                                => reduce 1 tokens to compound_statement 72.2
   EXIT                               => reduce 1 tokens to compound_statement 72.2
   EXCEPTION                          => reduce 1 tokens to compound_statement 72.2
   FOR                                => reduce 1 tokens to compound_statement 72.2
   IF                                 => reduce 1 tokens to compound_statement 72.2
   LOOP                               => reduce 1 tokens to compound_statement 72.2
   RETURN                             => reduce 1 tokens to compound_statement 72.2
   WHEN                               => reduce 1 tokens to compound_statement 72.2
   IDENTIFIER                         => reduce 1 tokens to compound_statement 72.2
   default                            => ERROR

State 175:
     59.0:assignment_statement <= name ^ COLON_EQUAL expression_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
    104.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/COLON_EQUAL/DOT/SEMICOLON
    104.1:name <= name ^ actual_parameter_part, LEFT_PAREN/COLON_EQUAL/DOT/SEMICOLON
    114.0:procedure_call_statement <= name ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
    124.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/COLON_EQUAL/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 32 (57.0, 104.0)
   COLON_EQUAL                        => shift and goto state 210 (59.0)
   DOT                                => shift and goto state 26 (124.0)
   SEMICOLON                          => shift and goto state 211 (114.0)
   default                            => ERROR

   actual_parameter_part              goto state 27

State 176:
    129.2:simple_statement <= procedure_call_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 1 tokens to simple_statement 129.2
   CASE                               => reduce 1 tokens to simple_statement 129.2
   DECLARE                            => reduce 1 tokens to simple_statement 129.2
   ELSE                               => reduce 1 tokens to simple_statement 129.2
   ELSIF                              => reduce 1 tokens to simple_statement 129.2
   END                                => reduce 1 tokens to simple_statement 129.2
   EXIT                               => reduce 1 tokens to simple_statement 129.2
   EXCEPTION                          => reduce 1 tokens to simple_statement 129.2
   FOR                                => reduce 1 tokens to simple_statement 129.2
   IF                                 => reduce 1 tokens to simple_statement 129.2
   LOOP                               => reduce 1 tokens to simple_statement 129.2
   RETURN                             => reduce 1 tokens to simple_statement 129.2
   WHEN                               => reduce 1 tokens to simple_statement 129.2
   IDENTIFIER                         => reduce 1 tokens to simple_statement 129.2
   default                            => ERROR

State 177:
    125.0:sequence_of_statements <= sequence_of_statements ^ statement, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
    126.0:sequence_of_statements_opt <= sequence_of_statements ^, ELSE/ELSIF/END/EXCEPTION/WHEN

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 157 (67.0)
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   ELSE                               => reduce 1 tokens to sequence_of_statements_opt 126.0
   ELSIF                              => reduce 1 tokens to sequence_of_statements_opt 126.0
   END                                => reduce 1 tokens to sequence_of_statements_opt 126.0
   EXIT                               => shift and goto state 158 (86.0, 86.1)
   EXCEPTION                          => reduce 1 tokens to sequence_of_statements_opt 126.0
   FOR                                => shift and goto state 159 (100.0)
   IF                                 => shift and goto state 160 (98.0, 98.1, 98.2, 98.3)
   LOOP                               => shift and goto state 161 (102.1)
   RETURN                             => shift and goto state 162 (90.0, 128.0, 128.1)
   WHEN                               => reduce 1 tokens to sequence_of_statements_opt 126.0
   IDENTIFIER                         => shift and goto state 163 (63.0, 104.2)
   default                            => ERROR

   assignment_statement               goto state 164
   block_label_opt                    goto state 165
   block_statement                    goto state 166
   case_statement                     goto state 167
   compound_statement                 goto state 168
   exit_statement                     goto state 169
   extended_return_statement          goto state 170
   if_statement                       goto state 172
   iteration_scheme                   goto state 173
   loop_statement                     goto state 174
   name                               goto state 175
   procedure_call_statement           goto state 176
   selected_component                 goto state 16
   simple_return_statement            goto state 179
   simple_statement                   goto state 180
   statement                          goto state 212

State 178:
     96.0:handled_sequence_of_statements <= sequence_of_statements_opt ^ EXCEPTION exception_handler_list_opt, END
     96.1:handled_sequence_of_statements <= sequence_of_statements_opt ^, END

   END                                => reduce 1 tokens to handled_sequence_of_statements 96.1
   EXCEPTION                          => shift and goto state 213 (96.0)
   default                            => ERROR

State 179:
    129.3:simple_statement <= simple_return_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 1 tokens to simple_statement 129.3
   CASE                               => reduce 1 tokens to simple_statement 129.3
   DECLARE                            => reduce 1 tokens to simple_statement 129.3
   ELSE                               => reduce 1 tokens to simple_statement 129.3
   ELSIF                              => reduce 1 tokens to simple_statement 129.3
   END                                => reduce 1 tokens to simple_statement 129.3
   EXIT                               => reduce 1 tokens to simple_statement 129.3
   EXCEPTION                          => reduce 1 tokens to simple_statement 129.3
   FOR                                => reduce 1 tokens to simple_statement 129.3
   IF                                 => reduce 1 tokens to simple_statement 129.3
   LOOP                               => reduce 1 tokens to simple_statement 129.3
   RETURN                             => reduce 1 tokens to simple_statement 129.3
   WHEN                               => reduce 1 tokens to simple_statement 129.3
   IDENTIFIER                         => reduce 1 tokens to simple_statement 129.3
   default                            => ERROR

State 180:
    130.0:statement <= simple_statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 1 tokens to statement 130.0
   CASE                               => reduce 1 tokens to statement 130.0
   DECLARE                            => reduce 1 tokens to statement 130.0
   ELSE                               => reduce 1 tokens to statement 130.0
   ELSIF                              => reduce 1 tokens to statement 130.0
   END                                => reduce 1 tokens to statement 130.0
   EXIT                               => reduce 1 tokens to statement 130.0
   EXCEPTION                          => reduce 1 tokens to statement 130.0
   FOR                                => reduce 1 tokens to statement 130.0
   IF                                 => reduce 1 tokens to statement 130.0
   LOOP                               => reduce 1 tokens to statement 130.0
   RETURN                             => reduce 1 tokens to statement 130.0
   WHEN                               => reduce 1 tokens to statement 130.0
   IDENTIFIER                         => reduce 1 tokens to statement 130.0
   default                            => ERROR

State 181:
    125.1:sequence_of_statements <= statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 1 tokens to sequence_of_statements 125.1
   CASE                               => reduce 1 tokens to sequence_of_statements 125.1
   DECLARE                            => reduce 1 tokens to sequence_of_statements 125.1
   ELSE                               => reduce 1 tokens to sequence_of_statements 125.1
   ELSIF                              => reduce 1 tokens to sequence_of_statements 125.1
   END                                => reduce 1 tokens to sequence_of_statements 125.1
   EXIT                               => reduce 1 tokens to sequence_of_statements 125.1
   EXCEPTION                          => reduce 1 tokens to sequence_of_statements 125.1
   FOR                                => reduce 1 tokens to sequence_of_statements 125.1
   IF                                 => reduce 1 tokens to sequence_of_statements 125.1
   LOOP                               => reduce 1 tokens to sequence_of_statements 125.1
   RETURN                             => reduce 1 tokens to sequence_of_statements 125.1
   WHEN                               => reduce 1 tokens to sequence_of_statements 125.1
   IDENTIFIER                         => reduce 1 tokens to sequence_of_statements 125.1
   default                            => ERROR

State 182:
    132.0:subprogram_body_stub <= subprogram_specification IS SEPARATE ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   SEMICOLON                          => shift and goto state 214 (132.0)
   default                            => ERROR

State 183:
    110.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL ^ expression_opt, RIGHT_PAREN/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   RIGHT_PAREN                        => reduce 0 tokens to expression_opt 88.1
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   SEMICOLON                          => reduce 0 tokens to expression_opt 88.1
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   expression                         goto state 72
   expression_opt                     goto state 215
   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation_and_list                  goto state 50
   relation_or_list                   goto state 51
   relation_xor_list                  goto state 52
   relation                           goto state 53
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 184:
    107.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt BEGIN ^ handled_sequence_of_statements END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 157 (67.0)
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 126.1
   EXIT                               => shift and goto state 158 (86.0, 86.1)
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements_opt 126.1
   FOR                                => shift and goto state 159 (100.0)
   IF                                 => shift and goto state 160 (98.0, 98.1, 98.2, 98.3)
   LOOP                               => shift and goto state 161 (102.1)
   RETURN                             => shift and goto state 162 (90.0, 128.0, 128.1)
   IDENTIFIER                         => shift and goto state 163 (63.0, 104.2)
   default                            => ERROR

   assignment_statement               goto state 164
   block_label_opt                    goto state 165
   block_statement                    goto state 166
   case_statement                     goto state 167
   compound_statement                 goto state 168
   exit_statement                     goto state 169
   extended_return_statement          goto state 170
   handled_sequence_of_statements     goto state 216
   if_statement                       goto state 172
   iteration_scheme                   goto state 173
   loop_statement                     goto state 174
   name                               goto state 175
   procedure_call_statement           goto state 176
   selected_component                 goto state 16
   sequence_of_statements             goto state 177
   sequence_of_statements_opt         goto state 178
   simple_return_statement            goto state 179
   simple_statement                   goto state 180
   statement                          goto state 181

State 185:
    107.1:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt END ^ name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 105.1
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   name                               goto state 217
   name_opt                           goto state 218
   selected_component                 goto state 16

State 186:
     81.0:enumeration_type_definition <= LEFT_PAREN ^ enumeration_literal_list RIGHT_PAREN, SEMICOLON

   IDENTIFIER                         => shift and goto state 219 (80.1)
   default                            => ERROR

   enumeration_literal_list           goto state 220

State 187:
    139.0:type_definition <= enumeration_type_definition ^, SEMICOLON

   SEMICOLON                          => reduce 1 tokens to type_definition 139.0
   default                            => ERROR

State 188:
     93.0:full_type_declaration <= TYPE IDENTIFIER IS type_definition ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   SEMICOLON                          => shift and goto state 221 (93.0)
   default                            => ERROR

State 189:
     57.0:actual_parameter_part <= LEFT_PAREN ^ association_list RIGHT_PAREN, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR
     99.0:index_constraint <= LEFT_PAREN ^ discrete_subtype_definition RIGHT_PAREN, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON
    104.0:name <= name LEFT_PAREN ^ range_list RIGHT_PAREN, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COLON_EQUAL/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   RIGHT_PAREN                        => reduce 0 tokens to association_opt 60.2
   COMMA                              => reduce 0 tokens to association_opt 60.2
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 42 (60.0, 104.2)
   default                            => ERROR

   association_opt                    goto state 43
   association_list                   goto state 60
   discrete_subtype_definition        goto state 222
   expression                         goto state 45
   factor                             goto state 46
   name                               goto state 223
   paren_expression                   goto state 48
   primary                            goto state 49
   range_g                            goto state 224
   range_list                         goto state 64
   relation_and_list                  goto state 50
   relation_or_list                   goto state 51
   relation_xor_list                  goto state 52
   relation                           goto state 53
   selected_component                 goto state 16
   simple_expression                  goto state 65
   subtype_indication                 goto state 225
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 190:
     73.0:constraint <= RANGE ^ range_g, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   range_g                            goto state 226
   selected_component                 goto state 16
   simple_expression                  goto state 149
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 191:
    135.0:subtype_indication <= name constraint ^, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LOOP                               => reduce 2 tokens to subtype_indication 135.0
   RIGHT_PAREN                        => reduce 2 tokens to subtype_indication 135.0
   COLON_EQUAL                        => reduce 2 tokens to subtype_indication 135.0
   SEMICOLON                          => reduce 2 tokens to subtype_indication 135.0
   default                            => ERROR

State 192:
     73.1:constraint <= index_constraint ^, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LOOP                               => reduce 1 tokens to constraint 73.1
   RIGHT_PAREN                        => reduce 1 tokens to constraint 73.1
   COLON_EQUAL                        => reduce 1 tokens to constraint 73.1
   SEMICOLON                          => reduce 1 tokens to constraint 73.1
   default                            => ERROR

State 193:
    106.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL ^ expression_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   SEMICOLON                          => reduce 0 tokens to expression_opt 88.1
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   expression                         goto state 72
   expression_opt                     goto state 227
   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation_and_list                  goto state 50
   relation_or_list                   goto state 51
   relation_xor_list                  goto state 52
   relation                           goto state 53
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 194:
    106.1:object_declaration <= IDENTIFIER COLON subtype_indication SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 4 tokens to object_declaration 106.1
   END                                => reduce 4 tokens to object_declaration 106.1
   FUNCTION                           => reduce 4 tokens to object_declaration 106.1
   PACKAGE                            => reduce 4 tokens to object_declaration 106.1
   PROCEDURE                          => reduce 4 tokens to object_declaration 106.1
   TYPE                               => reduce 4 tokens to object_declaration 106.1
   IDENTIFIER                         => reduce 4 tokens to object_declaration 106.1
   default                            => ERROR

State 195:
     67.0:case_statement <= CASE expression_opt ^ IS case_statement_alternative_list END CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   IS                                 => shift and goto state 228 (67.0)
   default                            => ERROR

State 196:
     97.0:identifier_opt <= IDENTIFIER ^, WHEN/SEMICOLON

   WHEN                               => reduce 1 tokens to identifier_opt 97.0
   SEMICOLON                          => reduce 1 tokens to identifier_opt 97.0
   default                            => ERROR

State 197:
     86.0:exit_statement <= EXIT identifier_opt ^ WHEN expression_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     86.1:exit_statement <= EXIT identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   WHEN                               => shift and goto state 229 (86.0)
   SEMICOLON                          => shift and goto state 230 (86.1)
   default                            => ERROR

State 198:
    100.0:iteration_scheme <= FOR IDENTIFIER ^ IN discrete_subtype_definition, LOOP

   IN                                 => shift and goto state 231 (100.0)
   default                            => ERROR

State 199:
     98.0:if_statement <= IF expression_opt ^ THEN sequence_of_statements_opt elsif_statement_list ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     98.1:if_statement <= IF expression_opt ^ THEN sequence_of_statements_opt ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     98.2:if_statement <= IF expression_opt ^ THEN sequence_of_statements_opt elsif_statement_list END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     98.3:if_statement <= IF expression_opt ^ THEN sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   THEN                               => shift and goto state 232 (98.0, 98.1, 98.2, 98.3)
   default                            => ERROR

State 200:
    102.1:loop_statement <= LOOP sequence_of_statements_opt ^ END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   END                                => shift and goto state 233 (102.1)
   default                            => ERROR

State 201:
    128.1:simple_return_statement <= RETURN SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 2 tokens to simple_return_statement 128.1
   CASE                               => reduce 2 tokens to simple_return_statement 128.1
   DECLARE                            => reduce 2 tokens to simple_return_statement 128.1
   ELSE                               => reduce 2 tokens to simple_return_statement 128.1
   ELSIF                              => reduce 2 tokens to simple_return_statement 128.1
   END                                => reduce 2 tokens to simple_return_statement 128.1
   EXIT                               => reduce 2 tokens to simple_return_statement 128.1
   EXCEPTION                          => reduce 2 tokens to simple_return_statement 128.1
   FOR                                => reduce 2 tokens to simple_return_statement 128.1
   IF                                 => reduce 2 tokens to simple_return_statement 128.1
   LOOP                               => reduce 2 tokens to simple_return_statement 128.1
   RETURN                             => reduce 2 tokens to simple_return_statement 128.1
   WHEN                               => reduce 2 tokens to simple_return_statement 128.1
   IDENTIFIER                         => reduce 2 tokens to simple_return_statement 128.1
   default                            => ERROR

State 202:
     89.0:extended_return_object_declaration <= IDENTIFIER ^ COLON subtype_indication, SEMICOLON
    104.2:name <= IDENTIFIER ^, AND/LEFT_PAREN/OR/XOR/AMPERSAND/DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SEMICOLON/SLASH/SLASH_EQUAL/STAR

   AND                                => reduce 1 tokens to name 104.2
   LEFT_PAREN                         => reduce 1 tokens to name 104.2
   OR                                 => reduce 1 tokens to name 104.2
   XOR                                => reduce 1 tokens to name 104.2
   AMPERSAND                          => reduce 1 tokens to name 104.2
   COLON                              => shift and goto state 234 (89.0)
   DOT                                => reduce 1 tokens to name 104.2
   EQUAL                              => reduce 1 tokens to name 104.2
   GREATER                            => reduce 1 tokens to name 104.2
   GREATER_EQUAL                      => reduce 1 tokens to name 104.2
   LESS                               => reduce 1 tokens to name 104.2
   LESS_EQUAL                         => reduce 1 tokens to name 104.2
   MINUS                              => reduce 1 tokens to name 104.2
   PLUS                               => reduce 1 tokens to name 104.2
   SEMICOLON                          => reduce 1 tokens to name 104.2
   SLASH                              => reduce 1 tokens to name 104.2
   SLASH_EQUAL                        => reduce 1 tokens to name 104.2
   STAR                               => reduce 1 tokens to name 104.2
   default                            => ERROR

State 203:
    128.0:simple_return_statement <= RETURN expression_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => shift and goto state 235 (128.0)
   default                            => ERROR

State 204:
     90.0:extended_return_statement <= RETURN extended_return_object_declaration ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => shift and goto state 236 (90.0)
   default                            => ERROR

State 205:
     63.0:block_label_opt <= IDENTIFIER COLON ^, BEGIN/DECLARE

   BEGIN                              => reduce 2 tokens to block_label_opt 63.0
   DECLARE                            => reduce 2 tokens to block_label_opt 63.0
   default                            => ERROR

State 206:
     64.1:block_statement <= block_label_opt BEGIN ^ handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 157 (67.0)
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 126.1
   EXIT                               => shift and goto state 158 (86.0, 86.1)
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements_opt 126.1
   FOR                                => shift and goto state 159 (100.0)
   IF                                 => shift and goto state 160 (98.0, 98.1, 98.2, 98.3)
   LOOP                               => shift and goto state 161 (102.1)
   RETURN                             => shift and goto state 162 (90.0, 128.0, 128.1)
   IDENTIFIER                         => shift and goto state 163 (63.0, 104.2)
   default                            => ERROR

   assignment_statement               goto state 164
   block_label_opt                    goto state 165
   block_statement                    goto state 166
   case_statement                     goto state 167
   compound_statement                 goto state 168
   exit_statement                     goto state 169
   extended_return_statement          goto state 170
   handled_sequence_of_statements     goto state 237
   if_statement                       goto state 172
   iteration_scheme                   goto state 173
   loop_statement                     goto state 174
   name                               goto state 175
   procedure_call_statement           goto state 176
   selected_component                 goto state 16
   sequence_of_statements             goto state 177
   sequence_of_statements_opt         goto state 178
   simple_return_statement            goto state 179
   simple_statement                   goto state 180
   statement                          goto state 181

State 207:
     64.0:block_statement <= block_label_opt DECLARE ^ declarative_part_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 0 tokens to declarative_part_opt 76.1
   FUNCTION                           => shift and goto state 1 (94.0)
   PACKAGE                            => shift and goto state 98 (107.0, 107.1)
   PROCEDURE                          => shift and goto state 99 (115.0)
   TYPE                               => shift and goto state 100 (93.0)
   IDENTIFIER                         => shift and goto state 101 (106.0, 106.1)
   default                            => ERROR

   body_g                             goto state 102
   body_stub                          goto state 103
   declaration                        goto state 104
   declarations                       goto state 105
   declarative_part_opt               goto state 238
   full_type_declaration              goto state 107
   function_specification             goto state 6
   object_declaration                 goto state 108
   package_body                       goto state 109
   procedure_specification            goto state 10
   proper_body                        goto state 110
   subprogram_body                    goto state 111
   subprogram_body_stub               goto state 112
   subprogram_declaration             goto state 113
   subprogram_specification           goto state 114
   type_declaration                   goto state 115

State 208:
    131.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 105.1
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   name                               goto state 217
   name_opt                           goto state 239
   selected_component                 goto state 16

State 209:
    102.0:loop_statement <= iteration_scheme LOOP ^ sequence_of_statements_opt END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 157 (67.0)
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 126.1
   EXIT                               => shift and goto state 158 (86.0, 86.1)
   FOR                                => shift and goto state 159 (100.0)
   IF                                 => shift and goto state 160 (98.0, 98.1, 98.2, 98.3)
   LOOP                               => shift and goto state 161 (102.1)
   RETURN                             => shift and goto state 162 (90.0, 128.0, 128.1)
   IDENTIFIER                         => shift and goto state 163 (63.0, 104.2)
   default                            => ERROR

   assignment_statement               goto state 164
   block_label_opt                    goto state 165
   block_statement                    goto state 166
   case_statement                     goto state 167
   compound_statement                 goto state 168
   exit_statement                     goto state 169
   extended_return_statement          goto state 170
   if_statement                       goto state 172
   iteration_scheme                   goto state 173
   loop_statement                     goto state 174
   name                               goto state 175
   procedure_call_statement           goto state 176
   selected_component                 goto state 16
   sequence_of_statements             goto state 177
   sequence_of_statements_opt         goto state 240
   simple_return_statement            goto state 179
   simple_statement                   goto state 180
   statement                          goto state 181

State 210:
     59.0:assignment_statement <= name COLON_EQUAL ^ expression_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   SEMICOLON                          => reduce 0 tokens to expression_opt 88.1
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   expression                         goto state 72
   expression_opt                     goto state 241
   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation_and_list                  goto state 50
   relation_or_list                   goto state 51
   relation_xor_list                  goto state 52
   relation                           goto state 53
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 211:
    114.0:procedure_call_statement <= name SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 2 tokens to procedure_call_statement 114.0
   CASE                               => reduce 2 tokens to procedure_call_statement 114.0
   DECLARE                            => reduce 2 tokens to procedure_call_statement 114.0
   ELSE                               => reduce 2 tokens to procedure_call_statement 114.0
   ELSIF                              => reduce 2 tokens to procedure_call_statement 114.0
   END                                => reduce 2 tokens to procedure_call_statement 114.0
   EXIT                               => reduce 2 tokens to procedure_call_statement 114.0
   EXCEPTION                          => reduce 2 tokens to procedure_call_statement 114.0
   FOR                                => reduce 2 tokens to procedure_call_statement 114.0
   IF                                 => reduce 2 tokens to procedure_call_statement 114.0
   LOOP                               => reduce 2 tokens to procedure_call_statement 114.0
   RETURN                             => reduce 2 tokens to procedure_call_statement 114.0
   WHEN                               => reduce 2 tokens to procedure_call_statement 114.0
   IDENTIFIER                         => reduce 2 tokens to procedure_call_statement 114.0
   default                            => ERROR

State 212:
    125.0:sequence_of_statements <= sequence_of_statements statement ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 2 tokens to sequence_of_statements 125.0
   CASE                               => reduce 2 tokens to sequence_of_statements 125.0
   DECLARE                            => reduce 2 tokens to sequence_of_statements 125.0
   ELSE                               => reduce 2 tokens to sequence_of_statements 125.0
   ELSIF                              => reduce 2 tokens to sequence_of_statements 125.0
   END                                => reduce 2 tokens to sequence_of_statements 125.0
   EXIT                               => reduce 2 tokens to sequence_of_statements 125.0
   EXCEPTION                          => reduce 2 tokens to sequence_of_statements 125.0
   FOR                                => reduce 2 tokens to sequence_of_statements 125.0
   IF                                 => reduce 2 tokens to sequence_of_statements 125.0
   LOOP                               => reduce 2 tokens to sequence_of_statements 125.0
   RETURN                             => reduce 2 tokens to sequence_of_statements 125.0
   WHEN                               => reduce 2 tokens to sequence_of_statements 125.0
   IDENTIFIER                         => reduce 2 tokens to sequence_of_statements 125.0
   default                            => ERROR

State 213:
     96.0:handled_sequence_of_statements <= sequence_of_statements_opt EXCEPTION ^ exception_handler_list_opt, END

   END                                => reduce 0 tokens to exception_handler_list_opt 85.1
   WHEN                               => shift and goto state 242 (83.0)
   default                            => ERROR

   exception_handler                  goto state 243
   exception_handler_list             goto state 244
   exception_handler_list_opt         goto state 245

State 214:
    132.0:subprogram_body_stub <= subprogram_specification IS SEPARATE SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 4 tokens to subprogram_body_stub 132.0
   END                                => reduce 4 tokens to subprogram_body_stub 132.0
   FUNCTION                           => reduce 4 tokens to subprogram_body_stub 132.0
   PACKAGE                            => reduce 4 tokens to subprogram_body_stub 132.0
   PROCEDURE                          => reduce 4 tokens to subprogram_body_stub 132.0
   TYPE                               => reduce 4 tokens to subprogram_body_stub 132.0
   IDENTIFIER                         => reduce 4 tokens to subprogram_body_stub 132.0
   default                            => ERROR

State 215:
    110.0:parameter_specification <= IDENTIFIER COLON IDENTIFIER COLON_EQUAL expression_opt ^, RIGHT_PAREN/SEMICOLON

   RIGHT_PAREN                        => reduce 5 tokens to parameter_specification 110.0
   SEMICOLON                          => reduce 5 tokens to parameter_specification 110.0
   default                            => ERROR

State 216:
    107.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements ^ END name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   END                                => shift and goto state 246 (107.0)
   default                            => ERROR

State 217:
    104.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/DOT/SEMICOLON
    104.1:name <= name ^ actual_parameter_part, LEFT_PAREN/DOT/SEMICOLON
    105.0:name_opt <= name ^, SEMICOLON
    124.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/DOT/SEMICOLON

   LEFT_PAREN                         => shift and goto state 32 (57.0, 104.0)
   DOT                                => shift and goto state 26 (124.0)
   SEMICOLON                          => reduce 1 tokens to name_opt 105.0
   default                            => ERROR

   actual_parameter_part              goto state 27

State 218:
    107.1:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt END name_opt ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 247 (107.1)
   default                            => ERROR

State 219:
     80.1:enumeration_literal_list <= IDENTIFIER ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 1 tokens to enumeration_literal_list 80.1
   COMMA                              => reduce 1 tokens to enumeration_literal_list 80.1
   default                            => ERROR

State 220:
     80.0:enumeration_literal_list <= enumeration_literal_list ^ COMMA IDENTIFIER, RIGHT_PAREN/COMMA
     81.0:enumeration_type_definition <= LEFT_PAREN enumeration_literal_list ^ RIGHT_PAREN, SEMICOLON

   RIGHT_PAREN                        => shift and goto state 248 (81.0)
   COMMA                              => shift and goto state 249 (80.0)
   default                            => ERROR

State 221:
     93.0:full_type_declaration <= TYPE IDENTIFIER IS type_definition SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 5 tokens to full_type_declaration 93.0
   END                                => reduce 5 tokens to full_type_declaration 93.0
   FUNCTION                           => reduce 5 tokens to full_type_declaration 93.0
   PACKAGE                            => reduce 5 tokens to full_type_declaration 93.0
   PROCEDURE                          => reduce 5 tokens to full_type_declaration 93.0
   TYPE                               => reduce 5 tokens to full_type_declaration 93.0
   IDENTIFIER                         => reduce 5 tokens to full_type_declaration 93.0
   default                            => ERROR

State 222:
     99.0:index_constraint <= LEFT_PAREN discrete_subtype_definition ^ RIGHT_PAREN, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   RIGHT_PAREN                        => shift and goto state 250 (99.0)
   default                            => ERROR

State 223:
    104.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    104.1:name <= name ^ actual_parameter_part, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    113.2:primary <= name ^, AND/OR/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    124.0:selected_component <= name ^ DOT IDENTIFIER, AND/LEFT_PAREN/LOOP/OR/RANGE/RIGHT_PAREN/XOR/AMPERSAND/COMMA/DOT/DOT_DOT/EQUAL/GREATER/GREATER_EQUAL/LESS/LESS_EQUAL/MINUS/PLUS/SLASH/SLASH_EQUAL/STAR
    135.0:subtype_indication <= name ^ constraint, LOOP/RIGHT_PAREN
    135.1:subtype_indication <= name ^, LOOP/RIGHT_PAREN

   AND                                => reduce 1 tokens to primary 113.2
   LEFT_PAREN                         => shift and goto state 189 (57.0, 99.0, 104.0)
   LOOP                               => reduce 1 tokens to subtype_indication 135.1
   OR                                 => reduce 1 tokens to primary 113.2
   RANGE                              => shift and goto state 190 (73.0)
   RIGHT_PAREN                        => reduce 1 tokens to primary 113.2,
                                         reduce 1 tokens to subtype_indication 135.1
   XOR                                => reduce 1 tokens to primary 113.2
   AMPERSAND                          => reduce 1 tokens to primary 113.2
   COMMA                              => reduce 1 tokens to primary 113.2
   DOT                                => shift and goto state 26 (124.0)
   DOT_DOT                            => reduce 1 tokens to primary 113.2
   EQUAL                              => reduce 1 tokens to primary 113.2
   GREATER                            => reduce 1 tokens to primary 113.2
   GREATER_EQUAL                      => reduce 1 tokens to primary 113.2
   LESS                               => reduce 1 tokens to primary 113.2
   LESS_EQUAL                         => reduce 1 tokens to primary 113.2
   MINUS                              => reduce 1 tokens to primary 113.2
   PLUS                               => reduce 1 tokens to primary 113.2
   SLASH                              => reduce 1 tokens to primary 113.2
   SLASH_EQUAL                        => reduce 1 tokens to primary 113.2
   STAR                               => reduce 1 tokens to primary 113.2
   default                            => ERROR

   actual_parameter_part              goto state 27
   constraint                         goto state 191
   index_constraint                   goto state 192

State 224:
     77.1:discrete_subtype_definition <= range_g ^, RIGHT_PAREN
    118.1:range_list <= range_g ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 1 tokens to discrete_subtype_definition 77.1,
                                         reduce 1 tokens to range_list 118.1
   COMMA                              => reduce 1 tokens to range_list 118.1
   default                            => ERROR

State 225:
     77.0:discrete_subtype_definition <= subtype_indication ^, LOOP/RIGHT_PAREN

   LOOP                               => reduce 1 tokens to discrete_subtype_definition 77.0
   RIGHT_PAREN                        => reduce 1 tokens to discrete_subtype_definition 77.0
   default                            => ERROR

State 226:
     73.0:constraint <= RANGE range_g ^, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LOOP                               => reduce 2 tokens to constraint 73.0
   RIGHT_PAREN                        => reduce 2 tokens to constraint 73.0
   COLON_EQUAL                        => reduce 2 tokens to constraint 73.0
   SEMICOLON                          => reduce 2 tokens to constraint 73.0
   default                            => ERROR

State 227:
    106.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression_opt ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   SEMICOLON                          => shift and goto state 251 (106.0)
   default                            => ERROR

State 228:
     67.0:case_statement <= CASE expression_opt IS ^ case_statement_alternative_list END CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   WHEN                               => shift and goto state 252 (68.0)
   default                            => ERROR

   case_statement_alternative         goto state 253
   case_statement_alternative_list    goto state 254

State 229:
     86.0:exit_statement <= EXIT identifier_opt WHEN ^ expression_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   SEMICOLON                          => reduce 0 tokens to expression_opt 88.1
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   expression                         goto state 72
   expression_opt                     goto state 255
   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation_and_list                  goto state 50
   relation_or_list                   goto state 51
   relation_xor_list                  goto state 52
   relation                           goto state 53
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 230:
     86.1:exit_statement <= EXIT identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 3 tokens to exit_statement 86.1
   CASE                               => reduce 3 tokens to exit_statement 86.1
   DECLARE                            => reduce 3 tokens to exit_statement 86.1
   ELSE                               => reduce 3 tokens to exit_statement 86.1
   ELSIF                              => reduce 3 tokens to exit_statement 86.1
   END                                => reduce 3 tokens to exit_statement 86.1
   EXIT                               => reduce 3 tokens to exit_statement 86.1
   EXCEPTION                          => reduce 3 tokens to exit_statement 86.1
   FOR                                => reduce 3 tokens to exit_statement 86.1
   IF                                 => reduce 3 tokens to exit_statement 86.1
   LOOP                               => reduce 3 tokens to exit_statement 86.1
   RETURN                             => reduce 3 tokens to exit_statement 86.1
   WHEN                               => reduce 3 tokens to exit_statement 86.1
   IDENTIFIER                         => reduce 3 tokens to exit_statement 86.1
   default                            => ERROR

State 231:
    100.0:iteration_scheme <= FOR IDENTIFIER IN ^ discrete_subtype_definition, LOOP

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   discrete_subtype_definition        goto state 256
   factor                             goto state 46
   name                               goto state 223
   paren_expression                   goto state 48
   primary                            goto state 49
   range_g                            goto state 257
   selected_component                 goto state 16
   simple_expression                  goto state 149
   subtype_indication                 goto state 225
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 232:
     98.0:if_statement <= IF expression_opt THEN ^ sequence_of_statements_opt elsif_statement_list ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     98.1:if_statement <= IF expression_opt THEN ^ sequence_of_statements_opt ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     98.2:if_statement <= IF expression_opt THEN ^ sequence_of_statements_opt elsif_statement_list END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     98.3:if_statement <= IF expression_opt THEN ^ sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 157 (67.0)
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   ELSE                               => reduce 0 tokens to sequence_of_statements_opt 126.1
   ELSIF                              => reduce 0 tokens to sequence_of_statements_opt 126.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 126.1
   EXIT                               => shift and goto state 158 (86.0, 86.1)
   FOR                                => shift and goto state 159 (100.0)
   IF                                 => shift and goto state 160 (98.0, 98.1, 98.2, 98.3)
   LOOP                               => shift and goto state 161 (102.1)
   RETURN                             => shift and goto state 162 (90.0, 128.0, 128.1)
   IDENTIFIER                         => shift and goto state 163 (63.0, 104.2)
   default                            => ERROR

   assignment_statement               goto state 164
   block_label_opt                    goto state 165
   block_statement                    goto state 166
   case_statement                     goto state 167
   compound_statement                 goto state 168
   exit_statement                     goto state 169
   extended_return_statement          goto state 170
   if_statement                       goto state 172
   iteration_scheme                   goto state 173
   loop_statement                     goto state 174
   name                               goto state 175
   procedure_call_statement           goto state 176
   selected_component                 goto state 16
   sequence_of_statements             goto state 177
   sequence_of_statements_opt         goto state 258
   simple_return_statement            goto state 179
   simple_statement                   goto state 180
   statement                          goto state 181

State 233:
    102.1:loop_statement <= LOOP sequence_of_statements_opt END ^ LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   LOOP                               => shift and goto state 259 (102.1)
   default                            => ERROR

State 234:
     89.0:extended_return_object_declaration <= IDENTIFIER COLON ^ subtype_indication, SEMICOLON

   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   name                               goto state 155
   selected_component                 goto state 16
   subtype_indication                 goto state 260

State 235:
    128.0:simple_return_statement <= RETURN expression_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 3 tokens to simple_return_statement 128.0
   CASE                               => reduce 3 tokens to simple_return_statement 128.0
   DECLARE                            => reduce 3 tokens to simple_return_statement 128.0
   ELSE                               => reduce 3 tokens to simple_return_statement 128.0
   ELSIF                              => reduce 3 tokens to simple_return_statement 128.0
   END                                => reduce 3 tokens to simple_return_statement 128.0
   EXIT                               => reduce 3 tokens to simple_return_statement 128.0
   EXCEPTION                          => reduce 3 tokens to simple_return_statement 128.0
   FOR                                => reduce 3 tokens to simple_return_statement 128.0
   IF                                 => reduce 3 tokens to simple_return_statement 128.0
   LOOP                               => reduce 3 tokens to simple_return_statement 128.0
   RETURN                             => reduce 3 tokens to simple_return_statement 128.0
   WHEN                               => reduce 3 tokens to simple_return_statement 128.0
   IDENTIFIER                         => reduce 3 tokens to simple_return_statement 128.0
   default                            => ERROR

State 236:
     90.0:extended_return_statement <= RETURN extended_return_object_declaration SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 3 tokens to extended_return_statement 90.0
   CASE                               => reduce 3 tokens to extended_return_statement 90.0
   DECLARE                            => reduce 3 tokens to extended_return_statement 90.0
   ELSE                               => reduce 3 tokens to extended_return_statement 90.0
   ELSIF                              => reduce 3 tokens to extended_return_statement 90.0
   END                                => reduce 3 tokens to extended_return_statement 90.0
   EXIT                               => reduce 3 tokens to extended_return_statement 90.0
   EXCEPTION                          => reduce 3 tokens to extended_return_statement 90.0
   FOR                                => reduce 3 tokens to extended_return_statement 90.0
   IF                                 => reduce 3 tokens to extended_return_statement 90.0
   LOOP                               => reduce 3 tokens to extended_return_statement 90.0
   RETURN                             => reduce 3 tokens to extended_return_statement 90.0
   WHEN                               => reduce 3 tokens to extended_return_statement 90.0
   IDENTIFIER                         => reduce 3 tokens to extended_return_statement 90.0
   default                            => ERROR

State 237:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements ^ END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   END                                => shift and goto state 261 (64.1)
   default                            => ERROR

State 238:
     64.0:block_statement <= block_label_opt DECLARE declarative_part_opt ^ BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => shift and goto state 262 (64.0)
   default                            => ERROR

State 239:
    131.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 263 (131.0)
   default                            => ERROR

State 240:
    102.0:loop_statement <= iteration_scheme LOOP sequence_of_statements_opt ^ END LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   END                                => shift and goto state 264 (102.0)
   default                            => ERROR

State 241:
     59.0:assignment_statement <= name COLON_EQUAL expression_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => shift and goto state 265 (59.0)
   default                            => ERROR

State 242:
     83.0:exception_handler <= WHEN ^ exception_choice EQUAL_GREATER sequence_of_statements_opt, END/WHEN

   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   exception_choice                   goto state 266
   name                               goto state 267
   selected_component                 goto state 16

State 243:
     84.1:exception_handler_list <= exception_handler ^, END/WHEN

   END                                => reduce 1 tokens to exception_handler_list 84.1
   WHEN                               => reduce 1 tokens to exception_handler_list 84.1
   default                            => ERROR

State 244:
     84.0:exception_handler_list <= exception_handler_list ^ exception_handler, END/WHEN
     85.0:exception_handler_list_opt <= exception_handler_list ^, END

   END                                => reduce 1 tokens to exception_handler_list_opt 85.0
   WHEN                               => shift and goto state 242 (83.0)
   default                            => ERROR

   exception_handler                  goto state 268

State 245:
     96.0:handled_sequence_of_statements <= sequence_of_statements_opt EXCEPTION exception_handler_list_opt ^, END

   END                                => reduce 3 tokens to handled_sequence_of_statements 96.0
   default                            => ERROR

State 246:
    107.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END ^ name_opt SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => reduce 0 tokens to name_opt 105.1
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   name                               goto state 217
   name_opt                           goto state 269
   selected_component                 goto state 16

State 247:
    107.1:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt END name_opt SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 9 tokens to package_body 107.1
   END                                => reduce 9 tokens to package_body 107.1
   FUNCTION                           => reduce 9 tokens to package_body 107.1
   PACKAGE                            => reduce 9 tokens to package_body 107.1
   PROCEDURE                          => reduce 9 tokens to package_body 107.1
   TYPE                               => reduce 9 tokens to package_body 107.1
   IDENTIFIER                         => reduce 9 tokens to package_body 107.1
   Wisi_EOI                           => reduce 9 tokens to package_body 107.1
   default                            => ERROR

State 248:
     81.0:enumeration_type_definition <= LEFT_PAREN enumeration_literal_list RIGHT_PAREN ^, SEMICOLON

   SEMICOLON                          => reduce 3 tokens to enumeration_type_definition 81.0
   default                            => ERROR

State 249:
     80.0:enumeration_literal_list <= enumeration_literal_list COMMA ^ IDENTIFIER, RIGHT_PAREN/COMMA

   IDENTIFIER                         => shift and goto state 270 (80.0)
   default                            => ERROR

State 250:
     99.0:index_constraint <= LEFT_PAREN discrete_subtype_definition RIGHT_PAREN ^, LOOP/RIGHT_PAREN/COLON_EQUAL/SEMICOLON

   LOOP                               => reduce 3 tokens to index_constraint 99.0
   RIGHT_PAREN                        => reduce 3 tokens to index_constraint 99.0
   COLON_EQUAL                        => reduce 3 tokens to index_constraint 99.0
   SEMICOLON                          => reduce 3 tokens to index_constraint 99.0
   default                            => ERROR

State 251:
    106.0:object_declaration <= IDENTIFIER COLON subtype_indication COLON_EQUAL expression_opt SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER

   BEGIN                              => reduce 6 tokens to object_declaration 106.0
   END                                => reduce 6 tokens to object_declaration 106.0
   FUNCTION                           => reduce 6 tokens to object_declaration 106.0
   PACKAGE                            => reduce 6 tokens to object_declaration 106.0
   PROCEDURE                          => reduce 6 tokens to object_declaration 106.0
   TYPE                               => reduce 6 tokens to object_declaration 106.0
   IDENTIFIER                         => reduce 6 tokens to object_declaration 106.0
   default                            => ERROR

State 252:
     68.0:case_statement_alternative <= WHEN ^ NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements_opt, END/WHEN

   NUMERIC_LITERAL                    => shift and goto state 271 (68.0)
   default                            => ERROR

State 253:
     69.1:case_statement_alternative_list <= case_statement_alternative ^, END/WHEN

   END                                => reduce 1 tokens to case_statement_alternative_list 69.1
   WHEN                               => reduce 1 tokens to case_statement_alternative_list 69.1
   default                            => ERROR

State 254:
     67.0:case_statement <= CASE expression_opt IS case_statement_alternative_list ^ END CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     69.0:case_statement_alternative_list <= case_statement_alternative_list ^ case_statement_alternative, END/WHEN

   END                                => shift and goto state 272 (67.0)
   WHEN                               => shift and goto state 252 (68.0)
   default                            => ERROR

   case_statement_alternative         goto state 273

State 255:
     86.0:exit_statement <= EXIT identifier_opt WHEN expression_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => shift and goto state 274 (86.0)
   default                            => ERROR

State 256:
    100.0:iteration_scheme <= FOR IDENTIFIER IN discrete_subtype_definition ^, LOOP

   LOOP                               => reduce 4 tokens to iteration_scheme 100.0
   default                            => ERROR

State 257:
     77.1:discrete_subtype_definition <= range_g ^, LOOP

   LOOP                               => reduce 1 tokens to discrete_subtype_definition 77.1
   default                            => ERROR

State 258:
     98.0:if_statement <= IF expression_opt THEN sequence_of_statements_opt ^ elsif_statement_list ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     98.1:if_statement <= IF expression_opt THEN sequence_of_statements_opt ^ ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     98.2:if_statement <= IF expression_opt THEN sequence_of_statements_opt ^ elsif_statement_list END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     98.3:if_statement <= IF expression_opt THEN sequence_of_statements_opt ^ END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   ELSE                               => shift and goto state 275 (98.1)
   ELSIF                              => shift and goto state 276 (78.0)
   END                                => shift and goto state 277 (98.3)
   default                            => ERROR

   elsif_statement_item               goto state 278
   elsif_statement_list               goto state 279

State 259:
    102.1:loop_statement <= LOOP sequence_of_statements_opt END LOOP ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => reduce 0 tokens to identifier_opt 97.1
   IDENTIFIER                         => shift and goto state 196 (97.0)
   default                            => ERROR

   identifier_opt                     goto state 280

State 260:
     89.0:extended_return_object_declaration <= IDENTIFIER COLON subtype_indication ^, SEMICOLON

   SEMICOLON                          => reduce 3 tokens to extended_return_object_declaration 89.0
   default                            => ERROR

State 261:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => reduce 0 tokens to identifier_opt 97.1
   IDENTIFIER                         => shift and goto state 196 (97.0)
   default                            => ERROR

   identifier_opt                     goto state 281

State 262:
     64.0:block_statement <= block_label_opt DECLARE declarative_part_opt BEGIN ^ handled_sequence_of_statements END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 157 (67.0)
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 126.1
   EXIT                               => shift and goto state 158 (86.0, 86.1)
   EXCEPTION                          => reduce 0 tokens to sequence_of_statements_opt 126.1
   FOR                                => shift and goto state 159 (100.0)
   IF                                 => shift and goto state 160 (98.0, 98.1, 98.2, 98.3)
   LOOP                               => shift and goto state 161 (102.1)
   RETURN                             => shift and goto state 162 (90.0, 128.0, 128.1)
   IDENTIFIER                         => shift and goto state 163 (63.0, 104.2)
   default                            => ERROR

   assignment_statement               goto state 164
   block_label_opt                    goto state 165
   block_statement                    goto state 166
   case_statement                     goto state 167
   compound_statement                 goto state 168
   exit_statement                     goto state 169
   extended_return_statement          goto state 170
   handled_sequence_of_statements     goto state 282
   if_statement                       goto state 172
   iteration_scheme                   goto state 173
   loop_statement                     goto state 174
   name                               goto state 175
   procedure_call_statement           goto state 176
   selected_component                 goto state 16
   sequence_of_statements             goto state 177
   sequence_of_statements_opt         goto state 178
   simple_return_statement            goto state 179
   simple_statement                   goto state 180
   statement                          goto state 181

State 263:
    131.0:subprogram_body <= subprogram_specification aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 9 tokens to subprogram_body 131.0
   END                                => reduce 9 tokens to subprogram_body 131.0
   FUNCTION                           => reduce 9 tokens to subprogram_body 131.0
   PACKAGE                            => reduce 9 tokens to subprogram_body 131.0
   PROCEDURE                          => reduce 9 tokens to subprogram_body 131.0
   TYPE                               => reduce 9 tokens to subprogram_body 131.0
   IDENTIFIER                         => reduce 9 tokens to subprogram_body 131.0
   Wisi_EOI                           => reduce 9 tokens to subprogram_body 131.0
   default                            => ERROR

State 264:
    102.0:loop_statement <= iteration_scheme LOOP sequence_of_statements_opt END ^ LOOP identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   LOOP                               => shift and goto state 283 (102.0)
   default                            => ERROR

State 265:
     59.0:assignment_statement <= name COLON_EQUAL expression_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 4 tokens to assignment_statement 59.0
   CASE                               => reduce 4 tokens to assignment_statement 59.0
   DECLARE                            => reduce 4 tokens to assignment_statement 59.0
   ELSE                               => reduce 4 tokens to assignment_statement 59.0
   ELSIF                              => reduce 4 tokens to assignment_statement 59.0
   END                                => reduce 4 tokens to assignment_statement 59.0
   EXIT                               => reduce 4 tokens to assignment_statement 59.0
   EXCEPTION                          => reduce 4 tokens to assignment_statement 59.0
   FOR                                => reduce 4 tokens to assignment_statement 59.0
   IF                                 => reduce 4 tokens to assignment_statement 59.0
   LOOP                               => reduce 4 tokens to assignment_statement 59.0
   RETURN                             => reduce 4 tokens to assignment_statement 59.0
   WHEN                               => reduce 4 tokens to assignment_statement 59.0
   IDENTIFIER                         => reduce 4 tokens to assignment_statement 59.0
   default                            => ERROR

State 266:
     83.0:exception_handler <= WHEN exception_choice ^ EQUAL_GREATER sequence_of_statements_opt, END/WHEN

   EQUAL_GREATER                      => shift and goto state 284 (83.0)
   default                            => ERROR

State 267:
     82.0:exception_choice <= name ^, EQUAL_GREATER
    104.0:name <= name ^ LEFT_PAREN range_list RIGHT_PAREN, LEFT_PAREN/DOT/EQUAL_GREATER
    104.1:name <= name ^ actual_parameter_part, LEFT_PAREN/DOT/EQUAL_GREATER
    124.0:selected_component <= name ^ DOT IDENTIFIER, LEFT_PAREN/DOT/EQUAL_GREATER

   LEFT_PAREN                         => shift and goto state 32 (57.0, 104.0)
   DOT                                => shift and goto state 26 (124.0)
   EQUAL_GREATER                      => reduce 1 tokens to exception_choice 82.0
   default                            => ERROR

   actual_parameter_part              goto state 27

State 268:
     84.0:exception_handler_list <= exception_handler_list exception_handler ^, END/WHEN

   END                                => reduce 2 tokens to exception_handler_list 84.0
   WHEN                               => reduce 2 tokens to exception_handler_list 84.0
   default                            => ERROR

State 269:
    107.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt ^ SEMICOLON, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   SEMICOLON                          => shift and goto state 285 (107.0)
   default                            => ERROR

State 270:
     80.0:enumeration_literal_list <= enumeration_literal_list COMMA IDENTIFIER ^, RIGHT_PAREN/COMMA

   RIGHT_PAREN                        => reduce 3 tokens to enumeration_literal_list 80.0
   COMMA                              => reduce 3 tokens to enumeration_literal_list 80.0
   default                            => ERROR

State 271:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL ^ EQUAL_GREATER sequence_of_statements_opt, END/WHEN

   EQUAL_GREATER                      => shift and goto state 286 (68.0)
   default                            => ERROR

State 272:
     67.0:case_statement <= CASE expression_opt IS case_statement_alternative_list END ^ CASE SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   CASE                               => shift and goto state 287 (67.0)
   default                            => ERROR

State 273:
     69.0:case_statement_alternative_list <= case_statement_alternative_list case_statement_alternative ^, END/WHEN

   END                                => reduce 2 tokens to case_statement_alternative_list 69.0
   WHEN                               => reduce 2 tokens to case_statement_alternative_list 69.0
   default                            => ERROR

State 274:
     86.0:exit_statement <= EXIT identifier_opt WHEN expression_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 5 tokens to exit_statement 86.0
   CASE                               => reduce 5 tokens to exit_statement 86.0
   DECLARE                            => reduce 5 tokens to exit_statement 86.0
   ELSE                               => reduce 5 tokens to exit_statement 86.0
   ELSIF                              => reduce 5 tokens to exit_statement 86.0
   END                                => reduce 5 tokens to exit_statement 86.0
   EXIT                               => reduce 5 tokens to exit_statement 86.0
   EXCEPTION                          => reduce 5 tokens to exit_statement 86.0
   FOR                                => reduce 5 tokens to exit_statement 86.0
   IF                                 => reduce 5 tokens to exit_statement 86.0
   LOOP                               => reduce 5 tokens to exit_statement 86.0
   RETURN                             => reduce 5 tokens to exit_statement 86.0
   WHEN                               => reduce 5 tokens to exit_statement 86.0
   IDENTIFIER                         => reduce 5 tokens to exit_statement 86.0
   default                            => ERROR

State 275:
     98.1:if_statement <= IF expression_opt THEN sequence_of_statements_opt ELSE ^ sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 157 (67.0)
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 126.1
   EXIT                               => shift and goto state 158 (86.0, 86.1)
   FOR                                => shift and goto state 159 (100.0)
   IF                                 => shift and goto state 160 (98.0, 98.1, 98.2, 98.3)
   LOOP                               => shift and goto state 161 (102.1)
   RETURN                             => shift and goto state 162 (90.0, 128.0, 128.1)
   IDENTIFIER                         => shift and goto state 163 (63.0, 104.2)
   default                            => ERROR

   assignment_statement               goto state 164
   block_label_opt                    goto state 165
   block_statement                    goto state 166
   case_statement                     goto state 167
   compound_statement                 goto state 168
   exit_statement                     goto state 169
   extended_return_statement          goto state 170
   if_statement                       goto state 172
   iteration_scheme                   goto state 173
   loop_statement                     goto state 174
   name                               goto state 175
   procedure_call_statement           goto state 176
   selected_component                 goto state 16
   sequence_of_statements             goto state 177
   sequence_of_statements_opt         goto state 288
   simple_return_statement            goto state 179
   simple_statement                   goto state 180
   statement                          goto state 181

State 276:
     78.0:elsif_statement_item <= ELSIF ^ expression_opt THEN sequence_of_statements_opt, ELSE/ELSIF/END

   LEFT_PAREN                         => shift and goto state 36 (112.0)
   NOT                                => shift and goto state 37 (91.1)
   THEN                               => reduce 0 tokens to expression_opt 88.1
   MINUS                              => shift and goto state 38 (140.1)
   PLUS                               => shift and goto state 39 (140.0)
   STRING_LITERAL                     => shift and goto state 40 (113.1)
   NUMERIC_LITERAL                    => shift and goto state 41 (113.0)
   IDENTIFIER                         => shift and goto state 14 (104.2)
   default                            => ERROR

   expression                         goto state 72
   expression_opt                     goto state 289
   factor                             goto state 46
   name                               goto state 47
   paren_expression                   goto state 48
   primary                            goto state 49
   relation_and_list                  goto state 50
   relation_or_list                   goto state 51
   relation_xor_list                  goto state 52
   relation                           goto state 53
   selected_component                 goto state 16
   simple_expression                  goto state 54
   term                               goto state 55
   term_list                          goto state 56
   unary_adding_operator              goto state 57

State 277:
     98.3:if_statement <= IF expression_opt THEN sequence_of_statements_opt END ^ IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   IF                                 => shift and goto state 290 (98.3)
   default                            => ERROR

State 278:
     79.1:elsif_statement_list <= elsif_statement_item ^, ELSE/ELSIF/END

   ELSE                               => reduce 1 tokens to elsif_statement_list 79.1
   ELSIF                              => reduce 1 tokens to elsif_statement_list 79.1
   END                                => reduce 1 tokens to elsif_statement_list 79.1
   default                            => ERROR

State 279:
     79.0:elsif_statement_list <= elsif_statement_list ^ elsif_statement_item, ELSE/ELSIF/END
     98.0:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list ^ ELSE sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER
     98.2:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list ^ END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   ELSE                               => shift and goto state 291 (98.0)
   ELSIF                              => shift and goto state 276 (78.0)
   END                                => shift and goto state 292 (98.2)
   default                            => ERROR

   elsif_statement_item               goto state 293

State 280:
    102.1:loop_statement <= LOOP sequence_of_statements_opt END LOOP identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => shift and goto state 294 (102.1)
   default                            => ERROR

State 281:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => shift and goto state 295 (64.1)
   default                            => ERROR

State 282:
     64.0:block_statement <= block_label_opt DECLARE declarative_part_opt BEGIN handled_sequence_of_statements ^ END identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   END                                => shift and goto state 296 (64.0)
   default                            => ERROR

State 283:
    102.0:loop_statement <= iteration_scheme LOOP sequence_of_statements_opt END LOOP ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => reduce 0 tokens to identifier_opt 97.1
   IDENTIFIER                         => shift and goto state 196 (97.0)
   default                            => ERROR

   identifier_opt                     goto state 297

State 284:
     83.0:exception_handler <= WHEN exception_choice EQUAL_GREATER ^ sequence_of_statements_opt, END/WHEN

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 157 (67.0)
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 126.1
   EXIT                               => shift and goto state 158 (86.0, 86.1)
   FOR                                => shift and goto state 159 (100.0)
   IF                                 => shift and goto state 160 (98.0, 98.1, 98.2, 98.3)
   LOOP                               => shift and goto state 161 (102.1)
   RETURN                             => shift and goto state 162 (90.0, 128.0, 128.1)
   WHEN                               => reduce 0 tokens to sequence_of_statements_opt 126.1
   IDENTIFIER                         => shift and goto state 163 (63.0, 104.2)
   default                            => ERROR

   assignment_statement               goto state 164
   block_label_opt                    goto state 165
   block_statement                    goto state 166
   case_statement                     goto state 167
   compound_statement                 goto state 168
   exit_statement                     goto state 169
   extended_return_statement          goto state 170
   if_statement                       goto state 172
   iteration_scheme                   goto state 173
   loop_statement                     goto state 174
   name                               goto state 175
   procedure_call_statement           goto state 176
   selected_component                 goto state 16
   sequence_of_statements             goto state 177
   sequence_of_statements_opt         goto state 298
   simple_return_statement            goto state 179
   simple_statement                   goto state 180
   statement                          goto state 181

State 285:
    107.0:package_body <= PACKAGE BODY name aspect_specification_opt IS declarative_part_opt BEGIN handled_sequence_of_statements END name_opt SEMICOLON ^, BEGIN/END/FUNCTION/PACKAGE/PROCEDURE/TYPE/IDENTIFIER/Wisi_EOI

   BEGIN                              => reduce 11 tokens to package_body 107.0
   END                                => reduce 11 tokens to package_body 107.0
   FUNCTION                           => reduce 11 tokens to package_body 107.0
   PACKAGE                            => reduce 11 tokens to package_body 107.0
   PROCEDURE                          => reduce 11 tokens to package_body 107.0
   TYPE                               => reduce 11 tokens to package_body 107.0
   IDENTIFIER                         => reduce 11 tokens to package_body 107.0
   Wisi_EOI                           => reduce 11 tokens to package_body 107.0
   default                            => ERROR

State 286:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER ^ sequence_of_statements_opt, END/WHEN

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 157 (67.0)
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 126.1
   EXIT                               => shift and goto state 158 (86.0, 86.1)
   FOR                                => shift and goto state 159 (100.0)
   IF                                 => shift and goto state 160 (98.0, 98.1, 98.2, 98.3)
   LOOP                               => shift and goto state 161 (102.1)
   RETURN                             => shift and goto state 162 (90.0, 128.0, 128.1)
   WHEN                               => reduce 0 tokens to sequence_of_statements_opt 126.1
   IDENTIFIER                         => shift and goto state 163 (63.0, 104.2)
   default                            => ERROR

   assignment_statement               goto state 164
   block_label_opt                    goto state 165
   block_statement                    goto state 166
   case_statement                     goto state 167
   compound_statement                 goto state 168
   exit_statement                     goto state 169
   extended_return_statement          goto state 170
   if_statement                       goto state 172
   iteration_scheme                   goto state 173
   loop_statement                     goto state 174
   name                               goto state 175
   procedure_call_statement           goto state 176
   selected_component                 goto state 16
   sequence_of_statements             goto state 177
   sequence_of_statements_opt         goto state 299
   simple_return_statement            goto state 179
   simple_statement                   goto state 180
   statement                          goto state 181

State 287:
     67.0:case_statement <= CASE expression_opt IS case_statement_alternative_list END CASE ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => shift and goto state 300 (67.0)
   default                            => ERROR

State 288:
     98.1:if_statement <= IF expression_opt THEN sequence_of_statements_opt ELSE sequence_of_statements_opt ^ END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   END                                => shift and goto state 301 (98.1)
   default                            => ERROR

State 289:
     78.0:elsif_statement_item <= ELSIF expression_opt ^ THEN sequence_of_statements_opt, ELSE/ELSIF/END

   THEN                               => shift and goto state 302 (78.0)
   default                            => ERROR

State 290:
     98.3:if_statement <= IF expression_opt THEN sequence_of_statements_opt END IF ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => shift and goto state 303 (98.3)
   default                            => ERROR

State 291:
     98.0:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list ELSE ^ sequence_of_statements_opt END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 157 (67.0)
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 126.1
   EXIT                               => shift and goto state 158 (86.0, 86.1)
   FOR                                => shift and goto state 159 (100.0)
   IF                                 => shift and goto state 160 (98.0, 98.1, 98.2, 98.3)
   LOOP                               => shift and goto state 161 (102.1)
   RETURN                             => shift and goto state 162 (90.0, 128.0, 128.1)
   IDENTIFIER                         => shift and goto state 163 (63.0, 104.2)
   default                            => ERROR

   assignment_statement               goto state 164
   block_label_opt                    goto state 165
   block_statement                    goto state 166
   case_statement                     goto state 167
   compound_statement                 goto state 168
   exit_statement                     goto state 169
   extended_return_statement          goto state 170
   if_statement                       goto state 172
   iteration_scheme                   goto state 173
   loop_statement                     goto state 174
   name                               goto state 175
   procedure_call_statement           goto state 176
   selected_component                 goto state 16
   sequence_of_statements             goto state 177
   sequence_of_statements_opt         goto state 304
   simple_return_statement            goto state 179
   simple_statement                   goto state 180
   statement                          goto state 181

State 292:
     98.2:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list END ^ IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   IF                                 => shift and goto state 305 (98.2)
   default                            => ERROR

State 293:
     79.0:elsif_statement_list <= elsif_statement_list elsif_statement_item ^, ELSE/ELSIF/END

   ELSE                               => reduce 2 tokens to elsif_statement_list 79.0
   ELSIF                              => reduce 2 tokens to elsif_statement_list 79.0
   END                                => reduce 2 tokens to elsif_statement_list 79.0
   default                            => ERROR

State 294:
    102.1:loop_statement <= LOOP sequence_of_statements_opt END LOOP identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 6 tokens to loop_statement 102.1
   CASE                               => reduce 6 tokens to loop_statement 102.1
   DECLARE                            => reduce 6 tokens to loop_statement 102.1
   ELSE                               => reduce 6 tokens to loop_statement 102.1
   ELSIF                              => reduce 6 tokens to loop_statement 102.1
   END                                => reduce 6 tokens to loop_statement 102.1
   EXIT                               => reduce 6 tokens to loop_statement 102.1
   EXCEPTION                          => reduce 6 tokens to loop_statement 102.1
   FOR                                => reduce 6 tokens to loop_statement 102.1
   IF                                 => reduce 6 tokens to loop_statement 102.1
   LOOP                               => reduce 6 tokens to loop_statement 102.1
   RETURN                             => reduce 6 tokens to loop_statement 102.1
   WHEN                               => reduce 6 tokens to loop_statement 102.1
   IDENTIFIER                         => reduce 6 tokens to loop_statement 102.1
   default                            => ERROR

State 295:
     64.1:block_statement <= block_label_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 6 tokens to block_statement 64.1
   CASE                               => reduce 6 tokens to block_statement 64.1
   DECLARE                            => reduce 6 tokens to block_statement 64.1
   ELSE                               => reduce 6 tokens to block_statement 64.1
   ELSIF                              => reduce 6 tokens to block_statement 64.1
   END                                => reduce 6 tokens to block_statement 64.1
   EXIT                               => reduce 6 tokens to block_statement 64.1
   EXCEPTION                          => reduce 6 tokens to block_statement 64.1
   FOR                                => reduce 6 tokens to block_statement 64.1
   IF                                 => reduce 6 tokens to block_statement 64.1
   LOOP                               => reduce 6 tokens to block_statement 64.1
   RETURN                             => reduce 6 tokens to block_statement 64.1
   WHEN                               => reduce 6 tokens to block_statement 64.1
   IDENTIFIER                         => reduce 6 tokens to block_statement 64.1
   default                            => ERROR

State 296:
     64.0:block_statement <= block_label_opt DECLARE declarative_part_opt BEGIN handled_sequence_of_statements END ^ identifier_opt SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => reduce 0 tokens to identifier_opt 97.1
   IDENTIFIER                         => shift and goto state 196 (97.0)
   default                            => ERROR

   identifier_opt                     goto state 306

State 297:
    102.0:loop_statement <= iteration_scheme LOOP sequence_of_statements_opt END LOOP identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => shift and goto state 307 (102.0)
   default                            => ERROR

State 298:
     83.0:exception_handler <= WHEN exception_choice EQUAL_GREATER sequence_of_statements_opt ^, END/WHEN

   END                                => reduce 4 tokens to exception_handler 83.0
   WHEN                               => reduce 4 tokens to exception_handler 83.0
   default                            => ERROR

State 299:
     68.0:case_statement_alternative <= WHEN NUMERIC_LITERAL EQUAL_GREATER sequence_of_statements_opt ^, END/WHEN

   END                                => reduce 4 tokens to case_statement_alternative 68.0
   WHEN                               => reduce 4 tokens to case_statement_alternative 68.0
   default                            => ERROR

State 300:
     67.0:case_statement <= CASE expression_opt IS case_statement_alternative_list END CASE SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 7 tokens to case_statement 67.0
   CASE                               => reduce 7 tokens to case_statement 67.0
   DECLARE                            => reduce 7 tokens to case_statement 67.0
   ELSE                               => reduce 7 tokens to case_statement 67.0
   ELSIF                              => reduce 7 tokens to case_statement 67.0
   END                                => reduce 7 tokens to case_statement 67.0
   EXIT                               => reduce 7 tokens to case_statement 67.0
   EXCEPTION                          => reduce 7 tokens to case_statement 67.0
   FOR                                => reduce 7 tokens to case_statement 67.0
   IF                                 => reduce 7 tokens to case_statement 67.0
   LOOP                               => reduce 7 tokens to case_statement 67.0
   RETURN                             => reduce 7 tokens to case_statement 67.0
   WHEN                               => reduce 7 tokens to case_statement 67.0
   IDENTIFIER                         => reduce 7 tokens to case_statement 67.0
   default                            => ERROR

State 301:
     98.1:if_statement <= IF expression_opt THEN sequence_of_statements_opt ELSE sequence_of_statements_opt END ^ IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   IF                                 => shift and goto state 308 (98.1)
   default                            => ERROR

State 302:
     78.0:elsif_statement_item <= ELSIF expression_opt THEN ^ sequence_of_statements_opt, ELSE/ELSIF/END

   BEGIN                              => reduce 0 tokens to block_label_opt 63.1
   CASE                               => shift and goto state 157 (67.0)
   DECLARE                            => reduce 0 tokens to block_label_opt 63.1
   ELSE                               => reduce 0 tokens to sequence_of_statements_opt 126.1
   ELSIF                              => reduce 0 tokens to sequence_of_statements_opt 126.1
   END                                => reduce 0 tokens to sequence_of_statements_opt 126.1
   EXIT                               => shift and goto state 158 (86.0, 86.1)
   FOR                                => shift and goto state 159 (100.0)
   IF                                 => shift and goto state 160 (98.0, 98.1, 98.2, 98.3)
   LOOP                               => shift and goto state 161 (102.1)
   RETURN                             => shift and goto state 162 (90.0, 128.0, 128.1)
   IDENTIFIER                         => shift and goto state 163 (63.0, 104.2)
   default                            => ERROR

   assignment_statement               goto state 164
   block_label_opt                    goto state 165
   block_statement                    goto state 166
   case_statement                     goto state 167
   compound_statement                 goto state 168
   exit_statement                     goto state 169
   extended_return_statement          goto state 170
   if_statement                       goto state 172
   iteration_scheme                   goto state 173
   loop_statement                     goto state 174
   name                               goto state 175
   procedure_call_statement           goto state 176
   selected_component                 goto state 16
   sequence_of_statements             goto state 177
   sequence_of_statements_opt         goto state 309
   simple_return_statement            goto state 179
   simple_statement                   goto state 180
   statement                          goto state 181

State 303:
     98.3:if_statement <= IF expression_opt THEN sequence_of_statements_opt END IF SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 7 tokens to if_statement 98.3
   CASE                               => reduce 7 tokens to if_statement 98.3
   DECLARE                            => reduce 7 tokens to if_statement 98.3
   ELSE                               => reduce 7 tokens to if_statement 98.3
   ELSIF                              => reduce 7 tokens to if_statement 98.3
   END                                => reduce 7 tokens to if_statement 98.3
   EXIT                               => reduce 7 tokens to if_statement 98.3
   EXCEPTION                          => reduce 7 tokens to if_statement 98.3
   FOR                                => reduce 7 tokens to if_statement 98.3
   IF                                 => reduce 7 tokens to if_statement 98.3
   LOOP                               => reduce 7 tokens to if_statement 98.3
   RETURN                             => reduce 7 tokens to if_statement 98.3
   WHEN                               => reduce 7 tokens to if_statement 98.3
   IDENTIFIER                         => reduce 7 tokens to if_statement 98.3
   default                            => ERROR

State 304:
     98.0:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list ELSE sequence_of_statements_opt ^ END IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   END                                => shift and goto state 310 (98.0)
   default                            => ERROR

State 305:
     98.2:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list END IF ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => shift and goto state 311 (98.2)
   default                            => ERROR

State 306:
     64.0:block_statement <= block_label_opt DECLARE declarative_part_opt BEGIN handled_sequence_of_statements END identifier_opt ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => shift and goto state 312 (64.0)
   default                            => ERROR

State 307:
    102.0:loop_statement <= iteration_scheme LOOP sequence_of_statements_opt END LOOP identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 7 tokens to loop_statement 102.0
   CASE                               => reduce 7 tokens to loop_statement 102.0
   DECLARE                            => reduce 7 tokens to loop_statement 102.0
   ELSE                               => reduce 7 tokens to loop_statement 102.0
   ELSIF                              => reduce 7 tokens to loop_statement 102.0
   END                                => reduce 7 tokens to loop_statement 102.0
   EXIT                               => reduce 7 tokens to loop_statement 102.0
   EXCEPTION                          => reduce 7 tokens to loop_statement 102.0
   FOR                                => reduce 7 tokens to loop_statement 102.0
   IF                                 => reduce 7 tokens to loop_statement 102.0
   LOOP                               => reduce 7 tokens to loop_statement 102.0
   RETURN                             => reduce 7 tokens to loop_statement 102.0
   WHEN                               => reduce 7 tokens to loop_statement 102.0
   IDENTIFIER                         => reduce 7 tokens to loop_statement 102.0
   default                            => ERROR

State 308:
     98.1:if_statement <= IF expression_opt THEN sequence_of_statements_opt ELSE sequence_of_statements_opt END IF ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => shift and goto state 313 (98.1)
   default                            => ERROR

State 309:
     78.0:elsif_statement_item <= ELSIF expression_opt THEN sequence_of_statements_opt ^, ELSE/ELSIF/END

   ELSE                               => reduce 4 tokens to elsif_statement_item 78.0
   ELSIF                              => reduce 4 tokens to elsif_statement_item 78.0
   END                                => reduce 4 tokens to elsif_statement_item 78.0
   default                            => ERROR

State 310:
     98.0:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list ELSE sequence_of_statements_opt END ^ IF SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   IF                                 => shift and goto state 314 (98.0)
   default                            => ERROR

State 311:
     98.2:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list END IF SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 8 tokens to if_statement 98.2
   CASE                               => reduce 8 tokens to if_statement 98.2
   DECLARE                            => reduce 8 tokens to if_statement 98.2
   ELSE                               => reduce 8 tokens to if_statement 98.2
   ELSIF                              => reduce 8 tokens to if_statement 98.2
   END                                => reduce 8 tokens to if_statement 98.2
   EXIT                               => reduce 8 tokens to if_statement 98.2
   EXCEPTION                          => reduce 8 tokens to if_statement 98.2
   FOR                                => reduce 8 tokens to if_statement 98.2
   IF                                 => reduce 8 tokens to if_statement 98.2
   LOOP                               => reduce 8 tokens to if_statement 98.2
   RETURN                             => reduce 8 tokens to if_statement 98.2
   WHEN                               => reduce 8 tokens to if_statement 98.2
   IDENTIFIER                         => reduce 8 tokens to if_statement 98.2
   default                            => ERROR

State 312:
     64.0:block_statement <= block_label_opt DECLARE declarative_part_opt BEGIN handled_sequence_of_statements END identifier_opt SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 8 tokens to block_statement 64.0
   CASE                               => reduce 8 tokens to block_statement 64.0
   DECLARE                            => reduce 8 tokens to block_statement 64.0
   ELSE                               => reduce 8 tokens to block_statement 64.0
   ELSIF                              => reduce 8 tokens to block_statement 64.0
   END                                => reduce 8 tokens to block_statement 64.0
   EXIT                               => reduce 8 tokens to block_statement 64.0
   EXCEPTION                          => reduce 8 tokens to block_statement 64.0
   FOR                                => reduce 8 tokens to block_statement 64.0
   IF                                 => reduce 8 tokens to block_statement 64.0
   LOOP                               => reduce 8 tokens to block_statement 64.0
   RETURN                             => reduce 8 tokens to block_statement 64.0
   WHEN                               => reduce 8 tokens to block_statement 64.0
   IDENTIFIER                         => reduce 8 tokens to block_statement 64.0
   default                            => ERROR

State 313:
     98.1:if_statement <= IF expression_opt THEN sequence_of_statements_opt ELSE sequence_of_statements_opt END IF SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 9 tokens to if_statement 98.1
   CASE                               => reduce 9 tokens to if_statement 98.1
   DECLARE                            => reduce 9 tokens to if_statement 98.1
   ELSE                               => reduce 9 tokens to if_statement 98.1
   ELSIF                              => reduce 9 tokens to if_statement 98.1
   END                                => reduce 9 tokens to if_statement 98.1
   EXIT                               => reduce 9 tokens to if_statement 98.1
   EXCEPTION                          => reduce 9 tokens to if_statement 98.1
   FOR                                => reduce 9 tokens to if_statement 98.1
   IF                                 => reduce 9 tokens to if_statement 98.1
   LOOP                               => reduce 9 tokens to if_statement 98.1
   RETURN                             => reduce 9 tokens to if_statement 98.1
   WHEN                               => reduce 9 tokens to if_statement 98.1
   IDENTIFIER                         => reduce 9 tokens to if_statement 98.1
   default                            => ERROR

State 314:
     98.0:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list ELSE sequence_of_statements_opt END IF ^ SEMICOLON, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   SEMICOLON                          => shift and goto state 315 (98.0)
   default                            => ERROR

State 315:
     98.0:if_statement <= IF expression_opt THEN sequence_of_statements_opt elsif_statement_list ELSE sequence_of_statements_opt END IF SEMICOLON ^, BEGIN/CASE/DECLARE/ELSE/ELSIF/END/EXIT/EXCEPTION/FOR/IF/LOOP/RETURN/WHEN/IDENTIFIER

   BEGIN                              => reduce 10 tokens to if_statement 98.0
   CASE                               => reduce 10 tokens to if_statement 98.0
   DECLARE                            => reduce 10 tokens to if_statement 98.0
   ELSE                               => reduce 10 tokens to if_statement 98.0
   ELSIF                              => reduce 10 tokens to if_statement 98.0
   END                                => reduce 10 tokens to if_statement 98.0
   EXIT                               => reduce 10 tokens to if_statement 98.0
   EXCEPTION                          => reduce 10 tokens to if_statement 98.0
   FOR                                => reduce 10 tokens to if_statement 98.0
   IF                                 => reduce 10 tokens to if_statement 98.0
   LOOP                               => reduce 10 tokens to if_statement 98.0
   RETURN                             => reduce 10 tokens to if_statement 98.0
   WHEN                               => reduce 10 tokens to if_statement 98.0
   IDENTIFIER                         => reduce 10 tokens to if_statement 98.0
   default                            => ERROR

McKenzie:
(Insert =>
 AND             => 4,
 BEGIN           => 3,
 BODY            => 4,
 CASE            => 3,
 DECLARE         => 3,
 ELSE            => 3,
 ELSIF           => 3,
 END             => 1,
 EXIT            => 3,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 3,
 IF              => 2,
 IN              => 4,
 IS              => 3,
 LEFT_PAREN      => 4,
 LOOP            => 2,
 NEW             => 3,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 3,
 RANGE           => 4,
 RETURN          => 3,
 RIGHT_PAREN     => 3,
 SEPARATE        => 4,
 THEN            => 3,
 TYPE            => 4,
 WHEN            => 3,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 1,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 4,
 NUMERIC_LITERAL => 4,
 IDENTIFIER      => 3,
 Wisi_EOI        => 4,
 wisitoken_accept                   => 4,
 actual_parameter_part              => 4,
 aspect_specification_opt           => 4,
 assignment_statement               => 4,
 association_opt                    => 4,
 association_list                   => 4,
 binary_adding_operator             => 4,
 block_label_opt                    => 4,
 block_statement                    => 4,
 body_g                             => 4,
 body_stub                          => 4,
 case_statement                     => 4,
 case_statement_alternative         => 4,
 case_statement_alternative_list    => 4,
 compilation_unit                   => 4,
 compilation_unit_list              => 4,
 compound_statement                 => 4,
 constraint                         => 4,
 declaration                        => 4,
 declarations                       => 4,
 declarative_part_opt               => 4,
 discrete_subtype_definition        => 4,
 elsif_statement_item               => 4,
 elsif_statement_list               => 4,
 enumeration_literal_list           => 4,
 enumeration_type_definition        => 4,
 exception_choice                   => 4,
 exception_handler                  => 4,
 exception_handler_list             => 4,
 exception_handler_list_opt         => 4,
 exit_statement                     => 4,
 expression                         => 4,
 expression_opt                     => 4,
 extended_return_object_declaration => 4,
 extended_return_statement          => 4,
 factor                             => 4,
 formal_part                        => 4,
 full_type_declaration              => 4,
 function_specification             => 4,
 generic_instantiation              => 4,
 handled_sequence_of_statements     => 4,
 identifier_opt                     => 4,
 if_statement                       => 4,
 index_constraint                   => 4,
 iteration_scheme                   => 4,
 library_item                       => 4,
 loop_statement                     => 4,
 multiplying_operator               => 4,
 name                               => 4,
 name_opt                           => 4,
 object_declaration                 => 4,
 package_body                       => 4,
 parameter_and_result_profile       => 4,
 parameter_profile_opt              => 4,
 parameter_specification            => 4,
 parameter_specification_list       => 4,
 paren_expression                   => 4,
 primary                            => 4,
 procedure_call_statement           => 4,
 procedure_specification            => 4,
 proper_body                        => 4,
 range_g                            => 4,
 range_list                         => 4,
 relation_and_list                  => 4,
 relation_or_list                   => 4,
 relation_xor_list                  => 4,
 relation                           => 4,
 relational_operator                => 4,
 selected_component                 => 4,
 sequence_of_statements             => 4,
 sequence_of_statements_opt         => 4,
 simple_expression                  => 4,
 simple_return_statement            => 4,
 simple_statement                   => 4,
 statement                          => 4,
 subprogram_body                    => 4,
 subprogram_body_stub               => 4,
 subprogram_declaration             => 4,
 subprogram_specification           => 4,
 subtype_indication                 => 4,
 term                               => 4,
 term_list                          => 4,
 type_declaration                   => 4,
 type_definition                    => 4,
 unary_adding_operator              => 4)
(Delete =>
 AND             => 4,
 BEGIN           => 1,
 BODY            => 4,
 CASE            => 4,
 DECLARE         => 4,
 ELSE            => 4,
 ELSIF           => 4,
 END             => 1,
 EXIT            => 4,
 EXCEPTION       => 4,
 FOR             => 4,
 FUNCTION        => 4,
 IF              => 4,
 IN              => 4,
 IS              => 4,
 LEFT_PAREN      => 4,
 LOOP            => 4,
 NEW             => 4,
 NOT             => 4,
 OR              => 4,
 PACKAGE         => 4,
 PROCEDURE       => 4,
 RANGE           => 4,
 RETURN          => 4,
 RIGHT_PAREN     => 4,
 SEPARATE        => 4,
 THEN            => 4,
 TYPE            => 4,
 WHEN            => 4,
 WITH            => 4,
 XOR             => 4,
 AMPERSAND       => 4,
 COLON           => 4,
 COLON_EQUAL     => 4,
 COMMA           => 4,
 DOT             => 4,
 DOT_DOT         => 4,
 EQUAL           => 4,
 EQUAL_GREATER   => 4,
 GREATER         => 4,
 GREATER_EQUAL   => 4,
 LESS            => 4,
 LESS_EQUAL      => 4,
 MINUS           => 4,
 PLUS            => 4,
 SEMICOLON       => 4,
 SLASH           => 4,
 SLASH_EQUAL     => 4,
 STAR            => 4,
 STRING_LITERAL  => 2,
 NUMERIC_LITERAL => 4,
 IDENTIFIER      => 4,
 Wisi_EOI        => 4,
 wisitoken_accept                   => 8,
 actual_parameter_part              => 8,
 aspect_specification_opt           => 8,
 assignment_statement               => 8,
 association_opt                    => 8,
 association_list                   => 8,
 binary_adding_operator             => 8,
 block_label_opt                    => 8,
 block_statement                    => 8,
 body_g                             => 8,
 body_stub                          => 8,
 case_statement                     => 8,
 case_statement_alternative         => 8,
 case_statement_alternative_list    => 8,
 compilation_unit                   => 8,
 compilation_unit_list              => 8,
 compound_statement                 => 8,
 constraint                         => 8,
 declaration                        => 8,
 declarations                       => 8,
 declarative_part_opt               => 1,
 discrete_subtype_definition        => 8,
 elsif_statement_item               => 8,
 elsif_statement_list               => 8,
 enumeration_literal_list           => 8,
 enumeration_type_definition        => 8,
 exception_choice                   => 8,
 exception_handler                  => 8,
 exception_handler_list             => 8,
 exception_handler_list_opt         => 8,
 exit_statement                     => 8,
 expression                         => 8,
 expression_opt                     => 8,
 extended_return_object_declaration => 8,
 extended_return_statement          => 8,
 factor                             => 8,
 formal_part                        => 8,
 full_type_declaration              => 8,
 function_specification             => 8,
 generic_instantiation              => 8,
 handled_sequence_of_statements     => 8,
 identifier_opt                     => 8,
 if_statement                       => 8,
 index_constraint                   => 8,
 iteration_scheme                   => 8,
 library_item                       => 8,
 loop_statement                     => 8,
 multiplying_operator               => 8,
 name                               => 8,
 name_opt                           => 8,
 object_declaration                 => 8,
 package_body                       => 8,
 parameter_and_result_profile       => 8,
 parameter_profile_opt              => 8,
 parameter_specification            => 8,
 parameter_specification_list       => 8,
 paren_expression                   => 8,
 primary                            => 8,
 procedure_call_statement           => 8,
 procedure_specification            => 8,
 proper_body                        => 8,
 range_g                            => 8,
 range_list                         => 8,
 relation_and_list                  => 8,
 relation_or_list                   => 8,
 relation_xor_list                  => 8,
 relation                           => 8,
 relational_operator                => 8,
 selected_component                 => 8,
 sequence_of_statements             => 8,
 sequence_of_statements_opt         => 8,
 simple_expression                  => 8,
 simple_return_statement            => 8,
 simple_statement                   => 8,
 statement                          => 8,
 subprogram_body                    => 8,
 subprogram_body_stub               => 8,
 subprogram_declaration             => 8,
 subprogram_specification           => 8,
 subtype_indication                 => 8,
 term                               => 8,
 term_list                          => 8,
 type_declaration                   => 8,
 type_definition                    => 8,
 unary_adding_operator              => 8)
Cost_Limit => 10


Minimal_Terminal_Sequences:
wisitoken_accept => (PROCEDURE, IDENTIFIER, SEMICOLON, Wisi_EOI)
actual_parameter_part => (LEFT_PAREN, RIGHT_PAREN)
aspect_specification_opt => ()
assignment_statement => (IDENTIFIER, COLON_EQUAL, SEMICOLON)
association_opt => ()
association_list => ()
binary_adding_operator => (AMPERSAND)
block_label_opt => ()
block_statement => (BEGIN, END, SEMICOLON)
body_g => (PROCEDURE, IDENTIFIER, IS, SEPARATE, SEMICOLON)
body_stub => (PROCEDURE, IDENTIFIER, IS, SEPARATE, SEMICOLON)
case_statement => (CASE, IS, WHEN, NUMERIC_LITERAL, EQUAL_GREATER, END, CASE, SEMICOLON)
case_statement_alternative => (WHEN, NUMERIC_LITERAL, EQUAL_GREATER)
case_statement_alternative_list => (WHEN, NUMERIC_LITERAL, EQUAL_GREATER)
compilation_unit => (PROCEDURE, IDENTIFIER, SEMICOLON)
compilation_unit_list => (PROCEDURE, IDENTIFIER, SEMICOLON)
compound_statement => (RETURN, IDENTIFIER, COLON, IDENTIFIER, SEMICOLON)
constraint => (RANGE, IDENTIFIER, DOT_DOT, IDENTIFIER)
declaration => (PROCEDURE, IDENTIFIER, SEMICOLON)
declarations => (PROCEDURE, IDENTIFIER, SEMICOLON)
declarative_part_opt => ()
discrete_subtype_definition => (IDENTIFIER, DOT_DOT, IDENTIFIER)
elsif_statement_item => (ELSIF, THEN)
elsif_statement_list => (ELSIF, THEN)
enumeration_literal_list => (IDENTIFIER)
enumeration_type_definition => (LEFT_PAREN, IDENTIFIER, RIGHT_PAREN)
exception_choice => (IDENTIFIER)
exception_handler => (WHEN, IDENTIFIER, EQUAL_GREATER)
exception_handler_list => (WHEN, IDENTIFIER, EQUAL_GREATER)
exception_handler_list_opt => ()
exit_statement => (EXIT, SEMICOLON)
expression => (IDENTIFIER)
expression_opt => ()
extended_return_object_declaration => (IDENTIFIER, COLON, IDENTIFIER)
extended_return_statement => (RETURN, IDENTIFIER, COLON, IDENTIFIER, SEMICOLON)
factor => (IDENTIFIER)
formal_part => (LEFT_PAREN, RIGHT_PAREN)
full_type_declaration => (TYPE, IDENTIFIER, IS, LEFT_PAREN, IDENTIFIER, RIGHT_PAREN, SEMICOLON)
function_specification => (FUNCTION, IDENTIFIER, RETURN, IDENTIFIER)
generic_instantiation => (PROCEDURE, IDENTIFIER, IS, NEW, IDENTIFIER, SEMICOLON)
handled_sequence_of_statements => ()
identifier_opt => ()
if_statement => (IF, THEN, END, IF, SEMICOLON)
index_constraint => (LEFT_PAREN, IDENTIFIER, DOT_DOT, IDENTIFIER, RIGHT_PAREN)
iteration_scheme => (FOR, IDENTIFIER, IN, IDENTIFIER, DOT_DOT, IDENTIFIER)
library_item => (PROCEDURE, IDENTIFIER, SEMICOLON)
loop_statement => (LOOP, END, LOOP, SEMICOLON)
multiplying_operator => (SLASH)
name => (IDENTIFIER)
name_opt => ()
object_declaration => (IDENTIFIER, COLON, IDENTIFIER, SEMICOLON)
package_body => (PACKAGE, BODY, IDENTIFIER, IS, END, SEMICOLON)
parameter_and_result_profile => (RETURN, IDENTIFIER)
parameter_profile_opt => ()
parameter_specification => ()
parameter_specification_list => ()
paren_expression => (LEFT_PAREN, RIGHT_PAREN)
primary => (IDENTIFIER)
procedure_call_statement => (IDENTIFIER, SEMICOLON)
procedure_specification => (PROCEDURE, IDENTIFIER)
proper_body => (PROCEDURE, IDENTIFIER, IS, BEGIN, END, SEMICOLON)
range_g => (IDENTIFIER, DOT_DOT, IDENTIFIER)
range_list => (IDENTIFIER, DOT_DOT, IDENTIFIER)
relation_and_list => (IDENTIFIER, AND, IDENTIFIER)
relation_or_list => (IDENTIFIER, OR, IDENTIFIER)
relation_xor_list => (IDENTIFIER, XOR, IDENTIFIER)
relation => (IDENTIFIER)
relational_operator => (GREATER_EQUAL)
selected_component => (IDENTIFIER, DOT, IDENTIFIER)
sequence_of_statements => (RETURN, SEMICOLON)
sequence_of_statements_opt => ()
simple_expression => (IDENTIFIER)
simple_return_statement => (RETURN, SEMICOLON)
simple_statement => (RETURN, SEMICOLON)
statement => (RETURN, SEMICOLON)
subprogram_body => (PROCEDURE, IDENTIFIER, IS, BEGIN, END, SEMICOLON)
subprogram_body_stub => (PROCEDURE, IDENTIFIER, IS, SEPARATE, SEMICOLON)
subprogram_declaration => (PROCEDURE, IDENTIFIER, SEMICOLON)
subprogram_specification => (PROCEDURE, IDENTIFIER)
subtype_indication => (IDENTIFIER)
term => (IDENTIFIER)
term_list => (IDENTIFIER)
type_declaration => (TYPE, IDENTIFIER, IS, LEFT_PAREN, IDENTIFIER, RIGHT_PAREN, SEMICOLON)
type_definition => (LEFT_PAREN, IDENTIFIER, RIGHT_PAREN)
unary_adding_operator => (MINUS)

 84 rules, 1 user actions, 15 checks, 316 states, 2309 parse actions
 0 accept/reduce conflicts, 3 shift/reduce conflicts, 3 reduce/reduce conflicts
