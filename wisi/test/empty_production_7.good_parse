 1 stack:  1 : , 
 1: 1: (IDENTIFIER 1 . 7) : shift and goto state 2
 1 stack:  2 : (IDENTIFIER 1 . 7),  1 : , 
 1: 2: (SEMICOLON 8 . 8) : reduce 0 tokens to aliased_opt
 ... goto state 8
 1 stack:  8 : (aliased_opt),  2 : (IDENTIFIER 1 . 7),  1 : , 
 1: 8: (SEMICOLON 8 . 8) : reduce 0 tokens to constant_opt
 ... goto state 10
 1 stack:  10 : (constant_opt),  8 : (aliased_opt),  2 : (IDENTIFIER 1 . 7),  1 : , 
 1: 10: (SEMICOLON 8 . 8) : shift and goto state 11
 1 stack:  11 : (SEMICOLON 8 . 8),  10 : (constant_opt),  8 : (aliased_opt),  2 : (IDENTIFIER 1 . 7),  1 : , 
 1: 11: (IDENTIFIER 10 . 16) : reduce 4 tokens to object_declaration
 ... goto state 4
 1 stack:  4 : (object_declaration 1 . 8),  1 : , 
 1: 4: (IDENTIFIER 10 . 16) : reduce 1 tokens to object_declaration_list
(let ((wisi-tokens '((object_declaration 1 . 8))))
(setq wisi-test-success t)
)
 ... goto state 3
 1 stack:  3 : (object_declaration_list 1 . 8),  1 : , 
 1: 3: (IDENTIFIER 10 . 16) : shift and goto state 2
 1 stack:  2 : (IDENTIFIER 10 . 16),  3 : (object_declaration_list 1 . 8),  1 : , 
 1: 2: (CONSTANT 18 . 25) : reduce 0 tokens to aliased_opt
 ... goto state 8
 1 stack:  8 : (aliased_opt),  2 : (IDENTIFIER 10 . 16),  3 : (object_declaration_list 1 . 8),  1 : , 
 1: 8: (CONSTANT 18 . 25) : shift and goto state 9
 1 stack:  9 : (CONSTANT 18 . 25),  8 : (aliased_opt),  2 : (IDENTIFIER 10 . 16),  3 : (object_declaration_list 1 . 8),  1 : , 
 1: 9: (SEMICOLON 26 . 26) : reduce 1 tokens to constant_opt
 ... goto state 10
 1 stack:  10 : (constant_opt 18 . 25),  8 : (aliased_opt),  2 : (IDENTIFIER 10 . 16),  3 : (object_declaration_list 1 . 8),  1 : , 
 1: 10: (SEMICOLON 26 . 26) : shift and goto state 11
 1 stack:  11 : (SEMICOLON 26 . 26),  10 : (constant_opt 18 . 25),  8 : (aliased_opt),  2 : (IDENTIFIER 10 . 16),  3 : (object_declaration_list 1 . 8),  1 : , 
 1: 11: (IDENTIFIER 28 . 34) : reduce 4 tokens to object_declaration
 ... goto state 6
 1 stack:  6 : (object_declaration 10 . 26),  3 : (object_declaration_list 1 . 8),  1 : , 
 1: 6: (IDENTIFIER 28 . 34) : reduce 2 tokens to object_declaration_list
(let ((wisi-tokens '((object_declaration_list 1 . 8) (object_declaration 10 . 26))))
(setq wisi-test-success t)
)
 ... goto state 3
 1 stack:  3 : (object_declaration_list 1 . 26),  1 : , 
 1: 3: (IDENTIFIER 28 . 34) : shift and goto state 2
 1 stack:  2 : (IDENTIFIER 28 . 34),  3 : (object_declaration_list 1 . 26),  1 : , 
 1: 2: (ALIASED 36 . 42) : shift and goto state 7
 1 stack:  7 : (ALIASED 36 . 42),  2 : (IDENTIFIER 28 . 34),  3 : (object_declaration_list 1 . 26),  1 : , 
 1: 7: (SEMICOLON 43 . 43) : reduce 1 tokens to aliased_opt
 ... goto state 8
 1 stack:  8 : (aliased_opt 36 . 42),  2 : (IDENTIFIER 28 . 34),  3 : (object_declaration_list 1 . 26),  1 : , 
 1: 8: (SEMICOLON 43 . 43) : reduce 0 tokens to constant_opt
 ... goto state 10
 1 stack:  10 : (constant_opt),  8 : (aliased_opt 36 . 42),  2 : (IDENTIFIER 28 . 34),  3 : (object_declaration_list 1 . 26),  1 : , 
 1: 10: (SEMICOLON 43 . 43) : shift and goto state 11
 1 stack:  11 : (SEMICOLON 43 . 43),  10 : (constant_opt),  8 : (aliased_opt 36 . 42),  2 : (IDENTIFIER 28 . 34),  3 : (object_declaration_list 1 . 26),  1 : , 
 1: 11: (IDENTIFIER 45 . 51) : reduce 4 tokens to object_declaration
 ... goto state 6
 1 stack:  6 : (object_declaration 28 . 43),  3 : (object_declaration_list 1 . 26),  1 : , 
 1: 6: (IDENTIFIER 45 . 51) : reduce 2 tokens to object_declaration_list
(let ((wisi-tokens '((object_declaration_list 1 . 26) (object_declaration 28 . 43))))
(setq wisi-test-success t)
)
 ... goto state 3
 1 stack:  3 : (object_declaration_list 1 . 43),  1 : , 
 1: 3: (IDENTIFIER 45 . 51) : shift and goto state 2
 1 stack:  2 : (IDENTIFIER 45 . 51),  3 : (object_declaration_list 1 . 43),  1 : , 
 1: 2: (ALIASED 53 . 59) : shift and goto state 7
 1 stack:  7 : (ALIASED 53 . 59),  2 : (IDENTIFIER 45 . 51),  3 : (object_declaration_list 1 . 43),  1 : , 
 1: 7: (CONSTANT 61 . 68) : reduce 1 tokens to aliased_opt
 ... goto state 8
 1 stack:  8 : (aliased_opt 53 . 59),  2 : (IDENTIFIER 45 . 51),  3 : (object_declaration_list 1 . 43),  1 : , 
 1: 8: (CONSTANT 61 . 68) : shift and goto state 9
 1 stack:  9 : (CONSTANT 61 . 68),  8 : (aliased_opt 53 . 59),  2 : (IDENTIFIER 45 . 51),  3 : (object_declaration_list 1 . 43),  1 : , 
 1: 9: (SEMICOLON 69 . 69) : reduce 1 tokens to constant_opt
 ... goto state 10
 1 stack:  10 : (constant_opt 61 . 68),  8 : (aliased_opt 53 . 59),  2 : (IDENTIFIER 45 . 51),  3 : (object_declaration_list 1 . 43),  1 : , 
 1: 10: (SEMICOLON 69 . 69) : shift and goto state 11
 1 stack:  11 : (SEMICOLON 69 . 69),  10 : (constant_opt 61 . 68),  8 : (aliased_opt 53 . 59),  2 : (IDENTIFIER 45 . 51),  3 : (object_declaration_list 1 . 43),  1 : , 
 1: 11: (EOF_ID 70 . 70) : reduce 4 tokens to object_declaration
 ... goto state 6
 1 stack:  6 : (object_declaration 45 . 69),  3 : (object_declaration_list 1 . 43),  1 : , 
 1: 6: (EOF_ID 70 . 70) : reduce 2 tokens to object_declaration_list
(let ((wisi-tokens '((object_declaration_list 1 . 43) (object_declaration 45 . 69))))
(setq wisi-test-success t)
)
 ... goto state 3
 1 stack:  3 : (object_declaration_list 1 . 69),  1 : , 
 1: 3: (EOF_ID 70 . 70) : shift and goto state 5
 1 stack:  5 : (EOF_ID 70 . 70),  3 : (object_declaration_list 1 . 69),  1 : , 
 1: 5: (EOF_ID 71 . 71) : accept it
