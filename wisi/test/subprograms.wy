;; Wisent grammar matching ../../Test/trivial_productions_test.adb
;; Subprograms, to test that wisi-generate produces the same OpenToken
;; grammar.
;;
;; Also tests wisi rules parser

%{
(require 'wisi)
%}

%keyword FUNCTION "function"
%keyword LEFT_PAREN "("
%keyword PROCEDURE "procedure"
%keyword RIGHT_PAREN ")"

%token <symbol> SYMBOL

;; not actually needed in grammar, but <string>, <punctuation> required by wisi-setup
%token <punctuation> TICK "'"
%token <string> STRING_LITERAL

;; 'opentoken_accept', $EOI added in wisi-generate
%start compilation_unit

%%

compilation_unit
  : declarations
    (setq wisi-test-success t)
  ;

declarations
  : declaration
  | declarations declaration
  ;

declaration
  : subprogram
  ;

subprogram
  : FUNCTION parameter_list SYMBOL
    `,(wisi-statement-action
      1 'function
      2 'other) ;; overwrites 'open-paren, but not 'close-paren
  | PROCEDURE parameter_list
    (wisi-statement-tokens
     $1 'procedure $region1
     $2 'other $region2) ;; ignored if parameter_list is empty
  ;
  
;; not on one line, empty production with comment
parameter_list
  : LEFT_PAREN RIGHT_PAREN ;; c-like no parameters
    `,(wisi-statement-action 1 'open-paren 2 'close-paren)
  | ;; ada-like no parameters
  | LEFT_PAREN SYMBOL RIGHT_PAREN
    `,(wisi-statement-action 1 'open-paren 3 'close-paren)

  | TICK STRING_LITERAL ;; just to mention required tokens, so they are not unused
  ;

%%

;; end of file
