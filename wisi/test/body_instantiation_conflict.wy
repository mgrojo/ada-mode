;; small Ada-like grammar illustrating the shift/reduce conflict
;; between a procedure body and a generic procedure instantiation.
;;
;; Also tests wisi rules parser

%{
;; Copyright (C) 2013 Stephen Leake.  All Rights Reserved.

;; This program is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License as
;; published by the Free Software Foundation; either version 3, or (at
;; your option) any later version.
;;
;; This software is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.
%}

%keyword BEGIN "begin"
%keyword END "end"
%keyword IS "is"
%keyword LEFT_PAREN "("
%keyword NEW "new"
%keyword NULL "null"
%keyword PROCEDURE "procedure"
%keyword RIGHT_PAREN ")"

%token <punctuation> SEMICOLON ";"
%token <symbol> IDENTIFIER

;; not needed in grammar, but <string> required by wisi-setup
%token <string> STRING_LITERAL

%start compilation_unit

%conflict SHIFT/REDUCE in state generic_instantiation, parameter_list on token IS

%%

compilation_unit
  : library_item library_item
    (setq wisi-test-success t)
  ;

;; all on one line, no spaces before '|' ';'
library_item : subprogram_body|generic_instantiation;

subprogram_body
 ;; comment before : line
  : subprogram_specification IS BEGIN NULL END SEMICOLON
    `,(wisi-statement-action 1 'statement-start 6 'statement-end)
  ;

;; some on one line
subprogram_specification
  : PROCEDURE IDENTIFIER parameter_list  ;

;; all on one line, empty production
parameter_list : | LEFT_PAREN IDENTIFIER RIGHT_PAREN ;

generic_instantiation
  : PROCEDURE IDENTIFIER IS NEW IDENTIFIER LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON
    `,(wisi-statement-action 1 'statement-start 9 'statement-end)

  | STRING_LITERAL ;; mention unneeded token
  ;

%%

;;; end of file
