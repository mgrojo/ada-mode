Tokens:
 0 => WHITESPACE
 1 => BEGIN
 2 => END
 3 => COLON
 4 => COLON_EQUAL
 5 => SEMICOLON
 6 => IDENTIFIER
 7 => Wisi_EOI
 8 => wisitoken_accept
 9 => compilation_unit
 10 => statement
 11 => sequence_of_statements
 12 => label_opt

LALR Parse Table:
Minimal_Terminal_Sequences:
wisitoken_accept => (BEGIN, IDENTIFIER, COLON_EQUAL, IDENTIFIER, SEMICOLON, END, SEMICOLON, Wisi_EOI)
compilation_unit => (BEGIN, IDENTIFIER, COLON_EQUAL, IDENTIFIER, SEMICOLON, END, SEMICOLON)
statement => (IDENTIFIER, COLON_EQUAL, IDENTIFIER, SEMICOLON)
sequence_of_statements => (IDENTIFIER, COLON_EQUAL, IDENTIFIER, SEMICOLON)
label_opt => ()

Productions:
1: wisitoken_accept <= (compilation_unit, Wisi_EOI)
2: compilation_unit <= (BEGIN, sequence_of_statements, END, SEMICOLON)
3: statement <= (label_opt, IDENTIFIER, COLON_EQUAL, IDENTIFIER, SEMICOLON)
4: sequence_of_statements <= (statement)
5: sequence_of_statements <= (sequence_of_statements, statement)
6: label_opt <= ()
7: label_opt <= (IDENTIFIER, COLON)

State 1:
     1:wisitoken_accept <= ^ compilation_unit Wisi_EOI, 

   BEGIN                  => shift and goto state 2 (2)
   default                => ERROR

     1: compilation_unit       goto state 3

State 2:
     2:compilation_unit <= BEGIN ^ sequence_of_statements END SEMICOLON, Wisi_EOI

   IDENTIFIER             => shift and goto state 4 (7),
                             reduce 0 tokens to label_opt (6)
   default                => ERROR

     4: statement              goto state 5
     2: sequence_of_statements goto state 6
     3: label_opt              goto state 7

State 3:
     1:wisitoken_accept <= compilation_unit ^ Wisi_EOI, 

   Wisi_EOI               => accept it (1)
   default                => ERROR


State 4:
     7:label_opt <= IDENTIFIER ^ COLON, IDENTIFIER

   COLON                  => shift and goto state 11 (7)
   default                => ERROR


State 5:
     4:sequence_of_statements <= statement ^, END/IDENTIFIER

   END                    => reduce 1 tokens to sequence_of_statements (4)
   IDENTIFIER             => reduce 1 tokens to sequence_of_statements (4)
   default                => ERROR


State 6:
     2:compilation_unit <= BEGIN sequence_of_statements ^ END SEMICOLON, Wisi_EOI
     5:sequence_of_statements <= sequence_of_statements ^ statement, END/IDENTIFIER

   END                    => shift and goto state 9 (2)
   IDENTIFIER             => shift and goto state 4 (7),
                             reduce 0 tokens to label_opt (6)
   default                => ERROR

     5: statement              goto state 10
     3: label_opt              goto state 7

State 7:
     3:statement <= label_opt ^ IDENTIFIER COLON_EQUAL IDENTIFIER SEMICOLON, END/IDENTIFIER

   IDENTIFIER             => shift and goto state 8 (3)
   default                => ERROR


State 8:
     3:statement <= label_opt IDENTIFIER ^ COLON_EQUAL IDENTIFIER SEMICOLON, END/IDENTIFIER

   COLON_EQUAL            => shift and goto state 13 (3)
   default                => ERROR


State 9:
     2:compilation_unit <= BEGIN sequence_of_statements END ^ SEMICOLON, Wisi_EOI

   SEMICOLON              => shift and goto state 12 (2)
   default                => ERROR


State 10:
     5:sequence_of_statements <= sequence_of_statements statement ^, END/IDENTIFIER

   END                    => reduce 2 tokens to sequence_of_statements (5)
   IDENTIFIER             => reduce 2 tokens to sequence_of_statements (5)
   default                => ERROR


State 11:
     7:label_opt <= IDENTIFIER COLON ^, IDENTIFIER

   IDENTIFIER             => reduce 2 tokens to label_opt (7)
   default                => ERROR


State 12:
     2:compilation_unit <= BEGIN sequence_of_statements END SEMICOLON ^, Wisi_EOI

   Wisi_EOI               => reduce 4 tokens to compilation_unit (2)
   default                => ERROR


State 13:
     3:statement <= label_opt IDENTIFIER COLON_EQUAL ^ IDENTIFIER SEMICOLON, END/IDENTIFIER

   IDENTIFIER             => shift and goto state 14 (3)
   default                => ERROR


State 14:
     3:statement <= label_opt IDENTIFIER COLON_EQUAL IDENTIFIER ^ SEMICOLON, END/IDENTIFIER

   SEMICOLON              => shift and goto state 15 (3)
   default                => ERROR


State 15:
     3:statement <= label_opt IDENTIFIER COLON_EQUAL IDENTIFIER SEMICOLON ^, END/IDENTIFIER

   END                    => reduce 5 tokens to statement (3)
   IDENTIFIER             => reduce 5 tokens to statement (3)
   default                => ERROR


 4 rules, 0 actions, 0 checks, 15 states, 34 table entries
 0 accept/reduce conflicts, 2 shift/reduce conflicts, 0 reduce/reduce conflicts
