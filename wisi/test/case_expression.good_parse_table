Tokens:
 0 => WHITESPACE
 1 => COMMENT
 2 => RANGE
 3 => WHEN
 4 => DOT_DOT
 5 => EQUAL_GREATER
 6 => TICK
 7 => NUMBER_LITERAL
 8 => IDENTIFIER
 9 => Wisi_EOI
 10 => wisitoken_accept
 11 => case_expression
 12 => choice_expression
 13 => choice_relation
 14 => discrete_choice
 15 => factor
 16 => factor_list
 17 => range_nt

LALR Parse Table:
Terminal_Sequences:
wisitoken_accept => (WHEN, NUMBER_LITERAL, EQUAL_GREATER, NUMBER_LITERAL, Wisi_EOI)
case_expression => (WHEN, NUMBER_LITERAL, EQUAL_GREATER, NUMBER_LITERAL)
choice_expression => (NUMBER_LITERAL)
choice_relation => (NUMBER_LITERAL)
discrete_choice => (NUMBER_LITERAL)
factor => (NUMBER_LITERAL)
factor_list => (NUMBER_LITERAL)
range_nt => (NUMBER_LITERAL, DOT_DOT, NUMBER_LITERAL)

Productions:
1: wisitoken_accept <= (case_expression, Wisi_EOI)
2: case_expression <= (WHEN, discrete_choice, EQUAL_GREATER, factor)
3: choice_expression <= (choice_relation)
4: choice_relation <= (factor_list)
5: discrete_choice <= (choice_expression)
6: discrete_choice <= (range_nt)
7: factor <= (IDENTIFIER)
8: factor <= (NUMBER_LITERAL)
9: factor_list <= (factor)
10: range_nt <= (IDENTIFIER, TICK, RANGE)
11: range_nt <= (factor_list, DOT_DOT, factor_list)

State 0:
     1:wisitoken_accept <= ^ case_expression Wisi_EOI, 

   WHEN              => shift and goto state 1 (2)
   default           => ERROR

     1: case_expression   goto state 2

State 1:
     2:case_expression <= WHEN ^ discrete_choice EQUAL_GREATER factor, Wisi_EOI

   NUMBER_LITERAL    => shift and goto state 3 (8)
   IDENTIFIER        => shift and goto state 4 (7, 10)
   default           => ERROR

     5: choice_expression goto state 5
     3: choice_relation   goto state 6
     2: discrete_choice   goto state 7
     9: factor            goto state 8
     4: factor_list       goto state 9
     6: range_nt          goto state 10

State 2:
     1:wisitoken_accept <= case_expression ^ Wisi_EOI, 

   Wisi_EOI          => accept it (1)
   default           => ERROR


State 3:
     8:factor <= NUMBER_LITERAL ^, DOT_DOT/EQUAL_GREATER/Wisi_EOI

   DOT_DOT           => reduce 1 tokens to factor (8)
   EQUAL_GREATER     => reduce 1 tokens to factor (8)
   Wisi_EOI          => reduce 1 tokens to factor (8)
   default           => ERROR


State 4:
     7:factor <= IDENTIFIER ^, DOT_DOT/EQUAL_GREATER
    10:range_nt <= IDENTIFIER ^ TICK RANGE, EQUAL_GREATER

   DOT_DOT           => reduce 1 tokens to factor (7)
   EQUAL_GREATER     => reduce 1 tokens to factor (7)
   TICK              => shift and goto state 13 (10)
   default           => ERROR


State 5:
     5:discrete_choice <= choice_expression ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to discrete_choice (5)
   default           => ERROR


State 6:
     3:choice_expression <= choice_relation ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to choice_expression (3)
   default           => ERROR


State 7:
     2:case_expression <= WHEN discrete_choice ^ EQUAL_GREATER factor, Wisi_EOI

   EQUAL_GREATER     => shift and goto state 12 (2)
   default           => ERROR


State 8:
     9:factor_list <= factor ^, DOT_DOT/EQUAL_GREATER

   DOT_DOT           => reduce 1 tokens to factor_list (9)
   EQUAL_GREATER     => reduce 1 tokens to factor_list (9)
   default           => ERROR


State 9:
     4:choice_relation <= factor_list ^, EQUAL_GREATER
    11:range_nt <= factor_list ^ DOT_DOT factor_list, EQUAL_GREATER

   DOT_DOT           => shift and goto state 11 (11)
   EQUAL_GREATER     => reduce 1 tokens to choice_relation (4)
   default           => ERROR


State 10:
     6:discrete_choice <= range_nt ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to discrete_choice (6)
   default           => ERROR


State 11:
    11:range_nt <= factor_list DOT_DOT ^ factor_list, EQUAL_GREATER

   NUMBER_LITERAL    => shift and goto state 3 (8)
   IDENTIFIER        => shift and goto state 15 (7)
   default           => ERROR

     9: factor            goto state 8
    11: factor_list       goto state 17

State 12:
     2:case_expression <= WHEN discrete_choice EQUAL_GREATER ^ factor, Wisi_EOI

   NUMBER_LITERAL    => shift and goto state 3 (8)
   IDENTIFIER        => shift and goto state 15 (7)
   default           => ERROR

     2: factor            goto state 16

State 13:
    10:range_nt <= IDENTIFIER TICK ^ RANGE, EQUAL_GREATER

   RANGE             => shift and goto state 14 (10)
   default           => ERROR


State 14:
    10:range_nt <= IDENTIFIER TICK RANGE ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 3 tokens to range_nt (10)
   default           => ERROR


State 15:
     7:factor <= IDENTIFIER ^, EQUAL_GREATER/Wisi_EOI

   EQUAL_GREATER     => reduce 1 tokens to factor (7)
   Wisi_EOI          => reduce 1 tokens to factor (7)
   default           => ERROR


State 16:
     2:case_expression <= WHEN discrete_choice EQUAL_GREATER factor ^, Wisi_EOI

   Wisi_EOI          => reduce 4 tokens to case_expression (2)
   default           => ERROR


State 17:
    11:range_nt <= factor_list DOT_DOT factor_list ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 3 tokens to range_nt (11)
   default           => ERROR


LR1 Parse Table:
Terminal_Sequences:
wisitoken_accept => (WHEN, NUMBER_LITERAL, EQUAL_GREATER, NUMBER_LITERAL, Wisi_EOI)
case_expression => (WHEN, NUMBER_LITERAL, EQUAL_GREATER, NUMBER_LITERAL)
choice_expression => (NUMBER_LITERAL)
choice_relation => (NUMBER_LITERAL)
discrete_choice => (NUMBER_LITERAL)
factor => (NUMBER_LITERAL)
factor_list => (NUMBER_LITERAL)
range_nt => (NUMBER_LITERAL, DOT_DOT, NUMBER_LITERAL)

State 0:
     1:wisitoken_accept <= ^ case_expression Wisi_EOI, Wisi_EOI

   WHEN              => shift and goto state 1 (2)
   default           => ERROR

     1: case_expression   goto state 2

State 1:
     2:case_expression <= WHEN ^ discrete_choice EQUAL_GREATER factor, Wisi_EOI

   NUMBER_LITERAL    => shift and goto state 3 (8)
   IDENTIFIER        => shift and goto state 4 (7, 10)
   default           => ERROR

     5: choice_expression goto state 5
     3: choice_relation   goto state 6
     2: discrete_choice   goto state 7
     9: factor            goto state 8
     4: factor_list       goto state 9
     6: range_nt          goto state 10

State 2:
     1:wisitoken_accept <= case_expression ^ Wisi_EOI, Wisi_EOI

   Wisi_EOI          => accept it (1)
   default           => ERROR


State 3:
     8:factor <= NUMBER_LITERAL ^, DOT_DOT/EQUAL_GREATER

   DOT_DOT           => reduce 1 tokens to factor (8)
   EQUAL_GREATER     => reduce 1 tokens to factor (8)
   default           => ERROR


State 4:
     7:factor <= IDENTIFIER ^, DOT_DOT/EQUAL_GREATER
    10:range_nt <= IDENTIFIER ^ TICK RANGE, EQUAL_GREATER

   DOT_DOT           => reduce 1 tokens to factor (7)
   EQUAL_GREATER     => reduce 1 tokens to factor (7)
   TICK              => shift and goto state 13 (10)
   default           => ERROR


State 5:
     5:discrete_choice <= choice_expression ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to discrete_choice (5)
   default           => ERROR


State 6:
     3:choice_expression <= choice_relation ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to choice_expression (3)
   default           => ERROR


State 7:
     2:case_expression <= WHEN discrete_choice ^ EQUAL_GREATER factor, Wisi_EOI

   EQUAL_GREATER     => shift and goto state 12 (2)
   default           => ERROR


State 8:
     9:factor_list <= factor ^, DOT_DOT/EQUAL_GREATER

   DOT_DOT           => reduce 1 tokens to factor_list (9)
   EQUAL_GREATER     => reduce 1 tokens to factor_list (9)
   default           => ERROR


State 9:
     4:choice_relation <= factor_list ^, EQUAL_GREATER
    11:range_nt <= factor_list ^ DOT_DOT factor_list, EQUAL_GREATER

   DOT_DOT           => shift and goto state 11 (11)
   EQUAL_GREATER     => reduce 1 tokens to choice_relation (4)
   default           => ERROR


State 10:
     6:discrete_choice <= range_nt ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to discrete_choice (6)
   default           => ERROR


State 11:
    11:range_nt <= factor_list DOT_DOT ^ factor_list, EQUAL_GREATER

   NUMBER_LITERAL    => shift and goto state 18 (8)
   IDENTIFIER        => shift and goto state 19 (7)
   default           => ERROR

     9: factor            goto state 20
    11: factor_list       goto state 21

State 12:
     2:case_expression <= WHEN discrete_choice EQUAL_GREATER ^ factor, Wisi_EOI

   NUMBER_LITERAL    => shift and goto state 15 (8)
   IDENTIFIER        => shift and goto state 16 (7)
   default           => ERROR

     2: factor            goto state 17

State 13:
    10:range_nt <= IDENTIFIER TICK ^ RANGE, EQUAL_GREATER

   RANGE             => shift and goto state 14 (10)
   default           => ERROR


State 14:
    10:range_nt <= IDENTIFIER TICK RANGE ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 3 tokens to range_nt (10)
   default           => ERROR


State 15:
     8:factor <= NUMBER_LITERAL ^, Wisi_EOI

   Wisi_EOI          => reduce 1 tokens to factor (8)
   default           => ERROR


State 16:
     7:factor <= IDENTIFIER ^, Wisi_EOI

   Wisi_EOI          => reduce 1 tokens to factor (7)
   default           => ERROR


State 17:
     2:case_expression <= WHEN discrete_choice EQUAL_GREATER factor ^, Wisi_EOI

   Wisi_EOI          => reduce 4 tokens to case_expression (2)
   default           => ERROR


State 18:
     8:factor <= NUMBER_LITERAL ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to factor (8)
   default           => ERROR


State 19:
     7:factor <= IDENTIFIER ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to factor (7)
   default           => ERROR


State 20:
     9:factor_list <= factor ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to factor_list (9)
   default           => ERROR


State 21:
    11:range_nt <= factor_list DOT_DOT factor_list ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 3 tokens to range_nt (11)
   default           => ERROR


 7 rules, 0 actions, 0 checks, 22 states, 52 table entries
 0 accept/reduce conflicts, 0 shift/reduce conflicts, 0 reduce/reduce conflicts
