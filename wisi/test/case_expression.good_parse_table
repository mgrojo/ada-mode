Tokens:
 0 => WHITESPACE
 1 => COMMENT
 2 => RANGE
 3 => WHEN
 4 => DOT_DOT
 5 => EQUAL_GREATER
 6 => TICK
 7 => NUMBER_LITERAL
 8 => IDENTIFIER
 9 => Wisi_EOI
 10 => wisitoken_accept
 11 => case_expression
 12 => choice_expression
 13 => choice_relation
 14 => discrete_choice
 15 => factor
 16 => factor_list
 17 => range_nt

LALR Parse Table:
Follow:
( case_expression =>
  (Wisi_EOI => True,
   others => False)
 choice_expression =>
  (EQUAL_GREATER => True,
   others => False)
 choice_relation =>
  (EQUAL_GREATER => True,
   others => False)
 discrete_choice =>
  (EQUAL_GREATER => True,
   others => False)
 factor =>
  (DOT_DOT |
   EQUAL_GREATER |
   Wisi_EOI => True,
   others => False)
 factor_list =>
  (DOT_DOT |
   EQUAL_GREATER => True,
   others => False)
 range_nt =>
  (EQUAL_GREATER => True,
   others => False)
 others => (others => False))

State 0:
  wisitoken_accept <= ^ case_expression Wisi_EOI, 

   WHEN              => shift and goto state 1
   default           => ERROR

   case_expression   goto state 2

State 1:
  case_expression <= WHEN ^ discrete_choice EQUAL_GREATER factor, Wisi_EOI

   NUMBER_LITERAL    => shift and goto state 3
   IDENTIFIER        => shift and goto state 4
   default           => ERROR

   choice_expression goto state 5
   choice_relation   goto state 6
   discrete_choice   goto state 7
   factor            goto state 8
   factor_list       goto state 9
   range_nt          goto state 10

State 2:
  wisitoken_accept <= case_expression ^ Wisi_EOI, 

   Wisi_EOI          => accept it
   default           => ERROR


State 3:
  factor <= NUMBER_LITERAL ^, DOT_DOT/EQUAL_GREATER/Wisi_EOI

   DOT_DOT           => reduce 1 tokens to factor
   EQUAL_GREATER     => reduce 1 tokens to factor
   Wisi_EOI          => reduce 1 tokens to factor
   default           => ERROR


State 4:
  factor <= IDENTIFIER ^, DOT_DOT/EQUAL_GREATER
  range_nt <= IDENTIFIER ^ TICK RANGE, EQUAL_GREATER

   DOT_DOT           => reduce 1 tokens to factor
   EQUAL_GREATER     => reduce 1 tokens to factor
   TICK              => shift and goto state 13
   default           => ERROR


State 5:
  discrete_choice <= choice_expression ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to discrete_choice
   default           => ERROR


State 6:
  choice_expression <= choice_relation ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to choice_expression
   default           => ERROR


State 7:
  case_expression <= WHEN discrete_choice ^ EQUAL_GREATER factor, Wisi_EOI

   EQUAL_GREATER     => shift and goto state 12
   default           => ERROR


State 8:
  factor_list <= factor ^, DOT_DOT/EQUAL_GREATER

   DOT_DOT           => reduce 1 tokens to factor_list
   EQUAL_GREATER     => reduce 1 tokens to factor_list
   default           => ERROR


State 9:
  choice_relation <= factor_list ^, EQUAL_GREATER
  range_nt <= factor_list ^ DOT_DOT factor_list, EQUAL_GREATER

   DOT_DOT           => shift and goto state 11
   EQUAL_GREATER     => reduce 1 tokens to choice_relation
   default           => ERROR


State 10:
  discrete_choice <= range_nt ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to discrete_choice
   default           => ERROR


State 11:
  range_nt <= factor_list DOT_DOT ^ factor_list, EQUAL_GREATER

   NUMBER_LITERAL    => shift and goto state 3
   IDENTIFIER        => shift and goto state 15
   default           => ERROR

   factor            goto state 8
   factor_list       goto state 17

State 12:
  case_expression <= WHEN discrete_choice EQUAL_GREATER ^ factor, Wisi_EOI

   NUMBER_LITERAL    => shift and goto state 3
   IDENTIFIER        => shift and goto state 15
   default           => ERROR

   factor            goto state 16

State 13:
  range_nt <= IDENTIFIER TICK ^ RANGE, EQUAL_GREATER

   RANGE             => shift and goto state 14
   default           => ERROR


State 14:
  range_nt <= IDENTIFIER TICK RANGE ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 3 tokens to range_nt
   default           => ERROR


State 15:
  factor <= IDENTIFIER ^, EQUAL_GREATER/Wisi_EOI

   EQUAL_GREATER     => reduce 1 tokens to factor
   Wisi_EOI          => reduce 1 tokens to factor
   default           => ERROR


State 16:
  case_expression <= WHEN discrete_choice EQUAL_GREATER factor ^, Wisi_EOI

   Wisi_EOI          => reduce 4 tokens to case_expression
   default           => ERROR


State 17:
  range_nt <= factor_list DOT_DOT factor_list ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 3 tokens to range_nt
   default           => ERROR


LR1 Parse Table:
Follow:
( case_expression =>
  (Wisi_EOI => True,
   others => False)
 choice_expression =>
  (EQUAL_GREATER => True,
   others => False)
 choice_relation =>
  (EQUAL_GREATER => True,
   others => False)
 discrete_choice =>
  (EQUAL_GREATER => True,
   others => False)
 factor =>
  (DOT_DOT |
   EQUAL_GREATER |
   Wisi_EOI => True,
   others => False)
 factor_list =>
  (DOT_DOT |
   EQUAL_GREATER => True,
   others => False)
 range_nt =>
  (EQUAL_GREATER => True,
   others => False)
 others => (others => False))

State 0:
  wisitoken_accept <= ^ case_expression Wisi_EOI, Wisi_EOI

   WHEN              => shift and goto state 1
   default           => ERROR

   case_expression   goto state 2

State 1:
  case_expression <= WHEN ^ discrete_choice EQUAL_GREATER factor, Wisi_EOI

   NUMBER_LITERAL    => shift and goto state 3
   IDENTIFIER        => shift and goto state 4
   default           => ERROR

   choice_expression goto state 5
   choice_relation   goto state 6
   discrete_choice   goto state 7
   factor            goto state 8
   factor_list       goto state 9
   range_nt          goto state 10

State 2:
  wisitoken_accept <= case_expression ^ Wisi_EOI, Wisi_EOI

   Wisi_EOI          => accept it
   default           => ERROR


State 3:
  factor <= NUMBER_LITERAL ^, DOT_DOT/EQUAL_GREATER

   DOT_DOT           => reduce 1 tokens to factor
   EQUAL_GREATER     => reduce 1 tokens to factor
   default           => ERROR


State 4:
  factor <= IDENTIFIER ^, DOT_DOT/EQUAL_GREATER
  range_nt <= IDENTIFIER ^ TICK RANGE, EQUAL_GREATER

   DOT_DOT           => reduce 1 tokens to factor
   EQUAL_GREATER     => reduce 1 tokens to factor
   TICK              => shift and goto state 13
   default           => ERROR


State 5:
  discrete_choice <= choice_expression ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to discrete_choice
   default           => ERROR


State 6:
  choice_expression <= choice_relation ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to choice_expression
   default           => ERROR


State 7:
  case_expression <= WHEN discrete_choice ^ EQUAL_GREATER factor, Wisi_EOI

   EQUAL_GREATER     => shift and goto state 12
   default           => ERROR


State 8:
  factor_list <= factor ^, DOT_DOT/EQUAL_GREATER

   DOT_DOT           => reduce 1 tokens to factor_list
   EQUAL_GREATER     => reduce 1 tokens to factor_list
   default           => ERROR


State 9:
  choice_relation <= factor_list ^, EQUAL_GREATER
  range_nt <= factor_list ^ DOT_DOT factor_list, EQUAL_GREATER

   DOT_DOT           => shift and goto state 11
   EQUAL_GREATER     => reduce 1 tokens to choice_relation
   default           => ERROR


State 10:
  discrete_choice <= range_nt ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to discrete_choice
   default           => ERROR


State 11:
  range_nt <= factor_list DOT_DOT ^ factor_list, EQUAL_GREATER

   NUMBER_LITERAL    => shift and goto state 18
   IDENTIFIER        => shift and goto state 19
   default           => ERROR

   factor            goto state 20
   factor_list       goto state 21

State 12:
  case_expression <= WHEN discrete_choice EQUAL_GREATER ^ factor, Wisi_EOI

   NUMBER_LITERAL    => shift and goto state 15
   IDENTIFIER        => shift and goto state 16
   default           => ERROR

   factor            goto state 17

State 13:
  range_nt <= IDENTIFIER TICK ^ RANGE, EQUAL_GREATER

   RANGE             => shift and goto state 14
   default           => ERROR


State 14:
  range_nt <= IDENTIFIER TICK RANGE ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 3 tokens to range_nt
   default           => ERROR


State 15:
  factor <= NUMBER_LITERAL ^, Wisi_EOI

   Wisi_EOI          => reduce 1 tokens to factor
   default           => ERROR


State 16:
  factor <= IDENTIFIER ^, Wisi_EOI

   Wisi_EOI          => reduce 1 tokens to factor
   default           => ERROR


State 17:
  case_expression <= WHEN discrete_choice EQUAL_GREATER factor ^, Wisi_EOI

   Wisi_EOI          => reduce 4 tokens to case_expression
   default           => ERROR


State 18:
  factor <= NUMBER_LITERAL ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to factor
   default           => ERROR


State 19:
  factor <= IDENTIFIER ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to factor
   default           => ERROR


State 20:
  factor_list <= factor ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 1 tokens to factor_list
   default           => ERROR


State 21:
  range_nt <= factor_list DOT_DOT factor_list ^, EQUAL_GREATER

   EQUAL_GREATER     => reduce 3 tokens to range_nt
   default           => ERROR


 7 rules, 0 actions, 22 states, 52 table entries
 0 accept/reduce conflicts, 0 shift/reduce conflicts, 0 reduce/reduce conflicts
