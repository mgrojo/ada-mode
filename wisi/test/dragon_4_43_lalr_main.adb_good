--  generated parser support file.
--  command line: wisi-generate.exe  --generate LALR ADA ../../wisi/test/dragon_4_43.wy
--

--  Copyright (C) 2018 Stephen Leake.  All Rights Reserved.

--  This program is free software; you can redistribute it and/or
--  modify it under the terms of the GNU General Public License as
--  published by the Free Software Foundation; either version 3, or (at
--  your option) any later version.
--
--  This software is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
--  General Public License for more details.
--
--  You should have received a copy of the GNU General Public License
--  along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.

with WisiToken.Lexer.re2c;
with dragon_4_43_re2c_c;
package body Dragon_4_43_LALR_Main is

   package Lexer is new WisiToken.Lexer.re2c
     (dragon_4_43_re2c_c.New_Lexer,
      dragon_4_43_re2c_c.Free_Lexer,
      dragon_4_43_re2c_c.Reset_Lexer,
      dragon_4_43_re2c_c.Next_Token);

   procedure Create_Parser
     (Parser                       :    out WisiToken.LR.Parser_No_Recover.Parser;
      Trace                        : not null access WisiToken.Trace'Class;
      User_Data                    : in     WisiToken.Syntax_Trees.User_Data_Access)
   is
      use WisiToken.LR;
      Table : constant Parse_Table_Ptr := new Parse_Table
        (State_First       => 0,
         State_Last        => 6,
         First_Terminal    => Trace.Descriptor.First_Terminal,
         Last_Terminal     => Trace.Descriptor.Last_Terminal,
         First_Nonterminal => Trace.Descriptor.First_Nonterminal,
         Last_Nonterminal  => Trace.Descriptor.Last_Nonterminal);
   begin
      Table.McKenzie_Param :=
        (First_Terminal    => 2,
         Last_Terminal     => 4,
         First_Nonterminal => 5,
         Last_Nonterminal  => 7,
         Insert =>
           (0, 0, 0, 0, 0, 0),
         Delete =>
           (0, 0, 0, 0, 0, 0),
         Push_Back =>
           (0, 0, 0, 0, 0, 0),
         Task_Count  => 0,
         Cost_Limit  => 2147483647,
         Check_Limit => 2147483647,
         Check_Delta_Limit => 2147483647,
         Enqueue_Limit => 2147483647);


      Add_Action (Table.States (0), (1 => (7, 0)), 2, 1);
      Add_Action (Table.States (0), (1 => (7, 1)), 3, 2);
      Add_Error (Table.States (0));
      Add_Goto (Table.States (0), (5, 0), 6, 3);
      Add_Goto (Table.States (0), (6, 0), 7, 4);
      Add_Action (Table.States (1), (1 => (7, 0)), 2, 1);
      Add_Action (Table.States (1), (1 => (7, 1)), 3, 2);
      Add_Error (Table.States (1));
      Add_Goto (Table.States (1), (7, 0), 7, 6);
      Add_Action (Table.States (2), (2, 3, 4), (7, 1), 1, null, null);
      Add_Action (Table.States (3), 4, Accept_It, (5, 0), 1, null, null);
      Add_Error (Table.States (3));
      Add_Action (Table.States (4), (1 => (7, 0)), 2, 1);
      Add_Action (Table.States (4), (1 => (7, 1)), 3, 2);
      Add_Error (Table.States (4));
      Add_Goto (Table.States (4), (6, 0), 7, 5);
      Add_Action (Table.States (5), (1 =>  4), (6, 0), 2, null, null);
      Add_Action (Table.States (6), (2, 3, 4), (7, 0), 2, null, null);

      WisiToken.LR.Parser_No_Recover.New_Parser
        (Parser,
         Trace,
         Lexer.New_Lexer (Trace),
         Table,
         User_Data,
         Max_Parallel         => 15,
         Terminate_Same_State => True);
   end Create_Parser;
end Dragon_4_43_LALR_Main;
