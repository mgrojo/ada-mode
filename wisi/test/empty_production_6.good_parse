LALR_Parser parse:
 1: 1:  1:(BEGIN, (1 . 5)) : shift and goto state 2
spawn parser from 1 (2 active)
 2: 2:  2:(IDENTIFIER, (10 . 14)) : reduce 0 tokens to label_opt
label_opt_0: (label_opt) <= ()
 ... goto state 7
 1: 2:  2:(IDENTIFIER, (10 . 14)) : shift and goto state 4
 2: 7:  2:(IDENTIFIER, (10 . 14)) : shift and goto state 8
 2: 8:  3:(COLON, (16 . 16)) : ERROR
 2: expecting: COLON_EQUAL
 2: zombie
 1: 4:  3:(COLON, (16 . 16)) : shift and goto state 11
 2: terminate (1 active): zombie
 1: 11:  4:(IDENTIFIER, (21 . 21)) : reduce 2 tokens to label_opt
label_opt_1: (label_opt, (10 . 16)) <= ( 2:(IDENTIFIER, (10 . 14)),  3:(COLON, (16 . 16)))
 ... goto state 7
 1: 7:  4:(IDENTIFIER, (21 . 21)) : shift and goto state 8
 1: 8:  5:(COLON_EQUAL, (23 . 24)) : shift and goto state 13
 1: 13:  6:(IDENTIFIER, (26 . 26)) : shift and goto state 14
 1: 14:  7:(SEMICOLON, (27 . 27)) : shift and goto state 15
 1: 15:  8:(END, (29 . 31)) : reduce 5 tokens to statement
statement_0: (statement, (10 . 27)) <= ((label_opt, (10 . 16)),  4:(IDENTIFIER, (21 . 21)),  5:(COLON_EQUAL, (23 . 24)),  6:(IDENTIFIER, (26 . 26)),  7:(SEMICOLON, (27 . 27)))
 ... goto state 5
 1: 5:  8:(END, (29 . 31)) : reduce 1 tokens to sequence_of_statements
sequence_of_statements_0: (sequence_of_statements, (10 . 27)) <= ((statement, (10 . 27)))
 ... goto state 6
 1: 6:  8:(END, (29 . 31)) : shift and goto state 9
 1: 9:  9:(SEMICOLON, (32 . 32)) : shift and goto state 12
 1: 12:  10:(Wisi_EOI, (35 . 34)) : reduce 4 tokens to compilation_unit
compilation_unit_0: (compilation_unit, (1 . 32)) <= ( 1:(BEGIN, (1 . 5)), (sequence_of_statements, (10 . 27)),  8:(END, (29 . 31)),  9:(SEMICOLON, (32 . 32)))
 ... goto state 3
 1: 3:  10:(Wisi_EOI, (35 . 34)) : accept it
wisitoken_accept_0: (wisitoken_accept, (1 . 32)) <= ((compilation_unit, (1 . 32)))
 1: succeed
