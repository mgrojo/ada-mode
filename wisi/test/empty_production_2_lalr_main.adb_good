--  generated parser support file.
--  command line: wisi-generate.exe  --generate LALR ADA ../../wisi/test/empty_production_2.wy
--

with WisiToken.Lexer.re2c;
with empty_production_2_re2c_c;
with Empty_Production_2_Actions; use Empty_Production_2_Actions;
package body Empty_Production_2_LALR_Main is

   package Lexer is new WisiToken.Lexer.re2c
     (empty_production_2_re2c_c.New_Lexer,
      empty_production_2_re2c_c.Free_Lexer,
      empty_production_2_re2c_c.Reset_Lexer,
      empty_production_2_re2c_c.Next_Token);

   procedure Create_Parser
     (Parser                       :    out WisiToken.LR.Parser_No_Recover.Parser;
      Trace                        : not null access WisiToken.Trace'Class;
      User_Data                    : in     WisiToken.Syntax_Trees.User_Data_Access)
   is
      use WisiToken.LR;
      Table : constant Parse_Table_Ptr := new Parse_Table
        (State_First       => 0,
         State_Last        => 8,
         First_Terminal    => Trace.Descriptor.First_Terminal,
         Last_Terminal     => Trace.Descriptor.Last_Terminal,
         First_Nonterminal => Trace.Descriptor.First_Nonterminal,
         Last_Nonterminal  => Trace.Descriptor.Last_Nonterminal);
   begin
      Table.McKenzie_Param :=
        (First_Terminal    => 2,
         Last_Terminal     => 5,
         First_Nonterminal => 6,
         Last_Nonterminal  => 9,
         Insert =>
           (0, 0, 0, 0, 0, 0, 0, 0),
         Delete =>
           (0, 0, 0, 0, 0, 0, 0, 0),
         Push_Back =>
           (0, 0, 0, 0, 0, 0, 0, 0),
         Task_Count  => 0,
         Cost_Limit  => 2147483647,
         Check_Limit => 2147483647,
         Check_Delta_Limit => 2147483647,
         Enqueue_Limit => 2147483647);


      Add_Action (Table.States (0), (1 => (9, 0)), 3, 1, (7, 1), 0, null, null);
      Add_Action (Table.States (0), 5, Reduce, (7, 1), 0, null, null);
      Add_Error (Table.States (0));
      Add_Goto (Table.States (0), (8, 1), 7, 2);
      Add_Goto (Table.States (0), (6, 0), 8, 3);
      Add_Goto (Table.States (0), (7, 0), 9, 4);
      Add_Action (Table.States (1), 2, Reduce, (7, 1), 0, null, null);
      Add_Action (Table.States (1), (1 => (9, 0)), 3, 1, (7, 1), 0, null, null);
      Add_Error (Table.States (1));
      Add_Goto (Table.States (1), (8, 1), 7, 2);
      Add_Goto (Table.States (1), (8, 0), 8, 6);
      Add_Goto (Table.States (1), (7, 0), 9, 4);
      Add_Action (Table.States (2), (2, 3, 5), (8, 1), 1, null, null);
      Add_Action (Table.States (3), (1 => (9, 0)), 3, 1, (7, 1), 0, null, null);
      Add_Action (Table.States (3), 5, Accept_It, (6, 0), 1, null, null, (7, 1), 0, null, null);
      Add_Error (Table.States (3));
      Add_Goto (Table.States (3), (8, 0), 7, 5);
      Add_Goto (Table.States (3), (7, 0), 9, 4);
      Add_Action (Table.States (4), (2, 3, 5), (7, 0), 1, null, null);
      Add_Action (Table.States (5), (2, 3, 5), (8, 0), 2, null, null);
      Add_Action (Table.States (6), (1 => (9, 0)), 2, 7, (7, 1), 0, null, null);
      Add_Action (Table.States (6), (1 => (9, 0)), 3, 1, (7, 1), 0, null, null);
      Add_Error (Table.States (6));
      Add_Goto (Table.States (6), (8, 0), 7, 5);
      Add_Goto (Table.States (6), (7, 0), 9, 4);
      Add_Action (Table.States (7), (1 => (9, 0)), 4, 8);
      Add_Error (Table.States (7));
      Add_Action (Table.States (8), (2, 3, 5), (9, 0), 4, body_0'Access, null);

      WisiToken.LR.Parser_No_Recover.New_Parser
        (Parser,
         Trace,
         Lexer.New_Lexer (Trace),
         Table,
         User_Data,
         Max_Parallel         => 15,
         Terminate_Same_State => True);
   end Create_Parser;
end Empty_Production_2_LALR_Main;
