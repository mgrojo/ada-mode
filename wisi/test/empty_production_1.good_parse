LALR_Parser parse:
read 128
-- a simple body, with empty declarations
is begin;

-- one declaration; a body with empty declarations
is
    is begin;
begin;

 1 stack:  1 : 
 1: 1: IS : shift and goto state 2
 1 stack:  2 : IS,  1 : 
 1: 2: BEGIN : reduce 0 tokens to declarative_part
(declarative_part) <= 
 ... goto state 7
 1 stack:  7 : declarative_part,  2 : IS,  1 : 
 1: 7: BEGIN : shift and goto state 8
 1 stack:  8 : BEGIN,  7 : declarative_part,  2 : IS,  1 : 
 1: 8: SEMICOLON : shift and goto state 9
 1 stack:  9 : SEMICOLON,  8 : BEGIN,  7 : declarative_part,  2 : IS,  1 : 
 1: 9: IS : reduce 4 tokens to body
body_0: (body 43 . 51) <= (IS 43 . 44), (declarative_part), (BEGIN 46 . 50), (SEMICOLON 51 . 51)
 ... goto state 5
 1 stack:  5 : body,  1 : 
 1: 5: IS : reduce 1 tokens to declarations
(declarations 43 . 51) <= (body 43 . 51)
 ... goto state 3
 1 stack:  3 : declarations,  1 : 
 1: 3: IS : shift and goto state 2
 1 stack:  2 : IS,  3 : declarations,  1 : 
 1: 2: IS : shift and goto state 2
 1 stack:  2 : IS,  2 : IS,  3 : declarations,  1 : 
 1: 2: BEGIN : reduce 0 tokens to declarative_part
(declarative_part) <= 
 ... goto state 7
 1 stack:  7 : declarative_part,  2 : IS,  2 : IS,  3 : declarations,  1 : 
 1: 7: BEGIN : shift and goto state 8
 1 stack:  8 : BEGIN,  7 : declarative_part,  2 : IS,  2 : IS,  3 : declarations,  1 : 
 1: 8: SEMICOLON : shift and goto state 9
 1 stack:  9 : SEMICOLON,  8 : BEGIN,  7 : declarative_part,  2 : IS,  2 : IS,  3 : declarations,  1 : 
 1: 9: BEGIN : reduce 4 tokens to body
body_0: (body 112 . 120) <= (IS 112 . 113), (declarative_part), (BEGIN 115 . 119), (SEMICOLON 120 . 120)
 ... goto state 5
 1 stack:  5 : body,  2 : IS,  3 : declarations,  1 : 
 1: 5: BEGIN : reduce 1 tokens to declarations
(declarations 112 . 120) <= (body 112 . 120)
 ... goto state 3
 1 stack:  3 : declarations,  2 : IS,  3 : declarations,  1 : 
 1: 3: BEGIN : reduce 1 tokens to declarative_part
(declarative_part 112 . 120) <= (declarations 112 . 120)
 ... goto state 7
 1 stack:  7 : declarative_part,  2 : IS,  3 : declarations,  1 : 
 1: 7: BEGIN : shift and goto state 8
 1 stack:  8 : BEGIN,  7 : declarative_part,  2 : IS,  3 : declarations,  1 : 
 1: 8: SEMICOLON : shift and goto state 9
 1 stack:  9 : SEMICOLON,  8 : BEGIN,  7 : declarative_part,  2 : IS,  3 : declarations,  1 : 
 1: 9: Wisi_EOI : reduce 4 tokens to body
body_0: (body 105 . 127) <= (IS 105 . 106), (declarative_part 112 . 120), (BEGIN 122 . 126), (SEMICOLON 127 . 127)
 ... goto state 6
 1 stack:  6 : body,  3 : declarations,  1 : 
 1: 6: Wisi_EOI : reduce 2 tokens to declarations
(declarations 43 . 127) <= (declarations 43 . 51), (body 105 . 127)
 ... goto state 3
 1 stack:  3 : declarations,  1 : 
 1: 3: Wisi_EOI : reduce 1 tokens to declarative_part
(declarative_part 43 . 127) <= (declarations 43 . 127)
 ... goto state 4
 1 stack:  4 : declarative_part,  1 : 
 1: 4: Wisi_EOI : accept it
(fasttoken_accept 43 . 127) <= (declarative_part 43 . 127)

LR1_Parser parse:
read 128
-- a simple body, with empty declarations
is begin;

-- one declaration; a body with empty declarations
is
    is begin;
begin;

 1 stack:  1 : 
 1: 1: IS : shift and goto state 2
 1 stack:  2 : IS,  1 : 
 1: 2: BEGIN : reduce 0 tokens to declarative_part
(declarative_part) <= 
 ... goto state 9
 1 stack:  9 : declarative_part,  2 : IS,  1 : 
 1: 9: BEGIN : shift and goto state 11
 1 stack:  11 : BEGIN,  9 : declarative_part,  2 : IS,  1 : 
 1: 11: SEMICOLON : shift and goto state 15
 1 stack:  15 : SEMICOLON,  11 : BEGIN,  9 : declarative_part,  2 : IS,  1 : 
 1: 15: IS : reduce 4 tokens to body
body_0: (body 43 . 51) <= (IS 43 . 44), (declarative_part), (BEGIN 46 . 50), (SEMICOLON 51 . 51)
 ... goto state 5
 1 stack:  5 : body,  1 : 
 1: 5: IS : reduce 1 tokens to declarations
(declarations 43 . 51) <= (body 43 . 51)
 ... goto state 3
 1 stack:  3 : declarations,  1 : 
 1: 3: IS : shift and goto state 2
 1 stack:  2 : IS,  3 : declarations,  1 : 
 1: 2: IS : shift and goto state 7
 1 stack:  7 : IS,  2 : IS,  3 : declarations,  1 : 
 1: 7: BEGIN : reduce 0 tokens to declarative_part
(declarative_part) <= 
 ... goto state 13
 1 stack:  13 : declarative_part,  7 : IS,  2 : IS,  3 : declarations,  1 : 
 1: 13: BEGIN : shift and goto state 14
 1 stack:  14 : BEGIN,  13 : declarative_part,  7 : IS,  2 : IS,  3 : declarations,  1 : 
 1: 14: SEMICOLON : shift and goto state 16
 1 stack:  16 : SEMICOLON,  14 : BEGIN,  13 : declarative_part,  7 : IS,  2 : IS,  3 : declarations,  1 : 
 1: 16: BEGIN : reduce 4 tokens to body
body_0: (body 112 . 120) <= (IS 112 . 113), (declarative_part), (BEGIN 115 . 119), (SEMICOLON 120 . 120)
 ... goto state 10
 1 stack:  10 : body,  2 : IS,  3 : declarations,  1 : 
 1: 10: BEGIN : reduce 1 tokens to declarations
(declarations 112 . 120) <= (body 112 . 120)
 ... goto state 8
 1 stack:  8 : declarations,  2 : IS,  3 : declarations,  1 : 
 1: 8: BEGIN : reduce 1 tokens to declarative_part
(declarative_part 112 . 120) <= (declarations 112 . 120)
 ... goto state 9
 1 stack:  9 : declarative_part,  2 : IS,  3 : declarations,  1 : 
 1: 9: BEGIN : shift and goto state 11
 1 stack:  11 : BEGIN,  9 : declarative_part,  2 : IS,  3 : declarations,  1 : 
 1: 11: SEMICOLON : shift and goto state 15
 1 stack:  15 : SEMICOLON,  11 : BEGIN,  9 : declarative_part,  2 : IS,  3 : declarations,  1 : 
 1: 15: Wisi_EOI : reduce 4 tokens to body
body_0: (body 105 . 127) <= (IS 105 . 106), (declarative_part 112 . 120), (BEGIN 122 . 126), (SEMICOLON 127 . 127)
 ... goto state 6
 1 stack:  6 : body,  3 : declarations,  1 : 
 1: 6: Wisi_EOI : reduce 2 tokens to declarations
(declarations 43 . 127) <= (declarations 43 . 51), (body 105 . 127)
 ... goto state 3
 1 stack:  3 : declarations,  1 : 
 1: 3: Wisi_EOI : reduce 1 tokens to declarative_part
(declarative_part 43 . 127) <= (declarations 43 . 127)
 ... goto state 4
 1 stack:  4 : declarative_part,  1 : 
 1: 4: Wisi_EOI : accept it
(fasttoken_accept 43 . 127) <= (declarative_part 43 . 127)
