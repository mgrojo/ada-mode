LALR_Parser parse:
read 128
-- a simple body, with empty declarations
is begin;

-- one declaration; a body with empty declarations
is
    is begin;
begin;

 1 stack:  1 : (WHITESPACE), 
 1: 1: (IS 43 . 44) : shift and goto state 2
 1 stack:  2 : (IS 43 . 44),  1 : (WHITESPACE), 
 1: 2: (BEGIN 46 . 50) : reduce 0 tokens to declarative_part
 ... goto state 7
 1 stack:  7 : (declarative_part),  2 : (IS 43 . 44),  1 : (WHITESPACE), 
 1: 7: (BEGIN 46 . 50) : shift and goto state 8
 1 stack:  8 : (BEGIN 46 . 50),  7 : (declarative_part),  2 : (IS 43 . 44),  1 : (WHITESPACE), 
 1: 8: (SEMICOLON 51 . 51) : shift and goto state 9
 1 stack:  9 : (SEMICOLON 51 . 51),  8 : (BEGIN 46 . 50),  7 : (declarative_part),  2 : (IS 43 . 44),  1 : (WHITESPACE), 
 1: 9: (IS 105 . 106) : reduce 4 tokens to body
[9[(3 (43 . 45))(8)(2 (46 . 51))(4 (51 . 52))] 0]
body_0: body <= (IS 43 . 44), (declarative_part), (BEGIN 46 . 50), (SEMICOLON 51 . 51)
 ... goto state 5
 1 stack:  5 : (body 43 . 51),  1 : (WHITESPACE), 
 1: 5: (IS 105 . 106) : reduce 1 tokens to declarations
 ... goto state 3
 1 stack:  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 3: (IS 105 . 106) : shift and goto state 2
 1 stack:  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 2: (IS 112 . 113) : shift and goto state 2
 1 stack:  2 : (IS 112 . 113),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 2: (BEGIN 115 . 119) : reduce 0 tokens to declarative_part
 ... goto state 7
 1 stack:  7 : (declarative_part),  2 : (IS 112 . 113),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 7: (BEGIN 115 . 119) : shift and goto state 8
 1 stack:  8 : (BEGIN 115 . 119),  7 : (declarative_part),  2 : (IS 112 . 113),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 8: (SEMICOLON 120 . 120) : shift and goto state 9
 1 stack:  9 : (SEMICOLON 120 . 120),  8 : (BEGIN 115 . 119),  7 : (declarative_part),  2 : (IS 112 . 113),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 9: (BEGIN 122 . 126) : reduce 4 tokens to body
[9[(3 (112 . 114))(8)(2 (115 . 120))(4 (120 . 121))] 0]
body_0: body <= (IS 112 . 113), (declarative_part), (BEGIN 115 . 119), (SEMICOLON 120 . 120)
 ... goto state 5
 1 stack:  5 : (body 112 . 120),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 5: (BEGIN 122 . 126) : reduce 1 tokens to declarations
 ... goto state 3
 1 stack:  3 : (declarations 112 . 120),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 3: (BEGIN 122 . 126) : reduce 1 tokens to declarative_part
 ... goto state 7
 1 stack:  7 : (declarative_part 112 . 120),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 7: (BEGIN 122 . 126) : shift and goto state 8
 1 stack:  8 : (BEGIN 122 . 126),  7 : (declarative_part 112 . 120),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 8: (SEMICOLON 127 . 127) : shift and goto state 9
 1 stack:  9 : (SEMICOLON 127 . 127),  8 : (BEGIN 122 . 126),  7 : (declarative_part 112 . 120),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 9: (WISI_EOI 1 . 1) : reduce 4 tokens to body
[9[(3 (105 . 107))(8 (112 . 121))(2 (122 . 127))(4 (127 . 128))] 0]
body_0: body <= (IS 105 . 106), (declarative_part 112 . 120), (BEGIN 122 . 126), (SEMICOLON 127 . 127)
 ... goto state 6
 1 stack:  6 : (body 105 . 127),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 6: (WISI_EOI 1 . 1) : reduce 2 tokens to declarations
 ... goto state 3
 1 stack:  3 : (declarations 43 . 127),  1 : (WHITESPACE), 
 1: 3: (WISI_EOI 1 . 1) : reduce 1 tokens to declarative_part
 ... goto state 4
 1 stack:  4 : (declarative_part 43 . 127),  1 : (WHITESPACE), 
 1: 4: (WISI_EOI 1 . 1) : accept it

LR1_Parser parse:
read 128
-- a simple body, with empty declarations
is begin;

-- one declaration; a body with empty declarations
is
    is begin;
begin;

 1 stack:  1 : (WHITESPACE), 
 1: 1: (IS 43 . 44) : shift and goto state 2
 1 stack:  2 : (IS 43 . 44),  1 : (WHITESPACE), 
 1: 2: (BEGIN 46 . 50) : reduce 0 tokens to declarative_part
 ... goto state 9
 1 stack:  9 : (declarative_part),  2 : (IS 43 . 44),  1 : (WHITESPACE), 
 1: 9: (BEGIN 46 . 50) : shift and goto state 11
 1 stack:  11 : (BEGIN 46 . 50),  9 : (declarative_part),  2 : (IS 43 . 44),  1 : (WHITESPACE), 
 1: 11: (SEMICOLON 51 . 51) : shift and goto state 15
 1 stack:  15 : (SEMICOLON 51 . 51),  11 : (BEGIN 46 . 50),  9 : (declarative_part),  2 : (IS 43 . 44),  1 : (WHITESPACE), 
 1: 15: (IS 105 . 106) : reduce 4 tokens to body
[9[(3 (43 . 45))(8)(2 (46 . 51))(4 (51 . 52))] 0]
body_0: body <= (IS 43 . 44), (declarative_part), (BEGIN 46 . 50), (SEMICOLON 51 . 51)
 ... goto state 5
 1 stack:  5 : (body 43 . 51),  1 : (WHITESPACE), 
 1: 5: (IS 105 . 106) : reduce 1 tokens to declarations
 ... goto state 3
 1 stack:  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 3: (IS 105 . 106) : shift and goto state 2
 1 stack:  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 2: (IS 112 . 113) : shift and goto state 7
 1 stack:  7 : (IS 112 . 113),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 7: (BEGIN 115 . 119) : reduce 0 tokens to declarative_part
 ... goto state 13
 1 stack:  13 : (declarative_part),  7 : (IS 112 . 113),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 13: (BEGIN 115 . 119) : shift and goto state 14
 1 stack:  14 : (BEGIN 115 . 119),  13 : (declarative_part),  7 : (IS 112 . 113),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 14: (SEMICOLON 120 . 120) : shift and goto state 16
 1 stack:  16 : (SEMICOLON 120 . 120),  14 : (BEGIN 115 . 119),  13 : (declarative_part),  7 : (IS 112 . 113),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 16: (BEGIN 122 . 126) : reduce 4 tokens to body
[9[(3 (112 . 114))(8)(2 (115 . 120))(4 (120 . 121))] 0]
body_0: body <= (IS 112 . 113), (declarative_part), (BEGIN 115 . 119), (SEMICOLON 120 . 120)
 ... goto state 10
 1 stack:  10 : (body 112 . 120),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 10: (BEGIN 122 . 126) : reduce 1 tokens to declarations
 ... goto state 8
 1 stack:  8 : (declarations 112 . 120),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 8: (BEGIN 122 . 126) : reduce 1 tokens to declarative_part
 ... goto state 9
 1 stack:  9 : (declarative_part 112 . 120),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 9: (BEGIN 122 . 126) : shift and goto state 11
 1 stack:  11 : (BEGIN 122 . 126),  9 : (declarative_part 112 . 120),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 11: (SEMICOLON 127 . 127) : shift and goto state 15
 1 stack:  15 : (SEMICOLON 127 . 127),  11 : (BEGIN 122 . 126),  9 : (declarative_part 112 . 120),  2 : (IS 105 . 106),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 15: (WISI_EOI 1 . 1) : reduce 4 tokens to body
[9[(3 (105 . 107))(8 (112 . 121))(2 (122 . 127))(4 (127 . 128))] 0]
body_0: body <= (IS 105 . 106), (declarative_part 112 . 120), (BEGIN 122 . 126), (SEMICOLON 127 . 127)
 ... goto state 6
 1 stack:  6 : (body 105 . 127),  3 : (declarations 43 . 51),  1 : (WHITESPACE), 
 1: 6: (WISI_EOI 1 . 1) : reduce 2 tokens to declarations
 ... goto state 3
 1 stack:  3 : (declarations 43 . 127),  1 : (WHITESPACE), 
 1: 3: (WISI_EOI 1 . 1) : reduce 1 tokens to declarative_part
 ... goto state 4
 1 stack:  4 : (declarative_part 43 . 127),  1 : (WHITESPACE), 
 1: 4: (WISI_EOI 1 . 1) : accept it
