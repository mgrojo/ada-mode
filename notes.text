General notes on porting Emacs Ada mode indentation engine to smie

(progn
    (add-to-list 'load-path (expand-file-name "."))
    (setq debug-on-error t); see errors from smie-indent-line
    (load "test/runtest.el");; loads ada-mode, ada-mode-keys, etc
    (modify-syntax-entry ?_ "_" ada-mode-syntax-table); default
    (setq ada-mode-hook (delete 'ada-find-file-setup ada-mode-hook))
    (setq ada-mode-hook (delete 'sal-ada-mode-setup ada-mode-hook))
    (setq ada-mode-hook (delete 'ada-xref-initialize ada-mode-hook))
    (which-function-mode)
    (add-hook 'ada-mode-hook
       (lambda ()
        (add-hook 'before-save-hook 'delete-trailing-whitespace)
        (define-key ada-mode-map "\C-w" 'capitalize-word)
        (define-key ada-mode-map "\M-o" 'ada-smie-show-parent)
        (define-key ada-mode-map "\M-9" 'ada-smie-show-child)
        (define-key ada-mode-map "\M-p" 'ada-smie-show-statement-start)
        (define-key ada-mode-map "\M-i" 'ada-smie-show-keyword-backward)
        (define-key ada-mode-map "\M-j" 'ada-smie-show-cache)
        (define-key ada-mode-map "\M-k" 'ada-smie-show-keyword-forward)
       ))
    (setq ada-smie-debug-refine t)
   )

(setq ada-smie-debug-refine nil)
(setq ada-smie-debug-refine t)

(edebug-toggle-save-all-windows)

ada-smie.el
(sal-edit-library "smie")
/Apps/emacs-24.2/lisp/emacs-lisp/smie.el

runtest from emacs -q:
(progn
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode.smie")
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode.smie/test")
  (load "runtest")
)

(run-test "/Projects/org.emacs.ada-mode.smie/test/ada_mode-nominal.ads")

(progn
    (setq ada-mode-hook (delete 'ada-wisi-setup ada-mode-hook))
    (add-hook 'ada-mode-hook 'ada-smie-setup))
(shell-send-string "~/bin/mtn_sync_ada_france.sh" "*bash*")
(xmtn-sync-review)

review FIXMEs
(grep-find "find . -type f -print | \"xargs\" grep -nH \"FIXME:\"")
 current
C-F11
    test/ada_mode-find_file.adb

    ada-find-other-file
    moved from /Projects/emacs_stephe.work/emacs_stephe/ada-mode-patches.el to ada-mode.el
    write/improve test
        fix/improve handling of overloaded?
            C-c C-d works for that; use the second part of that! but fall back if .ali not available.
            just save string from bol thru name in ff_function_name
                search for that doesn't have to ignore string, comment

    ada-other-file-alist mapped to ff-other-file-alist; reference doc string

    ada-search-directories may contain env vars

    add prefix options
        nil - don't set-point-accordingly
        C-u - other window
        C-u 1 - do set-point
        C-u -1 - set-point, other-window
        C-u 5 - other frame
        C-u -5 - other frame

ff-special-constructs
    /Projects/emacs_stephe.work/emacs_stephe/ada-mode-patches.el
        replace ada-mode.el ada-mode ff-special-constructs
        write tests
        update manual

log-entry use ada-which-function

allocator!
    return new Item_Type'(item.all);
    new also needs font-lock

don't mark buffer modified just for ada-smie-cache text property

cd /Projects/org.emacs.ada-mode.smie/test
./test-indent.sh $GDS_ROOT/main_lynx_5/sal/Source_Common /tmp/gds_indent test/gds-options.el
    /tmp/gds_indent/
    (dired "/tmp/gds_indent/*.diff")

test/Makefile

rest of ada-mode
    merge all of ada-mode-patches, most of ada-mode-keys

ask for input/testing
    run on my projects

use it!

make newline-and-indent reindent current line first?

aspect_clause;    record - done
attribute clauses; record layout
library generic subprogram
pre/post conditions
quantified_, if_, case_expressions. Simon Wright working on "if" expressions

>    X3A : Unsigned := (case P is
>                       when 1
>                          | 4
>                          => 1,
>                       when 2
>                          | 8
>                          => 2,
>                       when others
>                          => 0);
>
>    X4A : Unsigned := (case P is
>                       when 1 | 4 | 16 | 64
>                          => Complex_Expression_Involving (Formula_with (P)),
>                       when 2 | 8 | 32
>                          => Another_Complex_Expression_Involving (Formula_with (P)),
>                       when others
>                          => Default_Expressions_Value (Being (0)));

bug in ada-smie-goto-statement-start; it finds "case" properly, but
doesn't return "(" as it should

remaining expressions?
remaining statements?
task entry with index; body has "for"

 relevant files
(info "(aarm2012)Annex P" "*info Annex P*")
c:/Projects/emacs_stephe.work/emacs_stephe/ada-mode-keys.el
c:/Projects/emacs_stephe.main/emacs_stephe_site_lisp/ada-mode.el
c:/apps/emacs-24.2/lisp/progmodes/ada-mode.el

c:/apps/emacs-24.2/lisp/progmodes/modula2.el
http://www.modula2.net/resources/M2R10.pdf Appendix A
    test/M2R10.pdf

(info "(elisp)SMIE" "*info-smie*")
http://dickgrune.com/Books/PTAPG_2nd_Edition/
    used by modula2-mode, octave-mode in emacs 24

 indentation options
c:/Projects/Web/stephe-leake/emacs/ada-mode/emacs-ada-mode.html
~/Web/Makefile

compare to GPS, gnatpp

some people want to be able to match GPS style

requirement to match 4.01 style

ask on comp.lang.ada

ada-stmt-end-indent
    indents "then", "loop", "do" relative to "if", "for", "accept"
    leave it out.

indentation of "=>" after "when-case"
    consensus is "don't change it from ada-mode 4.01"
        or at least don't change the default.

my changes from default:
      (setq ada-when-indent 0)
      (setq ada-label-indent 0)
      (setq ada-indent-record-rel-type 0)

Juanma Barranquero:
    ada-broken-indent 3
    ada-label-indent -3
    ada-with-indent   5
    ada-indent-return 2
    ada-use-indent    4

Bill Greene
  (setq ada-indent              3)
  (setq ada-broken-indent       ada-indent)
  (setq ada-broken-decl-indent  ada-indent)
  (setq ada-indent-return       ada-indent)
  (setq ada-continuation-indent ada-indent)
  (setq ada-indent-is-separate  nil)


Manuel GÃ³mez
'(ada-broken-indent 3)
'(ada-indent 2)
'(ada-indent-record-rel-type 2)
'(ada-indent-return 3)
'(ada-label-indent 0)
'(ada-use-indent 4)
'(ada-when-indent 2)
'(ada-with-indent 5)

Philippe WAROQUIERS

'(ada-fill-comment-prefix "-- " )
'(ada-indent 2)
'(ada-indent-record-rel-type 2)
'(ada-indent-return 2)
'(ada-label-indent 0)
'(ada-language-version 'ada2005)
'(ada-prj-gnatfind-switches "-arf")
'(ada-when-indent 2)
'(ada-which-compiler 'gnat)
'(ada-xref-create-ali nil)
'(ada-xref-search-with-egrep nil)



specify options in .prj
    keep alist of srcdir=>.prj, apply options when .ad? file opened
        debug vs release changes .prj; check options changed, warn?

 to do later
time on long code
    get stats on GDS file sizes

put-text-property sets buffer-modified flag, fails if read-only

ada-which-function calls forward-sexp

fix indent on return
    find a way to automate test of it

run test on GDS, with broken-paren = 2, see if anything changes

  ;; To find "(" from anywhere within an aggregate, we can use
  ;; `scan-lists'. So far, that hasn't been needed.

       ;;    ... name (
       ;;              args

switch to cl-macs, cl-lib

why are we reindenting on space?
    not; smie-blink-matching-open
        keep it?

test with non-lowercase keywords in source

report ediff-buffers-wordwise bug; mark-active set, but no mark!
    try trunk http://alpha.gnu.org/gnu/emacs/windows/

get narrow-to-defun to work

fix gnat-fix-error
    tab
    insert with

 access to ada-france:

anonymous (read only) access:
    mtn --db ~/monotone-dbs/ada-france.db --key '' pull www.ada-france.org "org.emacs.*"

read/write access requires a public key:
    send output of 'mtn pubkey' to Ludovic Brenta
    <ludovic@ludovic-brenta.org> or Stephe Leake
    <stephen_leake@stephe-leake.org>

    add it to monotone db via 'mtn read'
    add it to /etc/monotone/write-permissions
    /etc/init.d/monotone restart

    mtn --db ~/monotone-dbs/ada-france.db sync "mtn://www.ada-france.org?org.emacs.*"
