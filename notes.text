General notes on implementing the Emacs Ada mode indentation engine using the smie and wisent parsers

runtest from emacs -Q:
(progn
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode.smie")
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode.smie/build")
  ;(global-font-lock-mode -1)
  (load "runtest-wisi")
  (find-file "/Projects/org.emacs.ada-mode.smie/test/ada_mode-generic_package.ads")
  (setq skip-reindent-test t)
)

(progn
    (setq ada-mode-hook (delete 'ada-wisi-setup ada-mode-hook))
    (add-hook 'ada-mode-hook 'ada-smie-setup))

(progn
    (setq ada-mode-hook (delete 'ada-smie-setup ada-mode-hook))
    (add-hook 'ada-mode-hook 'ada-wisi-setup))

(shell-send-string "~/bin/mtn_sync_ada_france.sh" "*bash*")
(xmtn-sync-review)

(setq ada-smie-debug t)
(setq ada-smie-debug nil)

(grep-find "find . -type f -print | \"xargs\" grep -nH \"FIXME:\"")
(setq wisent-verbose-flag t)
(setq wisent-debug-flag t)
output to *wisent-log* buffer, written to wisent.output if batch

semantic mode in .wy is just broken
    but "semantic-mode" is global, not buffer-local
    so turn off background parser:
        (setq semantic-idle-scheduler-idle-time 10000)

    and delete change hook in buffer:
    (setq after-change-functions (delete 'semantic-change-function after-change-functions))

    force reparse:
    (setq semantic-parse-tree-state 'needs-update)

    see output of semantic lexer
    (with-current-buffer "subprograms.wy"
      (semantic-fetch-tags))
    (remove-text-properties (point-min) (point-max) '(keymap))

(load "build/runtest.el")
 ada-smie/wisi
ada-wisi
    test/ada_mode-generic_package.ads
        Concrete_Defaulted_Procedure
            need to set start on parens

arm_info
    annex P
         unary_adding_operator ::=     +   | --

        double dash for minus

    4.5
         R*Sin([Unicode 952]
         )*Cos([Unicode 966]
         )             -- simple expression

            don't need newlines after unicode

build/wisi/Makefile
    ada-display-buffer doesn't respect C-u C-u for this!?

ada-smie
    use ada-symbol-end


better error handling for wisi?
    for wisent-parse, need to set an 'error action on statement_start tokens?
        then skip to ;

    wisent-parse-stream is _not_ better; just a "semantic" wrapper around wisent-parse

    semantic-bovinate-stream is an LL parser with possibly better error handling.

add code to opentoken to report conflicts and path to their lca!
    and useless nonterminals/rules
    org.opentoken.stephe/wisi/test/range_conflict.wy

for |, need to distinguish 'when', '=>'
    block-middle-start, block-middle-end?
    else => block-middle? statement-middle?

bug in semantic-grammar.wy
    attempted patch:
        %type  <qlist>       matchdatatype sexp syntax "\\s'\\s'?\\s-*("
        didn't work (not clear if it's getting loaded)
    posted on cedet-semantic

gdb break command input still broken in
    http://debbugs.gnu.org/cgi/bugreport.cgi?bug=13303
    GNU Emacs 24.2.91.1 (i386-mingw-nt6.1.7601) of 2012-12-15 on MS-W7-DANI
    GNU gdb (GDB) 7.5 for GNAT Pro 7.1.0w (20121019) [rev=gdb-7.5-ref-21-g0070a88]
    menu signals kill gdb

    gdb-many-windows apparently not relevant; that still uses gud> interaction buffer to set break commands

    gud-gdb runs 'gdb --fullname'; that works

    try with mingw gdb 7.2
        worse; no '>' prompt

        latest mingw mingw-get-inst-20120426.exe
            gcc 4.7.2; try with mtn
            gdb 7.5

    try with cygwin gdb
        same problem

    try with cygwin emacs, cygwin gdb

    try on linux
        emacs 24.2.1
        gdb 7.4.1
            no '>' prompt!
            doesn't terminate on 'end'!

        get emacs 24.2.91 source, gcc 4.7.2-4, gdb 7.4.1-1
            no '>' prompt, but menu eof terminates

        use emacs -Q
            same
            get "error in process filter" after type "break association_token_test-run.adb:20"

        use C hello world
            same, no 'error in process filter'

    see email
        try alternate gdb front-ends
        try gdb 7.5 on debian

ada-mode
    need C-c C-d on <=

gnat stub doesn't copy 'pragma License'
   can use standard header file; "see spec" is standard

ada-make-subprogram-body
    doesn't handle "+" after 'end'

FIXMEs
    context menus

    project files on menu

    manual

    test/ada_mode-generic_package.ads
    ada-next-statement-keyword on 'generic' broken due to "procedure-spec" in access type


'Access gives wrong face to following token:
     Percent_Percent & EOF + Output_Elisp'Access and

in project file, support three kinds of settings:
    prj:
    env:
    elisp:

don't parse or move cache if narrowed

old options set in ada-mode-hook are now ignored
    need warning?

ada-mode-patches.el
    add ELSE placeholders to ada-font-lock-syntactic-keywords,
        sets them to comment syntax so smie will ignore them
        now done in syntax-propertize; need user hook?

mouse operations
    goto-declaration
    compiler error
    others?

set indent (and all) options in project file

add <gnat>/lib/gnat to compilation-search-path, for library *.gpr

gnat-fix
    c:/Projects/emacs_stephe.main/emacs_stephe/gnat-fix-error.el

    ada-fix-error.el
        small; merge into ada-mode.el?

        sort 'limited private with' at end of context clause?

        allow project-specific list of error matchers; quit when one returns t

ada-make-subprogram-body

    or, if in spec file:
        find the next or previous declaration in the spec file
        use ada-find-other-file to find that in the body file
        place the body stub there

    or, put body skeleton in kill ring, let user paste it in body

    make it easy to select body/spec for cut and paste

    ada-goto-declaration-start misses "not" in "not overriding"
        ada_mode-nominal.ads Function_2f

    gnat switch for alphabetical order; option to match that

ada-align-paramlist
    test/ada_mode-parens.adb

    handle wrapping due to line length limit?

    handle single-line trailing comments, or longer comments, in paramlist?

ada-case-adjust

    support multiple files
        menu of file to save new exception in
        prompt for file in case-create-exception

    keybinding for "make this word a case exception"

    store acronym expansion
        either pointer to source file, or string

menu entry to show gnat-run-buffer
    for debugging mysterious "xref not found" errors

double-click underscore selects full word, double-click letter selects partial word?

ada-gnat-parse-gpr-file
    if object dir not created, search for Source Search Path fails

manuel Gomez using comp_cmd, make_cmd, src_dir, obj_dir; not .gpr files
    I could use make_cmd to get project-local env vars in make, like ADA_PROJECT_PATH, TEST_CHASSIS
    reference project variables in project var values

ada-find-other-file in separate bodies
    not on 'separate' line; must use ada-gnat-xref

    alternate to 'gnat find': gnatinspect
        packaged in GNAT GPL 2012, not in 7.0.1, 7.1, gnatcoll-1.4
        uses gnatcoll.xref library
        tell adacore how well it works
        waiting for gnatcoll 1.5

add ada-spec/body-suffixes to the Emacs project file

rest of ada-mode
    merge all of ada-mode-patches, most of ada-mode-keys
    process patches in ada-mode email

    help -> manual looked for arm95

    check emacs buglist
        http://debbugs.gnu.org/cgi/pkgreport.cgi?package=ada-mode

ada-display-buffer
    not setting history right
        bury buffer doesn't bring back last buffer

    review windows.el to see if there is now a better solution than

compilation mode

    keep compilation buffer in other frame if already visible

support xref for C files?
    at least if compiled with gprbuild?
    gcc options?
    gnatxref?

emacs versions:
    24.x gdb (all versions) broken for break commands (can't terminate prompting)
        can use 'gud-gdb'; runs 'gdb --fullname'

    23.4 gdb 7.5 broken (in gnat 7.1) (--annotate=3 crashes on start)
            only for wisi-compile!
         gdb 7.3 works (gnat 7.0.1)
            not for wisi-compile!

    23.2 debian stable

    23.1 MMS FLATSAT asist; no devel libs, so can't compile emacs

    21 Lynx 4.0

 opentoken for wisi
    refs for posting to cedet-semantic list
        http://dickgrune.com/Books/PTAPG_1st_Edition/BookBody.pdf
            9.6 page 213 lookaheads are sets
        red dragon: "Compilers Principles, Techniques, and Tools" by Aho, Sethi, and Ullman
            section 4.7 LALR merges different productions with the same core; more than one reduce
                but examples all have one reduce, excep 4.44
        wisent author is David Ponce <david@dponce.com>


    /Projects/org.opentoken.stephe/build/windows_debug/Makefile
    /Projects/org.opentoken.stephe/wisi/test/ada-subset-wy.el
    /Projects/org.opentoken.stephe/wisi/test/subprograms-wy.el
    subprograms-wy--parse-table
        one

        wisi-compile.el
            reimplement wisent-compile-grammar
            the wisent compiled grammar structure is _not_ a Red Dragon LALR parser table!
                Red Dragon LALR allows multiple reductions per state, based on the lookahead
                    need to implement my own (sigh)
                    can still use other parts of wisent-compile-grammar

                wisent apparently splits states so each state has only one reduction
                    not clear what name the wisent parser has
                        look in bison sources? don't see anything

                look at bison output
                    completely unreadable; no table structure, just random C code (sigh).

                ask David Ponce <david@dponce.com>
                    find small grammar that requires OpenToken first

    run semantic-grammar-create-package from emacs -Q
        it is in emacs 24.3
        can't run it twice in one emacs; some global vars not reset?
        (add-to-list 'load-path "/Projects/org.emacs.ada-mode.smie"); wisi.el
        (require 'cl); missing in semantic somewhere
        (find-file "/Projects/org.opentoken.stephe/wisi/test/ada-subset.wy")
        M-x semantic-mode
        C-u M-x semantic-grammar-create-package

    real conflict between expressions and strings
        f0cb9e75e05600c200e672748e7148d642244c0d
           except fix one production to be all on one line

        opentoken doesn't report conflict
            it eliminated expression productions!?
            production for simple_declarative_id is simply wrong!
            opentoken is broken (sigh)


        finish wisi-opentoken, wisi-compile-grammar, wisi-parse
            not clear how reduction operation is performed
            trace subprograms grammar in compilation and operation
                /Projects/org.opentoken.stephe/build/windows_debug/Makefile

 4.01 bugs that 5.01 fixes
    generic formal function
        'with' indented to prev 'return'
        sal: 1

    extension aggregate:
      return
        (Ada.Finalization.Controlled with
           Root => null,
         Height => 0,
         Count => 0);
      gdss:
        ? 1
        sal-poly-unbounded_arrays.ads 1
        opentoken-token-enumerated-identifier.adb

    procedure Copy
      (To   : in out Instance;
       From : in     OpenToken.Token.Class)
    is null;

    function Compute_Inverse
      (Function_Table : in Function_Table_Type;
       Range_Value    : in Range_Type)
      return Domain_Type
       is abstract;

    type Storage_Pool_Type
      (Pool_Size : System.Storage_Elements.Storage_Count;
       Name      : String_Access_Constant_Type) -- for debug messages
       is new System.Storage_Pools.Root_Storage_Pool with private;

    "is" should be indented by broken-indent
        gds:
            sal-poly-function_tables-monotonic.ads   1
            sal-poly-function_tables.ads             1
            sal-simple-function_tables-monotonic.ads 1
            sal-simple-function_tables.ads           1
            test_storage_pools.ads                   1

   function Get (Start_Chars   : in Ada.Strings.Maps.Character_Set :=
     Ada.Strings.Maps.Constants.Letter_Set;
                 Body_Chars    : in Ada.Strings.Maps.Character_Set :=
                   Ada.Strings.Maps.Constants.Alphanumeric_Set;
                 Has_Separator : in Boolean := True
                ) return Instance;

    initial value should be indented from (
        gds:
            opentoken-recognizer-identifier.ads 1
            opentoken-token-linked_list.adb     5
            opentoken-token-list_mixin.adb      2
            opentoken-token-selection_mixin.adb 4
            opentoken-token-sequence_mixin.adb  5

    case Match (Token_Index) is
      --  If we found a match, quit.
    when Recognizer.Matches =>

        comment as continuation line
        always a bad idea

    Syntax : constant Tokenizer.Syntax :=
     (Abort_T        => Tokenizer.Get (OpenToken.Recognizer.Keyword.Get ("abort")),
      Abs_T          => Tokenizer.Get (OpenToken.Recognizer.Keyword.Get ("abs")),
        ... 110 items
      End_of_File_T   => Tokenizer.Get (OpenToken.Recognizer.End_Of_File.Get));

         Analyzer : Tokenizer.Instance := Tokenizer.Initialize (Syntax);

        loses track over large statements

objects initialized with function:

   Tran_Selector : constant String_Access_Type := Declare_Component ("Tran");
      Rot_Selector  : constant String_Access_Type := Declare_Component ("rot");

entry guard clauses:
      entry Write(C : in Character)
    when Count < Pool'Length is
       begin


 relevant files
(info "(aarm2012)Annex P" "*info Annex P*")
(info "(elisp)Parser State" "*syntax-ppss*")
c:/Projects/emacs_stephe.work/emacs_stephe/ada-mode-keys.el
c:/Projects/emacs_stephe.work/emacs_stephe/gnat-fix-error.el
c:/Projects/emacs_stephe.main/emacs_stephe_site_lisp/ada-mode.el
c:/Projects/emacs_stephe.main/emacs_stephe_site_lisp/gpr-mode.el
c:/apps/emacs-24.2/lisp/progmodes/ada-mode.el

http://savannah.gnu.org/projects/emacs/

https://www.dropbox.com/sh/7jr3vbv9tm1zod0/jPuvfrJAe8
    w32 builds of cutting-edge emacs branches, pretests
    16 Jan: not 24.2.92 yet

ftp://alpha.gnu.org/gnu/emacs/pretest/

c:/apps/emacs-24.2/lisp/progmodes/modula2.el
http://www.modula2.net/resources/M2R10.pdf Appendix A
    test/M2R10.pdf

(info "(elisp)SMIE" "*info-smie*")
http://dickgrune.com/Books/PTAPG_2nd_Edition/
    used by modula2-mode, octave-mode in emacs 24

 indentation options
c:/Projects/Web/stephe-leake/emacs/ada-mode/emacs-ada-mode.html
~/Web/Makefile

compare to GPS, gnatpp

some people want to be able to match GPS style

requirement to match 4.01 style

ask on comp.lang.ada

ada-stmt-end-indent
    indents "then", "loop", "do" relative to "if", "for", "accept"
    leave it out.

indentation of "=>" after "when-case"
    consensus is "don't change it from ada-mode 4.01"
        or at least don't change the default.

my changes from default:
      (setq ada-when-indent 0)
      (setq ada-label-indent 0)
      (setq ada-indent-record-rel-type 0)

Juanma Barranquero:
    ada-broken-indent 3
    ada-label-indent -3
    ada-with-indent   5
    ada-indent-return 2
    ada-use-indent    4

Bill Greene
  (setq ada-indent              3)
  (setq ada-broken-indent       ada-indent)
  (setq ada-broken-decl-indent  ada-indent)
  (setq ada-indent-return       ada-indent)
  (setq ada-continuation-indent ada-indent)
  (setq ada-indent-is-separate  nil)


Manuel Gómez
'(ada-broken-indent 3)
'(ada-indent 2)
'(ada-indent-record-rel-type 2)
'(ada-indent-return 3)
'(ada-label-indent 0)
'(ada-use-indent 4)
'(ada-when-indent 2)
'(ada-with-indent 5)

Philippe WAROQUIERS

'(ada-fill-comment-prefix "-- " )
'(ada-indent 2)
'(ada-indent-record-rel-type 2)
'(ada-indent-return 2)
'(ada-label-indent 0)
'(ada-language-version 'ada2005)
'(ada-prj-gnatfind-switches "-arf")
'(ada-when-indent 2)
'(ada-which-compiler 'gnat)
'(ada-xref-create-ali nil)
'(ada-xref-search-with-egrep nil)



specify options in .prj
    keep alist of srcdir=>.prj, apply options when .ad? file opened
        debug vs release changes .prj; check options changed, warn?

 to do later
time on long code
    get stats on GDS file sizes

put-text-property fails if read-only

test with non-lowercase keywords in source

report ediff-buffers-wordwise bug; mark-active set, but no mark!
    try trunk http://alpha.gnu.org/gnu/emacs/windows/

get narrow-to-defun to work

fix gnat-fix-error
    tab
    insert with

 access to ada-france:

anonymous (read only) access:
    mtn --db ~/monotone-dbs/ada-france.db --key '' pull www.ada-france.org "org.emacs.*"

read/write access requires a public key:
    send output of 'mtn pubkey' to Ludovic Brenta
    <ludovic@ludovic-brenta.org> or Stephe Leake
    <stephen_leake@stephe-leake.org>

    add it to monotone db via 'mtn read'
    add it to /etc/monotone/write-permissions
    /etc/init.d/monotone restart

    mtn --db ~/monotone-dbs/ada-france.db sync "mtn://www.ada-france.org?org.emacs.*"

 release process
Emacs 24.3, gnat 7.1.0w (sal-standard): test/Makefile all
Emacs 23.4, (gnat-6.2.2): test/Makefile all
Emacs 23.4, (gnat-2012): test/Makefile all
(dvc-status)
(shell-send-string "mtn_sync_ada_france.sh" "*bash*")
test/Makefile zip
/Projects/Web/stephe-leake/emacs/ada-mode/emacs-ada-mode.html
    update todo list
    add release note
        (dvc-log)

~/Web/Makefile
    edit date in ADA-MODE-SMIE_GZ
    ada-mode-smie
    sync

post on emacs-ada-mode mailing list
    http://stephe-leake.org/emacs/ada-mode/emacs-ada-mode.html#ada-mode-5.0

-- end of file
