General notes on implementing the Emacs Ada mode indentation engine using the smie and wisent parsers

run wisi test from emacs -Q:
(progn
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode.smie")
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode.smie/build")
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode.smie/build/wisi")
  (load "run-wisi-test")
  (find-file "/Projects/org.emacs.ada-mode.smie/build/Makefile")
  (run-test "empty_production_6"))

run indent test from emacs -Q:
(progn
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode.smie")
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode.smie/build")
  (global-font-lock-mode -1)
  (load "run-indent-test-wisi")
  (find-file "/Projects/org.emacs.ada-mode.smie/test/ada_mode-long_paren.adb")
  (setq skip-reindent-test t)
)

(progn
    (require 'ada-smie)
    (setq ada-mode-hook (delete 'ada-wisi-setup ada-mode-hook))
    (add-hook 'ada-mode-hook 'ada-smie-setup))

(progn
    (require 'ada-wisi)
    (setq ada-mode-hook (delete 'ada-smie-setup ada-mode-hook))
    (setq ada-mode-hook (delete 'ada-smie-opentoken-setup ada-mode-hook))
    (add-hook 'ada-mode-hook 'ada-wisi-setup))

(setq wisi-debug 2)
(setq wisent-parse-max-stack-size 40)
(setq wisent-parse-max-stack-size 500)
(setq wisi-debug 1)
(setq wisi-debug 0)

(shell-send-string "~/bin/mtn_sync_ada_france.sh" "*bash*")
(xmtn-sync-review)

(grep-find "find . -type f -print | \"xargs\" grep -nH \"FIXME:\"")

(list (wisi-parser-state-active (aref parser-states 1)) (wisi-parser-state-sp (aref parser-states 1)) (wisi-parser-state-stack (aref parser-states 1)))

 ada-wisi parser
build/wisi/Makefile
    tests
        failing because everything that looks like a procedure call is a statement-start
            need to change 'start' to 'containing' (arrgghh!!)

Debian : emacs 24.2 (from testing), GNAT GPL 2012:
    ada-mode tests failing
        check for updated emacs?

& should be punctuation?

do fixmes
    gpr-add-log-current-function dispatch to gpr-wisi

    ./test/gpr/simple.gpr:43:            "6.2.2" | -- FIXME: continuation line; ada-indent-broken = 2

wisi-statement-action check class against wisi-class-list, to catch spelling mistakes

test/ada_mode-generic_instantiation.ads
    introduces shift/reduce conflicts between generic procedure instantiation and procedure body

merge two parsers if reach the same stack?
    but actions are probably different!
    grammar is redundant?
    wait until accept?

test/ada_mode-function_2.adb fails parse during edit, gives 'error during redisplay'
    but passes test
    can't find error!
    wisi-debug 0 should give no error message

 opentoken
/Projects/org.opentoken.stephe/build/windows_debug/Makefile

doc alex/aflex avail at http://sourceforge.net/projects/p2ada/
    compare

objc.wy
    abo.pignard@wanadoo.fr
    just confirm, declare conflicts

wisi-generate requires declaring non-reporting %tokens first, But should sort by kind

error on missing ':' in 'range | foo ;'

pointer at end of kernel => default should be reduce or accept
    don't need to compute lookaheads?
    see FIXME in opentoken-production-parser-lalr.adb

generalized parse
    build parse tree to store actions, tokens for results
    execute after parse completes

 ada-wisi other
use defvar-local
    check emacs 23.3

/Projects/Web/stephe-leake/emacs/ada-mode/emacs-ada-mode.html
    to-do list

indentation bug:
      Expected_Set := Get_Item_Node
        (Prod       => 4, -- in grammar
         Lookaheads => +(LEFT_PAREN_ID, SEMICOLON_ID),
         Dot        => 1,
         Next       => Expected_Set);

select-prj should open prj if not in alist

set buffer-local at variable declaration, not in ada-mode
    make it clearer to someone trying to understand what the variable does

Markus Sch√∂pflin <markus.schoepflin@comsoft.aero> wants this style (including all caps):

   FOOBAR.PROC (
      ARG1 => VAL1,
      ARG2 => VAL2
   );

from georg bauhaus:
    procedure Y is
       X : Character;
    begin

       case True is
          when False in False .. True =>
            null;
       when False =>
          null;
    end case;

    L:
       begin
          if X in 'a' .. 'z' or X in 'A' .. 'Z' then
          null;
    end if;
    end L;

    end Y;

jump back after C-c C-d
    etags uses M-., M-*, find-tag-marker-ring, tags-location-ring
    global mark ring? C-u <space>

wisent-parser does not execute actions when grammar is byte-compiled!
    need to byte-compile everything?
    wisent-debug-on-entry?
    change action to string, use eval?

better error handling for wisi?
    for wisent-parse, need to set an 'error action on statement_start tokens?
        then skip to ;

    see [dickgrune] 10 p 219

    wisent-parse-stream is _not_ better; just a "semantic" wrapper around wisent-parse

    semantic-bovinate-stream is an LL parser with possibly better error handling.

add code to opentoken to report conflicts and path to their lca!
    [dickgrune] 9.6.3 mentions DeRemer and Pennello for this

    and useless nonterminals/rules

incremental LALR [dickgrune] 9.7.4

for |, need to distinguish 'when', '=>'
    block-middle-start, block-middle-end?
    else => block-middle? statement-middle?

need C-c C-d on <=

ada-make-subprogram-body
    doesn't handle "+" after 'end'

FIXMEs
    context menus

    project files on menu

    manual

    test/ada_mode-generic_package.ads
    ada-next-statement-keyword on 'generic' broken due to "procedure-spec" in access type


'Access gives wrong face to following token:
     Percent_Percent & EOF + Output_Elisp'Access and

in project file, support three kinds of settings:
    prj: src_dir (= elisp add-to-list compilation-search-dir)
    env: ADA_PROJECT_PATH (currently $env)
    elisp: ada-mode options
        ada-spec/body-suffixes

    three sections, rather than per-line?

    or just use eval: (load "prj.el") in the makefile

don't parse or move cache if narrowed

old options set in ada-mode-hook are now ignored
    need warning?

ada-mode-patches.el
    add ELSE placeholders to ada-font-lock-syntactic-keywords,
        sets them to comment syntax so smie will ignore them
        now done in syntax-propertize; need user hook?

mouse operations
    goto-declaration
    compiler error
    others?

    double-click underscore selects full word, double-click letter selects partial word?

add <gnat>/lib/gnat to compilation-search-path, for library *.gpr

ada-fix-error.el
    small; merge into ada-mode.el?

    sort 'limited private with' at end of context clause?

ada-make-subprogram-body

    if in spec file:
        find the next or previous declaration in the spec file
        use ada-find-other-file to find that in the body file
        place the body stub there

    or, put body skeleton in kill ring, let user paste it in body

    make it easy to select body/spec for cut and paste

    ada-goto-declaration-start misses "not" in "not overriding"
        ada_mode-nominal.ads Function_2f

    gnat switch for alphabetical order; option to match that

ada-align-paramlist
    test/ada_mode-parens.adb

    handle wrapping due to line length limit?

    handle single-line trailing comments, or longer comments, in paramlist?

ada-case-adjust

    support multiple files
        menu of file to save new exception in
        prompt for file in case-create-exception
            edited, not tested

    store acronym expansion
        either pointer to source file, or string

    change ada-auto-case to multivalued
        nil for none, t or 'half for 4.0 behavior, 'full for the current 5.0.

        also to buffer-local, to allow some files to have different behavior (ie, for -fdump-ada-spec)
            set in file local variables

ada-gnat-parse-gpr-file
    if object dir not created, search for Source Search Path fails

manuel Gomez using comp_cmd, make_cmd, src_dir, obj_dir; not .gpr files
    I could use make_cmd to get project-local env vars in make, like ADA_PROJECT_PATH, TEST_CHASSIS
    reference project variables in project var values

ada-find-other-file in separate bodies
    not on 'separate' line; must use ada-gnat-xref

    alternate to 'gnat find': gnatinspect
        packaged in GNAT GPL 2012, not in 7.0.1, 7.1, gnatcoll-1.4
        uses gnatcoll.xref library
        tell adacore how well it works
        waiting for gnatcoll 1.5

rest of ada-mode
    merge all of ada-mode-patches, most of ada-mode-keys
    process patches in ada-mode email

    help -> manual looked for arm95

    check emacs buglist
        http://debbugs.gnu.org/cgi/pkgreport.cgi?package=ada-mode

support multiple compilation units in one file
    don't add $EOI for accept rule

syntax illegal at edit point means parse backwards from end makes sense
    insert phantom tokens to match two error points

 non-ada-mode bugs
bug in semantic-grammar.wy
    attempted patch:
        %type  <qlist>       matchdatatype sexp syntax "\\s'\\s'?\\s-*("
        didn't work (not clear if it's getting loaded)
    posted on cedet-semantic; no help

gdb break command input still broken in
    http://debbugs.gnu.org/cgi/bugreport.cgi?bug=13303
    GNU Emacs 24.2.91.1 (i386-mingw-nt6.1.7601) of 2012-12-15 on MS-W7-DANI
    GNU gdb (GDB) 7.5 for GNAT Pro 7.1.0w (20121019) [rev=gdb-7.5-ref-21-g0070a88]
    menu signals kill gdb

    gdb-many-windows apparently not relevant; that still uses gud> interaction buffer to set break commands

    gud-gdb runs 'gdb --fullname'; that works

    try with mingw gdb 7.2
        worse; no '>' prompt
            set interactive off

        latest mingw mingw-get-inst-20120426.exe
            gcc 4.7.2; try with mtn
            gdb 7.5

    try with cygwin gdb
        same problem

    try with cygwin emacs, cygwin gdb

    try on linux
        emacs 24.2.1
        gdb 7.4.1
            no '>' prompt!
               (gdb) set interactive-mode off

            doesn't terminate on 'end'!

        get emacs 24.2.91 source, gcc 4.7.2-4, gdb 7.4.1-1
            no '>' prompt, but menu eof terminates

        use emacs -Q
            same
            get "error in process filter" after type "break association_token_test-run.adb:20"

        use C hello world
            same, no 'error in process filter'

    see email
        try alternate gdb front-ends
        try gdb 7.5 on debian

gnat stub doesn't copy 'pragma License'
   can use standard header file; "see spec" is standard

ada-display-buffer
    not setting history right
        bury buffer doesn't bring back last buffer

    review windows.el to see if there is now a better solution

support xref for C files?
    at least if compiled with gprbuild?
    gcc options?
    gnatxref?

emacs versions:
    24.x gdb (all versions) broken for break commands (can't terminate prompting)
        can use 'gud-gdb'; runs 'gdb --fullname'

    23.4 gdb 7.5 broken (in gnat 7.1) (--annotate=3 crashes on start)
            only for wisi-compile!
         gdb 7.3 works (gnat 7.0.1)
            not for wisi-compile!

    23.2 debian stable

    23.1 MMS FLATSAT asist; no devel libs, so can't compile emacs

    21 Lynx 4.0

 4.01 bugs that 5.01 fixes
    generic formal function
        'with' indented to prev 'return'
        sal: 1

    extension aggregate:
      return
        (Ada.Finalization.Controlled with
           Root => null,
         Height => 0,
         Count => 0);
      gds:
        ? 1
        sal-poly-unbounded_arrays.ads 1
        opentoken-token-enumerated-identifier.adb

    procedure Copy
      (To   : in out Instance;
       From : in     OpenToken.Token.Class)
    is null;

    function Compute_Inverse
      (Function_Table : in Function_Table_Type;
       Range_Value    : in Range_Type)
      return Domain_Type
       is abstract;

    type Storage_Pool_Type
      (Pool_Size : System.Storage_Elements.Storage_Count;
       Name      : String_Access_Constant_Type) -- for debug messages
       is new System.Storage_Pools.Root_Storage_Pool with private;

    "is" should be indented by broken-indent
        gds:
            sal-poly-function_tables-monotonic.ads   1
            sal-poly-function_tables.ads             1
            sal-simple-function_tables-monotonic.ads 1
            sal-simple-function_tables.ads           1
            test_storage_pools.ads                   1

   function Get (Start_Chars   : in Ada.Strings.Maps.Character_Set :=
     Ada.Strings.Maps.Constants.Letter_Set;
                 Body_Chars    : in Ada.Strings.Maps.Character_Set :=
                   Ada.Strings.Maps.Constants.Alphanumeric_Set;
                 Has_Separator : in Boolean := True
                ) return Instance;

    initial value should be indented from (
        gds:
            opentoken-recognizer-identifier.ads 1
            opentoken-token-linked_list.adb     5
            opentoken-token-list_mixin.adb      2
            opentoken-token-selection_mixin.adb 4
            opentoken-token-sequence_mixin.adb  5

    case Match (Token_Index) is
      --  If we found a match, quit.
    when Recognizer.Matches =>

        comment as continuation line
        always a bad idea

    Syntax : constant Tokenizer.Syntax :=
     (Abort_T        => Tokenizer.Get (OpenToken.Recognizer.Keyword.Get ("abort")),
      Abs_T          => Tokenizer.Get (OpenToken.Recognizer.Keyword.Get ("abs")),
        ... 110 items
      End_of_File_T   => Tokenizer.Get (OpenToken.Recognizer.End_Of_File.Get));

         Analyzer : Tokenizer.Instance := Tokenizer.Initialize (Syntax);

        loses track over large statements

objects initialized with function:

   Tran_Selector : constant String_Access_Type := Declare_Component ("Tran");
      Rot_Selector  : constant String_Access_Type := Declare_Component ("rot");

entry guard clauses:
      entry Write(C : in Character)
    when Count < Pool'Length is
       begin


 relevant files
(browse-url "c:/Projects/arm_info/org.adaic.arm_form/build/html/arm2012/RM-P.html")
(info "(aarm2012)Annex P" "*info Annex P*")
(info "(elisp)Parser State" "*syntax-ppss*")
c:/Projects/emacs_stephe.work/emacs_stephe/ada-mode-keys.el
c:/Projects/emacs_stephe.work/emacs_stephe/gnat-fix-error.el
c:/Projects/emacs_stephe.main/emacs_stephe_site_lisp/ada-mode.el
c:/Projects/emacs_stephe.main/emacs_stephe_site_lisp/gpr-mode.el
c:/apps/emacs-24.2/lisp/progmodes/ada-mode.el
"c:/home/stephe/Backup/eBooks/Dick Grune/BookBody.pdf" [dickgrune]

http://savannah.gnu.org/projects/emacs/

http://git.savannah.gnu.org/cgit/emacs.git/tree/README?h=elpa
    or http://marmalade-repo.org/ and/or http://melpa.milkbox.net/.

https://www.dropbox.com/sh/7jr3vbv9tm1zod0/jPuvfrJAe8
    w32 builds of cutting-edge emacs branches, pretests

ftp://alpha.gnu.org/gnu/emacs/pretest/

c:/apps/emacs-24.2/lisp/progmodes/modula2.el
http://www.modula2.net/resources/M2R10.pdf Appendix A
    test/M2R10.pdf

(info "(elisp)SMIE" "*info-smie*")
    used by modula2-mode, octave-mode in emacs 24

 indentation options
c:/Projects/Web/stephe-leake/emacs/ada-mode/emacs-ada-mode.html
~/Web/Makefile

compare to GPS, gnatpp

some people want to be able to match GPS style

requirement to match 4.01 style

ask on comp.lang.ada

ada-stmt-end-indent
    indents "then", "loop", "do" relative to "if", "for", "accept"
    leave it out.

indentation of "=>" after "when-case"
    consensus is "don't change it from ada-mode 4.01"
        or at least don't change the default.

my changes from default:
      (setq ada-when-indent 0)
      (setq ada-label-indent 0)
      (setq ada-indent-record-rel-type 0)

Juanma Barranquero:
    ada-broken-indent 3
    ada-label-indent -3
    ada-with-indent   5
    ada-indent-return 2
    ada-use-indent    4

Bill Greene
  (setq ada-indent              3)
  (setq ada-broken-indent       ada-indent)
  (setq ada-broken-decl-indent  ada-indent)
  (setq ada-indent-return       ada-indent)
  (setq ada-continuation-indent ada-indent)
  (setq ada-indent-is-separate  nil)


Manuel G√≥mez
'(ada-broken-indent 3)
'(ada-indent 2)
'(ada-indent-record-rel-type 2)
'(ada-indent-return 3)
'(ada-label-indent 0)
'(ada-use-indent 4)
'(ada-when-indent 2)
'(ada-with-indent 5)

Philippe WAROQUIERS

'(ada-fill-comment-prefix "-- " )
'(ada-indent 2)
'(ada-indent-record-rel-type 2)
'(ada-indent-return 2)
'(ada-label-indent 0)
'(ada-language-version 'ada2005)
'(ada-prj-gnatfind-switches "-arf")
'(ada-when-indent 2)
'(ada-which-compiler 'gnat)
'(ada-xref-create-ali nil)
'(ada-xref-search-with-egrep nil)



specify options in .prj
    keep alist of srcdir=>.prj, apply options when .ad? file opened
        debug vs release changes .prj; check options changed, warn?

 to do later
vhdl-wisi

ada-control.el from JP Rosen; see email

completion
    http://emacswiki.org/emacs/CategoryCompletion
    autocomplete package

http://cedet.sourceforge.net/addlang.shtml

time on long code
    get stats on GDS file sizes

put-text-property fails if read-only

test with non-lowercase keywords in source

report ediff-buffers-wordwise bug; mark-active set, but no mark!
    try trunk http://alpha.gnu.org/gnu/emacs/windows/

get narrow-to-defun to work

fix gnat-fix-error
    tab
    insert with

opentoken generalized
    store token pointers on pending stack, so later operations have results

 access to ada-france:

anonymous (read only) access:
    mtn --db ~/monotone-dbs/ada-france.db --key '' pull www.ada-france.org "org.emacs.*"

read/write access requires a public key:
    send output of 'mtn pubkey' to Ludovic Brenta
    <ludovic@ludovic-brenta.org> or Stephe Leake
    <stephen_leake@stephe-leake.org>

    add it to monotone db via 'mtn read'
    add it to /etc/monotone/write-permissions
    /etc/init.d/monotone restart

    mtn --db ~/monotone-dbs/ada-france.db sync "mtn://www.ada-france.org?org.emacs.*"

 release process
Emacs 24.3, gnat 7.1.0w (sal-standard):
    /Projects/org.opentoken.stephe/build/windows_release/Makefile all
    build/smie/Makefile all
    build/wisi/Makefile test-wisi test-gpr test-ada
        all test-wisi, test-gpr passing
        some test-ada passing

Emacs 23.4, (gnat-2012) (gnat-2013):
/Projects/org.opentoken.stephe/build/windows_release/Makefile
    clean
    wisi-generate.exe

test/Makefile all
    build/smie/Makefile all EMACS=/Apps/emacs-23.4/bin/emacs.exe GNATMAKE=/apps/GNAT-gpl_2012/bin/gnatmake
        ada-mode failing weirdly
    build/wisi/Makefile all EMACS=/Apps/emacs-23.4/bin/emacs.exe GNATMAKE=/apps/GNAT-gpl_2012/bin/gnatmake

(dvc-status)
(dvc-status "/Projects/org.opentoken.stephe")
(shell-send-string "mtn_sync_ada_france.sh" "*bash*")

Debian : emacs 24.2 (from testing), GNAT GPL 2012:
    (shell-send-string "ssh-add" "*bash*")
    (shell-send-string "shevek.sh" "*bash*")
    (shell-send-string "mtn_sync_gds_shevek.sh" "*bash*")
    (shell-send-string "mtn_sync_stephe_shevek.sh" "*bash*")
    (xmtn-sync-review)
    on debian: build/wisi/Makefile all
    (shell-send-string "mtn_sync_gds_shevek.sh" "*bash*")
    (xmtn-sync-review)

build/wisi/Makefile zip
/Projects/org.opentoken.stephe/build/Makefile zip
/Projects/Web/stephe-leake/emacs/ada-mode/emacs-ada-mode.html
    update todo list
    add release note
        (dvc-log)

    consider org-mode to html
        http://bill2u.wordpress.com/ sortable tables in org-mode

~/Web/Makefile
    edit date in ADA-MODE-SMIE_GZ, ADA-MODE-OPENTOKEN_BZ2
    ada-mode
    sync

post on emacs-ada-mode mailing list
    http://stephe-leake.org/emacs/ada-mode/emacs-ada-mode.html#ada-mode-5.0

    also send email to:
        Pascal Pignard <abo.pignard@wanadoo.fr> for objective c
        cedet-semantic

-- end of file
