General notes on porting Emacs Ada mode indentation engine to smie

(progn
    (add-to-list 'load-path (expand-file-name "."))
    (setq debug-on-error t); see errors from smie-indent-line
    (load "test/runtest.el")
    (which-function-mode)
    (bookmark-load "~/.emacs.d/bookmarks")
    (add-hook 'ada-mode-hook
       (lambda ()
       (define-key ada-mode-map "\C-w" 'capitalize-word)
       (define-key ada-mode-map "\M-o" 'ada-indent-show-parent)
       (define-key ada-mode-map "\M-o" 'ada-indent-show-parent)
       (define-key ada-mode-map "\M-9" 'ada-indent-show-child)
       (define-key ada-mode-map "\M-p" 'ada-indent-show-statement-start)
       (define-key ada-mode-map "\M-i" 'ada-indent-show-keyword-backward)
       (define-key ada-mode-map "\M-k" 'ada-indent-show-keyword-forward)
    ))
)

(setq ada-indent-debug-refine nil)

(bookmark-save)
C-x r l show list of bookmarks, jump on return
C-x r m set bookmark

(edebug-toggle-save-all-windows)

ada-indent.el
(sal-edit-library "smie")

discuss smie--levels with Stefan/emacs-devel

run with -gnaty
    make sure it matters; not checked with only -gnatc?

test/Makefile
    test/adacore_9717_001.adb.diff
subtype identifier is name
    unrefined "is"


smie-default-*-token returns "" for strings, as well as parens

use ada-indent-broken for multiple object declarations

check effect of indentation choice on set-selective-display

make rest of files work
    add missing features to ada_mode-*


    aspect_clause
        record - done
    remaining statements
    remaining expressions (if expression, that started this whole thing :)
    "and then" "or else"
    pre/post conditions

    subprogram call with indented param list
    aggregate with associations
    nested package
    nested generic subprogram, package
    library generic subprogram
    attribute clauses
        record layout
    named associations

    look for remaining non-terminals in Annex P

then ask for input/testing
    run on my projects


 relevant files
(info "(aarm2012)Annex P" "*info Annex P*")
c:/Projects/emacs_stephe.work/emacs_stephe/ada-mode-keys.el

c:/apps/emacs-24.2/lisp/progmodes/modula2.el
http://www.modula2.net/resources/M2R10.pdf Appendix A
c:/Projects/emacs_stephe.main/emacs_stephe_site_lisp/ada-mode.el
(info "(elisp)SMIE" "*info-smie*")
(info "(aarm2012)Annex P" "*info-aarm*")
http://dickgrune.com/Books/PTAPG_2nd_Edition/
    used by modula2-mode, octave-mode in emacs 24

 indentation options
c:/Projects/Web/stephe-leake/emacs/ada-mode/emacs-ada-mode.html

compare to GPS, gnatpp

ask on comp.lang.ada

my changes from default:
      (setq ada-when-indent 0)
      (setq ada-label-indent 0)
      (setq ada-indent-record-rel-type 0)

Juanma Barranquero:
    ada-broken-indent 3
    ada-label-indent -3
    ada-with-indent   5
    ada-indent-return 2
    ada-use-indent    4

Bill Greene
  (setq ada-indent              3)
  (setq ada-broken-indent       ada-indent)
  (setq ada-broken-decl-indent  ada-indent)
  (setq ada-indent-return       ada-indent)
  (setq ada-continuation-indent ada-indent)
  (setq ada-indent-is-separate  nil)


Manuel GÃ³mez
'(ada-broken-indent 3)
'(ada-indent 2)
'(ada-indent-record-rel-type 2)
'(ada-indent-return 3)
'(ada-label-indent 0)
'(ada-use-indent 4)
'(ada-when-indent 2)
'(ada-with-indent 5)


specify options in .prj
    keep alist of srcdir=>.prj, apply options when .ad? file opened
        debug vs release changes .prj; check options changed, warn?

 to do later
fix indent on return

run test on GDS, with broken-paren = 2, see if anything changes

  ;; To find "(" from anywhere within an aggregate, we can use
  ;; `scan-lists'. So far, that hasn't been needed.

       ;;    ... name (
       ;;              args

switch to cl-macs, cl-lib

why are we reindenting on space?
    not; smie-blink-matching-open

test with non-lowercase keywords in source

report ediff-buffers-wordwise bug; mark-active set, but no mark!
    try trunk http://alpha.gnu.org/gnu/emacs/windows/

get narrow-to-defun to work

 access to ada-france:

anonymous (read only) access:
    mtn --db ~/monotone-dbs/ada-france.db --key '' pull www.ada-france.org "org.emacs.*"

read/write access requires a public key:
    send output of 'mtn pubkey' to Ludovic Brenta
    <ludovic@ludovic-brenta.org> or Stephe Leake
    <stephen_leake@stephe-leake.org>

    add it to monotone db via 'mtn read'
    add it to /etc/monotone/write-permissions
    /etc/init.d/monotone restart

    mtn --db ~/monotone-dbs/ada-france.db sync "mtn://www.ada-france.org?org.emacs.*"
