General notes on porting Emacs Ada mode indentation engine to smie

(progn
    (add-to-list 'load-path (expand-file-name "."))
    (load "test/runtest.el");; loads ada-mode, ada-mode-keys, etc
    (modify-syntax-entry ?_ "_" ada-mode-syntax-table); default
    (setq ada-mode-hook (delete 'ada-find-file-setup ada-mode-hook))
    (setq ada-mode-hook (delete 'sal-ada-mode-setup ada-mode-hook))
    (setq ada-mode-hook (delete 'ada-xref-initialize ada-mode-hook))
    (which-function-mode)
    (add-hook 'ada-mode-hook
       (lambda ()
        (add-hook 'before-save-hook 'delete-trailing-whitespace)
        (define-key ada-mode-map "\C-w" 'capitalize-word)
        (define-key ada-mode-map "\M-o" 'ada-smie-show-parent)
        (define-key ada-mode-map "\M-9" 'ada-smie-show-prev-keyword)
        (define-key ada-mode-map "\M-p" 'ada-smie-show-statement-start)
        (define-key ada-mode-map "\M-i" 'ada-smie-show-keyword-backward)
        (define-key ada-mode-map "\M-j" 'ada-smie-show-cache)
        (define-key ada-mode-map "\M-k" 'ada-smie-show-keyword-forward)
       ))
   )

(setq ada-smie-debug-refine t)
(setq ada-smie-debug-refine nil)

(global-font-lock-mode -1)
(global-font-lock-mode 1)
font-lock calls ada-smie-backward-keyword, which moves ada-smie-cache-max

/Apps/emacs-24.2/lisp/emacs-lisp/smie.el

runtest from emacs -q:
(progn
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode.smie")
  (load "ada-mode")
  (global-font-lock-mode -1)
  (find-file "/Projects/org.emacs.ada-mode.smie/test/ada_mode-nominal.ads")
)
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode.smie/test")
  (load "runtest")
)

(run-test "/Projects/org.emacs.ada-mode.smie/test/ada_mode-nominal.ads")

(progn
    (setq ada-mode-hook (delete 'ada-wisi-setup ada-mode-hook))
    (add-hook 'ada-mode-hook 'ada-smie-setup))
(shell-send-string "~/bin/mtn_sync_ada_france.sh" "*bash*")
(xmtn-sync-review)

review FIXMEs
(grep-find "find . -type f -print | \"xargs\" grep -nH \"FIXME:\"")
 ada-smie
test/Makefile  ;; set project file

ada-gnat-parse-gpr
    fails when require ada_project_path
        not set properly by .prj?

ada-case-adjust
    test on:
        Mixed_Case_Identifier   done
        keyword                 done
        "string"                done
        -- comment              done
        'A'                     done
        'Attribute              done
        1235                    inspection
        16#AFE#                 done
        FULL_ExCeption          done
        PARTial_Exception       done

        UPCASE KEYWORD

        bobp

    interactive test (adjust case after each letter)
        A
        a
        a_b
        foo_bar_baz

ada-capitalize-word

need ada-keywords for casing exception

    ada_adjust_case_substring bounds substring regexp with \b, with _ as non-word
        don't need to use regexp!
        combine loop on _ with loose_case

    ada-adjust-case-identifier matches string bounded by \b

    support multiple files
        menu of file to save new exception in

some self-insert keys call ada-adjust-case-interactive
    which sets syntax table to ada-mode-symbol-syntax-table
        which sets _ to word syntax (a symbol consists of word and symbol constituents)
        loose_case_word searches for _ explicitly
        ada-adjust-case-substring modifies syntax of _ to non-word


    C-w calls ada-adjust-case-current-identifier
        defined in ada-mode-keys!
        calls ada-adjust-case with no syntax table mod

set casing custom vars in project file

which-function-mode
    reports "Ada_Mode" in child packages!

ada-gnat-parse-gpr-file
    if object dir not created, search for Source Search Path fails

manuel Gomez using comp_cmd, make_cmd, src_dir, obj_dir; not .gpr files

goto-declaration
    -d switch
    mouse version?

ada-find-other-file in separate bodies
    not on 'separate' line; must use ada-gnat-xref


add ada-spec/body-suffixes to the Emacs project file

rest of ada-mode
    merge all of ada-mode-patches, most of ada-mode-keys
    process patches in ada-mode email

    fully delete ada-gnat-cmd from ada-xfer
        don't keep separate "library dirs" lists
            requires calling gnat list twice
            user can change paths

    help -> manual looked for arm95

    check emacs buglist
        http://debbugs.gnu.org/cgi/pkgreport.cgi?package=ada-mode

    submit adacore bug report on 'gnat list' accept '--subdirs'

ask for input/testing

use it!

make newline-and-indent reindent current line first?
    what did 4.01 do?
        ada-indent-after-return t doc says "indent after return"
        but what it does is:
            insert return at point
            go back to the line
            indent
            go forward to new line
            indent

        ada-indent-after-return nil leaves out _first_ indent!

aspect_clause;    record - done
attribute clauses; record layout
library generic subprogram
pre/post conditions
quantified_, if_, case_expressions. Simon Wright working on "if" expressions

remaining expressions?
remaining statements?
task entry with index; body has "for"

include gpr-mode

include gnat-fix-error
    rename to ada-gnat-fix-error
    or rewrite to use alist; support other compilers
    write test?

interactive edit bug in test/ada_mode-nominal.adb F2
    insert "Local : Integer;" between "is begin" then indent; sometimes it aligns with "is"
    can't reproduce; possibly an interaction between font-lock using ada-smie-forward-keyword and ada-smie-after-change

GNATCOLL.Projects can report "other file name" info

emacs 23.2?
    debian stable

 4.01 bugs that 5.01 fixes
    generic formal function
        'with' indented to prev 'return'
        sal: 1

    extension aggregate:
      return
        (Ada.Finalization.Controlled with
           Root => null,
         Height => 0,
         Count => 0);
      gdss:
        ? 1
        sal-poly-unbounded_arrays.ads 1
        opentoken-token-enumerated-identifier.adb

    procedure Copy
      (To   : in out Instance;
       From : in     OpenToken.Token.Class)
    is null;

    function Compute_Inverse
      (Function_Table : in Function_Table_Type;
       Range_Value    : in Range_Type)
      return Domain_Type
       is abstract;

    type Storage_Pool_Type
      (Pool_Size : System.Storage_Elements.Storage_Count;
       Name      : String_Access_Constant_Type) -- for debug messages
       is new System.Storage_Pools.Root_Storage_Pool with private;

    "is" should be indented by broken-indent
        gds:
            sal-poly-function_tables-monotonic.ads   1
            sal-poly-function_tables.ads             1
            sal-simple-function_tables-monotonic.ads 1
            sal-simple-function_tables.ads           1
            test_storage_pools.ads                   1

   function Get (Start_Chars   : in Ada.Strings.Maps.Character_Set :=
     Ada.Strings.Maps.Constants.Letter_Set;
                 Body_Chars    : in Ada.Strings.Maps.Character_Set :=
                   Ada.Strings.Maps.Constants.Alphanumeric_Set;
                 Has_Separator : in Boolean := True
                ) return Instance;

    initial value should be indented from (
        gds:
            opentoken-recognizer-identifier.ads 1
            opentoken-token-linked_list.adb     5
            opentoken-token-list_mixin.adb      2
            opentoken-token-selection_mixin.adb 4
            opentoken-token-sequence_mixin.adb  5

    case Match (Token_Index) is
      --  If we found a match, quit.
    when Recognizer.Matches =>

        comment as continuation line
        always a bad idea

    Syntax : constant Tokenizer.Syntax :=
     (Abort_T        => Tokenizer.Get (OpenToken.Recognizer.Keyword.Get ("abort")),
      Abs_T          => Tokenizer.Get (OpenToken.Recognizer.Keyword.Get ("abs")),
        ... 110 items
      End_of_File_T   => Tokenizer.Get (OpenToken.Recognizer.End_Of_File.Get));

         Analyzer : Tokenizer.Instance := Tokenizer.Initialize (Syntax);

        loses track over large statements

objects initialized with function:

   Tran_Selector : constant String_Access_Type := Declare_Component ("Tran");
      Rot_Selector  : constant String_Access_Type := Declare_Component ("rot");

entry guard clauses:
      entry Write(C : in Character)
    when Count < Pool'Length is
       begin


 relevant files
(info "(aarm2012)Annex P" "*info Annex P*")
(info "(elisp)Parser State" "*syntax-ppss*")
c:/Projects/emacs_stephe.work/emacs_stephe/ada-mode-keys.el
c:/Projects/emacs_stephe.main/emacs_stephe_site_lisp/ada-mode.el
c:/apps/emacs-24.2/lisp/progmodes/ada-mode.el

c:/apps/emacs-24.2/lisp/progmodes/modula2.el
http://www.modula2.net/resources/M2R10.pdf Appendix A
    test/M2R10.pdf

(info "(elisp)SMIE" "*info-smie*")
http://dickgrune.com/Books/PTAPG_2nd_Edition/
    used by modula2-mode, octave-mode in emacs 24

 indentation options
c:/Projects/Web/stephe-leake/emacs/ada-mode/emacs-ada-mode.html
~/Web/Makefile

compare to GPS, gnatpp

some people want to be able to match GPS style

requirement to match 4.01 style

ask on comp.lang.ada

ada-stmt-end-indent
    indents "then", "loop", "do" relative to "if", "for", "accept"
    leave it out.

indentation of "=>" after "when-case"
    consensus is "don't change it from ada-mode 4.01"
        or at least don't change the default.

my changes from default:
      (setq ada-when-indent 0)
      (setq ada-label-indent 0)
      (setq ada-indent-record-rel-type 0)

Juanma Barranquero:
    ada-broken-indent 3
    ada-label-indent -3
    ada-with-indent   5
    ada-indent-return 2
    ada-use-indent    4

Bill Greene
  (setq ada-indent              3)
  (setq ada-broken-indent       ada-indent)
  (setq ada-broken-decl-indent  ada-indent)
  (setq ada-indent-return       ada-indent)
  (setq ada-continuation-indent ada-indent)
  (setq ada-indent-is-separate  nil)


Manuel GÃ³mez
'(ada-broken-indent 3)
'(ada-indent 2)
'(ada-indent-record-rel-type 2)
'(ada-indent-return 3)
'(ada-label-indent 0)
'(ada-use-indent 4)
'(ada-when-indent 2)
'(ada-with-indent 5)

Philippe WAROQUIERS

'(ada-fill-comment-prefix "-- " )
'(ada-indent 2)
'(ada-indent-record-rel-type 2)
'(ada-indent-return 2)
'(ada-label-indent 0)
'(ada-language-version 'ada2005)
'(ada-prj-gnatfind-switches "-arf")
'(ada-when-indent 2)
'(ada-which-compiler 'gnat)
'(ada-xref-create-ali nil)
'(ada-xref-search-with-egrep nil)



specify options in .prj
    keep alist of srcdir=>.prj, apply options when .ad? file opened
        debug vs release changes .prj; check options changed, warn?

 to do later
time on long code
    get stats on GDS file sizes

put-text-property fails if read-only

test with non-lowercase keywords in source

report ediff-buffers-wordwise bug; mark-active set, but no mark!
    try trunk http://alpha.gnu.org/gnu/emacs/windows/

get narrow-to-defun to work

fix gnat-fix-error
    tab
    insert with

 access to ada-france:

anonymous (read only) access:
    mtn --db ~/monotone-dbs/ada-france.db --key '' pull www.ada-france.org "org.emacs.*"

read/write access requires a public key:
    send output of 'mtn pubkey' to Ludovic Brenta
    <ludovic@ludovic-brenta.org> or Stephe Leake
    <stephen_leake@stephe-leake.org>

    add it to monotone db via 'mtn read'
    add it to /etc/monotone/write-permissions
    /etc/init.d/monotone restart

    mtn --db ~/monotone-dbs/ada-france.db sync "mtn://www.ada-france.org?org.emacs.*"

-- end of file
