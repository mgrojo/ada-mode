General notes on Emacs Ada mode

run test from emacs -Q:
(progn
  (add-to-list 'exec-path "/apps/GNAT-7.1.2/bin")
  (setenv "PATH" (mapconcat 'identity  exec-path  path-separator))
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode.stephe-1")
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode.stephe-1/build")
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode.stephe-1/build/wisi")
  (global-font-lock-mode -1)
  (setq debug-on-error t)
;;  (setq wisi-debug 1)
  (load "run-indent-test-wisi-gnatinspect")
  (setq default-directory "/Projects/org.emacs.ada-mode.stephe-1/build/wisi/")
  (run-test "../../test/ada_mode-nominal-child.ads"))

(setq wisi-debug 2)
(setq wisent-parse-max-stack-size 40)
(setq wisent-parse-max-stack-size 500)
(setq wisi-debug 1)
(setq wisi-debug 0)

(shell-send-string "~/bin/mtn_sync_ada_france.sh" "*bash*")
(xmtn-sync-review)

(grep-find "find . -type f -print | \"xargs\" grep -nH \"FIXME:\"")

(list (wisi-parser-state-active (aref parser-states 1)) (wisi-parser-state-sp (aref parser-states 1)) (wisi-parser-state-stack (aref parser-states 1)))

 finish elpa
build/wisi/Makefile
build/Makefile

review autoloads

create org.emacs.ada-mode branch, push 5.0.1 to ELPA
    after 5.0 appears there

 emacs 23.4

gpr-skel.el
    move skel-expand to emacs-compat-*?
        assume will be in emacs 24.5 or 25.*
    use in ada-skel?

font-lock-keywords buffer local by default?

packages.el not in 23.4, so don't need (emacs "24.3") in package-requires


 gnat-inspect
test 1.7w

~/Projects/gnatcoll-1.6w-src/docs/xref.rst
c:/Apps/GNAT-7.1.2/gnatcoll-1.6w-src/src/tools/gnatinspect.adb
(require 'gpr-mode)
(gpr-set-as-project "c:/Apps/GNAT-7.1.2/gnatcoll-1.6w-src/src/gnatcoll_tools.gpr")
(browse-url "file:///c:/Apps/GNAT-7.1.2/gnatcoll-1.6w-src/docs/_build/html/xref.html")
gnatinspect verbosity in .gnatdebug:
-- Projects
-- ENTITIES.PARSING

gnatinspect is slow
    implementing gnat-inspect-session-*
    (require 'gnat-inspect)
    (gnat-inspect-kill-all-sessions)
    /Projects/GDS/work_dscovr_release/dscovr/build/x86_gnu_windows_debug/Makefile

    (pop-to-buffer " *gnatinspect-c:/Projects/GDS/work_dscovr_release/dscovr/build/x86_gnu_windows_debug/gds_dscovr_test_agg.gpr*")

    start or refresh gnatinspect process when select project
        don't wait


    set "don't prompt on exit emacs" property on session proceses
        and on bash shells!

    use in user-interface functions
        gnat-inspect-other done

        /Projects/GDS/work_dscovr_release/dscovr/1553/test/gds-hardware-bus_1553-core_thruster-test.adb


F7 broken
    using wrong/broken compilation regexp?
    c:/Projects/GDS/main_lynx_5/common/1553/gds-cards-sbs_abi-ops.ads Read_Mem

implement C++ C-c M-d parent
    just need key, menu

implement C++ C-c ? children
    /home/Projects/GDS/work_stephe_2/common/itc/itcsb/libitcsb_1553/inc/Itcsb1553/Bus.hpp

    overridden_recursive

    gnatinspect --project=gds_dscovr.gpr --nightlydb=gnatinspect.db -c "overridden_recursive transmit_to_bc:SubaddressTX.hpp"
        nothing (bug?)
        same for RX

    child_types_recursive
        works

add Ada, C++ tests of xref
    /home/Projects/GDS/work_stephe_2/dscovr/build/x86_gnu_linux_release/Makefile
    /home/Projects/GDS/work_stephe_2/common/itc/opsim/itc_dscovr_gdsi/Gds1553/src/Gds1553.cpp


cd /home/Projects/GDS/work_stephe_2/dscovr/build/x86_gnu_linux_release/

export ADA_PROJECT_PATH=../../../makerules:../../../common/build/x86_gnu_linux_release:../../../sal/build:../../../sal/build/x86_gnu_linux_release:../../../opentoken/build/linux_release

gnatinspect --project=gds_dscovr.gpr --nightlydb=gnatinspect.db -c "parent_types SubaddressPacket:Gds1553.cpp"


C-F11 fails on #include <Itcsb1553/Itcsb1553.hpp>

need std include files in search list

(require 'gpr-mode)
(gpr-set-as-project "c:/Apps/GNAT-7.1.2/gnatcoll-1.6w-src/src/gnatcoll_tools.gpr")
(browse-url "file:///c:/Apps/GNAT-7.1.2/gnatcoll-1.6w-src/docs/_build/html/xref.html")

 general
build/wisi/Makefile
build/Makefile

do C-x 5 prefix
    for Emacs 24.x

indentation bugs:
   type Configuration_Type
     (Max_Bus_Slot           : Devices.Null_Bus_Slot_Type;
      Bus_Controller_Present : Boolean)
     is new Devices.Configuration_Type
       (Mode                   => Devices.Multi_Function,
        Bus_Controller_Present => Bus_Controller_Present)
       with record
          BC  : BC_Configuration_Type (Max_Bus_Slot);
          RTs : RT_Config_Array_Type;
       end record;

    'is', 'with record' should be aligned with 'type'


    Check
        (Label & ".Message_1",
         Buffer
         (Buffer_Last + 1 + Captured_Time_Length .. Buffer_Last + Stream_Element_Offset (Header.ITOS_Header.Length)),
         Message_1,
         Strict_Indices => False);

        (buffer_last... should be ada-ident-broken from Buffer

gpr-add-log-current-function dispatch to gpr-wisi

ada-add-log-current-function

gpr log-edit-function-name
    use package.attribute:
        Source_Dirs
        Compiler.Default_Switches

parse error for legal expression function in enclosing parens
      Y : Boolean := Boolean'(if True then False);
    vs.
      Y : Boolean := Boolean'((if True then False));  -- o.K.

    LRM 4.5.7 7/3

need indent test of skel expansions
    verify they parse

implement secondary-error for scope in 'gnat-inspect-all'
    /Projects/GDS/work_dscovr_release/common/build/x86_gnu_windows_release/Makefile
    /Projects/GDS/work_dscovr_release/common/1553/gds-hardware-bus_1553.ads RX_Enable
    secondary-error in compilation regexp not working
        highlight can't be a function

    change ada-show-secondary-error to parse line, col from text, not text-property?

move gnat-inspect ada-* to ada-gnat-inspect.el

wisi-validate-cache should call grammar parser in a loop
    that would handle multiple compilation units; doesn't need to be in grammar
    parser needs to ignore invalid token following valid parse.

suggest jit-lock enable hook
    allow enforcing order in after-change-functions

ask about start-process vs --batch

expression functions

gpr fix errors
    gds_dscovr_utf_agg.gpr:12:19: expected "gds_dscovr_utf_agg"

add C++ tests

./wisi.el:361:	  ;; FIXME: insert newline in comment to create non-comment!?
    need tests for wisi-before/after-change vs comments, strings

C-c C-d on <= use

'Access gives wrong face to following token:
     Percent_Percent & EOF + Output_Elisp'Access and

don't parse or move cache if narrowed

ada-fix-error.el
    sort 'limited private with' at end of context clause

add test for el_file

gnatprep
    the value of a preprocessor symbol is either empty, a string
    literal, or an Ada identifier/keyword; handle $symbol in lexer

    gnatprep minor mode?

separate gpr-mode indent variables

gpr-next-statement-keyword

 possible enhancements
EDE projects?

skeleton
    see python-skeleton-autoinsert

    add else placeholders to all skeletons?
        add 'placeholder text property, before-change that deletes it/checks for "..."
        add goto-next-/prev-placeholder, kill-placeholder

    bug in skeleton handling of _; if skeleton-end-hook indents, the pos of _ moves; should be a marker.

    template system could be defined by parsing ada-grammar.wy
        for ada-skel-verbose

ada-align-paramlist
    test/ada_mode-parens.adb

    handle wrapping due to line length limit?

    handle single-line trailing comments, or longer comments, in paramlist?

ada-make-subprogram-body

    if in spec file:
        find the next or previous declaration in the spec file
        use ada-find-other-file to find that in the body file
        place the body stub there

    or, put body skeleton in kill ring, let user paste it in body

    make it easy to select body/spec for cut and paste

    ada-goto-declaration-start misses "not" in "not overriding"
        ada_mode-nominal.ads Function_2f

    gnat switch for alphabetical order; option to match that


parser is too slow
    try byte-compile - not enough
    see incremental LALR [dickgrune] 9.7.4
    cache parser state periodically (every 200 token caches?), resume parse from last avail cache
        won't help much; still need to parse to end of file
        won't help at all on first parse
        unless it's incremental in idle time!

    first parse is for font-lock, and is automatic; use reduced grammar/actions for that?
        so slow parse is only for user-invoked indentation, where they can more easily tolerate the delay

 possible new options
ada-wisi-comment
    add option to match gnat comment style check
        have tests in ada_mode-conditional_expressions.adb, ada_mode-parens.adb

from Simon Wright:
   --  I'd like (the option to have) the 'is' line up with the 'type'.
   type A;
   type A_Finalizer
     (AP : access A)
   is new Ada.Finalization.Limited_Controlled with null record;

Markus SchÃ¶pflin <markus.schoepflin@comsoft.aero> wants this style (including all caps):

   FOOBAR.PROC (
      ARG1 => VAL1,
      ARG2 => VAL2
   );

    add a custom indent function, like the one for opentoken
    12 sep 2013: sent email

 opentoken
/Projects/org.opentoken.stephe/build/debug/Makefile

http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=703361

resolve dynamic library names
    windows: _version.dll
    linux: .so.version
    OSX:   .dylib.version

    see ada-mode email from simon wright for patch

delete debug_parser.adb from release
delete build/x86_* from release

GNAT 2013 changes AUnit again!

doc alex/aflex avail at http://sourceforge.net/projects/p2ada/
    compare

objc.wy
    abo.pignard@wanadoo.fr
    just confirm, declare conflicts

wisi-generate requires declaring non-reporting %tokens first, But should sort by kind

error on missing ':' in 'range | foo ;'

pointer at end of kernel => default should be reduce or accept
    don't need to compute lookaheads?
    see FIXME in opentoken-production-parser-lalr.adb

generalized parse
    build parse tree to store actions, tokens for results
    execute after parse completes

 non-ada-mode bugs
bug in semantic-grammar.wy
    attempted patch:
        %type  <qlist>       matchdatatype sexp syntax "\\s'\\s'?\\s-*("
        didn't work (not clear if it's getting loaded)
    posted on cedet-semantic; no help

gdb break command input still broken in
    http://debbugs.gnu.org/cgi/bugreport.cgi?bug=13303
    GNU Emacs 24.2.91.1 (i386-mingw-nt6.1.7601) of 2012-12-15 on MS-W7-DANI
    GNU gdb (GDB) 7.5 for GNAT Pro 7.1.0w (20121019) [rev=gdb-7.5-ref-21-g0070a88]
    menu signals kill gdb

    gdb-many-windows apparently not relevant; that still uses gud> interaction buffer to set break commands

    gud-gdb runs 'gdb --fullname'; that works

    try with mingw gdb 7.2
        worse; no '>' prompt
            set interactive off

        latest mingw mingw-get-inst-20120426.exe
            gcc 4.7.2; try with mtn
            gdb 7.5

    try with cygwin gdb
        same problem

    try with cygwin emacs, cygwin gdb

    try on linux
        emacs 24.2.1
        gdb 7.4.1
            no '>' prompt!
               (gdb) set interactive-mode off

            doesn't terminate on 'end'!

        get emacs 24.2.91 source, gcc 4.7.2-4, gdb 7.4.1-1
            no '>' prompt, but menu eof terminates

        use emacs -Q
            same
            get "error in process filter" after type "break association_token_test-run.adb:20"

        use C hello world
            same, no 'error in process filter'

    see email
        try alternate gdb front-ends
        try gdb 7.5 on debian

gnat stub doesn't copy 'pragma License'
   can use standard header file; "see spec" is standard

ada-display-buffer
    not setting history right
        bury buffer doesn't bring back last buffer

    review windows.el to see if there is now a better solution

emacs versions:
    24.x gdb (all versions) broken for break commands (can't terminate prompting)
        can use 'gud-gdb'; runs 'gdb --fullname'

    23.4 gdb 7.5 broken (in gnat 7.1) (--annotate=3 crashes on start)
            only for wisi-compile!
         gdb 7.3 works (gnat 7.0.1)
            not for wisi-compile!

    23.2 debian stable

    23.1 MMS FLATSAT asist; no devel libs, so can't compile emacs

    21 Lynx 4.0

 4.01 bugs that 5.01 fixes
    generic formal function
        'with' indented to prev 'return'
        sal: 1

    extension aggregate:
      return
        (Ada.Finalization.Controlled with
           Root => null,
         Height => 0,
         Count => 0);
      gds:
        ? 1
        sal-poly-unbounded_arrays.ads 1
        opentoken-token-enumerated-identifier.adb

    procedure Copy
      (To   : in out Instance;
       From : in     OpenToken.Token.Class)
    is null;

    function Compute_Inverse
      (Function_Table : in Function_Table_Type;
       Range_Value    : in Range_Type)
      return Domain_Type
       is abstract;

    type Storage_Pool_Type
      (Pool_Size : System.Storage_Elements.Storage_Count;
       Name      : String_Access_Constant_Type) -- for debug messages
       is new System.Storage_Pools.Root_Storage_Pool with private;

    "is" should be indented by broken-indent
        gds:
            sal-poly-function_tables-monotonic.ads   1
            sal-poly-function_tables.ads             1
            sal-simple-function_tables-monotonic.ads 1
            sal-simple-function_tables.ads           1
            test_storage_pools.ads                   1

   function Get (Start_Chars   : in Ada.Strings.Maps.Character_Set :=
     Ada.Strings.Maps.Constants.Letter_Set;
                 Body_Chars    : in Ada.Strings.Maps.Character_Set :=
                   Ada.Strings.Maps.Constants.Alphanumeric_Set;
                 Has_Separator : in Boolean := True
                ) return Instance;

    initial value should be indented from (
        gds:
            opentoken-recognizer-identifier.ads 1
            opentoken-token-linked_list.adb     5
            opentoken-token-list_mixin.adb      2
            opentoken-token-selection_mixin.adb 4
            opentoken-token-sequence_mixin.adb  5

    case Match (Token_Index) is
      --  If we found a match, quit.
    when Recognizer.Matches =>

        comment as continuation line
        always a bad idea

    Syntax : constant Tokenizer.Syntax :=
     (Abort_T        => Tokenizer.Get (OpenToken.Recognizer.Keyword.Get ("abort")),
      Abs_T          => Tokenizer.Get (OpenToken.Recognizer.Keyword.Get ("abs")),
        ... 110 items
      End_of_File_T   => Tokenizer.Get (OpenToken.Recognizer.End_Of_File.Get));

         Analyzer : Tokenizer.Instance := Tokenizer.Initialize (Syntax);

        loses track over large statements

objects initialized with function:

   Tran_Selector : constant String_Access_Type := Declare_Component ("Tran");
      Rot_Selector  : constant String_Access_Type := Declare_Component ("rot");

entry guard clauses:
      entry Write(C : in Character)
    when Count < Pool'Length is
       begin


 relevant files
(browse-url "c:/Projects/arm_info/org.adaic.arm_form/build/html/arm2012/RM-P.html")
(info "(aarm2012)Annex P" "*info Annex P*")
(info "(elisp)Parser State" "*info syntax-ppss*")
c:/Projects/emacs_stephe.work/emacs_stephe/ada-mode-keys.el
c:/Projects/emacs_stephe.work/emacs_stephe/gnat-fix-error.el
c:/Projects/emacs_stephe.main/emacs_stephe_site_lisp/ada-mode.el
c:/Projects/emacs_stephe.main/emacs_stephe_site_lisp/gpr-mode.el
c:/apps/emacs-24.2/lisp/progmodes/ada-mode.el
"c:/home/stephe/Backup/eBooks/Dick Grune/BookBody.pdf" [dickgrune]

http://savannah.gnu.org/projects/emacs/

http://git.savannah.gnu.org/cgit/emacs.git/tree/README?h=elpa

https://www.dropbox.com/sh/7jr3vbv9tm1zod0/jPuvfrJAe8
    w32 builds of cutting-edge emacs branches, pretests

ftp://alpha.gnu.org/gnu/emacs/pretest/

c:/apps/emacs-24.2/lisp/progmodes/modula2.el
http://www.modula2.net/resources/M2R10.pdf Appendix A
    test/M2R10.pdf

(info "(elisp)SMIE" "*info-smie*")
    used by modula2-mode, octave-mode in emacs 24

 indentation options
c:/Projects/Web/stephe-leake/emacs/ada-mode/emacs-ada-mode.html
~/Web/Makefile

compare to GPS, gnatpp

some people want to be able to match GPS style

requirement to match 4.01 style

ask on comp.lang.ada

ada-stmt-end-indent
    indents "then", "loop", "do" relative to "if", "for", "accept"
    leave it out.

indentation of "=>" after "when-case"
    consensus is "don't change it from ada-mode 4.01"
        or at least don't change the default.

my changes from default:
      (setq ada-when-indent 0)
      (setq ada-label-indent 0)
      (setq ada-indent-record-rel-type 0)

Juanma Barranquero:
    ada-broken-indent 3
    ada-label-indent -3
    ada-with-indent   5
    ada-indent-return 2
    ada-use-indent    4

Bill Greene
  (setq ada-indent              3)
  (setq ada-broken-indent       ada-indent)
  (setq ada-broken-decl-indent  ada-indent)
  (setq ada-indent-return       ada-indent)
  (setq ada-continuation-indent ada-indent)
  (setq ada-indent-is-separate  nil)


Manuel GÃ³mez
'(ada-broken-indent 3)
'(ada-indent 2)
'(ada-indent-record-rel-type 2)
'(ada-indent-return 3)
'(ada-label-indent 0)
'(ada-use-indent 4)
'(ada-when-indent 2)
'(ada-with-indent 5)

Philippe WAROQUIERS

'(ada-fill-comment-prefix "-- " )
'(ada-indent 2)
'(ada-indent-record-rel-type 2)
'(ada-indent-return 2)
'(ada-label-indent 0)
'(ada-language-version 'ada2005)
'(ada-prj-gnatfind-switches "-arf")
'(ada-when-indent 2)
'(ada-which-compiler 'gnat)
'(ada-xref-create-ali nil)
'(ada-xref-search-with-egrep nil)



specify options in .prj
    keep alist of srcdir=>.prj, apply options when .ad? file opened
        debug vs release changes .prj; check options changed, warn?

 to do later
DEC Ada legacy code
    foo.a for spec, foo_b.a for body

share/convert case exceptions with GPS
    see email for python script

file-local case exceptions
    for -fdump-spec C imports

vhdl-wisi

ada-control.el from JP Rosen; see email

completion
    http://emacswiki.org/emacs/CategoryCompletion
    autocomplete package

http://cedet.sourceforge.net/addlang.shtml

time on long code
    get stats on GDS file sizes

put-text-property fails if read-only

test with non-lowercase keywords in source

report ediff-buffers-wordwise bug; mark-active set, but no mark!
    try trunk http://alpha.gnu.org/gnu/emacs/windows/

get narrow-to-defun to work

fix gnat-fix-error
    tab
    insert with

opentoken generalized
    store token pointers on pending stack, so later operations have results

 access to ada-france:

anonymous (read only) access:
    mtn --db ~/monotone-dbs/ada-france.db --key '' pull www.ada-france.org "org.emacs.*"

read/write access requires a public key:
    send output of 'mtn pubkey' to Ludovic Brenta
    <ludovic@ludovic-brenta.org> or Stephe Leake
    <stephen_leake@stephe-leake.org>

    add it to monotone db via 'mtn read'
    add it to /etc/monotone/write-permissions
    /etc/init.d/monotone restart

    mtn --db ~/monotone-dbs/ada-france.db sync "mtn://www.ada-france.org?org.emacs.*"

 release process
bump version
    ada-mode.el Version: ada-mode-version
    ada-mode.texi Ada Mode Version
    README

verify other metadata
    ada-mode.el
    wisi.el

check emacs buglist, mark fixed
    http://debbugs.gnu.org/cgi/pkgreport.cgi?package=ada-mode

Emacs 24.3, gnat 7.1.2 (sal-standard):
    /Projects/org.opentoken.stephe/build/windows_release/Makefile all
    build/wisi/Makefile all

Emacs 23.4, (gnat-2012) (gnat-2013):
    /Projects/org.opentoken.stephe/build/windows_release/Makefile
        clean
        wisi-generate.exe

    test/Makefile all
        build/wisi/Makefile all

(dvc-status)
(dvc-status "/Projects/org.opentoken.stephe")
(shell-send-string "mtn_sync_ada_france.sh" "*bash*")

Debian : emacs 24.2 (from testing), GNAT GPL 2012:
    (shell-send-string "ssh-add" "*bash*")
    (shell-send-string "shevek.sh" "*bash*")
    (shell-send-string "mtn_sync_gds_shevek.sh" "*bash*")
    (shell-send-string "mtn_sync_stephe_shevek.sh" "*bash*")
    (xmtn-sync-review)
    on debian: build/wisi/Makefile all
    (shell-send-string "mtn_sync_gds_shevek.sh" "*bash*")
    (xmtn-sync-review)

build/Makefile zip
/Projects/org.opentoken.stephe/build/Makefile zip
/Projects/Web/stephe-leake/emacs/ada-mode/emacs-ada-mode.html
    add release note
        (dvc-log)

~/Web/Makefile
    edit date in ADA-MODE-STEPHE_GZ, ADA-MODE-OPENTOKEN_BZ2
    ada-mode
    sync

post on emacs-ada-mode mailing list
    http://stephe-leake.org/emacs/ada-mode/emacs-ada-mode.html#ada-mode-5.0

    also send email to:
        Pascal Pignard <abo.pignard@wanadoo.fr> for objective c
        cedet-semantic

-- end of file
