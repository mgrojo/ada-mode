General notes on Emacs Ada mode

(add-to-list 'load-path "/Projects/org.emacs.ada-mode")
(setq ada-xref-tool 'gnat_inspect)

run test from emacs -Q using installed elpa:
(progn
;;  (add-to-list 'exec-path "/apps/GNAT-2014/bin")
  (setenv "PATH" (mapconcat 'identity  exec-path  path-separator))
  (package-initialize)
  (setq debug-on-error t)
;;  (setq wisi-debug 1)
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode/build")
  (load "run-wisi-test")
  (setq default-directory "/Projects/org.emacs.ada-mode/build/wisi/")
  (run-test "ada-number-literal"))

run test from emacs -Q using source:
(progn
  (add-to-list 'exec-path "/apps/GNAT-2014/bin")
  (setenv "PATH" (mapconcat 'identity  exec-path  path-separator))
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode")
  (add-to-list 'load-path "/Projects/org.emacs.ada-mode/build")
  (setq debug-on-error t)
  (load "autoloads.el")
  (load "run-indent-test-wisi")
  (setq wisi-debug 1)
  (setq default-directory "/Projects/org.emacs.ada-mode/build/wisi/")
  (run-test "../../test/format_paramlist.adb")
  (ada-wisi-debug-keys))

install packages in -Q:
(progn
 (require 'package)
 (add-to-list 'package-archives (cons "test" "/Projects/elpa/archive/packages"))
 (list-packages))

 next release
o.e.a.stephe-1 (from o.e.a): external opentoken parser
o.e.a.stephe-2 (from o.e.a): external gps parser
o.e.a.stephe-3 (from o.e.a.s-1): FFI parser

test with gnat 7.3

param-list-align fails on:

   procedure Search
     (Directory : String;
      Pattern   : String;
      Filter    : Filter_Type := (others => True);
      Process   : not null access procedure (Directory_Entry : Directory_Entry_Type));

ada-indent-opentoken not safe?

use goto-decl-start to indent aspects

email re "aliased in out not null access"
    at least ensure we have tests for the worst cases
    maybe redesign

http://jdee.sourceforge.net/
    has lalr parser

incorrect color:
    opentoken/wisi/test/run_ada_parser.adb
        Ada_Grammar.LALR_Parsers.Parse (Parser);


books passes ada-check-current-project when project is fish_mercury
    don't put . in compilation-search-path; expand it.

completion
    (info "(elisp)Completion")
    examples:
        Ada.Text_IO.<tab> => Put, Put_line, Get, etc
            needs new query; all symbols that match prefix
            better as an ASIS query?

        what does GPS do?
            works on non-compiled, bad syntax code
            type 'with '; puts up a list of all packages in the project.
            type 'with Ada.'; list of all children of Ada
                requires scroll, <ret> to select
                while scrolling, puts up help text next to list

            type 'Put', puts up a list of all simple names in project matching that prefix
            type 'Put (', puts up a list of all params of all Puts (_not_ filtered by current context clause)

            does _not_ handle 'foo_io.put', where 'foo_io' is an instance of A.Tio.float_io.
                maybe it would if foo_io is:
                    a library package instantiation
                    a local instantiation, but was previously compiled

            find the GPS source code

find-file-in-prj
    prompt for file with compilation-search-path as completion
        avoid navigating to 'with' clause to get same functionality

c:/Archive/Emacs/slime-2.10.1.tar.gz

http://wikemacs.org/wiki/Projectile

use electric indent instead of ada-newline-indent?


face actions in gpr grammar?

after trunk transition to git (11 Nov 2014?):
    built-in ada-mode: (make-obsolete 'ada-mode "use later version from ELPA via `list-packages')

use eieio class/method for dispatching

5.1.c:

handle parser errors more gracefully
    continue by adding virtual tokens
        find shortest path from current state to defined action on next real token
            go thru FIRST, look for actions on next token, use first found
                provide grammar source hint for picking? (prefer semicolon, or 'then')
            if none, recurse (breadth-first search)
        can compute at grammar compile time
        add result as 'error' entry in state machine?

        cache for virtual end token (if one needed) located after last real token in sentence
            needed for 'goto end', and for setting something in 'end' field
            add space if at eob?

        no storage cache for other virtual tokens

        adding 'if then else end if' before 'foo := bar;'; just typed 'if <expression>'; add 'then'
            that will later add 'end if;' before the next 'end', which will be wrong
                no problem; it will be deleted by invalidate-cache when the new 'end if' is typed/parsed
                invalidate-cache must also delete refs to the virtual token?
                    they will be overwritten?

    don't use virtual tokens for indent
        => don't set markers to them

    show location of virtual tokens in 'show parse error'?
        could be many

can abandon parse when reach desired point (not just for errors)
    ada-indent-region parse to end of region
        avoids reparsing for every line
        or is there an indent-region hook for that?

        handle ada-gps better

    if command is 'goto-end', "desired point" is end of current statement
    in goto-end, check if end reached is virtual; if so, reparse

5.1.x: misc

if specify project file in gnat_stub_opts, gnat stub can't find it due to changed directory
    change to gnat_stub_gpr, manage directory
    or edit gnat_stub_opts, insert project dir?

skeleton refactor/cleanup

ftp://alpha.gnu.org/gnu/emacs/pretest/emacs-24.3.91.tar.xz
    better compile trunk, emacs-24 branch
    (dvc-status-one "/Projects/emacs/trunk")

gpr-skel.el
    ./gpr-skel.el:111:;; FIXME: code below should be in skeleton.el
    ./gpr-skel.el:199:	;; FIXME: hook for Ada case adjust

    move skel-expand to emacs-compat-*?
        assume will be in emacs 24.5 or 25.*
    use in ada-skel?

move stuff out of ada-mode-keys.el
    ada-make-package-spec
        skel default to (ada-name-from-file-name (buffer-file-name))?

(grep-find "find . -type f -print | \"xargs\" grep -nH \"FIXME:\"")

C-c C-d on +Normalize_Pathname
    includes + in identifier

prev-statement-keyword in subprogram skips exception

ada_mode-parens.adb:214:09: (style) bad column

ada-set-point-accordingly
    use parse info to find identifier declaration instead of reference?

different casing for identifiers (uppercase) and attributes (mixed)

src_dir=/foo/bar/* for C++

ada-next-statement-keyword skip matched parens if on paren

emacs-ada-prj-mode
    or emacs-gnat-prj-mode?

./wisi.el	  ;; FIXME: insert newline in comment to create non-comment!?
    need tests for wisi-before/after-change vs comments, strings

test on debian testing?

gpr-add-log-current-function dispatch to gpr-wisi

ada-add-log-current-function

gpr log-edit-function-name
    use package.attribute:
        Source_Dirs
        Compiler.Default_Switches

separate color for vendor-specific aspects
    spark aspects in test/aspects.ads

(see general below for more possibilites)

completion:
    match GPS behavior
        get completion candidates from gpr_query
        all names in scope at point

    built-in pcomplete
        completion-at-point-functions

    http://elpa.gnu.org/packages/company.html
        including C++ parameters, class members

    MELPA package auto-complete
    https://github.com/auto-complete/auto-complete
    https://github.com/capitaomorte/yasnippet

find-identifer-in-prj
    prompt for identifier, goto declaration
    not useful until have completion

reflect changes in subprogram spec to subprogram body
    ada-resync-spec-body

fix fontification of aspect names
    they are _not_ context clauses
    they are often on a different line than 'with'
    there are more than one of them
    use parser actions

fix wisi-compile.el needing comp.el, not comp.elc
    some systems don't install emacs source by default

handle all indent options like ada-case-strict
    need case-strict, ada-indent prj-wide for aflex
    need case-strict buffer-local for ada-mode ada_tokens

    set buffer-local from prj-get in ada-mode-hook
        use an alist or auto naming rule to define prj var

    or user write cond string-match on default-dir

set face correctly for name on next line
    edited some tests; see fixmes
    use parser actions

use post-self-insert-hook for casing
    in 23.2?

use electric-indent-mode instead of ada-indent-newline-indent

refactoring

    rename entity:
        use xref to rename all uses (with/without confirm)

    change parameter_result_profile
        make same change in all overrides
        offer to walk thru all uses

    promote primitive subprogram-local variable to type component

    move primitive from parent to child class

    extract subprogram
        from Eclipse
        highlight lines of source
        prompt for name
        it guesses parameter_result_profile

support for "Adadoc"?
    formatted comments that mention parameters; check that they are all mentioned, spelled correctly

 gpr_query
build/Makefile one

get casing from gpr file

gpr_query refs output distinguishes between read ref and write ref
    useful for "where is this var set?"
    xref filter?
    elisp filter?

use --display_progress

write tests!

implement C++ C-c ? children
    /home/Projects/GDS/work_stephe_2/common/itc/itcsb/libitcsb_1553/inc/Itcsb1553/Bus.hpp

    overridden_recursive

    child_types_recursive
        works

add Ada, C++ tests of xref
    /home/Projects/GDS/work_stephe_2/dscovr/build/x86_gnu_linux_release/Makefile
    /home/Projects/GDS/work_stephe_2/common/itc/opsim/itc_dscovr_gdsi/Gds1553/src/Gds1553.cpp


cd /home/Projects/GDS/work_stephe_2/dscovr/build/x86_gnu_linux_release/

export ADA_PROJECT_PATH=../../../makerules:../../../common/build/x86_gnu_linux_release:../../../sal/build:../../../sal/build/x86_gnu_linux_release:../../../opentoken/build/linux_release

parse linker cross reference output; -cref
    for pragma import


(require 'gpr-mode)
(gpr-set-as-project "c:/Apps/GNAT-7.1.2/gnatcoll-1.6w-src/src/gnatcoll_tools.gpr")
(browse-url "file:///c:/Apps/GNAT-7.1.2/gnatcoll-1.6w-src/docs/_build/html/xref.html")

 general
build/wisi/Makefile
build/Makefile

do C-x 5 prefix
    for Emacs 24.x
    after 24.4 feature freeze

move gpr-skel.el skel-expand to compat*.el
    use in ada-mode
    discuss on emacs-devel

need indent test of skel expansions
    verify they parse

tooltip/skel support for subprogram param names

implement secondary-error for scope in 'gnat-inspect-all'
    /Projects/GDS/work_dscovr_release/common/build/x86_gnu_windows_release/Makefile
    /Projects/GDS/work_dscovr_release/common/1553/gds-hardware-bus_1553.ads RX_Enable
    secondary-error in compilation regexp not working
        highlight can't be a function

    change ada-show-secondary-error to parse line, col from text, not text-property?

move gnat-inspect ada-* to ada-gnat-inspect.el

wisi-validate-cache should call grammar parser in a loop
    that would handle multiple compilation units; doesn't need to be in grammar
    parser needs to ignore invalid token following valid parse.

suggest jit-lock enable hook
    allow enforcing order in after-change-functions

ask about start-process vs --batch

expression functions

gpr fix errors
    gds_dscovr_utf_agg.gpr:12:19: expected "gds_dscovr_utf_agg"

add C++ tests

C-c C-d on <= use

'Access gives wrong face to following token:
     Percent_Percent & EOF + Output_Elisp'Access and

don't parse or move cache if narrowed

ada-fix-error.el
    sort 'limited private with' at end of context clause

add test for el_file

gnatprep
    the value of a preprocessor symbol is either empty, a string
    literal, or an Ada identifier/keyword; handle $symbol in lexer

    gnatprep minor mode?

manage "scenario variables" on project menu?
    GDS_DEVICE_PLATFORM

separate gpr-mode indent variables

gpr-next-statement-keyword

new align rule
    from Florian Schanda <florian.schanda@altran.com>
    >    case Foo |
    >         Some_Other_Thing |
    >         Bar |
    >         Baz =>
    >       null;
    >
    > It would be really nifty to have a macro that transforms it into this:
    >
    >    case Foo              |
    >         Some_Other_Thing |
    >         Bar              |
    >         Baz              =>

allow finding compiler libraries with no project
    define the default project search path to contain the compiler library dirs
    there is no default project!
        big change to support that.

test on debian testing?

 possible enhancements

make as much as possible work with no project
    use ada-build-require-project-file when a project is necessary

example custom indentation function for Markus Schöpflin <markus.schoepflin@comsoft.aero>
   FOOBAR.PROC (
      ARG1 => VAL1,
      ARG2 => VAL2
   );

EDE projects?
    just .el files with random code

skeleton
    see python-skeleton-autoinsert

    add else placeholders to all skeletons?
        add 'placeholder text property, before-change that deletes it/checks for "..."
        add goto-next-/prev-placeholder, kill-placeholder

    bug in skeleton handling of _; if skeleton-end-hook indents, the pos of _ moves; should be a marker.

    template system could be defined by parsing ada-grammar.wy
        for ada-skel-verbose

ada-align-paramlist
    test/ada_mode-parens.adb

    handle wrapping due to line length limit?

    handle single-line trailing comments, or longer comments, in paramlist?

parser is too slow
    try byte-compile - not enough
    see incremental LALR [dickgrune] 9.7.4
    ~/Backup/eBooks/twagner-thesis.pdf
    cache parser state periodically (every 200 token caches?), resume parse from last avail cache
        won't help much; still need to parse to end of file
        won't help at all on first parse
        unless it's incremental in idle time!

DEC Ada legacy code
    foo.a for spec, foo_b.a for body

share/convert case exceptions with GPS
    see email for python script

file-local case exceptions
    for -fdump-spec C imports

vhdl-wisi

ada-control.el from JP Rosen; see email

completion
    http://emacswiki.org/emacs/CategoryCompletion
    autocomplete package

http://cedet.sourceforge.net/addlang.shtml

time on long code
    get stats on GDS file sizes

put-text-property fails if read-only

 possible new options
ada-wisi-comment
    add option to match gnat comment style check
        have tests in ada_mode-conditional_expressions.adb, ada_mode-parens.adb

from Simon Wright:
   --  I'd like (the option to have) the 'is' line up with the 'type'.
   type A;
   type A_Finalizer
     (AP : access A)
   is new Ada.Finalization.Limited_Controlled with null record;

Markus Schöpflin <markus.schoepflin@comsoft.aero> wants this style (including all caps):

   FOOBAR.PROC (
      ARG1 => VAL1,
      ARG2 => VAL2
   );

    add a custom indent function, like the one for opentoken
    12 sep 2013: sent email

 relevant files, debug hints
(progn (profiler-start 'cpu) (time-it 'wisi-parse-buffer 10) (profiler-report) (profiler-stop))
    B - profiler-report-render-reversed-calltree shows low-level time hogs

attach gud-gdb to running emacs: attach <process id>
    source emacs/src/.gdbinit
    xbacktrace shows lisp backtrace

"kill -USR2 <emacspid>" which should also drop you into the (elisp?) debugger.

(browse-url "c:/Projects/arm_info/org.adaic.arm_form/build/html/arm2012/RM-P.html")
(info "(aarm2012)Annex P" "*info Annex P*")
http://www.ada-auth.org/standards/
(info "(elisp)Parser State" "*info syntax-ppss*")
"c:/home/stephe/Backup/eBooks/Dick Grune/Parsing.pdf" [dickgrune]

http://savannah.gnu.org/projects/emacs/

http://git.savannah.gnu.org/cgit/emacs.git/tree/README?h=elpa
http://elpa.gnu.org/

https://www.dropbox.com/sh/7jr3vbv9tm1zod0/jPuvfrJAe8
    w32 builds of cutting-edge emacs branches, pretests

ftp://alpha.gnu.org/gnu/emacs/pretest/

 access to ada-france:

anonymous (read only) access:
    mtn --db ~/monotone-dbs/ada-france.db --key '' pull www.ada-france.org "org.emacs.*"

read/write access requires a public key:
    send output of 'mtn pubkey' to Ludovic Brenta
    <ludovic@ludovic-brenta.org> or Stephe Leake
    <stephen_leake@stephe-leake.org>

    add it to monotone db via 'mtn read'
    add it to /etc/monotone/write-permissions
    /etc/init.d/monotone restart

    mtn --db ~/monotone-dbs/ada-france.db sync "mtn://www.ada-france.org?org.emacs.*"

 git config for elpa checkout
[core]
	repositoryformatversion = 0
	filemode = false # don't set exec bits
	bare = false
	logallrefupdates = true
	ignorecase = true
[remote "origin"]
	fetch = +refs/heads/master:refs/remotes/origin/master
	push  = +refs/heads/master
	url = stephen_leake@git.sv.gnu.org:/srv/git/emacs/elpa.git
[branch "master"]
	remote = origin
	merge = refs/heads/master

 release process
move to external elpa package?
    maybe after add dynamic library for parser
    simplifies git management of elpa?
    - Push the tree you want onto a branch `externals/<pkg>' in the
      `elpa' repository.
    - Remove the packages/<pkg> directory in the `master' branch.
    - Edit `externals-list' in the `master' branch.

(dvc-status ".")
(dvc-status "/Projects/org.opentoken")

check for ELPA patches by others
    (dvc-status "/Projects/elpa")
        revert local changes
    (dvc-pull "/Projects/elpa")
    (dvc-sync-review "/Projects/elpa")
        update
        clean sync
    cd /Projects/elpa
    git log -2 -- packages/wisi
    git log -2 -- packages/ada-mode
    git log -2 -- packages/ada-ref-man
    if changes:
        (dvc-log "/Projects/elpa/packages/<dir>/<file>")
        apply changes to current

check emacs buglist
    http://debbugs.gnu.org/cgi/pkgreport.cgi?package=ada-mode

bump versions
    bump if _any_ changes other than autoloads, so ELPA package handler knows to update

        build/Makefile docs pub-ada pub-ada-ref-man pub-wisi

        (list-packages) install ada-mode, wisi from public ELPA

        (ediff-directories "~/.emacs.d/elpa/wisi-1.1.0" "/Projects/elpa/packages/wisi" nil)
            NEWS-wisi.text
                add release date
                add new features

            wisi.el
                Version:

        (ediff-directories "~/.emacs.d/elpa/ada-mode-5.1.7" "/Projects/elpa/packages/ada-mode" nil)
            NEWS-ada-mode.text
                add release date
                add new features

            ada-mode.el
                Version:
                package-requires wisi version
                ada-mode-version

        (ediff-directories "~/.emacs.d/elpa/ada-ref-man-2012.0" "/Projects/elpa/packages/ada-ref-man" nil)
            ada-ref-man.el
                Version:

    ada-mode.texi
        Ada Mode Version
    README-ada-mode
        first line
    README-ada-ref-man
        first line
    README-wisi
        first line
    build/Makefile
        VERSION
    build/install-elpa.el
        ada-mode-version
        ada-ref-man-version
        wisi-version

    /Projects/Web/stephe-leake/emacs/ada-mode/emacs-ada-mode.html
        ada-mode find-replace i.j.k
        opentoken find-replace i.jk

    /Projects/Web/stephe-leake/emacs/wisi/wisi.html
        wisi-i.j.k find-replace
        wisi-generate version
        ada-mode i.j.k
        opentoken version

    (/Projects/Web/stephe-leake/ada/opentoken.html copied by web makefile)

verify other metadata
    ada-mode.el
    ada-ref-man.el
    wisi.el

Emacs master, gnat 2014:
    build/wisi/Makefile all byte-compile-clean

check for latest Emacs release
    http://ftp.gnu.org/gnu/emacs/windows/

Emacs 24.4, gnat 2014, devel ada-mode:
    build/Makefile all
    # pushes to elpa workspace, builds archive, installs

Emacs 24.4, gnat 2014 (sal-standard), installed ada-mode:
    (setenv "ADA_MODE_DIR" "-f package-initialize")
    build/wisi/Makefile all

Emacs 24.3, gnat 2014 (sal-standard), installed ada-mode:
    (setenv "ADA_MODE_DIR" "-f package-initialize")
    build/Makefile install-elpa # deletes and recompiles
    build/wisi/Makefile all

    (list-packages) install cl-lib for emacs 24.2

Emacs 24.2, gnat 2014 (sal-standard), installed ada-mode:
    (setenv "ADA_MODE_DIR" "-f package-initialize")
    build/Makefile install-elpa # deletes and recompiles, installs cl-lib
    build/wisi/Makefile all
        ignore byte-compile warnings about 'foo' from cl package called at runtime

    build/Makefile install-clean

sync for Debian:
    Emacs 24.4 for dvc
    (dvc-status ".")
    (dvc-status "/Projects/org.opentoken")
    (dvc-sync-run ".")
    (dvc-sync-review ".")

Debian stable not supported:
    Debian 7.8 wheezy 4 May 2013
    emacs 23.4 does not support packages, ada-mode 5.x
    gnat 4.8 does not support Ada 2012 OpenToken

Debian testing
    Debian 8.0
    emacs 24.4
    gnat 4.9.2

    emacs-stable.sh ;; for dvc and testing
    (sal-debian)

    (dvc-sync-run "/home/Projects/org.emacs.ada-mode")
    (dvc-sync-review "/home/Projects/org.emacs.ada-mode")

    /home/Projects/org.emacs.ada-mode/build/wisi/Makefile
        all

    emacs.sh ;; current for dvc
    (dvc-status)
    (dvc-sync-run "/home/Projects/org.emacs.ada-mode")
    (dvc-sync-review "/home/Projects/org.emacs.ada-mode")

(dvc-sync-run ".")
(dvc-sync-review ".")

build/Makefile docs pub-ada pub-ada-ref-man pub-wisi

commit elpa:
    xgit-fetch needs rebase option

    (dvc-pull "/Projects/elpa")
    (dvc-sync-review "/Projects/elpa")
    (dvc-state-one "/Projects/elpa")
    add, stage, commit ada-mode, ada-ref-man, wisi
    (dvc-push "/Projects/elpa")
    (dvc-sync-review "/Projects/elpa")
    # 24 hrs for web repository to update

(dvc-state-one ".")
mtn tag h:org.emacs.ada-mode "org.emacs.ada-mode-<version>"

(dvc-sync-run ".")
(dvc-sync-review ".")

build/Makefile zip

~/Web/Makefile
    edit version in ADA-MODE-GZ
    ada-mode opentoken wisi
    sync
    check

after Gnu ELPA updated, post on emacs-ada-mode mailing list, c.l.a newsgroup
    http://stephe-leake.org/emacs/ada-mode/emacs-ada-mode.html

mark fixed bugs
    http://debbugs.gnu.org/cgi/pkgreport.cgi?package=ada-mode
    http://debbugs.gnu.org/Developer.html

-- end of file
