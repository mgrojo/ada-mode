#!/usr/bin/make -f

include /usr/share/dpatch/dpatch.make

gcc_host := $(shell gnatgcc -dumpmachine)
gcc_version := $(shell gnatgcc -dumpversion)

SPECS := $(wildcard *.ads)
SPECS += $(subst Language_Lexers/,,$(wildcard Language_Lexers/*.ads))
PRIVATE := html_lexer-basic.ads html_lexer-tags.ads

SPECS := $(filter-out $(PRIVATE),$(SPECS))

OBJECTS := $(patsubst %.ads,obj/%.o,$(SPECS))

build: patch-stamp build-stamp
build-stamp:
	dh_testdir
	$(MAKE) -f debian/rules objects CFLAGS="-g"
	ar rc libopentoken.a obj/*.o
	ranlib libopentoken.a
	rm -rf obj
	$(MAKE) -f debian/rules objects CFLAGS="-fPIC"
	gnatgcc -shared -o libopentoken.so.4.0.0 obj/*.o \
		-L/usr/lib/gcc-lib/$(gcc_host)/$(gcc_version)/adalib \
		-lgnat \
		-Wl,--soname,libopentoken.so.4
	-rm build_all.adb
	touch build-stamp

objects: build_all.adb
	-mkdir obj
	gnatmake -c -j2 -Pbuild_all $(CFLAGS)
	-rm obj/build_all.*

build_all.adb:
	@for i in $(SPECS); do \
		p=`echo $$i | sed -e "s/\.ads//" -e "s/-/./g"` ; \
		echo "with $$p;" >> $@; \
	done
	@echo "procedure build_all is" >> $@
	@echo "begin" >> $@
	@echo "	 null;" >> $@
	@echo "end build_all;" >> $@

clean: unpatch
	dh_testdir
	dh_testroot
	dh_clean -a
	rm -rf build-stamp obj libopentoken* build_all.adb

binary-indep:

binary-arch: build
	dh_testdir
	dh_testroot
	dh_clean -a
	dh_installdirs
	dh_install
	dh_lintian
	dh_link
	dh_installdocs
	dh_installexamples
	dh_installchangelogs
	dh_strip --dbg-package=opentoken-dbg
	dh_compress -a -X.ads -X.adb
	dh_fixperms
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary
