--  generated by WisiToken Wisi from ada.wy
--  with command line: wisi-generate.exe -v 1 --output_language Ada_Emacs --lexer re2c --interface process ada.wy
--
--  Copyright (C) 2013 - 2015 Free Software Foundation, Inc.

--  This program is free software; you can redistribute it and/or
--  modify it under the terms of the GNU General Public License as
--  published by the Free Software Foundation; either version 3, or (at
--  your option) any later version.
--
--  This software is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
--  General Public License for more details.
--
--  You should have received a copy of the GNU General Public License
--  along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.

with WisiToken.Wisi_Runtime.Ada;
with WisiToken.Token;
with WisiToken.Parser.LR.Parser;
package Ada_Process is

   Descriptor : aliased WisiToken.Descriptor :=
     (First_Terminal    => 3,
      Last_Terminal     => 107,
      First_Nonterminal => 108,
      Last_Nonterminal  => 342,
      EOF_ID            => 107,
      Accept_ID         => 108,
      New_Line_ID       => 1,
      Comment_ID        => 2,
      Left_Paren_ID     => 2147483647,
      Right_Paren_ID    => 2147483647,
      Image             =>
        (new String'("WHITESPACE"),
         new String'("NEW_LINE"),
         new String'("COMMENT"),
         new String'("ABS"),
         new String'("ACCEPT"),
         new String'("ABORT"),
         new String'("ABSTRACT"),
         new String'("ACCESS"),
         new String'("ALIASED"),
         new String'("ALL"),
         new String'("AND"),
         new String'("ARRAY"),
         new String'("AT"),
         new String'("BEGIN"),
         new String'("BODY"),
         new String'("CASE"),
         new String'("CONSTANT"),
         new String'("DECLARE"),
         new String'("DELAY"),
         new String'("DELTA"),
         new String'("DIGITS"),
         new String'("DO"),
         new String'("ELSE"),
         new String'("ELSIF"),
         new String'("END"),
         new String'("ENTRY"),
         new String'("EXCEPTION"),
         new String'("EXIT"),
         new String'("FOR"),
         new String'("FUNCTION"),
         new String'("GENERIC"),
         new String'("GOTO"),
         new String'("IF"),
         new String'("IN"),
         new String'("INTERFACE"),
         new String'("IS"),
         new String'("LEFT_PAREN"),
         new String'("LIMITED"),
         new String'("LOOP"),
         new String'("MOD"),
         new String'("NEW"),
         new String'("NOT"),
         new String'("NULL"),
         new String'("OF"),
         new String'("OR"),
         new String'("OTHERS"),
         new String'("OUT"),
         new String'("OVERRIDING"),
         new String'("PACKAGE"),
         new String'("PRAGMA"),
         new String'("PRIVATE"),
         new String'("PROCEDURE"),
         new String'("PROTECTED"),
         new String'("RAISE"),
         new String'("RANGE"),
         new String'("RECORD"),
         new String'("REM"),
         new String'("RENAMES"),
         new String'("REQUEUE"),
         new String'("RETURN"),
         new String'("REVERSE"),
         new String'("RIGHT_PAREN"),
         new String'("SEPARATE"),
         new String'("SELECT"),
         new String'("SOME"),
         new String'("SUBTYPE"),
         new String'("SYNCHRONIZED"),
         new String'("TAGGED"),
         new String'("TASK"),
         new String'("TERMINATE"),
         new String'("THEN"),
         new String'("TYPE"),
         new String'("UNTIL"),
         new String'("USE"),
         new String'("WHEN"),
         new String'("WHILE"),
         new String'("WITH"),
         new String'("XOR"),
         new String'("AMPERSAND"),
         new String'("BAR"),
         new String'("BOX"),
         new String'("COLON"),
         new String'("COLON_EQUAL"),
         new String'("COMMA"),
         new String'("DOT"),
         new String'("DOT_DOT"),
         new String'("EQUAL"),
         new String'("EQUAL_GREATER"),
         new String'("GREATER"),
         new String'("GREATER_EQUAL"),
         new String'("GREATER_GREATER"),
         new String'("LESS"),
         new String'("LESS_EQUAL"),
         new String'("LESS_LESS"),
         new String'("MINUS"),
         new String'("PLUS"),
         new String'("SEMICOLON"),
         new String'("SLASH"),
         new String'("SLASH_EQUAL"),
         new String'("STAR"),
         new String'("STAR_STAR"),
         new String'("TICK_1"),
         new String'("TICK_2"),
         new String'("NUMERIC_LITERAL"),
         new String'("IDENTIFIER"),
         new String'("STRING_LITERAL"),
         new String'("CHARACTER_LITERAL"),
         new String'("Wisi_EOI"),
         new String'("wisitoken_accept"),
         new String'("abstract_limited_synchronized_opt"),
         new String'("abstract_limited_opt"),
         new String'("abstract_tagged_limited_opt"),
         new String'("abstract_subprogram_declaration"),
         new String'("accept_statement"),
         new String'("access_definition"),
         new String'("actual_parameter_part"),
         new String'("actual_parameter_part_opt"),
         new String'("aggregate"),
         new String'("aliased_opt"),
         new String'("and_interface_list_opt"),
         new String'("array_type_definition"),
         new String'("aspect_clause"),
         new String'("aspect_specification_opt"),
         new String'("assignment_statement"),
         new String'("association_opt"),
         new String'("association_list"),
         new String'("asynchronous_select"),
         new String'("at_clause"),
         new String'("attribute_reference"),
         new String'("attribute_designator"),
         new String'("binary_adding_operator"),
         new String'("block_statement"),
         new String'("body_g"),
         new String'("body_stub"),
         new String'("case_expression"),
         new String'("case_expression_alternative"),
         new String'("case_expression_alternative_list"),
         new String'("case_statement"),
         new String'("case_statement_alternative"),
         new String'("case_statement_alternative_list"),
         new String'("choice_expression"),
         new String'("choice_relation_and_list"),
         new String'("choice_relation_or_list"),
         new String'("choice_relation_xor_list"),
         new String'("choice_relation_and_then_list"),
         new String'("choice_relation_or_else_list"),
         new String'("choice_relation"),
         new String'("compilation_unit"),
         new String'("compilation_unit_list"),
         new String'("component_clause"),
         new String'("component_clause_list"),
         new String'("component_declaration"),
         new String'("component_definition"),
         new String'("component_item"),
         new String'("component_list"),
         new String'("component_list_opt"),
         new String'("compound_statement"),
         new String'("conditional_entry_call"),
         new String'("conditional_quantified_expression"),
         new String'("constant_opt"),
         new String'("constraint"),
         new String'("constraint_opt"),
         new String'("context_item"),
         new String'("declaration"),
         new String'("declarations"),
         new String'("declarative_part_opt"),
         new String'("delay_alternative"),
         new String'("delay_statement"),
         new String'("derived_type_definition"),
         new String'("direct_name"),
         new String'("direct_name_opt"),
         new String'("discrete_choice"),
         new String'("discrete_choice_list"),
         new String'("discrete_subtype_definition"),
         new String'("discrete_subtype_definition_list"),
         new String'("discriminant_part_opt"),
         new String'("discriminant_specification_opt"),
         new String'("discriminant_specification_list"),
         new String'("elsif_expression_item"),
         new String'("elsif_expression_list"),
         new String'("elsif_statement_item"),
         new String'("elsif_statement_list"),
         new String'("entry_body"),
         new String'("entry_body_formal_part"),
         new String'("entry_call_alternative"),
         new String'("entry_declaration"),
         new String'("enumeration_literal"),
         new String'("enumeration_literal_list"),
         new String'("enumeration_representation_clause"),
         new String'("enumeration_type_definition"),
         new String'("exception_choice"),
         new String'("exception_choice_list"),
         new String'("exception_declaration"),
         new String'("exception_handler"),
         new String'("exception_handler_list"),
         new String'("exception_handler_list_opt"),
         new String'("exit_statement"),
         new String'("expression"),
         new String'("expression_opt"),
         new String'("expression_function_declaration"),
         new String'("extended_return_object_declaration"),
         new String'("extended_return_object_declaration_opt"),
         new String'("extended_return_statement"),
         new String'("factor"),
         new String'("formal_object_declaration"),
         new String'("formal_part"),
         new String'("formal_subprogram_declaration"),
         new String'("formal_type_declaration"),
         new String'("formal_type_definition"),
         new String'("formal_derived_type_definition"),
         new String'("formal_package_declaration"),
         new String'("formal_package_actual_part"),
         new String'("full_type_declaration"),
         new String'("function_specification"),
         new String'("general_access_modifier_opt"),
         new String'("generic_declaration"),
         new String'("generic_formal_part"),
         new String'("generic_formal_parameter_declarations"),
         new String'("generic_formal_parameter_declaration"),
         new String'("generic_instantiation"),
         new String'("generic_package_declaration"),
         new String'("generic_renaming_declaration"),
         new String'("generic_subprogram_declaration"),
         new String'("goto_label"),
         new String'("handled_sequence_of_statements"),
         new String'("identifier_list"),
         new String'("identifier_opt"),
         new String'("if_expression"),
         new String'("if_statement"),
         new String'("incomplete_type_declaration"),
         new String'("index_constraint"),
         new String'("index_subtype_definition"),
         new String'("index_subtype_definition_list"),
         new String'("interface_list"),
         new String'("interface_type_definition"),
         new String'("iteration_scheme"),
         new String'("iterator_specification"),
         new String'("iterator_specification_opt"),
         new String'("label"),
         new String'("library_item"),
         new String'("library_unit_declaration"),
         new String'("library_unit_renaming_declaration"),
         new String'("loop_statement"),
         new String'("membership_choice_list"),
         new String'("membership_choice"),
         new String'("mod_clause_opt"),
         new String'("mode_opt"),
         new String'("multiplying_operator"),
         new String'("name_list"),
         new String'("name"),
         new String'("name_opt"),
         new String'("null_exclusion_opt"),
         new String'("null_exclusion_opt_name_type"),
         new String'("null_procedure_declaration"),
         new String'("object_declaration"),
         new String'("object_renaming_declaration"),
         new String'("overriding_indicator_opt"),
         new String'("package_body"),
         new String'("package_body_stub"),
         new String'("package_declaration"),
         new String'("package_renaming_declaration"),
         new String'("package_specification"),
         new String'("parameter_and_result_profile"),
         new String'("parameter_profile_opt"),
         new String'("parameter_specification"),
         new String'("parameter_specification_list"),
         new String'("paren_expression"),
         new String'("pragma_g"),
         new String'("primary"),
         new String'("private_extension_declaration"),
         new String'("private_type_declaration"),
         new String'("procedure_call_statement"),
         new String'("procedure_specification"),
         new String'("proper_body"),
         new String'("protected_body"),
         new String'("protected_body_stub"),
         new String'("protected_definition"),
         new String'("protected_operation_item"),
         new String'("protected_operation_item_list"),
         new String'("protected_operation_item_list_opt"),
         new String'("protected_opt"),
         new String'("protected_type_declaration"),
         new String'("qualified_expression"),
         new String'("quantified_expression"),
         new String'("quantifier"),
         new String'("raise_expression"),
         new String'("raise_statement"),
         new String'("range_g"),
         new String'("range_list"),
         new String'("real_range_specification_opt"),
         new String'("record_definition"),
         new String'("record_representation_clause"),
         new String'("relation_and_list"),
         new String'("relation_and_then_list"),
         new String'("relation_or_list"),
         new String'("relation_or_else_list"),
         new String'("relation_xor_list"),
         new String'("relation"),
         new String'("relational_operator"),
         new String'("renaming_declaration"),
         new String'("requeue_statement"),
         new String'("result_profile"),
         new String'("return_subtype_indication"),
         new String'("selected_component"),
         new String'("selective_accept"),
         new String'("select_alternative"),
         new String'("select_alternative_list"),
         new String'("select_alternative_list_opt"),
         new String'("select_statement"),
         new String'("sequence_of_statements"),
         new String'("sequence_of_statements_opt"),
         new String'("simple_expression"),
         new String'("simple_return_statement"),
         new String'("simple_statement"),
         new String'("single_protected_declaration"),
         new String'("single_task_declaration"),
         new String'("statement"),
         new String'("subprogram_body"),
         new String'("subprogram_body_stub"),
         new String'("subprogram_declaration"),
         new String'("subprogram_default"),
         new String'("subprogram_renaming_declaration"),
         new String'("subprogram_specification"),
         new String'("subtype_declaration"),
         new String'("subtype_indication"),
         new String'("subunit"),
         new String'("task_body"),
         new String'("task_body_stub"),
         new String'("task_definition"),
         new String'("task_type_declaration"),
         new String'("term"),
         new String'("term_list"),
         new String'("tick"),
         new String'("timed_entry_call"),
         new String'("triggering_alternative"),
         new String'("type_declaration"),
         new String'("type_definition"),
         new String'("variant_part"),
         new String'("variant_list"),
         new String'("variant"),
         new String'("unary_adding_operator"),
         new String'("use_clause"),
         new String'("with_clause")),
      Terminal_Image_Width => 17,
      Image_Width          => 38);

   Parse_Data : WisiToken.Wisi_Runtime.Ada.Parse_Data_Type;

   procedure Create_Parser
     (Parser         :    out WisiToken.Parser.LR.Parser.Instance;
      Algorithm      : in     WisiToken.Parser_Algorithm_Type;
      Semantic_State : in     WisiToken.Token.Semantic_State_Access);

end Ada_Process;
