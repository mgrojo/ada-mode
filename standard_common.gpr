-- Standard settings for all of Stephe's Ada projects.
project Standard_Common is
   for Source_Dirs use ();

   type Build_Type is ("Debug", "Normal");
   Build : Build_Type := External ("Standard_Common_Build", "Normal");

   type Profile_Type is ("On", "Off");
   Profile : Profile_Type := External ("Standard_Common_Profile", "Off");

   type Mem_Check_Type is ("On", "Off");
   Mem_Check : Profile_Type := External ("Standard_Common_Mem_Check", "Off");

   package Compiler is
      -- Switches for gcc

      Base_Style_Checks := "-gnaty3abcefhiklnOprtx";
      Line_Length := "-gnatyM120";

      Style_Checks := (Base_Style_Checks, Line_Length);

      Common_Switches :=
        (
         "-fstack-check",
         "-g",
         "-gnat2012",
         "-gnatfoqQ",
         "-gnatw.d",
         "-gnatwaBCeJL",
         "-gnatyO"
        );

      --  -gnatVa causes some inline procedures to be non-inlineable;
      --  suppress that warning with -gnatwP.
      Debug_Switches := Common_Switches &
        (
         "-O0",
         "-gnata",  -- assertions, pre/post-conditions
         "-gnatVa", -- validity checks
         "-gnateE", -- extra info in exceptions
         "-gnatwaP"
        );

      --  -O3 is measurably faster than -O2 for wisitoken generate
      --  LR1. We include -fstack-check because it catches
      --  hard-to-find bugs, and the processors are so fast.
      --  -fno-var-tracking-assignments speeds compiling of large
      --  files; var tracking is only useful for debugging.
      Base_Release_Switches := Common_Switches &
        (
         "-O3",
         "-fno-var-tracking-assignments",
         "-gnatyO"
        );

      Inlining := ("-gnatn");

      Release_Switches := Base_Release_Switches & Inlining;

      -- No -ansi; GNAT 7.1 compiler C header files are mingw 64, which don't support -ansi
      Debug_Switches_C := ("-Wall", "-Wstrict-prototypes", "-pedantic", "-Werror", "-g", "-O0", "-funwind-tables");
      Debug_Switches_C_Non_Pedantic := ("-Wall", "-Wstrict-prototypes", "-Werror", "-g", "-O0", "-funwind-tables");
      Release_Switches_C := ("-Wall", "-Wstrict-prototypes", "-pedantic", "-Werror", "-g", "-O2", "-funwind-tables");
      Release_Switches_C_Non_Pedantic := ("-Wall", "-Wstrict-prototypes", "-Werror", "-g", "-O2", "-funwind-tables");

   end Compiler;

   --  In project files, normally use this:
   --  package Compiler is
   --  for Default_Switches ("Ada") use
   --     Standard_Common.Compiler.Release_Switches &
   --     Standard_Common.Compiler.Style_Checks;
   --  end Compiler;

   package Builder is
      --  Switches for gnatmake
      for Default_Switches ("Ada") use ("-C");
   end Builder;

   --  In project files, normally use this:
   --  package Builder is
   --     for Default_Switches ("Ada") use Standard_Common.Builder'Default_Switches ("Ada");
   --  end Builder;

   package Binder is
      --  Switches for gnatbind
      for Default_Switches ("Ada") use ("-E");

      Debug_Configuration_Pragmas := "Normalize_Scalars";
   end Binder;

   --  In project files, normally use this:
   --  package Binder is
   --     for Default_Switches ("Ada") use Standard_Common.Binder'Default_Switches ("Ada");
   --  end Binder;

   package Linker is
      case Profile is
      when "On" =>
         case Mem_Check is
         when "On" =>
            for Linker_Options use ("-pg", "-lgmem");
         when "Off" =>
            for Linker_Options use ("-pg");
         end case;

      when "Off" =>
         case Mem_Check is
         when "On" =>
            for Linker_Options use ("-lgmem");
         when "Off" =>
            null;
         end case;
      end case;
   end Linker;

   --  In project files, no linker package is needed.
end Standard_Common;
